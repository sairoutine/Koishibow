(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';
var anime_map = {
	"chapter0-myroom-obj-02-01-obj01": require('./anime/chapter0/myroom/obj-02-01/obj01_anime_1'),
	"chapter0-myroom-obj-02-01-obj02": require('./anime/chapter0/myroom/obj-02-01/obj02_anime_1'),
	"chapter0-myroom-obj-02-01-obj03": require('./anime/chapter0/myroom/obj-02-01/obj03_anime_1'),
	"chapter0-myroom-obj-03-01-obj01": require('./anime/chapter0/myroom/obj-03-01/obj01_anime_1'),
	"chapter0-myroom-obj-03-01-obj02": require('./anime/chapter0/myroom/obj-03-01/obj02_anime_1'),
	"chapter0-myroom-obj-03-01-obj03": require('./anime/chapter0/myroom/obj-03-01/obj03_anime_1'),
	"chapter0-myroom-obj-04-01-obj01": require('./anime/chapter0/myroom/obj-04-01/obj01_anime_1'),
	"chapter0-myroom-obj-04-01-obj02": require('./anime/chapter0/myroom/obj-04-01/obj02_anime_1'),
	"chapter0-myroom-obj-04-01-obj03": require('./anime/chapter0/myroom/obj-04-01/obj03_anime_1'),
	"chapter0-hospital_corridor2-obj-01-01-obj01": require('./anime/chapter0/hospital_corridor2/obj-01-01/obj01_anime_1'),
	"chapter0-hospital_corridor2-obj-01-01-obj02": require('./anime/chapter0/hospital_corridor2/obj-01-01/obj02_anime_1'),
	"chapter0-hospital_corridor2-obj-01-01-obj03": require('./anime/chapter0/hospital_corridor2/obj-01-01/obj03_anime_1'),
	"chapter0-mansion_corridor1-obj-01-01-obj01": require('./anime/chapter0/mansion_corridor1/obj-01-01/obj01_anime_1'),
	"chapter0-mansion_corridor1-obj-01-01-obj02": require('./anime/chapter0/mansion_corridor1/obj-01-01/obj02_anime_1'),
	"chapter0-mansion_corridor1-obj-01-01-obj03": require('./anime/chapter0/mansion_corridor1/obj-01-01/obj03_anime_1'),
	"chapter0-mansion_corridor1-obj-01-01-obj04": require('./anime/chapter0/mansion_corridor1/obj-01-01/obj04_anime_1'),
	"chapter0-mansion_corridor1-obj-01-01-obj05": require('./anime/chapter0/mansion_corridor1/obj-01-01/obj05_anime_1'),
	"chapter0-mansion_corridor1-obj-01-01-obj06": require('./anime/chapter0/mansion_corridor1/obj-01-01/obj06_anime_1'),
	"chapter0-mansion_corridor1-obj-02-01-obj01": require('./anime/chapter0/mansion_corridor1/obj-02-01/obj01_anime_1'),
	"chapter0-mansion_corridor1-obj-02-01-obj02": require('./anime/chapter0/mansion_corridor1/obj-02-01/obj02_anime_1'),
	"chapter0-mansion_corridor1-obj-02-01-obj03": require('./anime/chapter0/mansion_corridor1/obj-02-01/obj03_anime_1'),
	"chapter0-mansion_corridor1-obj-02-01-obj04": require('./anime/chapter0/mansion_corridor1/obj-02-01/obj04_anime_1'),
	"chapter0-mansion_corridor1-obj-02-01-obj05": require('./anime/chapter0/mansion_corridor1/obj-02-01/obj05_anime_1'),
	"chapter0-mansion_corridor1-obj-02-01-obj06": require('./anime/chapter0/mansion_corridor1/obj-02-01/obj06_anime_1'),
	"chapter0-mansion_corridor1-obj-03-01-obj01": require('./anime/chapter0/mansion_corridor1/obj-03-01/obj01_anime_1'),
	"chapter0-mansion_corridor1-obj-03-01-obj02": require('./anime/chapter0/mansion_corridor1/obj-03-01/obj02_anime_1'),
	"chapter0-mansion_corridor1-obj-03-01-obj03": require('./anime/chapter0/mansion_corridor1/obj-03-01/obj03_anime_1'),
	"chapter0-mansion_corridor1-obj-03-01-obj04": require('./anime/chapter0/mansion_corridor1/obj-03-01/obj04_anime_1'),
	"chapter0-mansion_corridor1-obj-03-01-obj05": require('./anime/chapter0/mansion_corridor1/obj-03-01/obj05_anime_1'),
	"chapter0-mansion_corridor1-obj-03-01-obj06": require('./anime/chapter0/mansion_corridor1/obj-03-01/obj06_anime_1'),

	"chapter0-mansion_corridor2-obj-04-01-obj01": require('./anime/chapter0/mansion_corridor2/obj-04-01/obj01_anime_1'),
	"chapter0-mansion_corridor2-obj-04-01-obj02": require('./anime/chapter0/mansion_corridor2/obj-04-01/obj02_anime_1'),
	"chapter0-mansion_corridor2-obj-04-01-obj03": require('./anime/chapter0/mansion_corridor2/obj-04-01/obj03_anime_1'),
	"chapter0-mansion_corridor2-obj-04-01-obj04": require('./anime/chapter0/mansion_corridor2/obj-04-01/obj04_anime_1'),
	"chapter0-mansion_corridor2-obj-04-01-obj05": require('./anime/chapter0/mansion_corridor2/obj-04-01/obj05_anime_1'),
	"chapter0-mansion_corridor2-obj-04-01-obj06": require('./anime/chapter0/mansion_corridor2/obj-04-01/obj06_anime_1'),
	"chapter0-mansion_corridor2-obj-05-01-obj01": require('./anime/chapter0/mansion_corridor2/obj-05-01/obj01_anime_1'),
	"chapter0-mansion_corridor2-obj-05-01-obj02": require('./anime/chapter0/mansion_corridor2/obj-05-01/obj02_anime_1'),
	"chapter0-mansion_corridor2-obj-05-01-obj03": require('./anime/chapter0/mansion_corridor2/obj-05-01/obj03_anime_1'),
	"chapter0-mansion_corridor2-obj-05-01-obj04": require('./anime/chapter0/mansion_corridor2/obj-05-01/obj04_anime_1'),
	"chapter0-mansion_corridor2-obj-05-01-obj05": require('./anime/chapter0/mansion_corridor2/obj-05-01/obj05_anime_1'),
	"chapter0-mansion_corridor2-obj-05-01-obj06": require('./anime/chapter0/mansion_corridor2/obj-05-01/obj06_anime_1'),
	"chapter0-mansion_corridor2-obj-06-01-obj01": require('./anime/chapter0/mansion_corridor2/obj-06-01/obj01_anime_1'),
	"chapter0-mansion_corridor2-obj-06-01-obj02": require('./anime/chapter0/mansion_corridor2/obj-06-01/obj02_anime_1'),
	"chapter0-mansion_corridor2-obj-06-01-obj03": require('./anime/chapter0/mansion_corridor2/obj-06-01/obj03_anime_1'),

	"chapter0-mansion_corridor3-obj-07-01-obj01": require('./anime/chapter0/mansion_corridor3/obj-07-01/obj01_anime_1'),
	"chapter0-mansion_corridor3-obj-07-01-obj02": require('./anime/chapter0/mansion_corridor3/obj-07-01/obj02_anime_1'),
	"chapter0-mansion_corridor3-obj-07-01-obj03": require('./anime/chapter0/mansion_corridor3/obj-07-01/obj03_anime_1'),
	"chapter0-mansion_corridor3-obj-07-01-obj04": require('./anime/chapter0/mansion_corridor3/obj-07-01/obj04_anime_1'),
	"chapter0-mansion_corridor3-obj-07-01-obj05": require('./anime/chapter0/mansion_corridor3/obj-07-01/obj05_anime_1'),
	"chapter0-mansion_corridor3-obj-07-01-obj06": require('./anime/chapter0/mansion_corridor3/obj-07-01/obj06_anime_1'),
	"chapter0-mansion_corridor3-obj-08-01-obj01": require('./anime/chapter0/mansion_corridor3/obj-08-01/obj01_anime_1'),
	"chapter0-mansion_corridor3-obj-08-01-obj02": require('./anime/chapter0/mansion_corridor3/obj-08-01/obj02_anime_1'),
	"chapter0-mansion_corridor3-obj-08-01-obj03": require('./anime/chapter0/mansion_corridor3/obj-08-01/obj03_anime_1'),
	"chapter0-mansion_corridor3-obj-08-01-obj04": require('./anime/chapter0/mansion_corridor3/obj-08-01/obj04_anime_1'),
	"chapter0-mansion_corridor3-obj-08-01-obj05": require('./anime/chapter0/mansion_corridor3/obj-08-01/obj05_anime_1'),
	"chapter0-mansion_corridor3-obj-08-01-obj06": require('./anime/chapter0/mansion_corridor3/obj-08-01/obj06_anime_1'),
	"chapter0-mansion_corridor3-obj-09-01-obj01": require('./anime/chapter0/mansion_corridor3/obj-09-01/obj01_anime_1'),
	"chapter0-mansion_corridor3-obj-09-01-obj02": require('./anime/chapter0/mansion_corridor3/obj-09-01/obj02_anime_1'),
	"chapter0-mansion_corridor3-obj-09-01-obj03": require('./anime/chapter0/mansion_corridor3/obj-09-01/obj03_anime_1'),
	"chapter0-mansion_corridor3-obj-09-01-obj04": require('./anime/chapter0/mansion_corridor3/obj-09-01/obj04_anime_1'),
	"chapter0-mansion_corridor3-obj-09-01-obj05": require('./anime/chapter0/mansion_corridor3/obj-09-01/obj05_anime_1'),
	"chapter0-mansion_corridor3-obj-09-01-obj06": require('./anime/chapter0/mansion_corridor3/obj-09-01/obj06_anime_1'),
	"chapter0-mansion_corridor3-obj-10-01-obj01": require('./anime/chapter0/mansion_corridor3/obj-10-01/obj01_anime_1'),
	"chapter0-mansion_corridor3-obj-10-01-obj02": require('./anime/chapter0/mansion_corridor3/obj-10-01/obj02_anime_1'),
	"chapter0-mansion_corridor3-obj-10-01-obj03": require('./anime/chapter0/mansion_corridor3/obj-10-01/obj03_anime_1'),
	"chapter0-mansion_corridor3-obj-10-01-obj04": require('./anime/chapter0/mansion_corridor3/obj-10-01/obj04_anime_1'),
	"chapter0-mansion_corridor3-obj-10-01-obj05": require('./anime/chapter0/mansion_corridor3/obj-10-01/obj05_anime_1'),
	"chapter0-mansion_corridor3-obj-10-01-obj06": require('./anime/chapter0/mansion_corridor3/obj-10-01/obj06_anime_1'),
	"chapter0-mansion_corridor3-obj-11-01-obj01": require('./anime/chapter0/mansion_corridor3/obj-11-01/obj01_anime_1'),
	"chapter0-mansion_corridor3-obj-11-01-obj02": require('./anime/chapter0/mansion_corridor3/obj-11-01/obj02_anime_1'),
	"chapter0-mansion_corridor3-obj-11-01-obj03": require('./anime/chapter0/mansion_corridor3/obj-11-01/obj03_anime_1'),
	"chapter0-mansion_corridor3-obj-11-01-obj04": require('./anime/chapter0/mansion_corridor3/obj-11-01/obj04_anime_1'),
	"chapter0-mansion_corridor3-obj-11-01-obj05": require('./anime/chapter0/mansion_corridor3/obj-11-01/obj05_anime_1'),
	"chapter0-mansion_corridor3-obj-11-01-obj06": require('./anime/chapter0/mansion_corridor3/obj-11-01/obj06_anime_1'),
};

module.exports = anime_map;


},{"./anime/chapter0/hospital_corridor2/obj-01-01/obj01_anime_1":3,"./anime/chapter0/hospital_corridor2/obj-01-01/obj02_anime_1":4,"./anime/chapter0/hospital_corridor2/obj-01-01/obj03_anime_1":5,"./anime/chapter0/mansion_corridor1/obj-01-01/obj01_anime_1":6,"./anime/chapter0/mansion_corridor1/obj-01-01/obj02_anime_1":7,"./anime/chapter0/mansion_corridor1/obj-01-01/obj03_anime_1":8,"./anime/chapter0/mansion_corridor1/obj-01-01/obj04_anime_1":9,"./anime/chapter0/mansion_corridor1/obj-01-01/obj05_anime_1":10,"./anime/chapter0/mansion_corridor1/obj-01-01/obj06_anime_1":11,"./anime/chapter0/mansion_corridor1/obj-02-01/obj01_anime_1":12,"./anime/chapter0/mansion_corridor1/obj-02-01/obj02_anime_1":13,"./anime/chapter0/mansion_corridor1/obj-02-01/obj03_anime_1":14,"./anime/chapter0/mansion_corridor1/obj-02-01/obj04_anime_1":15,"./anime/chapter0/mansion_corridor1/obj-02-01/obj05_anime_1":16,"./anime/chapter0/mansion_corridor1/obj-02-01/obj06_anime_1":17,"./anime/chapter0/mansion_corridor1/obj-03-01/obj01_anime_1":18,"./anime/chapter0/mansion_corridor1/obj-03-01/obj02_anime_1":19,"./anime/chapter0/mansion_corridor1/obj-03-01/obj03_anime_1":20,"./anime/chapter0/mansion_corridor1/obj-03-01/obj04_anime_1":21,"./anime/chapter0/mansion_corridor1/obj-03-01/obj05_anime_1":22,"./anime/chapter0/mansion_corridor1/obj-03-01/obj06_anime_1":23,"./anime/chapter0/mansion_corridor2/obj-04-01/obj01_anime_1":24,"./anime/chapter0/mansion_corridor2/obj-04-01/obj02_anime_1":25,"./anime/chapter0/mansion_corridor2/obj-04-01/obj03_anime_1":26,"./anime/chapter0/mansion_corridor2/obj-04-01/obj04_anime_1":27,"./anime/chapter0/mansion_corridor2/obj-04-01/obj05_anime_1":28,"./anime/chapter0/mansion_corridor2/obj-04-01/obj06_anime_1":29,"./anime/chapter0/mansion_corridor2/obj-05-01/obj01_anime_1":30,"./anime/chapter0/mansion_corridor2/obj-05-01/obj02_anime_1":31,"./anime/chapter0/mansion_corridor2/obj-05-01/obj03_anime_1":32,"./anime/chapter0/mansion_corridor2/obj-05-01/obj04_anime_1":33,"./anime/chapter0/mansion_corridor2/obj-05-01/obj05_anime_1":34,"./anime/chapter0/mansion_corridor2/obj-05-01/obj06_anime_1":35,"./anime/chapter0/mansion_corridor2/obj-06-01/obj01_anime_1":36,"./anime/chapter0/mansion_corridor2/obj-06-01/obj02_anime_1":37,"./anime/chapter0/mansion_corridor2/obj-06-01/obj03_anime_1":38,"./anime/chapter0/mansion_corridor3/obj-07-01/obj01_anime_1":39,"./anime/chapter0/mansion_corridor3/obj-07-01/obj02_anime_1":40,"./anime/chapter0/mansion_corridor3/obj-07-01/obj03_anime_1":41,"./anime/chapter0/mansion_corridor3/obj-07-01/obj04_anime_1":42,"./anime/chapter0/mansion_corridor3/obj-07-01/obj05_anime_1":43,"./anime/chapter0/mansion_corridor3/obj-07-01/obj06_anime_1":44,"./anime/chapter0/mansion_corridor3/obj-08-01/obj01_anime_1":45,"./anime/chapter0/mansion_corridor3/obj-08-01/obj02_anime_1":46,"./anime/chapter0/mansion_corridor3/obj-08-01/obj03_anime_1":47,"./anime/chapter0/mansion_corridor3/obj-08-01/obj04_anime_1":48,"./anime/chapter0/mansion_corridor3/obj-08-01/obj05_anime_1":49,"./anime/chapter0/mansion_corridor3/obj-08-01/obj06_anime_1":50,"./anime/chapter0/mansion_corridor3/obj-09-01/obj01_anime_1":51,"./anime/chapter0/mansion_corridor3/obj-09-01/obj02_anime_1":52,"./anime/chapter0/mansion_corridor3/obj-09-01/obj03_anime_1":53,"./anime/chapter0/mansion_corridor3/obj-09-01/obj04_anime_1":54,"./anime/chapter0/mansion_corridor3/obj-09-01/obj05_anime_1":55,"./anime/chapter0/mansion_corridor3/obj-09-01/obj06_anime_1":56,"./anime/chapter0/mansion_corridor3/obj-10-01/obj01_anime_1":57,"./anime/chapter0/mansion_corridor3/obj-10-01/obj02_anime_1":58,"./anime/chapter0/mansion_corridor3/obj-10-01/obj03_anime_1":59,"./anime/chapter0/mansion_corridor3/obj-10-01/obj04_anime_1":60,"./anime/chapter0/mansion_corridor3/obj-10-01/obj05_anime_1":61,"./anime/chapter0/mansion_corridor3/obj-10-01/obj06_anime_1":62,"./anime/chapter0/mansion_corridor3/obj-11-01/obj01_anime_1":63,"./anime/chapter0/mansion_corridor3/obj-11-01/obj02_anime_1":64,"./anime/chapter0/mansion_corridor3/obj-11-01/obj03_anime_1":65,"./anime/chapter0/mansion_corridor3/obj-11-01/obj04_anime_1":66,"./anime/chapter0/mansion_corridor3/obj-11-01/obj05_anime_1":67,"./anime/chapter0/mansion_corridor3/obj-11-01/obj06_anime_1":68,"./anime/chapter0/myroom/obj-02-01/obj01_anime_1":69,"./anime/chapter0/myroom/obj-02-01/obj02_anime_1":70,"./anime/chapter0/myroom/obj-02-01/obj03_anime_1":71,"./anime/chapter0/myroom/obj-03-01/obj01_anime_1":72,"./anime/chapter0/myroom/obj-03-01/obj02_anime_1":73,"./anime/chapter0/myroom/obj-03-01/obj03_anime_1":74,"./anime/chapter0/myroom/obj-04-01/obj01_anime_1":75,"./anime/chapter0/myroom/obj-04-01/obj02_anime_1":76,"./anime/chapter0/myroom/obj-04-01/obj03_anime_1":77}],2:[function(require,module,exports){
module.exports=[
{
"images":["black-mist.png"],
"name": "black-mist_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 1440,
"CanvasHeight": 1080,
"MarginWidth": 728,
"MarginHeight": 548,
"parts": ["root","02","mist_l_13","mist_l_14","mist_l_15","mist_l_16","mist_m_1","mist_l_17","01","mist_l_0","mist_l_12","mist_l_1","mist_l_2","mist_l_3","mist_l_4","mist_l_11","mist_l_8","mist_l_9","mist_l_10","mist_l_5","mist_l_6","mist_l_7","mist_m_2","mist_m_3","03_1","mist_l_18","mist_l_19","mist_l_20","mist_l_21","mist_l_22","mist_l_23","mist_l_24","mist_l_25","mist_l_26","mist_l_27","mist_l_28"],
"ssa": [
[
[4,0,0,311,543,282,-599.0,638.0,-0.418879,1.071000,1.041000,271,141,0,0,0.400000],
[18,0,0,0,796,310,-334.0,-558.0,0.105697,0.838000,0.827000,398,155,0,0,0.300000],
[19,0,0,0,796,310,752.0,302.0,-1.674678,0.968000,1.224000,398,155,0,0,0.120000],
[20,0,0,0,796,310,-870.0,424.0,-6.438468,0.863000,1.124000,398,155,0,0,0.240000],
[21,0,543,372,366,221,683.0,514.0,0.554194,1.413000,1.303000,183,110,0,0,0.240000],
[22,0,543,372,366,221,-548.0,582.0,0.177133,1.413000,1.303000,183,110,0,0,0.240000],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.700000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.700000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.560000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.700000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.700000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.700000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.700000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.700000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.560000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.560000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.560000],
[8,0,0,818,571,206,-350.0,586.0,-0.082310,1.138000,1.0,285,103,0,0,0.240000],
[9,0,0,818,571,206,26.0,590.0,-0.112574,1.0,1.0,285,103,0,0,0.180000],
[10,0,0,818,571,206,640.0,546.0,0.071000,0.960000,0.909000,285,103,0,0,0.240000],
[12,0,0,818,571,206,-704.0,-564.0,3.304676,0.837000,0.804000,285,103,0,0,0.600000],
[13,0,0,818,571,206,652.0,-580.0,2.821866,1.014000,1.211000,285,103,0,0,0.480000],
[14,0,0,818,571,206,154.0,-608.0,2.946727,1.520000,1.211000,285,103,0,0,0.360000],
[15,0,0,818,571,206,-788.0,-34.0,1.577516,0.995000,1.211000,285,103,0,0,0.360000],
[16,0,0,818,571,206,-818.0,-344.0,4.047523,0.833000,0.704000,285,103,0,0,0.240000],
[17,0,0,818,571,206,782.0,-304.0,4.945984,0.969000,1.211000,285,103,0,0,0.360000]
],
[
[1,0,0,594,682,223,-601.549988,-531.400024,0.226788,1.0,1.0,341,111,0,0,0.020000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.101667,1.201667,341,111,0,0,0.010000],
[3,0,0,594,682,223,463.733337,539.633362,3.414510,1.0,1.0,341,111,0,0,0.013333],
[4,0,0,311,543,282,-598.933350,637.933350,-0.418879,1.071000,1.041000,271,141,0,0,0.401667],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.101667,1.201667,341,111,0,0,0.010000],
[18,0,0,0,796,310,-333.944336,-557.906982,0.105697,0.837860,0.826862,398,155,0,0,0.302839],
[19,0,0,0,796,310,751.674683,301.683044,-1.674097,0.967839,1.223796,398,155,0,0,0.124344],
[20,0,0,0,796,310,-869.854980,423.929352,-6.438468,0.862856,1.123813,398,155,0,0,0.242773],
[21,0,543,372,366,221,682.886169,513.914368,0.554194,1.412765,1.302783,183,110,0,0,0.240667],
[22,0,543,372,366,221,-547.908691,581.903015,0.177133,1.412765,1.302783,183,110,0,0,0.240667],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.705000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.705000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.564000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.705000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.705000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.705000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.705000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.705000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.564000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.564000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.564000],
[8,0,0,818,571,206,-349.941681,585.902344,-0.082310,1.137810,0.999833,285,103,0,0,0.242672],
[9,0,0,818,571,206,25.995667,589.901672,-0.112574,0.999833,0.999833,285,103,0,0,0.182506],
[10,0,0,818,571,206,639.893311,545.908997,0.071000,0.959840,0.908848,285,103,0,0,0.242672],
[11,0,0,818,571,206,455.924011,515.914001,0.175720,0.991835,0.774871,285,103,0,0,0.002006],
[12,0,0,818,571,206,-703.882690,-563.906006,3.304676,0.836861,0.803866,285,103,0,0,0.601667],
[13,0,0,818,571,206,651.891357,-579.903320,2.821866,1.013831,1.210798,285,103,0,0,0.484342],
[14,0,0,818,571,206,153.974335,-607.898682,2.946727,1.519747,1.210798,285,103,0,0,0.363006],
[15,0,0,818,571,206,-787.868652,-33.994335,1.577516,0.994834,1.210798,285,103,0,0,0.363006],
[16,0,0,818,571,206,-817.863647,-343.942657,4.047523,0.832861,0.703883,285,103,0,0,0.242672],
[17,0,0,818,571,206,781.869690,-303.949341,4.945984,0.968839,1.210798,285,103,0,0,0.363006]
],
[
[1,0,0,594,682,223,-601.099976,-530.799988,0.226788,1.0,1.0,341,111,0,0,0.040000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.103333,1.203333,341,111,0,0,0.020000],
[3,0,0,594,682,223,463.466675,539.266663,3.414510,1.0,1.0,341,111,0,0,0.026667],
[4,0,0,311,543,282,-598.866638,637.866638,-0.418879,1.071000,1.041000,271,141,0,0,0.403333],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.103333,1.203333,341,111,0,0,0.020000],
[18,0,0,0,796,310,-333.888672,-557.814026,0.105697,0.837721,0.826724,398,155,0,0,0.305689],
[19,0,0,0,796,310,751.349487,301.366180,-1.673515,0.967677,1.223592,398,155,0,0,0.128711],
[20,0,0,0,796,310,-869.710022,423.858673,-6.438468,0.862712,1.123625,398,155,0,0,0.245557],
[21,0,543,372,366,221,682.772339,513.828674,0.554194,1.412529,1.302566,183,110,0,0,0.241333],
[22,0,543,372,366,221,-547.817322,581.806030,0.177133,1.412529,1.302566,183,110,0,0,0.241333],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.710000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.710000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.568000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.710000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.710000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.710000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.710000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.710000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.568000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.568000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.568000],
[8,0,0,818,571,206,-349.883331,585.804688,-0.082310,1.137621,0.999667,285,103,0,0,0.245356],
[9,0,0,818,571,206,25.991333,589.803345,-0.112574,0.999667,0.999667,285,103,0,0,0.185022],
[10,0,0,818,571,206,639.786682,545.817993,0.071000,0.959680,0.908697,285,103,0,0,0.245356],
[11,0,0,818,571,206,455.848022,515.828003,0.175720,0.991669,0.774742,285,103,0,0,0.004022],
[12,0,0,818,571,206,-703.765381,-563.812012,3.304676,0.836721,0.803732,285,103,0,0,0.603333],
[13,0,0,818,571,206,651.782654,-579.806702,2.821866,1.013662,1.210596,285,103,0,0,0.488700],
[14,0,0,818,571,206,153.948669,-607.797363,2.946727,1.519493,1.210596,285,103,0,0,0.366022],
[15,0,0,818,571,206,-787.737366,-33.988667,1.577516,0.994668,1.210596,285,103,0,0,0.366022],
[16,0,0,818,571,206,-817.727356,-343.885345,4.047523,0.832722,0.703765,285,103,0,0,0.245356],
[17,0,0,818,571,206,781.739380,-303.898682,4.945984,0.968677,1.210596,285,103,0,0,0.366022]
],
[
[1,0,0,594,682,223,-600.650024,-530.200012,0.226788,1.0,1.0,341,111,0,0,0.060000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.105000,1.205000,341,111,0,0,0.030000],
[3,0,0,594,682,223,463.200012,538.900024,3.414510,1.0,1.0,341,111,0,0,0.040000],
[4,0,0,311,543,282,-598.799988,637.799988,-0.418879,1.071000,1.041000,271,141,0,0,0.405000],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.105000,1.205000,341,111,0,0,0.030000],
[18,0,0,0,796,310,-333.832977,-557.721008,0.105697,0.837581,0.826586,398,155,0,0,0.308550],
[19,0,0,0,796,310,751.024292,301.049408,-1.672933,0.967516,1.223388,398,155,0,0,0.133100],
[20,0,0,0,796,310,-869.565002,423.787994,-6.438468,0.862568,1.123438,398,155,0,0,0.248353],
[21,0,543,372,366,221,682.658508,513.742981,0.554194,1.412293,1.302348,183,110,0,0,0.242000],
[22,0,543,372,366,221,-547.726013,581.708984,0.177133,1.412293,1.302348,183,110,0,0,0.242000],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.715000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.715000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.572000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.715000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.715000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.715000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.715000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.715000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.572000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.572000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.572000],
[8,0,0,818,571,206,-349.824982,585.706970,-0.082310,1.137431,0.999500,285,103,0,0,0.248050],
[9,0,0,818,571,206,25.987000,589.704956,-0.112574,0.999500,0.999500,285,103,0,0,0.187550],
[10,0,0,818,571,206,639.679993,545.726990,0.071000,0.959520,0.908545,285,103,0,0,0.248050],
[11,0,0,818,571,206,455.772003,515.742004,0.175720,0.991504,0.774612,285,103,0,0,0.006050],
[12,0,0,818,571,206,-703.648010,-563.717957,3.304676,0.836581,0.803598,285,103,0,0,0.605000],
[13,0,0,818,571,206,651.674011,-579.709961,2.821866,1.013493,1.210394,285,103,0,0,0.493075],
[14,0,0,818,571,206,153.922989,-607.695984,2.946727,1.519240,1.210394,285,103,0,0,0.369050],
[15,0,0,818,571,206,-787.605957,-33.982998,1.577516,0.994502,1.210394,285,103,0,0,0.369050],
[16,0,0,818,571,206,-817.591003,-343.828003,4.047523,0.832583,0.703648,285,103,0,0,0.248050],
[17,0,0,818,571,206,781.609009,-303.847992,4.945984,0.968515,1.210394,285,103,0,0,0.369050]
],
[
[1,0,0,594,682,223,-600.200012,-529.599976,0.226788,1.0,1.0,341,111,0,0,0.080000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.106667,1.206667,341,111,0,0,0.040000],
[3,0,0,594,682,223,462.933319,538.533325,3.414510,1.0,1.0,341,111,0,0,0.053333],
[4,0,0,311,543,282,-598.733337,637.733337,-0.418879,1.071000,1.041000,271,141,0,0,0.406667],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.106667,1.206667,341,111,0,0,0.040000],
[18,0,0,0,796,310,-333.777344,-557.627991,0.105697,0.837441,0.826449,398,155,0,0,0.311422],
[19,0,0,0,796,310,750.699219,300.732697,-1.672351,0.967355,1.223184,398,155,0,0,0.137511],
[20,0,0,0,796,310,-869.419983,423.717316,-6.438468,0.862425,1.123251,398,155,0,0,0.251160],
[21,0,543,372,366,221,682.544678,513.657349,0.554194,1.412058,1.302131,183,110,0,0,0.242667],
[22,0,543,372,366,221,-547.634644,581.612000,0.177133,1.412058,1.302131,183,110,0,0,0.242667],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.720000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.720000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.576000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.720000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.720000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.720000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.720000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.720000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.576000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.576000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.576000],
[8,0,0,818,571,206,-349.766663,585.609314,-0.082310,1.137241,0.999333,285,103,0,0,0.250756],
[9,0,0,818,571,206,25.982666,589.606689,-0.112574,0.999333,0.999333,285,103,0,0,0.190089],
[10,0,0,818,571,206,639.573303,545.635986,0.071000,0.959360,0.908394,285,103,0,0,0.250756],
[11,0,0,818,571,206,455.695984,515.656006,0.175720,0.991339,0.774483,285,103,0,0,0.008089],
[12,0,0,818,571,206,-703.530640,-563.624023,3.304676,0.836442,0.803464,285,103,0,0,0.606667],
[13,0,0,818,571,206,651.565308,-579.613342,2.821866,1.013324,1.210193,285,103,0,0,0.497467],
[14,0,0,818,571,206,153.897339,-607.594666,2.946727,1.518987,1.210193,285,103,0,0,0.372089],
[15,0,0,818,571,206,-787.474670,-33.977333,1.577516,0.994337,1.210193,285,103,0,0,0.372089],
[16,0,0,818,571,206,-817.454651,-343.770660,4.047523,0.832445,0.703531,285,103,0,0,0.250756],
[17,0,0,818,571,206,781.478638,-303.797333,4.945984,0.968354,1.210193,285,103,0,0,0.372089]
],
[
[1,0,0,594,682,223,-599.750000,-529.0,0.226788,1.0,1.0,341,111,0,0,0.100000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.108333,1.208333,341,111,0,0,0.050000],
[3,0,0,594,682,223,462.666656,538.166687,3.414510,1.0,1.0,341,111,0,0,0.066667],
[4,0,0,311,543,282,-598.666687,637.666687,-0.418879,1.071000,1.041000,271,141,0,0,0.408333],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.108333,1.208333,341,111,0,0,0.050000],
[18,0,0,0,796,310,-333.721680,-557.534973,0.105697,0.837302,0.826311,398,155,0,0,0.314306],
[19,0,0,0,796,310,750.374146,300.416107,-1.671769,0.967193,1.222980,398,155,0,0,0.141944],
[20,0,0,0,796,310,-869.275024,423.646667,-6.438468,0.862281,1.123063,398,155,0,0,0.253979],
[21,0,543,372,366,221,682.430847,513.571655,0.554194,1.411822,1.301914,183,110,0,0,0.243333],
[22,0,543,372,366,221,-547.543335,581.515015,0.177133,1.411822,1.301914,183,110,0,0,0.243333],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.725000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.725000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.580000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.725000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.725000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.725000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.725000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.725000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.580000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.580000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.580000],
[8,0,0,818,571,206,-349.708344,585.511658,-0.082310,1.137052,0.999167,285,103,0,0,0.253472],
[9,0,0,818,571,206,25.978333,589.508362,-0.112574,0.999167,0.999167,285,103,0,0,0.192639],
[10,0,0,818,571,206,639.466675,545.544983,0.071000,0.959200,0.908242,285,103,0,0,0.253472],
[11,0,0,818,571,206,455.619995,515.570007,0.175720,0.991173,0.774354,285,103,0,0,0.010139],
[12,0,0,818,571,206,-703.413330,-563.530029,3.304676,0.836303,0.803330,285,103,0,0,0.608333],
[13,0,0,818,571,206,651.456665,-579.516663,2.821866,1.013155,1.209991,285,103,0,0,0.501875],
[14,0,0,818,571,206,153.871674,-607.493347,2.946727,1.518733,1.209991,285,103,0,0,0.375139],
[15,0,0,818,571,206,-787.343323,-33.971668,1.577516,0.994171,1.209991,285,103,0,0,0.375139],
[16,0,0,818,571,206,-817.318359,-343.713348,4.047523,0.832306,0.703413,285,103,0,0,0.253472],
[17,0,0,818,571,206,781.348328,-303.746674,4.945984,0.968192,1.209991,285,103,0,0,0.375139]
],
[
[1,0,0,594,682,223,-599.299988,-528.400024,0.226788,1.0,1.0,341,111,0,0,0.120000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.110000,1.210000,341,111,0,0,0.060000],
[3,0,0,594,682,223,462.399994,537.799988,3.414510,1.0,1.0,341,111,0,0,0.080000],
[4,0,0,311,543,282,-598.599976,637.599976,-0.418879,1.071000,1.041000,271,141,0,0,0.410000],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.110000,1.210000,341,111,0,0,0.060000],
[18,0,0,0,796,310,-333.666016,-557.442017,0.105697,0.837162,0.826173,398,155,0,0,0.317200],
[19,0,0,0,796,310,750.049194,300.099609,-1.671188,0.967032,1.222776,398,155,0,0,0.146400],
[20,0,0,0,796,310,-869.130005,423.576019,-6.438468,0.862137,1.122876,398,155,0,0,0.256810],
[21,0,543,372,366,221,682.317017,513.486023,0.554194,1.411587,1.301697,183,110,0,0,0.244000],
[22,0,543,372,366,221,-547.452026,581.418030,0.177133,1.411587,1.301697,183,110,0,0,0.244000],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.730000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.730000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.584000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.730000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.730000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.730000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.730000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.730000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.584000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.584000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.584000],
[8,0,0,818,571,206,-349.649994,585.414001,-0.082310,1.136862,0.999000,285,103,0,0,0.256200],
[9,0,0,818,571,206,25.974001,589.410034,-0.112574,0.999000,0.999000,285,103,0,0,0.195200],
[10,0,0,818,571,206,639.359985,545.453979,0.071000,0.959040,0.908091,285,103,0,0,0.256200],
[11,0,0,818,571,206,455.544006,515.484009,0.175720,0.991008,0.774225,285,103,0,0,0.012200],
[12,0,0,818,571,206,-703.296021,-563.436035,3.304676,0.836163,0.803196,285,103,0,0,0.610000],
[13,0,0,818,571,206,651.348022,-579.419983,2.821866,1.012986,1.209789,285,103,0,0,0.506300],
[14,0,0,818,571,206,153.846008,-607.392029,2.946727,1.518480,1.209789,285,103,0,0,0.378200],
[15,0,0,818,571,206,-787.212036,-33.966000,1.577516,0.994005,1.209789,285,103,0,0,0.378200],
[16,0,0,818,571,206,-817.182007,-343.656006,4.047523,0.832167,0.703296,285,103,0,0,0.256200],
[17,0,0,818,571,206,781.218018,-303.696014,4.945984,0.968031,1.209789,285,103,0,0,0.378200]
],
[
[1,0,0,594,682,223,-598.849976,-527.799988,0.226788,1.0,1.0,341,111,0,0,0.140000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.111667,1.211667,341,111,0,0,0.070000],
[3,0,0,594,682,223,462.133331,537.433350,3.414510,1.0,1.0,341,111,0,0,0.093333],
[4,0,0,311,543,282,-598.533325,637.533325,-0.418879,1.071000,1.041000,271,141,0,0,0.411667],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.111667,1.211667,341,111,0,0,0.070000],
[18,0,0,0,796,310,-333.610352,-557.348999,0.105697,0.837022,0.826035,398,155,0,0,0.320106],
[19,0,0,0,796,310,749.724304,299.783173,-1.670606,0.966871,1.222572,398,155,0,0,0.150878],
[20,0,0,0,796,310,-868.985046,423.505341,-6.438468,0.861993,1.122689,398,155,0,0,0.259653],
[21,0,543,372,366,221,682.203186,513.400330,0.554194,1.411352,1.301480,183,110,0,0,0.244667],
[22,0,543,372,366,221,-547.360657,581.321045,0.177133,1.411352,1.301480,183,110,0,0,0.244667],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.735000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.735000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.588000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.735000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.735000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.735000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.735000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.735000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.588000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.588000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.588000],
[8,0,0,818,571,206,-349.591675,585.316345,-0.082310,1.136672,0.998833,285,103,0,0,0.258939],
[9,0,0,818,571,206,25.969667,589.311707,-0.112574,0.998833,0.998833,285,103,0,0,0.197772],
[10,0,0,818,571,206,639.253357,545.363037,0.071000,0.958880,0.907939,285,103,0,0,0.258939],
[11,0,0,818,571,206,455.468018,515.398010,0.175720,0.990843,0.774096,285,103,0,0,0.014272],
[12,0,0,818,571,206,-703.178711,-563.342041,3.304676,0.836024,0.803062,285,103,0,0,0.611667],
[13,0,0,818,571,206,651.239380,-579.323364,2.821866,1.012817,1.209587,285,103,0,0,0.510742],
[14,0,0,818,571,206,153.820343,-607.290710,2.946727,1.518227,1.209587,285,103,0,0,0.381272],
[15,0,0,818,571,206,-787.080688,-33.960335,1.577516,0.993839,1.209587,285,103,0,0,0.381272],
[16,0,0,818,571,206,-817.045715,-343.598663,4.047523,0.832028,0.703179,285,103,0,0,0.258939],
[17,0,0,818,571,206,781.087708,-303.645355,4.945984,0.967870,1.209587,285,103,0,0,0.381272]
],
[
[1,0,0,594,682,223,-598.400024,-527.200012,0.226788,1.0,1.0,341,111,0,0,0.160000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.113333,1.213333,341,111,0,0,0.080000],
[3,0,0,594,682,223,461.866669,537.066650,3.414510,1.0,1.0,341,111,0,0,0.106667],
[4,0,0,311,543,282,-598.466675,637.466675,-0.418879,1.071000,1.041000,271,141,0,0,0.413333],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.113333,1.213333,341,111,0,0,0.080000],
[18,0,0,0,796,310,-333.554657,-557.255981,0.105697,0.836883,0.825897,398,155,0,0,0.323022],
[19,0,0,0,796,310,749.399475,299.466827,-1.670024,0.966709,1.222368,398,155,0,0,0.155378],
[20,0,0,0,796,310,-868.839966,423.434662,-6.438468,0.861849,1.122501,398,155,0,0,0.262507],
[21,0,543,372,366,221,682.089294,513.314636,0.554194,1.411116,1.301263,183,110,0,0,0.245333],
[22,0,543,372,366,221,-547.269348,581.223999,0.177133,1.411116,1.301263,183,110,0,0,0.245333],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.740000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.740000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.592000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.740000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.740000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.740000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.740000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.740000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.592000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.592000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.592000],
[8,0,0,818,571,206,-349.533325,585.218628,-0.082310,1.136483,0.998667,285,103,0,0,0.261689],
[9,0,0,818,571,206,25.965332,589.213318,-0.112574,0.998667,0.998667,285,103,0,0,0.200356],
[10,0,0,818,571,206,639.146667,545.271973,0.071000,0.958720,0.907788,285,103,0,0,0.261689],
[11,0,0,818,571,206,455.391998,515.312012,0.175720,0.990677,0.773967,285,103,0,0,0.016356],
[12,0,0,818,571,206,-703.061340,-563.247986,3.304676,0.835884,0.802928,285,103,0,0,0.613333],
[13,0,0,818,571,206,651.130676,-579.226624,2.821866,1.012648,1.209385,285,103,0,0,0.515200],
[14,0,0,818,571,206,153.794662,-607.189331,2.946727,1.517973,1.209385,285,103,0,0,0.384356],
[15,0,0,818,571,206,-786.949341,-33.954666,1.577516,0.993673,1.209385,285,103,0,0,0.384356],
[16,0,0,818,571,206,-816.909302,-343.541321,4.047523,0.831889,0.703061,285,103,0,0,0.261689],
[17,0,0,818,571,206,780.957336,-303.594666,4.945984,0.967708,1.209385,285,103,0,0,0.384356]
],
[
[1,0,0,594,682,223,-597.950012,-526.599976,0.226788,1.0,1.0,341,111,0,0,0.180000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.115000,1.215000,341,111,0,0,0.090000],
[3,0,0,594,682,223,461.600006,536.700012,3.414510,1.0,1.0,341,111,0,0,0.120000],
[4,0,0,311,543,282,-598.400024,637.400024,-0.418879,1.071000,1.041000,271,141,0,0,0.415000],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.115000,1.215000,341,111,0,0,0.090000],
[18,0,0,0,796,310,-333.498993,-557.162964,0.105697,0.836743,0.825760,398,155,0,0,0.325950],
[19,0,0,0,796,310,749.074707,299.150604,-1.669442,0.966548,1.222164,398,155,0,0,0.159900],
[20,0,0,0,796,310,-868.695007,423.363983,-6.438468,0.861705,1.122314,398,155,0,0,0.265373],
[21,0,543,372,366,221,681.975464,513.229004,0.554194,1.410880,1.301045,183,110,0,0,0.246000],
[22,0,543,372,366,221,-547.177979,581.127014,0.177133,1.410880,1.301045,183,110,0,0,0.246000],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.745000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.745000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.596000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.745000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.745000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.745000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.745000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.745000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.596000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.596000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.596000],
[8,0,0,818,571,206,-349.475006,585.120972,-0.082310,1.136293,0.998500,285,103,0,0,0.264450],
[9,0,0,818,571,206,25.961000,589.114990,-0.112574,0.998500,0.998500,285,103,0,0,0.202950],
[10,0,0,818,571,206,639.039978,545.180969,0.071000,0.958560,0.907636,285,103,0,0,0.264450],
[11,0,0,818,571,206,455.316010,515.226013,0.175720,0.990512,0.773837,285,103,0,0,0.018450],
[12,0,0,818,571,206,-702.943970,-563.153992,3.304676,0.835745,0.802794,285,103,0,0,0.615000],
[13,0,0,818,571,206,651.021973,-579.130005,2.821866,1.012479,1.209183,285,103,0,0,0.519675],
[14,0,0,818,571,206,153.768997,-607.088013,2.946727,1.517720,1.209183,285,103,0,0,0.387450],
[15,0,0,818,571,206,-786.817993,-33.949001,1.577516,0.993508,1.209183,285,103,0,0,0.387450],
[16,0,0,818,571,206,-816.773010,-343.484009,4.047523,0.831751,0.702944,285,103,0,0,0.264450],
[17,0,0,818,571,206,780.826965,-303.544006,4.945984,0.967546,1.209183,285,103,0,0,0.387450]
],
[
[1,0,0,594,682,223,-597.500000,-526.0,0.226788,1.0,1.0,341,111,0,0,0.200000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.116667,1.216667,341,111,0,0,0.100000],
[3,0,0,594,682,223,461.333344,536.333313,3.414510,1.0,1.0,341,111,0,0,0.133333],
[4,0,0,311,543,282,-598.333313,637.333313,-0.418879,1.071000,1.041000,271,141,0,0,0.416667],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.116667,1.216667,341,111,0,0,0.100000],
[18,0,0,0,796,310,-333.443329,-557.070007,0.105697,0.836603,0.825622,398,155,0,0,0.328889],
[19,0,0,0,796,310,748.750000,298.834442,-1.668861,0.966387,1.221960,398,155,0,0,0.164444],
[20,0,0,0,796,310,-868.549988,423.293335,-6.438468,0.861562,1.122127,398,155,0,0,0.268250],
[21,0,543,372,366,221,681.861694,513.143311,0.554194,1.410645,1.300828,183,110,0,0,0.246667],
[22,0,543,372,366,221,-547.086670,581.030029,0.177133,1.410645,1.300828,183,110,0,0,0.246667],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.750000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.750000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.600000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.750000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.750000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.750000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.750000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.750000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.600000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.600000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.600000],
[8,0,0,818,571,206,-349.416656,585.023315,-0.082310,1.136103,0.998333,285,103,0,0,0.267222],
[9,0,0,818,571,206,25.956667,589.016663,-0.112574,0.998333,0.998333,285,103,0,0,0.205556],
[10,0,0,818,571,206,638.933350,545.090027,0.071000,0.958400,0.907485,285,103,0,0,0.267222],
[11,0,0,818,571,206,455.239990,515.140015,0.175720,0.990347,0.773708,285,103,0,0,0.020556],
[12,0,0,818,571,206,-702.826660,-563.059998,3.304676,0.835605,0.802660,285,103,0,0,0.616667],
[13,0,0,818,571,206,650.913330,-579.033325,2.821866,1.012310,1.208982,285,103,0,0,0.524167],
[14,0,0,818,571,206,153.743332,-606.986694,2.946727,1.517467,1.208982,285,103,0,0,0.390556],
[15,0,0,818,571,206,-786.686646,-33.943333,1.577516,0.993342,1.208982,285,103,0,0,0.390556],
[16,0,0,818,571,206,-816.636658,-343.426666,4.047523,0.831612,0.702827,285,103,0,0,0.267222],
[17,0,0,818,571,206,780.696655,-303.493347,4.945984,0.967385,1.208982,285,103,0,0,0.390556]
],
[
[1,0,0,594,682,223,-597.049988,-525.400024,0.226788,1.0,1.0,341,111,0,0,0.220000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.118333,1.218333,341,111,0,0,0.110000],
[3,0,0,594,682,223,461.066681,535.966675,3.414510,1.0,1.0,341,111,0,0,0.146667],
[4,0,0,311,543,282,-598.266663,637.266663,-0.418879,1.071000,1.041000,271,141,0,0,0.418333],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.118333,1.218333,341,111,0,0,0.110000],
[18,0,0,0,796,310,-333.387665,-556.976990,0.105697,0.836464,0.825484,398,155,0,0,0.331839],
[19,0,0,0,796,310,748.425354,298.518402,-1.668279,0.966225,1.221756,398,155,0,0,0.169011],
[20,0,0,0,796,310,-868.405029,423.222687,-6.438468,0.861418,1.121939,398,155,0,0,0.271139],
[21,0,543,372,366,221,681.747864,513.057678,0.554194,1.410409,1.300611,183,110,0,0,0.247333],
[22,0,543,372,366,221,-546.995361,580.932983,0.177133,1.410409,1.300611,183,110,0,0,0.247333],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.755000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.755000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.604000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.755000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.755000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.755000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.755000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.755000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.604000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.604000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.604000],
[8,0,0,818,571,206,-349.358337,584.925659,-0.082310,1.135914,0.998167,285,103,0,0,0.270006],
[9,0,0,818,571,206,25.952333,588.918335,-0.112574,0.998167,0.998167,285,103,0,0,0.208172],
[10,0,0,818,571,206,638.826660,544.999023,0.071000,0.958240,0.907333,285,103,0,0,0.270006],
[11,0,0,818,571,206,455.164001,515.054016,0.175720,0.990181,0.773579,285,103,0,0,0.022672],
[12,0,0,818,571,206,-702.709351,-562.966003,3.304676,0.835466,0.802526,285,103,0,0,0.618333],
[13,0,0,818,571,206,650.804688,-578.936646,2.821866,1.012141,1.208780,285,103,0,0,0.528675],
[14,0,0,818,571,206,153.717667,-606.885315,2.946727,1.517213,1.208780,285,103,0,0,0.393672],
[15,0,0,818,571,206,-786.555359,-33.937668,1.577516,0.993176,1.208780,285,103,0,0,0.393672],
[16,0,0,818,571,206,-816.500366,-343.369324,4.047523,0.831473,0.702709,285,103,0,0,0.270006],
[17,0,0,818,571,206,780.566345,-303.442657,4.945984,0.967223,1.208780,285,103,0,0,0.393672]
],
[
[1,0,0,594,682,223,-596.599976,-524.799988,0.226788,1.0,1.0,341,111,0,0,0.240000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.120000,1.220000,341,111,0,0,0.120000],
[3,0,0,594,682,223,460.799988,535.599976,3.414510,1.0,1.0,341,111,0,0,0.160000],
[4,0,0,311,543,282,-598.200012,637.200012,-0.418879,1.071000,1.041000,271,141,0,0,0.420000],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.120000,1.220000,341,111,0,0,0.120000],
[18,0,0,0,796,310,-333.332001,-556.884033,0.105697,0.836324,0.825346,398,155,0,0,0.334800],
[19,0,0,0,796,310,748.100769,298.202393,-1.667697,0.966064,1.221552,398,155,0,0,0.173600],
[20,0,0,0,796,310,-868.260010,423.152008,-6.438468,0.861274,1.121752,398,155,0,0,0.274040],
[21,0,543,372,366,221,681.634033,512.971985,0.554194,1.410174,1.300394,183,110,0,0,0.248000],
[22,0,543,372,366,221,-546.903992,580.835999,0.177133,1.410174,1.300394,183,110,0,0,0.248000],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.760000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.760000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.608000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.760000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.760000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.760000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.760000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.760000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.608000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.608000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.608000],
[8,0,0,818,571,206,-349.300018,584.828003,-0.082310,1.135724,0.998000,285,103,0,0,0.272800],
[9,0,0,818,571,206,25.948000,588.820007,-0.112574,0.998000,0.998000,285,103,0,0,0.210800],
[10,0,0,818,571,206,638.720032,544.908020,0.071000,0.958080,0.907182,285,103,0,0,0.272800],
[11,0,0,818,571,206,455.088013,514.968018,0.175720,0.990016,0.773450,285,103,0,0,0.024800],
[12,0,0,818,571,206,-702.592041,-562.872009,3.304676,0.835326,0.802392,285,103,0,0,0.620000],
[13,0,0,818,571,206,650.696045,-578.840027,2.821866,1.011972,1.208578,285,103,0,0,0.533200],
[14,0,0,818,571,206,153.692001,-606.783997,2.946727,1.516960,1.208578,285,103,0,0,0.396800],
[15,0,0,818,571,206,-786.424011,-33.931999,1.577516,0.993010,1.208578,285,103,0,0,0.396800],
[16,0,0,818,571,206,-816.364014,-343.312012,4.047523,0.831334,0.702592,285,103,0,0,0.272800],
[17,0,0,818,571,206,780.436035,-303.391998,4.945984,0.967062,1.208578,285,103,0,0,0.396800]
],
[
[1,0,0,594,682,223,-596.150024,-524.200012,0.226788,1.0,1.0,341,111,0,0,0.260000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.121667,1.221667,341,111,0,0,0.130000],
[3,0,0,594,682,223,460.533325,535.233337,3.414510,1.0,1.0,341,111,0,0,0.173333],
[4,0,0,311,543,282,-598.133362,637.133362,-0.418879,1.071000,1.041000,271,141,0,0,0.421667],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.121667,1.221667,341,111,0,0,0.130000],
[18,0,0,0,796,310,-333.276337,-556.791016,0.105697,0.836184,0.825208,398,155,0,0,0.337772],
[19,0,0,0,796,310,747.776306,297.886505,-1.667115,0.965903,1.221348,398,155,0,0,0.178211],
[20,0,0,0,796,310,-868.114990,423.081329,-6.438468,0.861130,1.121565,398,155,0,0,0.276953],
[21,0,543,372,366,221,681.520142,512.886353,0.554194,1.409938,1.300177,183,110,0,0,0.248667],
[22,0,543,372,366,221,-546.812683,580.739014,0.177133,1.409938,1.300177,183,110,0,0,0.248667],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.765000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.765000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.612000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.765000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.765000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.765000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.765000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.765000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.612000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.612000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.612000],
[8,0,0,818,571,206,-349.241669,584.730347,-0.082310,1.135534,0.997833,285,103,0,0,0.275606],
[9,0,0,818,571,206,25.943666,588.721680,-0.112574,0.997833,0.997833,285,103,0,0,0.213439],
[10,0,0,818,571,206,638.613342,544.817017,0.071000,0.957920,0.907030,285,103,0,0,0.275606],
[11,0,0,818,571,206,455.011993,514.882019,0.175720,0.989851,0.773321,285,103,0,0,0.026939],
[12,0,0,818,571,206,-702.474670,-562.778015,3.304676,0.835186,0.802258,285,103,0,0,0.621667],
[13,0,0,818,571,206,650.587341,-578.743347,2.821866,1.011803,1.208376,285,103,0,0,0.537742],
[14,0,0,818,571,206,153.666336,-606.682678,2.946727,1.516707,1.208376,285,103,0,0,0.399939],
[15,0,0,818,571,206,-786.292664,-33.926334,1.577516,0.992844,1.208376,285,103,0,0,0.399939],
[16,0,0,818,571,206,-816.227661,-343.254669,4.047523,0.831195,0.702475,285,103,0,0,0.275606],
[17,0,0,818,571,206,780.305664,-303.341339,4.945984,0.966900,1.208376,285,103,0,0,0.399939]
],
[
[1,0,0,594,682,223,-595.700012,-523.599976,0.226788,1.0,1.0,341,111,0,0,0.280000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.123333,1.223333,341,111,0,0,0.140000],
[3,0,0,594,682,223,460.266663,534.866638,3.414510,1.0,1.0,341,111,0,0,0.186667],
[4,0,0,311,543,282,-598.066650,637.066650,-0.418879,1.071000,1.041000,271,141,0,0,0.423333],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.123333,1.223333,341,111,0,0,0.140000],
[18,0,0,0,796,310,-333.220673,-556.697998,0.105697,0.836045,0.825070,398,155,0,0,0.340756],
[19,0,0,0,796,310,747.451843,297.570709,-1.666534,0.965741,1.221144,398,155,0,0,0.182844],
[20,0,0,0,796,310,-867.969971,423.010651,-6.438468,0.860986,1.121377,398,155,0,0,0.279877],
[21,0,543,372,366,221,681.406311,512.800659,0.554194,1.409703,1.299960,183,110,0,0,0.249333],
[22,0,543,372,366,221,-546.721313,580.641968,0.177133,1.409703,1.299960,183,110,0,0,0.249333],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.770000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.770000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.616000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.770000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.770000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.770000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.770000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.770000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.616000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.616000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.616000],
[8,0,0,818,571,206,-349.183319,584.632690,-0.082310,1.135345,0.997667,285,103,0,0,0.278422],
[9,0,0,818,571,206,25.939333,588.623352,-0.112574,0.997667,0.997667,285,103,0,0,0.216089],
[10,0,0,818,571,206,638.506653,544.726013,0.071000,0.957760,0.906879,285,103,0,0,0.278422],
[11,0,0,818,571,206,454.936005,514.796021,0.175720,0.989685,0.773192,285,103,0,0,0.029089],
[12,0,0,818,571,206,-702.357300,-562.684021,3.304676,0.835047,0.802124,285,103,0,0,0.623333],
[13,0,0,818,571,206,650.478638,-578.646667,2.821866,1.011634,1.208174,285,103,0,0,0.542300],
[14,0,0,818,571,206,153.640671,-606.581299,2.946727,1.516453,1.208174,285,103,0,0,0.403089],
[15,0,0,818,571,206,-786.161316,-33.920666,1.577516,0.992678,1.208174,285,103,0,0,0.403089],
[16,0,0,818,571,206,-816.091309,-343.197327,4.047523,0.831056,0.702357,285,103,0,0,0.278422],
[17,0,0,818,571,206,780.175354,-303.290649,4.945984,0.966739,1.208174,285,103,0,0,0.403089]
],
[
[1,0,0,594,682,223,-595.250000,-523.0,0.226788,1.0,1.0,341,111,0,0,0.300000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.125000,1.225000,341,111,0,0,0.150000],
[3,0,0,594,682,223,460.0,534.500000,3.414510,1.0,1.0,341,111,0,0,0.200000],
[4,0,0,311,543,282,-598.0,637.0,-0.418879,1.071000,1.041000,271,141,0,0,0.425000],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.125000,1.225000,341,111,0,0,0.150000],
[18,0,0,0,796,310,-333.165009,-556.604980,0.105697,0.835905,0.824933,398,155,0,0,0.343750],
[19,0,0,0,796,310,747.127502,297.255005,-1.665952,0.965580,1.220940,398,155,0,0,0.187500],
[20,0,0,0,796,310,-867.825012,422.940002,-6.438468,0.860842,1.121190,398,155,0,0,0.282813],
[21,0,543,372,366,221,681.292480,512.715027,0.554194,1.409467,1.299742,183,110,0,0,0.250000],
[22,0,543,372,366,221,-546.630005,580.544983,0.177133,1.409467,1.299742,183,110,0,0,0.250000],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.775000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.775000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.620000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.775000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.775000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.775000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.775000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.775000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.620000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.620000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.620000],
[8,0,0,818,571,206,-349.125000,584.534973,-0.082310,1.135155,0.997500,285,103,0,0,0.281250],
[9,0,0,818,571,206,25.934999,588.525024,-0.112574,0.997500,0.997500,285,103,0,0,0.218750],
[10,0,0,818,571,206,638.400024,544.635010,0.071000,0.957600,0.906727,285,103,0,0,0.281250],
[11,0,0,818,571,206,454.860016,514.710022,0.175720,0.989520,0.773062,285,103,0,0,0.031250],
[12,0,0,818,571,206,-702.239990,-562.590027,3.304676,0.834908,0.801990,285,103,0,0,0.625000],
[13,0,0,818,571,206,650.369995,-578.549988,2.821866,1.011465,1.207973,285,103,0,0,0.546875],
[14,0,0,818,571,206,153.615005,-606.479980,2.946727,1.516200,1.207973,285,103,0,0,0.406250],
[15,0,0,818,571,206,-786.030029,-33.915001,1.577516,0.992513,1.207973,285,103,0,0,0.406250],
[16,0,0,818,571,206,-815.955017,-343.140015,4.047523,0.830917,0.702240,285,103,0,0,0.281250],
[17,0,0,818,571,206,780.044983,-303.239990,4.945984,0.966577,1.207973,285,103,0,0,0.406250]
],
[
[1,0,0,594,682,223,-594.799988,-522.400024,0.226788,1.0,1.0,341,111,0,0,0.320000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.126667,1.226667,341,111,0,0,0.160000],
[3,0,0,594,682,223,459.733337,534.133362,3.414510,1.0,1.0,341,111,0,0,0.213333],
[4,0,0,311,543,282,-597.933350,636.933350,-0.418879,1.071000,1.041000,271,141,0,0,0.426667],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.126667,1.226667,341,111,0,0,0.160000],
[18,0,0,0,796,310,-333.109344,-556.512024,0.105697,0.835765,0.824795,398,155,0,0,0.346756],
[19,0,0,0,796,310,746.803223,296.939392,-1.665370,0.965419,1.220736,398,155,0,0,0.192178],
[20,0,0,0,796,310,-867.679993,422.869354,-6.438468,0.860699,1.121003,398,155,0,0,0.285760],
[21,0,543,372,366,221,681.178650,512.629333,0.554194,1.409232,1.299525,183,110,0,0,0.250667],
[22,0,543,372,366,221,-546.538696,580.447998,0.177133,1.409232,1.299525,183,110,0,0,0.250667],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.780000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.780000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.624000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.780000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.780000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.780000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.780000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.780000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.624000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.624000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.624000],
[8,0,0,818,571,206,-349.066681,584.437317,-0.082310,1.134965,0.997333,285,103,0,0,0.284089],
[9,0,0,818,571,206,25.930668,588.426697,-0.112574,0.997333,0.997333,285,103,0,0,0.221422],
[10,0,0,818,571,206,638.293335,544.544006,0.071000,0.957440,0.906576,285,103,0,0,0.284089],
[11,0,0,818,571,206,454.783997,514.624023,0.175720,0.989355,0.772933,285,103,0,0,0.033422],
[12,0,0,818,571,206,-702.122681,-562.496033,3.304676,0.834768,0.801856,285,103,0,0,0.626667],
[13,0,0,818,571,206,650.261353,-578.453369,2.821866,1.011296,1.207771,285,103,0,0,0.551467],
[14,0,0,818,571,206,153.589340,-606.378662,2.946727,1.515947,1.207771,285,103,0,0,0.409422],
[15,0,0,818,571,206,-785.898682,-33.909332,1.577516,0.992347,1.207771,285,103,0,0,0.409422],
[16,0,0,818,571,206,-815.818665,-343.082672,4.047523,0.830779,0.702123,285,103,0,0,0.284089],
[17,0,0,818,571,206,779.914673,-303.189331,4.945984,0.966416,1.207771,285,103,0,0,0.409422]
],
[
[1,0,0,594,682,223,-594.349976,-521.799988,0.226788,1.0,1.0,341,111,0,0,0.340000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.128333,1.228333,341,111,0,0,0.170000],
[3,0,0,594,682,223,459.466675,533.766663,3.414510,1.0,1.0,341,111,0,0,0.226667],
[4,0,0,311,543,282,-597.866638,636.866638,-0.418879,1.071000,1.041000,271,141,0,0,0.428333],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.128333,1.228333,341,111,0,0,0.170000],
[18,0,0,0,796,310,-333.053680,-556.419006,0.105697,0.835626,0.824657,398,155,0,0,0.349772],
[19,0,0,0,796,310,746.478943,296.623871,-1.664788,0.965257,1.220532,398,155,0,0,0.196878],
[20,0,0,0,796,310,-867.535034,422.798676,-6.438468,0.860555,1.120815,398,155,0,0,0.288719],
[21,0,543,372,366,221,681.064880,512.543701,0.554194,1.408997,1.299308,183,110,0,0,0.251333],
[22,0,543,372,366,221,-546.447327,580.351013,0.177133,1.408997,1.299308,183,110,0,0,0.251333],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.785000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.785000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.628000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.785000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.785000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.785000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.785000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.785000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.628000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.628000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.628000],
[8,0,0,818,571,206,-349.008331,584.339661,-0.082310,1.134776,0.997167,285,103,0,0,0.286939],
[9,0,0,818,571,206,25.926334,588.328369,-0.112574,0.997167,0.997167,285,103,0,0,0.224106],
[10,0,0,818,571,206,638.186707,544.453003,0.071000,0.957280,0.906425,285,103,0,0,0.286939],
[11,0,0,818,571,206,454.708008,514.538025,0.175720,0.989189,0.772804,285,103,0,0,0.035606],
[12,0,0,818,571,206,-702.005371,-562.402039,3.304676,0.834629,0.801722,285,103,0,0,0.628333],
[13,0,0,818,571,206,650.152710,-578.356689,2.821866,1.011127,1.207569,285,103,0,0,0.556075],
[14,0,0,818,571,206,153.563675,-606.277344,2.946727,1.515693,1.207569,285,103,0,0,0.412606],
[15,0,0,818,571,206,-785.767334,-33.903667,1.577516,0.992181,1.207569,285,103,0,0,0.412606],
[16,0,0,818,571,206,-815.682373,-343.025330,4.047523,0.830640,0.702005,285,103,0,0,0.286939],
[17,0,0,818,571,206,779.784363,-303.138672,4.945984,0.966255,1.207569,285,103,0,0,0.412606]
],
[
[1,0,0,594,682,223,-593.900024,-521.200012,0.226788,1.0,1.0,341,111,0,0,0.360000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.130000,1.230000,341,111,0,0,0.180000],
[3,0,0,594,682,223,459.200012,533.400024,3.414510,1.0,1.0,341,111,0,0,0.240000],
[4,0,0,311,543,282,-597.799988,636.799988,-0.418879,1.071000,1.041000,271,141,0,0,0.430000],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.130000,1.230000,341,111,0,0,0.180000],
[18,0,0,0,796,310,-332.997986,-556.325989,0.105697,0.835486,0.824519,398,155,0,0,0.352800],
[19,0,0,0,796,310,746.154785,296.308411,-1.664207,0.965096,1.220328,398,155,0,0,0.201600],
[20,0,0,0,796,310,-867.389954,422.727997,-6.438468,0.860411,1.120628,398,155,0,0,0.291690],
[21,0,543,372,366,221,680.950989,512.458008,0.554194,1.408761,1.299091,183,110,0,0,0.252000],
[22,0,543,372,366,221,-546.356018,580.253967,0.177133,1.408761,1.299091,183,110,0,0,0.252000],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.790000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.790000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.632000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.790000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.790000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.790000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.790000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.790000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.632000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.632000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.632000],
[8,0,0,818,571,206,-348.949982,584.242004,-0.082310,1.134586,0.997000,285,103,0,0,0.289800],
[9,0,0,818,571,206,25.921999,588.229980,-0.112574,0.997000,0.997000,285,103,0,0,0.226800],
[10,0,0,818,571,206,638.079956,544.362000,0.071000,0.957120,0.906273,285,103,0,0,0.289800],
[11,0,0,818,571,206,454.631989,514.451965,0.175720,0.989024,0.772675,285,103,0,0,0.037800],
[12,0,0,818,571,206,-701.888000,-562.307983,3.304676,0.834489,0.801588,285,103,0,0,0.630000],
[13,0,0,818,571,206,650.044006,-578.260010,2.821866,1.010958,1.207367,285,103,0,0,0.560700],
[14,0,0,818,571,206,153.537994,-606.175964,2.946727,1.515440,1.207367,285,103,0,0,0.415800],
[15,0,0,818,571,206,-785.635986,-33.897999,1.577516,0.992015,1.207367,285,103,0,0,0.415800],
[16,0,0,818,571,206,-815.545959,-342.967987,4.047523,0.830501,0.701888,285,103,0,0,0.289800],
[17,0,0,818,571,206,779.653992,-303.087982,4.945984,0.966093,1.207367,285,103,0,0,0.415800]
],
[
[1,0,0,594,682,223,-593.450012,-520.599976,0.226788,1.0,1.0,341,111,0,0,0.380000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.131667,1.231667,341,111,0,0,0.190000],
[3,0,0,594,682,223,458.933319,533.033325,3.414510,1.0,1.0,341,111,0,0,0.253333],
[4,0,0,311,543,282,-597.733337,636.733337,-0.418879,1.071000,1.041000,271,141,0,0,0.431667],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.131667,1.231667,341,111,0,0,0.190000],
[18,0,0,0,796,310,-332.942322,-556.232971,0.105697,0.835346,0.824381,398,155,0,0,0.355839],
[19,0,0,0,796,310,745.830688,295.993042,-1.663625,0.964935,1.220124,398,155,0,0,0.206344],
[20,0,0,0,796,310,-867.244995,422.657318,-6.438468,0.860267,1.120441,398,155,0,0,0.294673],
[21,0,543,372,366,221,680.837158,512.372314,0.554194,1.408525,1.298874,183,110,0,0,0.252667],
[22,0,543,372,366,221,-546.264648,580.156982,0.177133,1.408525,1.298874,183,110,0,0,0.252667],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.795000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.795000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.636000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.795000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.795000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.795000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.795000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.795000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.636000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.636000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.636000],
[8,0,0,818,571,206,-348.891663,584.144348,-0.082310,1.134396,0.996833,285,103,0,0,0.292672],
[9,0,0,818,571,206,25.917667,588.131653,-0.112574,0.996833,0.996833,285,103,0,0,0.229506],
[10,0,0,818,571,206,637.973328,544.270996,0.071000,0.956960,0.906121,285,103,0,0,0.292672],
[11,0,0,818,571,206,454.556000,514.365967,0.175720,0.988859,0.772546,285,103,0,0,0.040006],
[12,0,0,818,571,206,-701.770630,-562.213989,3.304676,0.834350,0.801454,285,103,0,0,0.631667],
[13,0,0,818,571,206,649.935303,-578.163330,2.821866,1.010789,1.207165,285,103,0,0,0.565342],
[14,0,0,818,571,206,153.512329,-606.074646,2.946727,1.515187,1.207165,285,103,0,0,0.419006],
[15,0,0,818,571,206,-785.504639,-33.892334,1.577516,0.991849,1.207165,285,103,0,0,0.419006],
[16,0,0,818,571,206,-815.409668,-342.910675,4.047523,0.830362,0.701771,285,103,0,0,0.292672],
[17,0,0,818,571,206,779.523682,-303.037323,4.945984,0.965931,1.207165,285,103,0,0,0.419006]
],
[
[1,0,0,594,682,223,-593.0,-520.0,0.226788,1.0,1.0,341,111,0,0,0.400000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.133333,1.233333,341,111,0,0,0.200000],
[3,0,0,594,682,223,458.666656,532.666687,3.414510,1.0,1.0,341,111,0,0,0.266667],
[4,0,0,311,543,282,-597.666687,636.666687,-0.418879,1.071000,1.041000,271,141,0,0,0.433333],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.133333,1.233333,341,111,0,0,0.200000],
[18,0,0,0,796,310,-332.886658,-556.140015,0.105697,0.835207,0.824243,398,155,0,0,0.358889],
[19,0,0,0,796,310,745.506653,295.677765,-1.663043,0.964773,1.219920,398,155,0,0,0.211111],
[20,0,0,0,796,310,-867.099976,422.586670,-6.438468,0.860123,1.120253,398,155,0,0,0.297667],
[21,0,543,372,366,221,680.723328,512.286682,0.554194,1.408290,1.298657,183,110,0,0,0.253333],
[22,0,543,372,366,221,-546.173340,580.059998,0.177133,1.408290,1.298657,183,110,0,0,0.253333],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.800000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.800000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.640000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.800000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.800000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.800000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.800000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.800000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.640000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.640000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.640000],
[8,0,0,818,571,206,-348.833344,584.046692,-0.082310,1.134207,0.996667,285,103,0,0,0.295556],
[9,0,0,818,571,206,25.913334,588.033325,-0.112574,0.996667,0.996667,285,103,0,0,0.232222],
[10,0,0,818,571,206,637.866699,544.179993,0.071000,0.956800,0.905970,285,103,0,0,0.295556],
[11,0,0,818,571,206,454.480011,514.280029,0.175720,0.988693,0.772417,285,103,0,0,0.042222],
[12,0,0,818,571,206,-701.653320,-562.119995,3.304676,0.834210,0.801320,285,103,0,0,0.633333],
[13,0,0,818,571,206,649.826660,-578.066650,2.821866,1.010620,1.206963,285,103,0,0,0.570000],
[14,0,0,818,571,206,153.486664,-605.973328,2.946727,1.514933,1.206963,285,103,0,0,0.422222],
[15,0,0,818,571,206,-785.373352,-33.886665,1.577516,0.991683,1.206963,285,103,0,0,0.422222],
[16,0,0,818,571,206,-815.273315,-342.853333,4.047523,0.830223,0.701653,285,103,0,0,0.295556],
[17,0,0,818,571,206,779.393311,-302.986664,4.945984,0.965770,1.206963,285,103,0,0,0.422222]
],
[
[1,0,0,594,682,223,-592.549988,-519.400024,0.226788,1.0,1.0,341,111,0,0,0.420000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.135000,1.235000,341,111,0,0,0.210000],
[3,0,0,594,682,223,458.399994,532.299988,3.414510,1.0,1.0,341,111,0,0,0.280000],
[4,0,0,311,543,282,-597.599976,636.599976,-0.418879,1.071000,1.041000,271,141,0,0,0.435000],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.135000,1.235000,341,111,0,0,0.210000],
[18,0,0,0,796,310,-332.830994,-556.046997,0.105697,0.835067,0.824106,398,155,0,0,0.361950],
[19,0,0,0,796,310,745.182678,295.362610,-1.662461,0.964612,1.219716,398,155,0,0,0.215900],
[20,0,0,0,796,310,-866.955017,422.515991,-6.438468,0.859980,1.120066,398,155,0,0,0.300673],
[21,0,543,372,366,221,680.609497,512.200989,0.554194,1.408054,1.298440,183,110,0,0,0.254000],
[22,0,543,372,366,221,-546.082031,579.963013,0.177133,1.408054,1.298440,183,110,0,0,0.254000],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.805000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.805000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.644000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.805000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.805000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.805000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.805000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.805000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.644000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.644000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.644000],
[8,0,0,818,571,206,-348.774994,583.949036,-0.082310,1.134017,0.996500,285,103,0,0,0.298450],
[9,0,0,818,571,206,25.909000,587.934998,-0.112574,0.996500,0.996500,285,103,0,0,0.234950],
[10,0,0,818,571,206,637.760010,544.088989,0.071000,0.956640,0.905819,285,103,0,0,0.298450],
[11,0,0,818,571,206,454.403992,514.194031,0.175720,0.988528,0.772287,285,103,0,0,0.044450],
[12,0,0,818,571,206,-701.536011,-562.026001,3.304676,0.834071,0.801186,285,103,0,0,0.635000],
[13,0,0,818,571,206,649.718018,-577.970032,2.821866,1.010451,1.206761,285,103,0,0,0.574675],
[14,0,0,818,571,206,153.460999,-605.872009,2.946727,1.514680,1.206761,285,103,0,0,0.425450],
[15,0,0,818,571,206,-785.242004,-33.881001,1.577516,0.991518,1.206761,285,103,0,0,0.425450],
[16,0,0,818,571,206,-815.137024,-342.796021,4.047523,0.830085,0.701536,285,103,0,0,0.298450],
[17,0,0,818,571,206,779.263000,-302.936005,4.945984,0.965608,1.206761,285,103,0,0,0.425450]
],
[
[1,0,0,594,682,223,-592.099976,-518.799988,0.226788,1.0,1.0,341,111,0,0,0.440000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.136667,1.236667,341,111,0,0,0.220000],
[3,0,0,594,682,223,458.133331,531.933350,3.414510,1.0,1.0,341,111,0,0,0.293333],
[4,0,0,311,543,282,-597.533325,636.533325,-0.418879,1.071000,1.041000,271,141,0,0,0.436667],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.136667,1.236667,341,111,0,0,0.220000],
[18,0,0,0,796,310,-332.775330,-555.954041,0.105697,0.834927,0.823968,398,155,0,0,0.365022],
[19,0,0,0,796,310,744.858826,295.047516,-1.661879,0.964451,1.219512,398,155,0,0,0.220711],
[20,0,0,0,796,310,-866.809998,422.445343,-6.438468,0.859836,1.119879,398,155,0,0,0.303690],
[21,0,543,372,366,221,680.495667,512.115356,0.554194,1.407819,1.298222,183,110,0,0,0.254667],
[22,0,543,372,366,221,-545.990662,579.866028,0.177133,1.407819,1.298222,183,110,0,0,0.254667],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.810000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.810000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.648000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.810000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.810000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.810000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.810000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.810000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.648000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.648000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.648000],
[8,0,0,818,571,206,-348.716675,583.851379,-0.082310,1.133827,0.996333,285,103,0,0,0.301356],
[9,0,0,818,571,206,25.904667,587.836670,-0.112574,0.996333,0.996333,285,103,0,0,0.237689],
[10,0,0,818,571,206,637.653320,543.997986,0.071000,0.956480,0.905667,285,103,0,0,0.301356],
[11,0,0,818,571,206,454.328003,514.108032,0.175720,0.988363,0.772158,285,103,0,0,0.046689],
[12,0,0,818,571,206,-701.418701,-561.932007,3.304676,0.833931,0.801052,285,103,0,0,0.636667],
[13,0,0,818,571,206,649.609375,-577.873352,2.821866,1.010282,1.206560,285,103,0,0,0.579367],
[14,0,0,818,571,206,153.435333,-605.770691,2.946727,1.514427,1.206560,285,103,0,0,0.428689],
[15,0,0,818,571,206,-785.110718,-33.875336,1.577516,0.991352,1.206560,285,103,0,0,0.428689],
[16,0,0,818,571,206,-815.000671,-342.738678,4.047523,0.829946,0.701419,285,103,0,0,0.301356],
[17,0,0,818,571,206,779.132690,-302.885345,4.945984,0.965447,1.206560,285,103,0,0,0.428689]
],
[
[1,0,0,594,682,223,-591.650024,-518.200012,0.226788,1.0,1.0,341,111,0,0,0.460000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.138333,1.238333,341,111,0,0,0.230000],
[3,0,0,594,682,223,457.866669,531.566650,3.414510,1.0,1.0,341,111,0,0,0.306667],
[4,0,0,311,543,282,-597.466675,636.466675,-0.418879,1.071000,1.041000,271,141,0,0,0.438333],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.138333,1.238333,341,111,0,0,0.230000],
[18,0,0,0,796,310,-332.719666,-555.860962,0.105697,0.834788,0.823830,398,155,0,0,0.368106],
[19,0,0,0,796,310,744.534973,294.732513,-1.661298,0.964289,1.219308,398,155,0,0,0.225544],
[20,0,0,0,796,310,-866.664978,422.374664,-6.438468,0.859692,1.119691,398,155,0,0,0.306719],
[21,0,543,372,366,221,680.381836,512.029663,0.554194,1.407583,1.298005,183,110,0,0,0.255333],
[22,0,543,372,366,221,-545.899292,579.768982,0.177133,1.407583,1.298005,183,110,0,0,0.255333],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.815000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.815000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.652000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.815000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.815000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.815000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.815000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.815000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.652000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.652000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.652000],
[8,0,0,818,571,206,-348.658325,583.753662,-0.082310,1.133638,0.996167,285,103,0,0,0.304272],
[9,0,0,818,571,206,25.900333,587.738342,-0.112574,0.996167,0.996167,285,103,0,0,0.240439],
[10,0,0,818,571,206,637.546631,543.906982,0.071000,0.956320,0.905515,285,103,0,0,0.304272],
[11,0,0,818,571,206,454.251984,514.021973,0.175720,0.988197,0.772029,285,103,0,0,0.048939],
[12,0,0,818,571,206,-701.301331,-561.838013,3.304676,0.833791,0.800918,285,103,0,0,0.638333],
[13,0,0,818,571,206,649.500671,-577.776672,2.821866,1.010113,1.206358,285,103,0,0,0.584075],
[14,0,0,818,571,206,153.409668,-605.669312,2.946727,1.514173,1.206358,285,103,0,0,0.431939],
[15,0,0,818,571,206,-784.979309,-33.869667,1.577516,0.991186,1.206358,285,103,0,0,0.431939],
[16,0,0,818,571,206,-814.864319,-342.681335,4.047523,0.829807,0.701301,285,103,0,0,0.304272],
[17,0,0,818,571,206,779.002319,-302.834656,4.945984,0.965285,1.206358,285,103,0,0,0.431939]
],
[
[1,0,0,594,682,223,-591.200012,-517.599976,0.226788,1.0,1.0,341,111,0,0,0.480000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.140000,1.240000,341,111,0,0,0.240000],
[3,0,0,594,682,223,457.600006,531.200012,3.414510,1.0,1.0,341,111,0,0,0.320000],
[4,0,0,311,543,282,-597.400024,636.400024,-0.418879,1.071000,1.041000,271,141,0,0,0.440000],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.140000,1.240000,341,111,0,0,0.240000],
[18,0,0,0,796,310,-332.664001,-555.768005,0.105697,0.834648,0.823692,398,155,0,0,0.371200],
[19,0,0,0,796,310,744.211182,294.417603,-1.660716,0.964128,1.219104,398,155,0,0,0.230400],
[20,0,0,0,796,310,-866.520020,422.303986,-6.438468,0.859548,1.119504,398,155,0,0,0.309760],
[21,0,543,372,366,221,680.268005,511.944000,0.554194,1.407348,1.297788,183,110,0,0,0.256000],
[22,0,543,372,366,221,-545.807983,579.671997,0.177133,1.407348,1.297788,183,110,0,0,0.256000],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.820000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.820000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.656000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.820000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.820000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.820000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.820000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.820000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.656000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.656000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.656000],
[8,0,0,818,571,206,-348.600006,583.656006,-0.082310,1.133448,0.996000,285,103,0,0,0.307200],
[9,0,0,818,571,206,25.896000,587.640015,-0.112574,0.996000,0.996000,285,103,0,0,0.243200],
[10,0,0,818,571,206,637.440002,543.815979,0.071000,0.956160,0.905364,285,103,0,0,0.307200],
[11,0,0,818,571,206,454.175995,513.935974,0.175720,0.988032,0.771900,285,103,0,0,0.051200],
[12,0,0,818,571,206,-701.184021,-561.744019,3.304676,0.833652,0.800784,285,103,0,0,0.640000],
[13,0,0,818,571,206,649.391968,-577.679993,2.821866,1.009944,1.206156,285,103,0,0,0.588800],
[14,0,0,818,571,206,153.384003,-605.567993,2.946727,1.513920,1.206156,285,103,0,0,0.435200],
[15,0,0,818,571,206,-784.848022,-33.863998,1.577516,0.991020,1.206156,285,103,0,0,0.435200],
[16,0,0,818,571,206,-814.727966,-342.623993,4.047523,0.829668,0.701184,285,103,0,0,0.307200],
[17,0,0,818,571,206,778.872009,-302.783997,4.945984,0.965124,1.206156,285,103,0,0,0.435200]
],
[
[1,0,0,594,682,223,-590.750000,-517.0,0.226788,1.0,1.0,341,111,0,0,0.500000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.141667,1.241667,341,111,0,0,0.250000],
[3,0,0,594,682,223,457.333344,530.833313,3.414510,1.0,1.0,341,111,0,0,0.333333],
[4,0,0,311,543,282,-597.333313,636.333313,-0.418879,1.071000,1.041000,271,141,0,0,0.441667],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.141667,1.241667,341,111,0,0,0.250000],
[18,0,0,0,796,310,-332.608337,-555.674988,0.105697,0.834508,0.823554,398,155,0,0,0.374306],
[19,0,0,0,796,310,743.887512,294.102783,-1.660134,0.963967,1.218900,398,155,0,0,0.235278],
[20,0,0,0,796,310,-866.375000,422.233337,-6.438468,0.859404,1.119317,398,155,0,0,0.312813],
[21,0,543,372,366,221,680.154175,511.858337,0.554194,1.407112,1.297571,183,110,0,0,0.256667],
[22,0,543,372,366,221,-545.716675,579.575012,0.177133,1.407112,1.297571,183,110,0,0,0.256667],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.825000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.825000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.660000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.825000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.825000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.825000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.825000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.825000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.660000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.660000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.660000],
[8,0,0,818,571,206,-348.541656,583.558350,-0.082310,1.133258,0.995833,285,103,0,0,0.310139],
[9,0,0,818,571,206,25.891666,587.541687,-0.112574,0.995833,0.995833,285,103,0,0,0.245972],
[10,0,0,818,571,206,637.333313,543.724976,0.071000,0.956000,0.905212,285,103,0,0,0.310139],
[11,0,0,818,571,206,454.100006,513.849976,0.175720,0.987867,0.771771,285,103,0,0,0.053472],
[12,0,0,818,571,206,-701.066650,-561.650024,3.304676,0.833513,0.800650,285,103,0,0,0.641667],
[13,0,0,818,571,206,649.283325,-577.583313,2.821866,1.009775,1.205954,285,103,0,0,0.593542],
[14,0,0,818,571,206,153.358337,-605.466675,2.946727,1.513667,1.205954,285,103,0,0,0.438472],
[15,0,0,818,571,206,-784.716675,-33.858334,1.577516,0.990854,1.205954,285,103,0,0,0.438472],
[16,0,0,818,571,206,-814.591675,-342.566681,4.047523,0.829529,0.701067,285,103,0,0,0.310139],
[17,0,0,818,571,206,778.741699,-302.733337,4.945984,0.964962,1.205954,285,103,0,0,0.438472]
],
[
[1,0,0,594,682,223,-590.299988,-516.400024,0.226788,1.0,1.0,341,111,0,0,0.520000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.143333,1.243333,341,111,0,0,0.260000],
[3,0,0,594,682,223,457.066681,530.466675,3.414510,1.0,1.0,341,111,0,0,0.346667],
[4,0,0,311,543,282,-597.266663,636.266663,-0.418879,1.071000,1.041000,271,141,0,0,0.443333],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.143333,1.243333,341,111,0,0,0.260000],
[18,0,0,0,796,310,-332.552673,-555.582031,0.105697,0.834369,0.823416,398,155,0,0,0.377422],
[19,0,0,0,796,310,743.563843,293.788055,-1.659552,0.963805,1.218696,398,155,0,0,0.240178],
[20,0,0,0,796,310,-866.230042,422.162659,-6.438468,0.859260,1.119129,398,155,0,0,0.315877],
[21,0,543,372,366,221,680.040344,511.772675,0.554194,1.406877,1.297354,183,110,0,0,0.257333],
[22,0,543,372,366,221,-545.625366,579.478027,0.177133,1.406877,1.297354,183,110,0,0,0.257333],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.830000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.830000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.664000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.830000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.830000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.830000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.830000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.830000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.664000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.664000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.664000],
[8,0,0,818,571,206,-348.483337,583.460693,-0.082310,1.133069,0.995667,285,103,0,0,0.313089],
[9,0,0,818,571,206,25.887333,587.443359,-0.112574,0.995667,0.995667,285,103,0,0,0.248756],
[10,0,0,818,571,206,637.226685,543.634033,0.071000,0.955840,0.905061,285,103,0,0,0.313089],
[11,0,0,818,571,206,454.024017,513.764038,0.175720,0.987701,0.771642,285,103,0,0,0.055756],
[12,0,0,818,571,206,-700.949341,-561.556030,3.304676,0.833373,0.800516,285,103,0,0,0.643333],
[13,0,0,818,571,206,649.174683,-577.486694,2.821866,1.009606,1.205752,285,103,0,0,0.598300],
[14,0,0,818,571,206,153.332672,-605.365356,2.946727,1.513413,1.205752,285,103,0,0,0.441756],
[15,0,0,818,571,206,-784.585327,-33.852669,1.577516,0.990688,1.205752,285,103,0,0,0.441756],
[16,0,0,818,571,206,-814.455322,-342.509338,4.047523,0.829390,0.700949,285,103,0,0,0.313089],
[17,0,0,818,571,206,778.611328,-302.682678,4.945984,0.964801,1.205752,285,103,0,0,0.441756]
],
[
[1,0,0,594,682,223,-589.849976,-515.799988,0.226788,1.0,1.0,341,111,0,0,0.540000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.145000,1.245000,341,111,0,0,0.270000],
[3,0,0,594,682,223,456.799988,530.099976,3.414510,1.0,1.0,341,111,0,0,0.360000],
[4,0,0,311,543,282,-597.200012,636.200012,-0.418879,1.071000,1.041000,271,141,0,0,0.445000],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.145000,1.245000,341,111,0,0,0.270000],
[18,0,0,0,796,310,-332.497009,-555.489014,0.105697,0.834229,0.823279,398,155,0,0,0.380550],
[19,0,0,0,796,310,743.240295,293.473389,-1.658970,0.963644,1.218492,398,155,0,0,0.245100],
[20,0,0,0,796,310,-866.085022,422.092010,-6.438468,0.859116,1.118942,398,155,0,0,0.318953],
[21,0,543,372,366,221,679.926514,511.687012,0.554194,1.406641,1.297137,183,110,0,0,0.258000],
[22,0,543,372,366,221,-545.533997,579.381042,0.177133,1.406641,1.297137,183,110,0,0,0.258000],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.835000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.835000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.668000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.835000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.835000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.835000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.835000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.835000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.668000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.668000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.668000],
[8,0,0,818,571,206,-348.425018,583.363037,-0.082310,1.132879,0.995500,285,103,0,0,0.316050],
[9,0,0,818,571,206,25.883001,587.345032,-0.112574,0.995500,0.995500,285,103,0,0,0.251550],
[10,0,0,818,571,206,637.119995,543.543030,0.071000,0.955680,0.904909,285,103,0,0,0.316050],
[11,0,0,818,571,206,453.947998,513.678040,0.175720,0.987536,0.771513,285,103,0,0,0.058050],
[12,0,0,818,571,206,-700.832031,-561.462036,3.304676,0.833234,0.800382,285,103,0,0,0.645000],
[13,0,0,818,571,206,649.066040,-577.390015,2.821866,1.009437,1.205551,285,103,0,0,0.603075],
[14,0,0,818,571,206,153.307007,-605.264038,2.946727,1.513160,1.205551,285,103,0,0,0.445050],
[15,0,0,818,571,206,-784.454041,-33.847000,1.577516,0.990523,1.205551,285,103,0,0,0.445050],
[16,0,0,818,571,206,-814.319031,-342.451996,4.047523,0.829252,0.700832,285,103,0,0,0.316050],
[17,0,0,818,571,206,778.481018,-302.632019,4.945984,0.964639,1.205551,285,103,0,0,0.445050]
],
[
[1,0,0,594,682,223,-589.400024,-515.200012,0.226788,1.0,1.0,341,111,0,0,0.560000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.146667,1.246667,341,111,0,0,0.280000],
[3,0,0,594,682,223,456.533325,529.733337,3.414510,1.0,1.0,341,111,0,0,0.373333],
[4,0,0,311,543,282,-597.133362,636.133362,-0.418879,1.071000,1.041000,271,141,0,0,0.446667],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.146667,1.246667,341,111,0,0,0.280000],
[18,0,0,0,796,310,-332.441315,-555.395996,0.105697,0.834089,0.823141,398,155,0,0,0.383689],
[19,0,0,0,796,310,742.916809,293.158844,-1.658389,0.963483,1.218288,398,155,0,0,0.250044],
[20,0,0,0,796,310,-865.940002,422.021332,-6.438468,0.858973,1.118755,398,155,0,0,0.322040],
[21,0,543,372,366,221,679.812683,511.601318,0.554194,1.406406,1.296919,183,110,0,0,0.258667],
[22,0,543,372,366,221,-545.442627,579.283997,0.177133,1.406406,1.296919,183,110,0,0,0.258667],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.840000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.840000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.672000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.840000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.840000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.840000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.840000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.840000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.672000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.672000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.672000],
[8,0,0,818,571,206,-348.366669,583.265320,-0.082310,1.132689,0.995333,285,103,0,0,0.319022],
[9,0,0,818,571,206,25.878666,587.246643,-0.112574,0.995333,0.995333,285,103,0,0,0.254356],
[10,0,0,818,571,206,637.013306,543.451965,0.071000,0.955520,0.904758,285,103,0,0,0.319022],
[11,0,0,818,571,206,453.871979,513.591980,0.175720,0.987371,0.771383,285,103,0,0,0.060356],
[12,0,0,818,571,206,-700.714661,-561.367981,3.304676,0.833094,0.800248,285,103,0,0,0.646667],
[13,0,0,818,571,206,648.957336,-577.293335,2.821866,1.009268,1.205349,285,103,0,0,0.607867],
[14,0,0,818,571,206,153.281326,-605.162659,2.946727,1.512907,1.205349,285,103,0,0,0.448356],
[15,0,0,818,571,206,-784.322632,-33.841331,1.577516,0.990357,1.205349,285,103,0,0,0.448356],
[16,0,0,818,571,206,-814.182678,-342.394653,4.047523,0.829113,0.700715,285,103,0,0,0.319022],
[17,0,0,818,571,206,778.350647,-302.581329,4.945984,0.964478,1.205349,285,103,0,0,0.448356]
],
[
[1,0,0,594,682,223,-588.950012,-514.599976,0.226788,1.0,1.0,341,111,0,0,0.580000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.148333,1.248333,341,111,0,0,0.290000],
[3,0,0,594,682,223,456.266663,529.366638,3.414510,1.0,1.0,341,111,0,0,0.386667],
[4,0,0,311,543,282,-597.066650,636.066650,-0.418879,1.071000,1.041000,271,141,0,0,0.448333],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.148333,1.248333,341,111,0,0,0.290000],
[18,0,0,0,796,310,-332.385651,-555.302979,0.105697,0.833950,0.823003,398,155,0,0,0.386839],
[19,0,0,0,796,310,742.593384,292.844360,-1.657807,0.963321,1.218084,398,155,0,0,0.255011],
[20,0,0,0,796,310,-865.794983,421.950653,-6.438468,0.858829,1.118567,398,155,0,0,0.325139],
[21,0,543,372,366,221,679.698853,511.515656,0.554194,1.406170,1.296702,183,110,0,0,0.259333],
[22,0,543,372,366,221,-545.351318,579.187012,0.177133,1.406170,1.296702,183,110,0,0,0.259333],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.845000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.845000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.676000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.845000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.845000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.845000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.845000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.845000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.676000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.676000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.676000],
[8,0,0,818,571,206,-348.308319,583.167664,-0.082310,1.132500,0.995167,285,103,0,0,0.322006],
[9,0,0,818,571,206,25.874332,587.148315,-0.112574,0.995167,0.995167,285,103,0,0,0.257172],
[10,0,0,818,571,206,636.906677,543.361023,0.071000,0.955360,0.904606,285,103,0,0,0.322006],
[11,0,0,818,571,206,453.795990,513.505981,0.175720,0.987205,0.771254,285,103,0,0,0.062672],
[12,0,0,818,571,206,-700.597351,-561.273987,3.304676,0.832955,0.800114,285,103,0,0,0.648333],
[13,0,0,818,571,206,648.848633,-577.196655,2.821866,1.009099,1.205147,285,103,0,0,0.612675],
[14,0,0,818,571,206,153.255661,-605.061340,2.946727,1.512653,1.205147,285,103,0,0,0.451672],
[15,0,0,818,571,206,-784.191345,-33.835667,1.577516,0.990191,1.205147,285,103,0,0,0.451672],
[16,0,0,818,571,206,-814.046326,-342.337341,4.047523,0.828974,0.700597,285,103,0,0,0.322006],
[17,0,0,818,571,206,778.220337,-302.530670,4.945984,0.964316,1.205147,285,103,0,0,0.451672]
],
[
[1,0,0,594,682,223,-588.500000,-514.0,0.226788,1.0,1.0,341,111,0,0,0.600000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.150000,1.250000,341,111,0,0,0.300000],
[3,0,0,594,682,223,456.0,529.0,3.414510,1.0,1.0,341,111,0,0,0.400000],
[4,0,0,311,543,282,-597.0,636.0,-0.418879,1.071000,1.041000,271,141,0,0,0.450000],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.150000,1.250000,341,111,0,0,0.300000],
[18,0,0,0,796,310,-332.329987,-555.210022,0.105697,0.833810,0.822865,398,155,0,0,0.390000],
[19,0,0,0,796,310,742.270020,292.529999,-1.657225,0.963160,1.217880,398,155,0,0,0.260000],
[20,0,0,0,796,310,-865.650024,421.880005,-6.438468,0.858685,1.118380,398,155,0,0,0.328250],
[21,0,543,372,366,221,679.585022,511.429993,0.554194,1.405935,1.296485,183,110,0,0,0.260000],
[22,0,543,372,366,221,-545.260010,579.090027,0.177133,1.405935,1.296485,183,110,0,0,0.260000],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.850000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.850000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.680000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.850000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.850000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.850000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.850000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.850000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.680000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.680000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.680000],
[8,0,0,818,571,206,-348.250000,583.070007,-0.082310,1.132310,0.995000,285,103,0,0,0.325000],
[9,0,0,818,571,206,25.870001,587.049988,-0.112574,0.995000,0.995000,285,103,0,0,0.260000],
[10,0,0,818,571,206,636.799988,543.270020,0.071000,0.955200,0.904455,285,103,0,0,0.325000],
[11,0,0,818,571,206,453.720001,513.419983,0.175720,0.987040,0.771125,285,103,0,0,0.065000],
[12,0,0,818,571,206,-700.479980,-561.179993,3.304676,0.832815,0.799980,285,103,0,0,0.650000],
[13,0,0,818,571,206,648.739990,-577.099976,2.821866,1.008930,1.204945,285,103,0,0,0.617500],
[14,0,0,818,571,206,153.229996,-604.960022,2.946727,1.512400,1.204945,285,103,0,0,0.455000],
[15,0,0,818,571,206,-784.059998,-33.830002,1.577516,0.990025,1.204945,285,103,0,0,0.455000],
[16,0,0,818,571,206,-813.910034,-342.279999,4.047523,0.828835,0.700480,285,103,0,0,0.325000],
[17,0,0,818,571,206,778.090027,-302.480011,4.945984,0.964155,1.204945,285,103,0,0,0.455000]
],
[
[1,0,0,594,682,223,-588.049988,-513.400024,0.226788,1.003333,1.003333,341,111,0,0,0.580000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.151667,1.251667,341,111,0,0,0.310000],
[3,0,0,594,682,223,455.733337,528.633362,3.414510,1.003333,1.0,341,111,0,0,0.386667],
[4,0,0,311,543,282,-596.933350,635.933350,-0.418879,1.071000,1.041000,271,141,0,0,0.451667],
[5,0,683,673,250,167,-168.933334,498.399994,0.261206,1.936000,1.812000,125,83,0,0,0.033333],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.151667,1.251667,341,111,0,0,0.310000],
[18,0,0,0,796,310,-332.274353,-555.117004,0.105697,0.833670,0.822727,398,155,0,0,0.393172],
[19,0,0,0,796,310,741.946716,292.215729,-1.656643,0.962999,1.217676,398,155,0,0,0.265011],
[20,0,0,0,796,310,-865.505005,421.809326,-6.438468,0.858541,1.118193,398,155,0,0,0.331372],
[21,0,543,372,366,221,679.471191,511.344330,0.554194,1.405699,1.296268,183,110,0,0,0.260667],
[22,0,543,372,366,221,-545.168701,578.992981,0.177133,1.405699,1.296268,183,110,0,0,0.260667],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.855000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.855000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.684000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.855000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.855000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.855000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.855000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.855000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.684000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.684000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.684000],
[8,0,0,818,571,206,-348.191681,582.972351,-0.082310,1.132120,0.994833,285,103,0,0,0.328006],
[9,0,0,818,571,206,25.865667,586.951660,-0.112574,0.994833,0.994833,285,103,0,0,0.262839],
[10,0,0,818,571,206,636.693359,543.179016,0.071000,0.955040,0.904303,285,103,0,0,0.328006],
[11,0,0,818,571,206,453.644012,513.333984,0.175720,0.986875,0.770996,285,103,0,0,0.067339],
[12,0,0,818,571,206,-700.362671,-561.085999,3.304676,0.832676,0.799846,285,103,0,0,0.651667],
[13,0,0,818,571,206,648.631348,-577.003357,2.821866,1.008761,1.204743,285,103,0,0,0.622342],
[14,0,0,818,571,206,153.204330,-604.858704,2.946727,1.512147,1.204743,285,103,0,0,0.458339],
[15,0,0,818,571,206,-783.928650,-33.824333,1.577516,0.989859,1.204743,285,103,0,0,0.458339],
[16,0,0,818,571,206,-813.773682,-342.222687,4.047523,0.828696,0.700363,285,103,0,0,0.328006],
[17,0,0,818,571,206,777.959656,-302.429352,4.945984,0.963993,1.204743,285,103,0,0,0.458339]
],
[
[1,0,0,594,682,223,-587.599976,-512.799988,0.226788,1.006667,1.006667,341,111,0,0,0.560000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.153333,1.253333,341,111,0,0,0.320000],
[3,0,0,594,682,223,455.466675,528.266663,3.414510,1.006667,1.0,341,111,0,0,0.373333],
[4,0,0,311,543,282,-596.866638,635.866638,-0.418879,1.071000,1.041000,271,141,0,0,0.453333],
[5,0,683,673,250,167,-168.866669,497.799988,0.261206,1.936000,1.812000,125,83,0,0,0.066667],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.153333,1.253333,341,111,0,0,0.320000],
[18,0,0,0,796,310,-332.218689,-555.023987,0.105697,0.833531,0.822589,398,155,0,0,0.396356],
[19,0,0,0,796,310,741.623474,291.901520,-1.656062,0.962837,1.217472,398,155,0,0,0.270044],
[20,0,0,0,796,310,-865.360046,421.738678,-6.438468,0.858397,1.118005,398,155,0,0,0.334507],
[21,0,543,372,366,221,679.357361,511.258667,0.554194,1.405464,1.296051,183,110,0,0,0.261333],
[22,0,543,372,366,221,-545.077332,578.895996,0.177133,1.405464,1.296051,183,110,0,0,0.261333],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.860000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.860000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.688000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.860000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.860000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.860000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.860000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.860000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.688000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.688000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.688000],
[8,0,0,818,571,206,-348.133331,582.874695,-0.082310,1.131931,0.994667,285,103,0,0,0.331022],
[9,0,0,818,571,206,25.861334,586.853333,-0.112574,0.994667,0.994667,285,103,0,0,0.265689],
[10,0,0,818,571,206,636.586670,543.088013,0.071000,0.954880,0.904152,285,103,0,0,0.331022],
[11,0,0,818,571,206,453.568024,513.247986,0.175720,0.986709,0.770867,285,103,0,0,0.069689],
[12,0,0,818,571,206,-700.245361,-560.992004,3.304676,0.832536,0.799712,285,103,0,0,0.653333],
[13,0,0,818,571,206,648.522705,-576.906677,2.821866,1.008592,1.204541,285,103,0,0,0.627200],
[14,0,0,818,571,206,153.178665,-604.757324,2.946727,1.511893,1.204541,285,103,0,0,0.461689],
[15,0,0,818,571,206,-783.797363,-33.818668,1.577516,0.989693,1.204541,285,103,0,0,0.461689],
[16,0,0,818,571,206,-813.637329,-342.165344,4.047523,0.828557,0.700245,285,103,0,0,0.331022],
[17,0,0,818,571,206,777.829346,-302.378662,4.945984,0.963832,1.204541,285,103,0,0,0.461689]
],
[
[1,0,0,594,682,223,-587.150024,-512.200012,0.226788,1.010000,1.010000,341,111,0,0,0.540000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.155000,1.255000,341,111,0,0,0.330000],
[3,0,0,594,682,223,455.200012,527.900024,3.414510,1.010000,1.0,341,111,0,0,0.360000],
[4,0,0,311,543,282,-596.799988,635.799988,-0.418879,1.071000,1.041000,271,141,0,0,0.455000],
[5,0,683,673,250,167,-168.800003,497.200012,0.261206,1.936000,1.812000,125,83,0,0,0.100000],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.155000,1.255000,341,111,0,0,0.330000],
[18,0,0,0,796,310,-332.162994,-554.930969,0.105697,0.833391,0.822452,398,155,0,0,0.399550],
[19,0,0,0,796,310,741.300293,291.587402,-1.655480,0.962676,1.217268,398,155,0,0,0.275100],
[20,0,0,0,796,310,-865.214966,421.667999,-6.438468,0.858253,1.117818,398,155,0,0,0.337653],
[21,0,543,372,366,221,679.243469,511.173004,0.554194,1.405228,1.295833,183,110,0,0,0.262000],
[22,0,543,372,366,221,-544.985962,578.799011,0.177133,1.405228,1.295833,183,110,0,0,0.262000],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.865000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.865000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.692000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.865000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.865000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.865000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.865000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.865000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.692000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.692000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.692000],
[8,0,0,818,571,206,-348.074982,582.776978,-0.082310,1.131741,0.994500,285,103,0,0,0.334050],
[9,0,0,818,571,206,25.857000,586.755005,-0.112574,0.994500,0.994500,285,103,0,0,0.268550],
[10,0,0,818,571,206,636.479980,542.997009,0.071000,0.954720,0.904000,285,103,0,0,0.334050],
[11,0,0,818,571,206,453.492004,513.161987,0.175720,0.986544,0.770737,285,103,0,0,0.072050],
[12,0,0,818,571,206,-700.127991,-560.898010,3.304676,0.832397,0.799578,285,103,0,0,0.655000],
[13,0,0,818,571,206,648.414001,-576.809998,2.821866,1.008423,1.204339,285,103,0,0,0.632075],
[14,0,0,818,571,206,153.153000,-604.656006,2.946727,1.511640,1.204339,285,103,0,0,0.465050],
[15,0,0,818,571,206,-783.666016,-33.813000,1.577516,0.989527,1.204339,285,103,0,0,0.465050],
[16,0,0,818,571,206,-813.500977,-342.108002,4.047523,0.828418,0.700128,285,103,0,0,0.334050],
[17,0,0,818,571,206,777.698975,-302.328003,4.945984,0.963670,1.204339,285,103,0,0,0.465050]
],
[
[1,0,0,594,682,223,-586.700012,-511.600006,0.226788,1.013333,1.013333,341,111,0,0,0.520000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.156667,1.256667,341,111,0,0,0.340000],
[3,0,0,594,682,223,454.933319,527.533325,3.414510,1.013333,1.0,341,111,0,0,0.346667],
[4,0,0,311,543,282,-596.733337,635.733337,-0.418879,1.071000,1.041000,271,141,0,0,0.456667],
[5,0,683,673,250,167,-168.733337,496.600006,0.261206,1.936000,1.812000,125,83,0,0,0.133333],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.156667,1.256667,341,111,0,0,0.340000],
[18,0,0,0,796,310,-332.107330,-554.838013,0.105697,0.833251,0.822314,398,155,0,0,0.402756],
[19,0,0,0,796,310,740.977234,291.273376,-1.654898,0.962515,1.217064,398,155,0,0,0.280178],
[20,0,0,0,796,310,-865.070007,421.597321,-6.438468,0.858110,1.117631,398,155,0,0,0.340810],
[21,0,543,372,366,221,679.129639,511.087341,0.554194,1.404993,1.295616,183,110,0,0,0.262667],
[22,0,543,372,366,221,-544.894653,578.702026,0.177133,1.404993,1.295616,183,110,0,0,0.262667],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.870000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.870000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.696000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.870000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.870000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.870000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.870000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.870000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.696000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.696000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.696000],
[8,0,0,818,571,206,-348.016663,582.679321,-0.082310,1.131551,0.994333,285,103,0,0,0.337089],
[9,0,0,818,571,206,25.852667,586.656677,-0.112574,0.994333,0.994333,285,103,0,0,0.271422],
[10,0,0,818,571,206,636.373352,542.906006,0.071000,0.954560,0.903849,285,103,0,0,0.337089],
[11,0,0,818,571,206,453.415985,513.075989,0.175720,0.986379,0.770608,285,103,0,0,0.074422],
[12,0,0,818,571,206,-700.010681,-560.804016,3.304676,0.832257,0.799444,285,103,0,0,0.656667],
[13,0,0,818,571,206,648.305359,-576.713318,2.821866,1.008254,1.204138,285,103,0,0,0.636967],
[14,0,0,818,571,206,153.127335,-604.554688,2.946727,1.511387,1.204138,285,103,0,0,0.468422],
[15,0,0,818,571,206,-783.534668,-33.807335,1.577516,0.989362,1.204138,285,103,0,0,0.468422],
[16,0,0,818,571,206,-813.364685,-342.050659,4.047523,0.828280,0.700011,285,103,0,0,0.337089],
[17,0,0,818,571,206,777.568665,-302.277344,4.945984,0.963509,1.204138,285,103,0,0,0.468422]
],
[
[1,0,0,594,682,223,-586.250000,-511.0,0.226788,1.016667,1.016667,341,111,0,0,0.500000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.158333,1.258333,341,111,0,0,0.350000],
[3,0,0,594,682,223,454.666656,527.166687,3.414510,1.016667,1.0,341,111,0,0,0.333333],
[4,0,0,311,543,282,-596.666687,635.666687,-0.418879,1.071000,1.041000,271,141,0,0,0.458333],
[5,0,683,673,250,167,-168.666672,496.0,0.261206,1.936000,1.812000,125,83,0,0,0.166667],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.158333,1.258333,341,111,0,0,0.350000],
[18,0,0,0,796,310,-332.051666,-554.744995,0.105697,0.833112,0.822176,398,155,0,0,0.405972],
[19,0,0,0,796,310,740.654175,290.959442,-1.654316,0.962353,1.216860,398,155,0,0,0.285278],
[20,0,0,0,796,310,-864.924988,421.526672,-6.438468,0.857966,1.117443,398,155,0,0,0.343979],
[21,0,543,372,366,221,679.015808,511.001678,0.554194,1.404757,1.295399,183,110,0,0,0.263333],
[22,0,543,372,366,221,-544.803345,578.604980,0.177133,1.404757,1.295399,183,110,0,0,0.263333],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.875000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.875000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.700000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.875000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.875000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.875000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.875000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.875000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.700000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.700000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.700000],
[8,0,0,818,571,206,-347.958344,582.581665,-0.082310,1.131362,0.994167,285,103,0,0,0.340139],
[9,0,0,818,571,206,25.848333,586.558350,-0.112574,0.994167,0.994167,285,103,0,0,0.274306],
[10,0,0,818,571,206,636.266663,542.815002,0.071000,0.954400,0.903697,285,103,0,0,0.340139],
[11,0,0,818,571,206,453.339996,512.989990,0.175720,0.986213,0.770479,285,103,0,0,0.076806],
[12,0,0,818,571,206,-699.893311,-560.710022,3.304676,0.832117,0.799310,285,103,0,0,0.658333],
[13,0,0,818,571,206,648.196655,-576.616699,2.821866,1.008085,1.203936,285,103,0,0,0.641875],
[14,0,0,818,571,206,153.101669,-604.453308,2.946727,1.511133,1.203936,285,103,0,0,0.471806],
[15,0,0,818,571,206,-783.403320,-33.801666,1.577516,0.989196,1.203936,285,103,0,0,0.471806],
[16,0,0,818,571,206,-813.228333,-341.993347,4.047523,0.828141,0.699893,285,103,0,0,0.340139],
[17,0,0,818,571,206,777.438354,-302.226654,4.945984,0.963347,1.203936,285,103,0,0,0.471806]
],
[
[1,0,0,594,682,223,-585.799988,-510.399994,0.226788,1.020000,1.020000,341,111,0,0,0.480000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.160000,1.260000,341,111,0,0,0.360000],
[3,0,0,594,682,223,454.399994,526.799988,3.414510,1.020000,1.0,341,111,0,0,0.320000],
[4,0,0,311,543,282,-596.599976,635.599976,-0.418879,1.071000,1.041000,271,141,0,0,0.460000],
[5,0,683,673,250,167,-168.600006,495.399994,0.261206,1.936000,1.812000,125,83,0,0,0.200000],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.160000,1.260000,341,111,0,0,0.360000],
[18,0,0,0,796,310,-331.996002,-554.652039,0.105697,0.832972,0.822038,398,155,0,0,0.409200],
[19,0,0,0,796,310,740.331177,290.645599,-1.653734,0.962192,1.216656,398,155,0,0,0.290400],
[20,0,0,0,796,310,-864.780029,421.455994,-6.438468,0.857822,1.117256,398,155,0,0,0.347160],
[21,0,543,372,366,221,678.902039,510.916016,0.554194,1.404522,1.295182,183,110,0,0,0.264000],
[22,0,543,372,366,221,-544.712036,578.507996,0.177133,1.404522,1.295182,183,110,0,0,0.264000],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.880000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.880000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.704000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.880000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.880000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.880000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.880000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.880000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.704000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.704000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.704000],
[8,0,0,818,571,206,-347.899994,582.484009,-0.082310,1.131172,0.994000,285,103,0,0,0.343200],
[9,0,0,818,571,206,25.844000,586.460022,-0.112574,0.994000,0.994000,285,103,0,0,0.277200],
[10,0,0,818,571,206,636.160034,542.723999,0.071000,0.954240,0.903546,285,103,0,0,0.343200],
[11,0,0,818,571,206,453.264008,512.903992,0.175720,0.986048,0.770350,285,103,0,0,0.079200],
[12,0,0,818,571,206,-699.776001,-560.616028,3.304676,0.831978,0.799176,285,103,0,0,0.660000],
[13,0,0,818,571,206,648.088013,-576.520020,2.821866,1.007916,1.203734,285,103,0,0,0.646800],
[14,0,0,818,571,206,153.076004,-604.351990,2.946727,1.510880,1.203734,285,103,0,0,0.475200],
[15,0,0,818,571,206,-783.272034,-33.796001,1.577516,0.989030,1.203734,285,103,0,0,0.475200],
[16,0,0,818,571,206,-813.092041,-341.936005,4.047523,0.828002,0.699776,285,103,0,0,0.343200],
[17,0,0,818,571,206,777.307983,-302.175995,4.945984,0.963186,1.203734,285,103,0,0,0.475200]
],
[
[1,0,0,594,682,223,-585.349976,-509.799988,0.226788,1.023333,1.023333,341,111,0,0,0.460000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.161667,1.261667,341,111,0,0,0.370000],
[3,0,0,594,682,223,454.133331,526.433350,3.414510,1.023333,1.0,341,111,0,0,0.306667],
[4,0,0,311,543,282,-596.533325,635.533325,-0.418879,1.071000,1.041000,271,141,0,0,0.461667],
[5,0,683,673,250,167,-168.533340,494.799988,0.261206,1.936000,1.812000,125,83,0,0,0.233333],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.161667,1.261667,341,111,0,0,0.370000],
[18,0,0,0,796,310,-331.940338,-554.559021,0.105697,0.832832,0.821900,398,155,0,0,0.412439],
[19,0,0,0,796,310,740.008301,290.331848,-1.653153,0.962031,1.216452,398,155,0,0,0.295544],
[20,0,0,0,796,310,-864.635010,421.385345,-6.438468,0.857678,1.117069,398,155,0,0,0.350353],
[21,0,543,372,366,221,678.788208,510.830353,0.554194,1.404287,1.294965,183,110,0,0,0.264667],
[22,0,543,372,366,221,-544.620667,578.411011,0.177133,1.404287,1.294965,183,110,0,0,0.264667],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.885000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.885000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.708000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.885000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.885000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.885000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.885000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.885000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.708000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.708000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.708000],
[8,0,0,818,571,206,-347.841675,582.386353,-0.082310,1.130982,0.993833,285,103,0,0,0.346272],
[9,0,0,818,571,206,25.839668,586.361694,-0.112574,0.993833,0.993833,285,103,0,0,0.280106],
[10,0,0,818,571,206,636.053345,542.632996,0.071000,0.954080,0.903395,285,103,0,0,0.346272],
[11,0,0,818,571,206,453.188019,512.817993,0.175720,0.985883,0.770221,285,103,0,0,0.081606],
[12,0,0,818,571,206,-699.658691,-560.522034,3.304676,0.831839,0.799042,285,103,0,0,0.661667],
[13,0,0,818,571,206,647.979370,-576.423340,2.821866,1.007747,1.203532,285,103,0,0,0.651742],
[14,0,0,818,571,206,153.050339,-604.250671,2.946727,1.510627,1.203532,285,103,0,0,0.478606],
[15,0,0,818,571,206,-783.140686,-33.790333,1.577516,0.988864,1.203532,285,103,0,0,0.478606],
[16,0,0,818,571,206,-812.955688,-341.878662,4.047523,0.827863,0.699659,285,103,0,0,0.346272],
[17,0,0,818,571,206,777.177673,-302.125336,4.945984,0.963024,1.203532,285,103,0,0,0.478606]
],
[
[1,0,0,594,682,223,-584.900024,-509.200012,0.226788,1.026667,1.026667,341,111,0,0,0.440000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.163333,1.263333,341,111,0,0,0.380000],
[3,0,0,594,682,223,453.866669,526.066650,3.414510,1.026667,1.0,341,111,0,0,0.293333],
[4,0,0,311,543,282,-596.466675,635.466675,-0.418879,1.071000,1.041000,271,141,0,0,0.463333],
[5,0,683,673,250,167,-168.466660,494.200012,0.261206,1.936000,1.812000,125,83,0,0,0.266667],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.163333,1.263333,341,111,0,0,0.380000],
[18,0,0,0,796,310,-331.884674,-554.466003,0.105697,0.832693,0.821762,398,155,0,0,0.415689],
[19,0,0,0,796,310,739.685486,290.018188,-1.652571,0.961869,1.216248,398,155,0,0,0.300711],
[20,0,0,0,796,310,-864.489990,421.314667,-6.438468,0.857534,1.116881,398,155,0,0,0.353557],
[21,0,543,372,366,221,678.674316,510.744659,0.554194,1.404051,1.294748,183,110,0,0,0.265333],
[22,0,543,372,366,221,-544.529297,578.313965,0.177133,1.404051,1.294748,183,110,0,0,0.265333],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.890000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.890000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.712000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.890000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.890000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.890000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.890000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.890000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.712000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.712000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.712000],
[8,0,0,818,571,206,-347.783325,582.288635,-0.082310,1.130793,0.993667,285,103,0,0,0.349356],
[9,0,0,818,571,206,25.835333,586.263306,-0.112574,0.993667,0.993667,285,103,0,0,0.283022],
[10,0,0,818,571,206,635.946655,542.541992,0.071000,0.953920,0.903243,285,103,0,0,0.349356],
[11,0,0,818,571,206,453.112000,512.731995,0.175720,0.985717,0.770092,285,103,0,0,0.084022],
[12,0,0,818,571,206,-699.541321,-560.427979,3.304676,0.831699,0.798908,285,103,0,0,0.663333],
[13,0,0,818,571,206,647.870667,-576.326660,2.821866,1.007578,1.203330,285,103,0,0,0.656700],
[14,0,0,818,571,206,153.024658,-604.149292,2.946727,1.510373,1.203330,285,103,0,0,0.482022],
[15,0,0,818,571,206,-783.009338,-33.784668,1.577516,0.988698,1.203330,285,103,0,0,0.482022],
[16,0,0,818,571,206,-812.819336,-341.821320,4.047523,0.827724,0.699541,285,103,0,0,0.349356],
[17,0,0,818,571,206,777.047302,-302.074646,4.945984,0.962863,1.203330,285,103,0,0,0.482022]
],
[
[1,0,0,594,682,223,-584.450012,-508.600006,0.226788,1.030000,1.030000,341,111,0,0,0.420000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.165000,1.265000,341,111,0,0,0.390000],
[3,0,0,594,682,223,453.600006,525.700012,3.414510,1.030000,1.0,341,111,0,0,0.280000],
[4,0,0,311,543,282,-596.400024,635.400024,-0.418879,1.071000,1.041000,271,141,0,0,0.465000],
[5,0,683,673,250,167,-168.399994,493.600006,0.261206,1.936000,1.812000,125,83,0,0,0.300000],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.165000,1.265000,341,111,0,0,0.390000],
[18,0,0,0,796,310,-331.829010,-554.372986,0.105697,0.832553,0.821625,398,155,0,0,0.418950],
[19,0,0,0,796,310,739.362732,289.704590,-1.651989,0.961708,1.216044,398,155,0,0,0.305900],
[20,0,0,0,796,310,-864.344971,421.243988,-6.438468,0.857390,1.116694,398,155,0,0,0.356772],
[21,0,543,372,366,221,678.560486,510.658997,0.554194,1.403816,1.294531,183,110,0,0,0.266000],
[22,0,543,372,366,221,-544.437988,578.216980,0.177133,1.403816,1.294531,183,110,0,0,0.266000],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.895000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.895000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.716000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.895000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.895000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.895000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.895000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.895000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.716000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.716000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.716000],
[8,0,0,818,571,206,-347.725006,582.190979,-0.082310,1.130603,0.993500,285,103,0,0,0.352450],
[9,0,0,818,571,206,25.830999,586.164978,-0.112574,0.993500,0.993500,285,103,0,0,0.285950],
[10,0,0,818,571,206,635.839966,542.450989,0.071000,0.953760,0.903091,285,103,0,0,0.352450],
[11,0,0,818,571,206,453.036011,512.645996,0.175720,0.985552,0.769962,285,103,0,0,0.086450],
[12,0,0,818,571,206,-699.424011,-560.333984,3.304676,0.831559,0.798774,285,103,0,0,0.665000],
[13,0,0,818,571,206,647.762024,-576.229980,2.821866,1.007409,1.203128,285,103,0,0,0.661675],
[14,0,0,818,571,206,152.998993,-604.047974,2.946727,1.510120,1.203128,285,103,0,0,0.485450],
[15,0,0,818,571,206,-782.877991,-33.778999,1.577516,0.988532,1.203128,285,103,0,0,0.485450],
[16,0,0,818,571,206,-812.682983,-341.764008,4.047523,0.827586,0.699424,285,103,0,0,0.352450],
[17,0,0,818,571,206,776.916992,-302.023987,4.945984,0.962701,1.203128,285,103,0,0,0.485450]
],
[
[1,0,0,594,682,223,-584.0,-508.0,0.226788,1.033333,1.033333,341,111,0,0,0.400000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.166667,1.266667,341,111,0,0,0.400000],
[3,0,0,594,682,223,453.333344,525.333313,3.414510,1.033333,1.0,341,111,0,0,0.266667],
[4,0,0,311,543,282,-596.333313,635.333313,-0.418879,1.071000,1.041000,271,141,0,0,0.466667],
[5,0,683,673,250,167,-168.333328,493.0,0.261206,1.936000,1.812000,125,83,0,0,0.333333],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.166667,1.266667,341,111,0,0,0.400000],
[18,0,0,0,796,310,-331.773346,-554.280029,0.105697,0.832413,0.821487,398,155,0,0,0.422222],
[19,0,0,0,796,310,739.039978,289.391113,-1.651407,0.961547,1.215840,398,155,0,0,0.311111],
[20,0,0,0,796,310,-864.200012,421.173340,-6.438468,0.857247,1.116507,398,155,0,0,0.360000],
[21,0,543,372,366,221,678.446655,510.573334,0.554194,1.403580,1.294313,183,110,0,0,0.266667],
[22,0,543,372,366,221,-544.346680,578.119995,0.177133,1.403580,1.294313,183,110,0,0,0.266667],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.900000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.900000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.720000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.900000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.900000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.900000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.900000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.900000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.720000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.720000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.720000],
[8,0,0,818,571,206,-347.666656,582.093323,-0.082310,1.130413,0.993333,285,103,0,0,0.355556],
[9,0,0,818,571,206,25.826668,586.066650,-0.112574,0.993333,0.993333,285,103,0,0,0.288889],
[10,0,0,818,571,206,635.733337,542.359985,0.071000,0.953600,0.902940,285,103,0,0,0.355556],
[11,0,0,818,571,206,452.959991,512.559998,0.175720,0.985387,0.769833,285,103,0,0,0.088889],
[12,0,0,818,571,206,-699.306641,-560.239990,3.304676,0.831420,0.798640,285,103,0,0,0.666667],
[13,0,0,818,571,206,647.653320,-576.133362,2.821866,1.007240,1.202927,285,103,0,0,0.666667],
[14,0,0,818,571,206,152.973328,-603.946655,2.946727,1.509867,1.202927,285,103,0,0,0.488889],
[15,0,0,818,571,206,-782.746643,-33.773335,1.577516,0.988367,1.202927,285,103,0,0,0.488889],
[16,0,0,818,571,206,-812.546692,-341.706665,4.047523,0.827447,0.699307,285,103,0,0,0.355556],
[17,0,0,818,571,206,776.786682,-301.973328,4.945984,0.962540,1.202927,285,103,0,0,0.488889]
],
[
[1,0,0,594,682,223,-583.549988,-507.399994,0.226788,1.036667,1.036667,341,111,0,0,0.380000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.168333,1.268333,341,111,0,0,0.410000],
[3,0,0,594,682,223,453.066681,524.966675,3.414510,1.036667,1.0,341,111,0,0,0.253333],
[4,0,0,311,543,282,-596.266663,635.266663,-0.418879,1.071000,1.041000,271,141,0,0,0.468333],
[5,0,683,673,250,167,-168.266663,492.399994,0.261206,1.936000,1.812000,125,83,0,0,0.366667],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.168333,1.268333,341,111,0,0,0.410000],
[18,0,0,0,796,310,-331.717682,-554.187012,0.105697,0.832274,0.821349,398,155,0,0,0.425506],
[19,0,0,0,796,310,738.717346,289.077728,-1.650826,0.961385,1.215636,398,155,0,0,0.316344],
[20,0,0,0,796,310,-864.054993,421.102661,-6.438468,0.857103,1.116319,398,155,0,0,0.363239],
[21,0,543,372,366,221,678.332825,510.487671,0.554194,1.403345,1.294096,183,110,0,0,0.267333],
[22,0,543,372,366,221,-544.255371,578.023010,0.177133,1.403345,1.294096,183,110,0,0,0.267333],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.905000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.905000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.724000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.905000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.905000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.905000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.905000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.905000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.724000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.724000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.724000],
[8,0,0,818,571,206,-347.608337,581.995667,-0.082310,1.130224,0.993167,285,103,0,0,0.358672],
[9,0,0,818,571,206,25.822334,585.968323,-0.112574,0.993167,0.993167,285,103,0,0,0.291839],
[10,0,0,818,571,206,635.626709,542.268982,0.071000,0.953440,0.902789,285,103,0,0,0.358672],
[11,0,0,818,571,206,452.884003,512.473999,0.175720,0.985221,0.769704,285,103,0,0,0.091339],
[12,0,0,818,571,206,-699.189331,-560.145996,3.304676,0.831281,0.798506,285,103,0,0,0.668333],
[13,0,0,818,571,206,647.544678,-576.036682,2.821866,1.007071,1.202725,285,103,0,0,0.666641],
[14,0,0,818,571,206,152.947662,-603.845337,2.946727,1.509613,1.202725,285,103,0,0,0.492339],
[15,0,0,818,571,206,-782.615356,-33.767666,1.577516,0.988201,1.202725,285,103,0,0,0.492339],
[16,0,0,818,571,206,-812.410339,-341.649353,4.047523,0.827308,0.699189,285,103,0,0,0.358672],
[17,0,0,818,571,206,776.656372,-301.922668,4.945984,0.962379,1.202725,285,103,0,0,0.492339]
],
[
[1,0,0,594,682,223,-583.099976,-506.799988,0.226788,1.040000,1.040000,341,111,0,0,0.360000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.170000,1.270000,341,111,0,0,0.420000],
[3,0,0,594,682,223,452.799988,524.599976,3.414510,1.040000,1.0,341,111,0,0,0.240000],
[4,0,0,311,543,282,-596.200012,635.200012,-0.418879,1.071000,1.041000,271,141,0,0,0.470000],
[5,0,683,673,250,167,-168.199997,491.799988,0.261206,1.936000,1.812000,125,83,0,0,0.400000],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.170000,1.270000,341,111,0,0,0.420000],
[18,0,0,0,796,310,-331.662018,-554.093994,0.105697,0.832134,0.821211,398,155,0,0,0.428800],
[19,0,0,0,796,310,738.394775,288.764404,-1.650244,0.961224,1.215432,398,155,0,0,0.321600],
[20,0,0,0,796,310,-863.910034,421.032013,-6.438468,0.856959,1.116132,398,155,0,0,0.366490],
[21,0,543,372,366,221,678.218994,510.402008,0.554194,1.403109,1.293879,183,110,0,0,0.268000],
[22,0,543,372,366,221,-544.164001,577.926025,0.177133,1.403109,1.293879,183,110,0,0,0.268000],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.910000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.910000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.728000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.910000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.910000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.910000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.910000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.910000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.728000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.728000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.728000],
[8,0,0,818,571,206,-347.550018,581.898010,-0.082310,1.130034,0.993000,285,103,0,0,0.361800],
[9,0,0,818,571,206,25.818001,585.869995,-0.112574,0.993000,0.993000,285,103,0,0,0.294800],
[10,0,0,818,571,206,635.520020,542.178040,0.071000,0.953280,0.902637,285,103,0,0,0.361800],
[11,0,0,818,571,206,452.808014,512.388000,0.175720,0.985056,0.769575,285,103,0,0,0.093800],
[12,0,0,818,571,206,-699.072021,-560.052002,3.304676,0.831141,0.798372,285,103,0,0,0.670000],
[13,0,0,818,571,206,647.436035,-575.940002,2.821866,1.006902,1.202523,285,103,0,0,0.666608],
[14,0,0,818,571,206,152.921997,-603.744019,2.946727,1.509360,1.202523,285,103,0,0,0.495800],
[15,0,0,818,571,206,-782.484009,-33.762001,1.577516,0.988035,1.202523,285,103,0,0,0.495800],
[16,0,0,818,571,206,-812.274048,-341.592010,4.047523,0.827169,0.699072,285,103,0,0,0.361800],
[17,0,0,818,571,206,776.526001,-301.872009,4.945984,0.962217,1.202523,285,103,0,0,0.495800]
],
[
[1,0,0,594,682,223,-582.650024,-506.200012,0.226788,1.043333,1.043333,341,111,0,0,0.340000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.171667,1.271667,341,111,0,0,0.430000],
[3,0,0,594,682,223,452.533325,524.233337,3.414510,1.043333,1.0,341,111,0,0,0.226667],
[4,0,0,311,543,282,-596.133362,635.133362,-0.418879,1.071000,1.041000,271,141,0,0,0.471667],
[5,0,683,673,250,167,-168.133331,491.200012,0.261206,1.936000,1.812000,125,83,0,0,0.433333],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.171667,1.271667,341,111,0,0,0.430000],
[18,0,0,0,796,310,-331.606323,-554.000977,0.105697,0.831994,0.821073,398,155,0,0,0.432106],
[19,0,0,0,796,310,738.072327,288.451172,-1.649662,0.961063,1.215228,398,155,0,0,0.326878],
[20,0,0,0,796,310,-863.765015,420.961334,-6.438468,0.856815,1.115945,398,155,0,0,0.369753],
[21,0,543,372,366,221,678.105164,510.316315,0.554194,1.402874,1.293662,183,110,0,0,0.268667],
[22,0,543,372,366,221,-544.072632,577.828979,0.177133,1.402874,1.293662,183,110,0,0,0.268667],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.915000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.915000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.732000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.915000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.915000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.915000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.915000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.915000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.732000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.732000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.732000],
[8,0,0,818,571,206,-347.491669,581.800293,-0.082310,1.129844,0.992833,285,103,0,0,0.364939],
[9,0,0,818,571,206,25.813665,585.771667,-0.112574,0.992833,0.992833,285,103,0,0,0.297772],
[10,0,0,818,571,206,635.413330,542.086975,0.071000,0.953120,0.902485,285,103,0,0,0.364939],
[11,0,0,818,571,206,452.731995,512.302002,0.175720,0.984891,0.769446,285,103,0,0,0.096272],
[12,0,0,818,571,206,-698.954651,-559.958008,3.304676,0.831002,0.798238,285,103,0,0,0.671667],
[13,0,0,818,571,206,647.327332,-575.843323,2.821866,1.006733,1.202321,285,103,0,0,0.666565],
[14,0,0,818,571,206,152.896332,-603.642639,2.946727,1.509107,1.202321,285,103,0,0,0.499272],
[15,0,0,818,571,206,-782.352661,-33.756332,1.577516,0.987869,1.202321,285,103,0,0,0.499272],
[16,0,0,818,571,206,-812.137634,-341.534668,4.047523,0.827030,0.698955,285,103,0,0,0.364939],
[17,0,0,818,571,206,776.395630,-301.821320,4.945984,0.962055,1.202321,285,103,0,0,0.499272]
],
[
[1,0,0,594,682,223,-582.200012,-505.600006,0.226788,1.046667,1.046667,341,111,0,0,0.320000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.173333,1.273333,341,111,0,0,0.440000],
[3,0,0,594,682,223,452.266663,523.866638,3.414510,1.046667,1.0,341,111,0,0,0.213333],
[4,0,0,311,543,282,-596.066650,635.066650,-0.418879,1.071000,1.041000,271,141,0,0,0.473333],
[5,0,683,673,250,167,-168.066666,490.600006,0.261206,1.936000,1.812000,125,83,0,0,0.466667],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.173333,1.273333,341,111,0,0,0.440000],
[18,0,0,0,796,310,-331.550659,-553.908020,0.105697,0.831855,0.820935,398,155,0,0,0.435422],
[19,0,0,0,796,310,737.749878,288.138031,-1.649080,0.960901,1.215024,398,155,0,0,0.332178],
[20,0,0,0,796,310,-863.619995,420.890656,-6.438468,0.856671,1.115757,398,155,0,0,0.373027],
[21,0,543,372,366,221,677.991333,510.230652,0.554194,1.402638,1.293445,183,110,0,0,0.269333],
[22,0,543,372,366,221,-543.981323,577.731995,0.177133,1.402638,1.293445,183,110,0,0,0.269333],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.920000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.920000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.736000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.920000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.920000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.920000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.920000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.920000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.736000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.736000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.736000],
[8,0,0,818,571,206,-347.433319,581.702637,-0.082310,1.129655,0.992667,285,103,0,0,0.368089],
[9,0,0,818,571,206,25.809334,585.673340,-0.112574,0.992667,0.992667,285,103,0,0,0.300756],
[10,0,0,818,571,206,635.306641,541.995972,0.071000,0.952960,0.902334,285,103,0,0,0.368089],
[11,0,0,818,571,206,452.656006,512.216003,0.175720,0.984725,0.769317,285,103,0,0,0.098756],
[12,0,0,818,571,206,-698.837341,-559.864014,3.304676,0.830862,0.798104,285,103,0,0,0.673333],
[13,0,0,818,571,206,647.218689,-575.746643,2.821866,1.006564,1.202119,285,103,0,0,0.666515],
[14,0,0,818,571,206,152.870667,-603.541321,2.946727,1.508853,1.202119,285,103,0,0,0.502756],
[15,0,0,818,571,206,-782.221313,-33.750668,1.577516,0.987703,1.202119,285,103,0,0,0.502756],
[16,0,0,818,571,206,-812.001343,-341.477325,4.047523,0.826891,0.698837,285,103,0,0,0.368089],
[17,0,0,818,571,206,776.265320,-301.770660,4.945984,0.961894,1.202119,285,103,0,0,0.502756]
],
[
[1,0,0,594,682,223,-581.750000,-505.0,0.226788,1.050000,1.050000,341,111,0,0,0.300000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.175000,1.275000,341,111,0,0,0.450000],
[3,0,0,594,682,223,452.0,523.500000,3.414510,1.050000,1.0,341,111,0,0,0.200000],
[4,0,0,311,543,282,-596.0,635.0,-0.418879,1.071000,1.041000,271,141,0,0,0.475000],
[5,0,683,673,250,167,-168.0,490.0,0.261206,1.936000,1.812000,125,83,0,0,0.500000],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.175000,1.275000,341,111,0,0,0.450000],
[18,0,0,0,796,310,-331.494995,-553.815002,0.105697,0.831715,0.820798,398,155,0,0,0.438750],
[19,0,0,0,796,310,737.427490,287.825012,-1.648499,0.960740,1.214820,398,155,0,0,0.337500],
[20,0,0,0,796,310,-863.475037,420.820007,-6.438468,0.856528,1.115570,398,155,0,0,0.376313],
[21,0,543,372,366,221,677.877502,510.144989,0.554194,1.402403,1.293227,183,110,0,0,0.270000],
[22,0,543,372,366,221,-543.890015,577.635010,0.177133,1.402403,1.293227,183,110,0,0,0.270000],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.925000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.925000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.740000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.925000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.925000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.925000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.925000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.925000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.740000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.740000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.740000],
[8,0,0,818,571,206,-347.375000,581.604980,-0.082310,1.129465,0.992500,285,103,0,0,0.371250],
[9,0,0,818,571,206,25.805000,585.575012,-0.112574,0.992500,0.992500,285,103,0,0,0.303750],
[10,0,0,818,571,206,635.200012,541.905029,0.071000,0.952800,0.902182,285,103,0,0,0.371250],
[11,0,0,818,571,206,452.580017,512.130005,0.175720,0.984560,0.769188,285,103,0,0,0.101250],
[12,0,0,818,571,206,-698.720032,-559.770020,3.304676,0.830723,0.797970,285,103,0,0,0.675000],
[13,0,0,818,571,206,647.109985,-575.650024,2.821866,1.006395,1.201918,285,103,0,0,0.666456],
[14,0,0,818,571,206,152.845001,-603.440002,2.946727,1.508600,1.201918,285,103,0,0,0.506250],
[15,0,0,818,571,206,-782.090027,-33.744999,1.577516,0.987538,1.201918,285,103,0,0,0.506250],
[16,0,0,818,571,206,-811.864990,-341.420013,4.047523,0.826752,0.698720,285,103,0,0,0.371250],
[17,0,0,818,571,206,776.135010,-301.720001,4.945984,0.961733,1.201918,285,103,0,0,0.506250]
],
[
[1,0,0,594,682,223,-581.299988,-504.399994,0.226788,1.053333,1.053333,341,111,0,0,0.280000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.176667,1.276667,341,111,0,0,0.460000],
[3,0,0,594,682,223,451.733337,523.133362,3.414510,1.053333,1.0,341,111,0,0,0.186667],
[4,0,0,311,543,282,-595.933350,634.933350,-0.418879,1.071000,1.041000,271,141,0,0,0.476667],
[5,0,683,673,250,167,-167.933334,489.399994,0.261206,1.936000,1.812000,125,83,0,0,0.533333],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.176667,1.276667,341,111,0,0,0.460000],
[18,0,0,0,796,310,-331.439331,-553.721985,0.105697,0.831575,0.820660,398,155,0,0,0.442089],
[19,0,0,0,796,310,737.105225,287.512054,-1.647917,0.960579,1.214616,398,155,0,0,0.342844],
[20,0,0,0,796,310,-863.330017,420.749329,-6.438468,0.856384,1.115383,398,155,0,0,0.379610],
[21,0,543,372,366,221,677.763672,510.059357,0.554194,1.402167,1.293010,183,110,0,0,0.270667],
[22,0,543,372,366,221,-543.798706,577.538025,0.177133,1.402167,1.293010,183,110,0,0,0.270667],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.930000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.930000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.744000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.930000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.930000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.930000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.930000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.930000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.744000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.744000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.744000],
[8,0,0,818,571,206,-347.316681,581.507324,-0.082310,1.129275,0.992333,285,103,0,0,0.374422],
[9,0,0,818,571,206,25.800667,585.476685,-0.112574,0.992333,0.992333,285,103,0,0,0.306756],
[10,0,0,818,571,206,635.093323,541.814026,0.071000,0.952640,0.902031,285,103,0,0,0.374422],
[11,0,0,818,571,206,452.503998,512.044006,0.175720,0.984395,0.769058,285,103,0,0,0.103756],
[12,0,0,818,571,206,-698.602661,-559.676025,3.304676,0.830583,0.797836,285,103,0,0,0.676667],
[13,0,0,818,571,206,647.001343,-575.553345,2.821866,1.006226,1.201716,285,103,0,0,0.666388],
[14,0,0,818,571,206,152.819336,-603.338684,2.946727,1.508347,1.201716,285,103,0,0,0.509756],
[15,0,0,818,571,206,-781.958679,-33.739334,1.577516,0.987372,1.201716,285,103,0,0,0.509756],
[16,0,0,818,571,206,-811.728699,-341.362671,4.047523,0.826614,0.698603,285,103,0,0,0.374422],
[17,0,0,818,571,206,776.004700,-301.669342,4.945984,0.961571,1.201716,285,103,0,0,0.509756]
],
[
[1,0,0,594,682,223,-580.849976,-503.799988,0.226788,1.056667,1.056667,341,111,0,0,0.260000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.178333,1.278333,341,111,0,0,0.470000],
[3,0,0,594,682,223,451.466675,522.766663,3.414510,1.056667,1.0,341,111,0,0,0.173333],
[4,0,0,311,543,282,-595.866638,634.866638,-0.418879,1.071000,1.041000,271,141,0,0,0.478333],
[5,0,683,673,250,167,-167.866669,488.799988,0.261206,1.936000,1.812000,125,83,0,0,0.566667],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.178333,1.278333,341,111,0,0,0.470000],
[18,0,0,0,796,310,-331.383667,-553.629028,0.105697,0.831436,0.820522,398,155,0,0,0.445439],
[19,0,0,0,796,310,736.782959,287.199188,-1.647335,0.960417,1.214412,398,155,0,0,0.348211],
[20,0,0,0,796,310,-863.184998,420.678680,-6.438468,0.856240,1.115195,398,155,0,0,0.382919],
[21,0,543,372,366,221,677.649841,509.973694,0.554194,1.401932,1.292793,183,110,0,0,0.271333],
[22,0,543,372,366,221,-543.707336,577.441040,0.177133,1.401932,1.292793,183,110,0,0,0.271333],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.935000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.935000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.748000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.935000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.935000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.935000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.935000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.935000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.748000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.748000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.748000],
[8,0,0,818,571,206,-347.258331,581.409668,-0.082310,1.129086,0.992167,285,103,0,0,0.377606],
[9,0,0,818,571,206,25.796333,585.378357,-0.112574,0.992167,0.992167,285,103,0,0,0.309772],
[10,0,0,818,571,206,634.986694,541.723022,0.071000,0.952480,0.901879,285,103,0,0,0.377606],
[11,0,0,818,571,206,452.428009,511.958008,0.175720,0.984229,0.768929,285,103,0,0,0.106272],
[12,0,0,818,571,206,-698.485352,-559.582031,3.304676,0.830444,0.797702,285,103,0,0,0.678333],
[13,0,0,818,571,206,646.892700,-575.456665,2.821866,1.006057,1.201514,285,103,0,0,0.666312],
[14,0,0,818,571,206,152.793671,-603.237366,2.946727,1.508093,1.201514,285,103,0,0,0.513272],
[15,0,0,818,571,206,-781.827332,-33.733669,1.577516,0.987206,1.201514,285,103,0,0,0.513272],
[16,0,0,818,571,206,-811.592346,-341.305359,4.047523,0.826475,0.698485,285,103,0,0,0.377606],
[17,0,0,818,571,206,775.874329,-301.618683,4.945984,0.961410,1.201514,285,103,0,0,0.513272]
],
[
[1,0,0,594,682,223,-580.400024,-503.200012,0.226788,1.060000,1.060000,341,111,0,0,0.240000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.180000,1.280000,341,111,0,0,0.480000],
[3,0,0,594,682,223,451.200012,522.400024,3.414510,1.060000,1.0,341,111,0,0,0.160000],
[4,0,0,311,543,282,-595.799988,634.799988,-0.418879,1.071000,1.041000,271,141,0,0,0.480000],
[5,0,683,673,250,167,-167.800003,488.200012,0.261206,1.936000,1.812000,125,83,0,0,0.600000],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.180000,1.280000,341,111,0,0,0.480000],
[18,0,0,0,796,310,-331.328003,-553.536011,0.105697,0.831296,0.820384,398,155,0,0,0.448800],
[19,0,0,0,796,310,736.460815,286.886414,-1.646753,0.960256,1.214208,398,155,0,0,0.353600],
[20,0,0,0,796,310,-863.039978,420.608002,-6.438468,0.856096,1.115008,398,155,0,0,0.386240],
[21,0,543,372,366,221,677.536011,509.888000,0.554194,1.401696,1.292576,183,110,0,0,0.272000],
[22,0,543,372,366,221,-543.615967,577.343994,0.177133,1.401696,1.292576,183,110,0,0,0.272000],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.940000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.940000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.752000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.940000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.940000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.940000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.940000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.940000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.752000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.752000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.752000],
[8,0,0,818,571,206,-347.199982,581.312012,-0.082310,1.128896,0.992000,285,103,0,0,0.380800],
[9,0,0,818,571,206,25.792000,585.279968,-0.112574,0.992000,0.992000,285,103,0,0,0.312800],
[10,0,0,818,571,206,634.880005,541.632019,0.071000,0.952320,0.901728,285,103,0,0,0.380800],
[11,0,0,818,571,206,452.351990,511.871979,0.175720,0.984064,0.768800,285,103,0,0,0.108800],
[12,0,0,818,571,206,-698.367981,-559.487976,3.304676,0.830304,0.797568,285,103,0,0,0.680000],
[13,0,0,818,571,206,646.783997,-575.359985,2.821866,1.005888,1.201312,285,103,0,0,0.666228],
[14,0,0,818,571,206,152.767990,-603.135986,2.946727,1.507840,1.201312,285,103,0,0,0.516800],
[15,0,0,818,571,206,-781.695984,-33.728001,1.577516,0.987040,1.201312,285,103,0,0,0.516800],
[16,0,0,818,571,206,-811.455994,-341.247986,4.047523,0.826336,0.698368,285,103,0,0,0.380800],
[17,0,0,818,571,206,775.743958,-301.567993,4.945984,0.961248,1.201312,285,103,0,0,0.516800]
],
[
[1,0,0,594,682,223,-579.950012,-502.600006,0.226788,1.063333,1.063333,341,111,0,0,0.220000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.181667,1.281667,341,111,0,0,0.490000],
[3,0,0,594,682,223,450.933319,522.033325,3.414510,1.063333,1.0,341,111,0,0,0.146667],
[4,0,0,311,543,282,-595.733337,634.733337,-0.418879,1.071000,1.041000,271,141,0,0,0.481667],
[5,0,683,673,250,167,-167.733337,487.600006,0.261206,1.936000,1.812000,125,83,0,0,0.633333],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.181667,1.281667,341,111,0,0,0.490000],
[18,0,0,0,796,310,-331.272339,-553.442993,0.105697,0.831156,0.820246,398,155,0,0,0.452172],
[19,0,0,0,796,310,736.138733,286.573700,-1.646171,0.960095,1.214004,398,155,0,0,0.359011],
[20,0,0,0,796,310,-862.895020,420.537323,-6.438468,0.855952,1.114821,398,155,0,0,0.389573],
[21,0,543,372,366,221,677.422180,509.802338,0.554194,1.401461,1.292359,183,110,0,0,0.272667],
[22,0,543,372,366,221,-543.524658,577.247009,0.177133,1.401461,1.292359,183,110,0,0,0.272667],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.945000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.945000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.756000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.945000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.945000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.945000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.945000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.945000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.756000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.756000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.756000],
[8,0,0,818,571,206,-347.141663,581.214355,-0.082310,1.128706,0.991833,285,103,0,0,0.384006],
[9,0,0,818,571,206,25.787666,585.181641,-0.112574,0.991833,0.991833,285,103,0,0,0.315839],
[10,0,0,818,571,206,634.773315,541.541016,0.071000,0.952160,0.901576,285,103,0,0,0.384006],
[11,0,0,818,571,206,452.276001,511.786011,0.175720,0.983899,0.768671,285,103,0,0,0.111339],
[12,0,0,818,571,206,-698.250671,-559.393982,3.304676,0.830164,0.797434,285,103,0,0,0.681667],
[13,0,0,818,571,206,646.675354,-575.263306,2.821866,1.005719,1.201110,285,103,0,0,0.666135],
[14,0,0,818,571,206,152.742340,-603.034668,2.946727,1.507587,1.201110,285,103,0,0,0.520339],
[15,0,0,818,571,206,-781.564636,-33.722332,1.577516,0.986874,1.201110,285,103,0,0,0.520339],
[16,0,0,818,571,206,-811.319641,-341.190674,4.047523,0.826197,0.698251,285,103,0,0,0.384006],
[17,0,0,818,571,206,775.613647,-301.517334,4.945984,0.961086,1.201110,285,103,0,0,0.520339]
],
[
[1,0,0,594,682,223,-579.500000,-502.0,0.226788,1.066667,1.066667,341,111,0,0,0.200000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.183333,1.283333,341,111,0,0,0.500000],
[3,0,0,594,682,223,450.666656,521.666687,3.414510,1.066667,1.0,341,111,0,0,0.133333],
[4,0,0,311,543,282,-595.666687,634.666687,-0.418879,1.071000,1.041000,271,141,0,0,0.483333],
[5,0,683,673,250,167,-167.666672,487.0,0.261206,1.936000,1.812000,125,83,0,0,0.666667],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.183333,1.283333,341,111,0,0,0.500000],
[18,0,0,0,796,310,-331.216675,-553.349976,0.105697,0.831017,0.820108,398,155,0,0,0.455556],
[19,0,0,0,796,310,735.816650,286.261108,-1.645590,0.959933,1.213800,398,155,0,0,0.364444],
[20,0,0,0,796,310,-862.750000,420.466675,-6.438468,0.855808,1.114633,398,155,0,0,0.392917],
[21,0,543,372,366,221,677.308350,509.716675,0.554194,1.401225,1.292142,183,110,0,0,0.273333],
[22,0,543,372,366,221,-543.433350,577.150024,0.177133,1.401225,1.292142,183,110,0,0,0.273333],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.950000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.950000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.760000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.950000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.950000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.950000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.950000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.950000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.760000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.760000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.760000],
[8,0,0,818,571,206,-347.083344,581.116699,-0.082310,1.128517,0.991667,285,103,0,0,0.387222],
[9,0,0,818,571,206,25.783333,585.083313,-0.112574,0.991667,0.991667,285,103,0,0,0.318889],
[10,0,0,818,571,206,634.666687,541.450012,0.071000,0.952000,0.901425,285,103,0,0,0.387222],
[11,0,0,818,571,206,452.200012,511.700012,0.175720,0.983733,0.768542,285,103,0,0,0.113889],
[12,0,0,818,571,206,-698.133362,-559.299988,3.304676,0.830025,0.797300,285,103,0,0,0.683333],
[13,0,0,818,571,206,646.566650,-575.166687,2.821866,1.005550,1.200908,285,103,0,0,0.666034],
[14,0,0,818,571,206,152.716675,-602.933350,2.946727,1.507333,1.200908,285,103,0,0,0.523889],
[15,0,0,818,571,206,-781.433350,-33.716667,1.577516,0.986708,1.200908,285,103,0,0,0.523889],
[16,0,0,818,571,206,-811.183350,-341.133331,4.047523,0.826058,0.698133,285,103,0,0,0.387222],
[17,0,0,818,571,206,775.483337,-301.466675,4.945984,0.960925,1.200908,285,103,0,0,0.523889]
],
[
[1,0,0,594,682,223,-579.049988,-501.399994,0.226788,1.070000,1.070000,341,111,0,0,0.180000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.185000,1.285000,341,111,0,0,0.510000],
[3,0,0,594,682,223,450.399994,521.299988,3.414510,1.070000,1.0,341,111,0,0,0.120000],
[4,0,0,311,543,282,-595.599976,634.599976,-0.418879,1.071000,1.041000,271,141,0,0,0.485000],
[5,0,683,673,250,167,-167.600006,486.399994,0.261206,1.936000,1.812000,125,83,0,0,0.700000],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.185000,1.285000,341,111,0,0,0.510000],
[18,0,0,0,796,310,-331.161011,-553.257019,0.105697,0.830877,0.819971,398,155,0,0,0.458950],
[19,0,0,0,796,310,735.494690,285.948608,-1.645008,0.959772,1.213596,398,155,0,0,0.369900],
[20,0,0,0,796,310,-862.605042,420.395996,-6.438468,0.855664,1.114446,398,155,0,0,0.396273],
[21,0,543,372,366,221,677.194519,509.631012,0.554194,1.400990,1.291924,183,110,0,0,0.274000],
[22,0,543,372,366,221,-543.342041,577.053040,0.177133,1.400990,1.291924,183,110,0,0,0.274000],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.955000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.955000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.764000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.955000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.955000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.955000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.955000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.955000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.764000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.764000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.764000],
[8,0,0,818,571,206,-347.024994,581.018982,-0.082310,1.128327,0.991500,285,103,0,0,0.390450],
[9,0,0,818,571,206,25.779001,584.984985,-0.112574,0.991500,0.991500,285,103,0,0,0.321950],
[10,0,0,818,571,206,634.559998,541.359009,0.071000,0.951840,0.901273,285,103,0,0,0.390450],
[11,0,0,818,571,206,452.124023,511.614014,0.175720,0.983568,0.768412,285,103,0,0,0.116450],
[12,0,0,818,571,206,-698.015991,-559.205994,3.304676,0.829886,0.797166,285,103,0,0,0.685000],
[13,0,0,818,571,206,646.458008,-575.070007,2.821866,1.005381,1.200706,285,103,0,0,0.665924],
[14,0,0,818,571,206,152.691010,-602.832031,2.946727,1.507080,1.200706,285,103,0,0,0.527450],
[15,0,0,818,571,206,-781.302002,-33.711002,1.577516,0.986543,1.200706,285,103,0,0,0.527450],
[16,0,0,818,571,206,-811.046997,-341.076019,4.047523,0.825920,0.698016,285,103,0,0,0.390450],
[17,0,0,818,571,206,775.353027,-301.416016,4.945984,0.960764,1.200706,285,103,0,0,0.527450]
],
[
[1,0,0,594,682,223,-578.599976,-500.799988,0.226788,1.073333,1.073333,341,111,0,0,0.160000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.186667,1.286667,341,111,0,0,0.520000],
[3,0,0,594,682,223,450.133331,520.933350,3.414510,1.073333,1.0,341,111,0,0,0.106667],
[4,0,0,311,543,282,-595.533325,634.533325,-0.418879,1.071000,1.041000,271,141,0,0,0.486667],
[5,0,683,673,250,167,-167.533340,485.799988,0.261206,1.936000,1.812000,125,83,0,0,0.733333],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.186667,1.286667,341,111,0,0,0.520000],
[18,0,0,0,796,310,-331.105347,-553.164001,0.105697,0.830737,0.819833,398,155,0,0,0.462356],
[19,0,0,0,796,310,735.172791,285.636200,-1.644426,0.959611,1.213392,398,155,0,0,0.375378],
[20,0,0,0,796,310,-862.460022,420.325348,-6.438468,0.855521,1.114259,398,155,0,0,0.399640],
[21,0,543,372,366,221,677.080688,509.545349,0.554194,1.400754,1.291707,183,110,0,0,0.274667],
[22,0,543,372,366,221,-543.250671,576.955994,0.177133,1.400754,1.291707,183,110,0,0,0.274667],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.960000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.960000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.768000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.960000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.960000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.960000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.960000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.960000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.768000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.768000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.768000],
[8,0,0,818,571,206,-346.966675,580.921326,-0.082310,1.128137,0.991333,285,103,0,0,0.393689],
[9,0,0,818,571,206,25.774668,584.886658,-0.112574,0.991333,0.991333,285,103,0,0,0.325022],
[10,0,0,818,571,206,634.453369,541.268005,0.071000,0.951680,0.901122,285,103,0,0,0.393689],
[11,0,0,818,571,206,452.048004,511.528015,0.175720,0.983403,0.768283,285,103,0,0,0.119022],
[12,0,0,818,571,206,-697.898682,-559.112000,3.304676,0.829746,0.797032,285,103,0,0,0.686667],
[13,0,0,818,571,206,646.349365,-574.973328,2.821866,1.005212,1.200505,285,103,0,0,0.665806],
[14,0,0,818,571,206,152.665344,-602.730713,2.946727,1.506827,1.200505,285,103,0,0,0.531022],
[15,0,0,818,571,206,-781.170715,-33.705334,1.577516,0.986377,1.200505,285,103,0,0,0.531022],
[16,0,0,818,571,206,-810.910706,-341.018677,4.047523,0.825781,0.697899,285,103,0,0,0.393689],
[17,0,0,818,571,206,775.222717,-301.365356,4.945984,0.960602,1.200505,285,103,0,0,0.531022]
],
[
[1,0,0,594,682,223,-578.150024,-500.200012,0.226788,1.076667,1.076667,341,111,0,0,0.140000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.188333,1.288333,341,111,0,0,0.530000],
[3,0,0,594,682,223,449.866669,520.566650,3.414510,1.076667,1.0,341,111,0,0,0.093333],
[4,0,0,311,543,282,-595.466675,634.466675,-0.418879,1.071000,1.041000,271,141,0,0,0.488333],
[5,0,683,673,250,167,-167.466660,485.200012,0.261206,1.936000,1.812000,125,83,0,0,0.766667],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.188333,1.288333,341,111,0,0,0.530000],
[18,0,0,0,796,310,-331.049652,-553.070984,0.105697,0.830598,0.819695,398,155,0,0,0.465772],
[19,0,0,0,796,310,734.850952,285.323853,-1.643844,0.959449,1.213188,398,155,0,0,0.380878],
[20,0,0,0,796,310,-862.315002,420.254669,-6.438468,0.855377,1.114071,398,155,0,0,0.403019],
[21,0,543,372,366,221,676.966797,509.459656,0.554194,1.400518,1.291490,183,110,0,0,0.275333],
[22,0,543,372,366,221,-543.159302,576.859009,0.177133,1.400518,1.291490,183,110,0,0,0.275333],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.965000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.965000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.772000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.965000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.965000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.965000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.965000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.965000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.772000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.772000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.772000],
[8,0,0,818,571,206,-346.908325,580.823669,-0.082310,1.127948,0.991167,285,103,0,0,0.396939],
[9,0,0,818,571,206,25.770332,584.788330,-0.112574,0.991167,0.991167,285,103,0,0,0.328106],
[10,0,0,818,571,206,634.346680,541.177002,0.071000,0.951520,0.900970,285,103,0,0,0.396939],
[11,0,0,818,571,206,451.971985,511.441986,0.175720,0.983237,0.768154,285,103,0,0,0.121606],
[12,0,0,818,571,206,-697.781311,-559.018005,3.304676,0.829606,0.796898,285,103,0,0,0.688333],
[13,0,0,818,571,206,646.240662,-574.876648,2.821866,1.005043,1.200303,285,103,0,0,0.665679],
[14,0,0,818,571,206,152.639664,-602.629333,2.946727,1.506573,1.200303,285,103,0,0,0.534606],
[15,0,0,818,571,206,-781.039307,-33.699665,1.577516,0.986211,1.200303,285,103,0,0,0.534606],
[16,0,0,818,571,206,-810.774292,-340.961334,4.047523,0.825642,0.697781,285,103,0,0,0.396939],
[17,0,0,818,571,206,775.092346,-301.314667,4.945984,0.960440,1.200303,285,103,0,0,0.534606]
],
[
[1,0,0,594,682,223,-577.700012,-499.600006,0.226788,1.080000,1.080000,341,111,0,0,0.120000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.190000,1.290000,341,111,0,0,0.540000],
[3,0,0,594,682,223,449.600006,520.200012,3.414510,1.080000,1.0,341,111,0,0,0.080000],
[4,0,0,311,543,282,-595.400024,634.400024,-0.418879,1.071000,1.041000,271,141,0,0,0.490000],
[5,0,683,673,250,167,-167.399994,484.600006,0.261206,1.936000,1.812000,125,83,0,0,0.800000],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.190000,1.290000,341,111,0,0,0.540000],
[18,0,0,0,796,310,-330.993988,-552.978027,0.105697,0.830458,0.819557,398,155,0,0,0.469200],
[19,0,0,0,796,310,734.529236,285.011597,-1.643263,0.959288,1.212984,398,155,0,0,0.386400],
[20,0,0,0,796,310,-862.169983,420.183990,-6.438468,0.855233,1.113884,398,155,0,0,0.406410],
[21,0,543,372,366,221,676.853027,509.373993,0.554194,1.400283,1.291273,183,110,0,0,0.276000],
[22,0,543,372,366,221,-543.067993,576.762024,0.177133,1.400283,1.291273,183,110,0,0,0.276000],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.970000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.970000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.776000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.970000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.970000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.970000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.970000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.970000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.776000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.776000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.776000],
[8,0,0,818,571,206,-346.850006,580.726013,-0.082310,1.127758,0.991000,285,103,0,0,0.400200],
[9,0,0,818,571,206,25.766001,584.690002,-0.112574,0.991000,0.991000,285,103,0,0,0.331200],
[10,0,0,818,571,206,634.239990,541.085999,0.071000,0.951360,0.900819,285,103,0,0,0.400200],
[11,0,0,818,571,206,451.895996,511.355988,0.175720,0.983072,0.768025,285,103,0,0,0.124200],
[12,0,0,818,571,206,-697.664001,-558.924011,3.304676,0.829467,0.796764,285,103,0,0,0.690000],
[13,0,0,818,571,206,646.132019,-574.779968,2.821866,1.004874,1.200101,285,103,0,0,0.665544],
[14,0,0,818,571,206,152.613998,-602.528015,2.946727,1.506320,1.200101,285,103,0,0,0.538200],
[15,0,0,818,571,206,-780.908020,-33.694000,1.577516,0.986045,1.200101,285,103,0,0,0.538200],
[16,0,0,818,571,206,-810.638000,-340.903992,4.047523,0.825503,0.697664,285,103,0,0,0.400200],
[17,0,0,818,571,206,774.961975,-301.264008,4.945984,0.960279,1.200101,285,103,0,0,0.538200]
],
[
[1,0,0,594,682,223,-577.250000,-499.0,0.226788,1.083333,1.083333,341,111,0,0,0.100000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.191667,1.291667,341,111,0,0,0.550000],
[3,0,0,594,682,223,449.333344,519.833313,3.414510,1.083333,1.0,341,111,0,0,0.066667],
[4,0,0,311,543,282,-595.333313,634.333313,-0.418879,1.071000,1.041000,271,141,0,0,0.491667],
[5,0,683,673,250,167,-167.333328,484.0,0.261206,1.936000,1.812000,125,83,0,0,0.833333],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.191667,1.291667,341,111,0,0,0.550000],
[18,0,0,0,796,310,-330.938324,-552.885010,0.105697,0.830318,0.819419,398,155,0,0,0.472639],
[19,0,0,0,796,310,734.207520,284.699463,-1.642681,0.959127,1.212780,398,155,0,0,0.391944],
[20,0,0,0,796,310,-862.025024,420.113342,-6.438468,0.855089,1.113697,398,155,0,0,0.409813],
[21,0,543,372,366,221,676.739197,509.288330,0.554194,1.400048,1.291056,183,110,0,0,0.276667],
[22,0,543,372,366,221,-542.976685,576.664978,0.177133,1.400048,1.291056,183,110,0,0,0.276667],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.975000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.975000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.780000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.975000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.975000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.975000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.975000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.975000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.780000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.780000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.780000],
[8,0,0,818,571,206,-346.791656,580.628357,-0.082310,1.127568,0.990833,285,103,0,0,0.403472],
[9,0,0,818,571,206,25.761667,584.591675,-0.112574,0.990833,0.990833,285,103,0,0,0.334306],
[10,0,0,818,571,206,634.133362,540.994995,0.071000,0.951200,0.900667,285,103,0,0,0.403472],
[11,0,0,818,571,206,451.820007,511.270020,0.175720,0.982907,0.767896,285,103,0,0,0.126806],
[12,0,0,818,571,206,-697.546692,-558.830017,3.304676,0.829328,0.796630,285,103,0,0,0.691667],
[13,0,0,818,571,206,646.023315,-574.683350,2.821866,1.004705,1.199899,285,103,0,0,0.665401],
[14,0,0,818,571,206,152.588333,-602.426697,2.946727,1.506067,1.199899,285,103,0,0,0.541806],
[15,0,0,818,571,206,-780.776672,-33.688335,1.577516,0.985879,1.199899,285,103,0,0,0.541806],
[16,0,0,818,571,206,-810.501648,-340.846680,4.047523,0.825364,0.697547,285,103,0,0,0.403472],
[17,0,0,818,571,206,774.831665,-301.213348,4.945984,0.960118,1.199899,285,103,0,0,0.541806]
],
[
[1,0,0,594,682,223,-576.799988,-498.399994,0.226788,1.086667,1.086667,341,111,0,0,0.080000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.193333,1.293333,341,111,0,0,0.560000],
[3,0,0,594,682,223,449.066681,519.466675,3.414510,1.086667,1.0,341,111,0,0,0.053333],
[4,0,0,311,543,282,-595.266663,634.266663,-0.418879,1.071000,1.041000,271,141,0,0,0.493333],
[5,0,683,673,250,167,-167.266663,483.399994,0.261206,1.936000,1.812000,125,83,0,0,0.866667],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.193333,1.293333,341,111,0,0,0.560000],
[18,0,0,0,796,310,-330.882660,-552.791992,0.105697,0.830179,0.819281,398,155,0,0,0.476089],
[19,0,0,0,796,310,733.885864,284.387390,-1.642099,0.958965,1.212576,398,155,0,0,0.397511],
[20,0,0,0,796,310,-861.880005,420.042664,-6.438468,0.854945,1.113509,398,155,0,0,0.413227],
[21,0,543,372,366,221,676.625366,509.202667,0.554194,1.399812,1.290839,183,110,0,0,0.277333],
[22,0,543,372,366,221,-542.885315,576.567993,0.177133,1.399812,1.290839,183,110,0,0,0.277333],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.980000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.980000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.784000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.980000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.980000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.980000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.980000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.980000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.784000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.784000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.784000],
[8,0,0,818,571,206,-346.733337,580.530701,-0.082310,1.127379,0.990667,285,103,0,0,0.406756],
[9,0,0,818,571,206,25.757334,584.493347,-0.112574,0.990667,0.990667,285,103,0,0,0.337422],
[10,0,0,818,571,206,634.026672,540.903992,0.071000,0.951040,0.900516,285,103,0,0,0.406756],
[11,0,0,818,571,206,451.744019,511.184021,0.175720,0.982741,0.767767,285,103,0,0,0.129422],
[12,0,0,818,571,206,-697.429321,-558.736023,3.304676,0.829188,0.796496,285,103,0,0,0.693333],
[13,0,0,818,571,206,645.914673,-574.586670,2.821866,1.004536,1.199697,285,103,0,0,0.665249],
[14,0,0,818,571,206,152.562668,-602.325317,2.946727,1.505813,1.199697,285,103,0,0,0.545422],
[15,0,0,818,571,206,-780.645325,-33.682667,1.577516,0.985713,1.199697,285,103,0,0,0.545422],
[16,0,0,818,571,206,-810.365356,-340.789337,4.047523,0.825225,0.697429,285,103,0,0,0.406756],
[17,0,0,818,571,206,774.701355,-301.162659,4.945984,0.959956,1.199697,285,103,0,0,0.545422]
],
[
[1,0,0,594,682,223,-576.349976,-497.799988,0.226788,1.090000,1.090000,341,111,0,0,0.060000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.195000,1.295000,341,111,0,0,0.570000],
[3,0,0,594,682,223,448.799988,519.099976,3.414510,1.090000,1.0,341,111,0,0,0.040000],
[4,0,0,311,543,282,-595.200012,634.200012,-0.418879,1.071000,1.041000,271,141,0,0,0.495000],
[5,0,683,673,250,167,-167.199997,482.799988,0.261206,1.936000,1.812000,125,83,0,0,0.900000],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.195000,1.295000,341,111,0,0,0.570000],
[18,0,0,0,796,310,-330.826996,-552.699036,0.105697,0.830039,0.819144,398,155,0,0,0.479550],
[19,0,0,0,796,310,733.564270,284.075409,-1.641517,0.958804,1.212372,398,155,0,0,0.403100],
[20,0,0,0,796,310,-861.735046,419.972015,-6.438468,0.854801,1.113322,398,155,0,0,0.416653],
[21,0,543,372,366,221,676.511536,509.117004,0.554194,1.399577,1.290622,183,110,0,0,0.278000],
[22,0,543,372,366,221,-542.794006,576.471008,0.177133,1.399577,1.290622,183,110,0,0,0.278000],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.985000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.985000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.788000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.985000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.985000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.985000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.985000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.985000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.788000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.788000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.788000],
[8,0,0,818,571,206,-346.675018,580.433044,-0.082310,1.127189,0.990500,285,103,0,0,0.410050],
[9,0,0,818,571,206,25.753000,584.395020,-0.112574,0.990500,0.990500,285,103,0,0,0.340550],
[10,0,0,818,571,206,633.920044,540.812988,0.071000,0.950880,0.900365,285,103,0,0,0.410050],
[11,0,0,818,571,206,451.668030,511.098022,0.175720,0.982576,0.767637,285,103,0,0,0.132050],
[12,0,0,818,571,206,-697.312012,-558.642029,3.304676,0.829049,0.796362,285,103,0,0,0.695000],
[13,0,0,818,571,206,645.806030,-574.489990,2.821866,1.004367,1.199496,285,103,0,0,0.665089],
[14,0,0,818,571,206,152.537003,-602.223999,2.946727,1.505560,1.199496,285,103,0,0,0.549050],
[15,0,0,818,571,206,-780.514038,-33.677002,1.577516,0.985548,1.199496,285,103,0,0,0.549050],
[16,0,0,818,571,206,-810.229004,-340.732025,4.047523,0.825087,0.697312,285,103,0,0,0.410050],
[17,0,0,818,571,206,774.571045,-301.112000,4.945984,0.959795,1.199496,285,103,0,0,0.549050]
],
[
[1,0,0,594,682,223,-575.900024,-497.200012,0.226788,1.093333,1.093333,341,111,0,0,0.040000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.196667,1.296667,341,111,0,0,0.580000],
[3,0,0,594,682,223,448.533325,518.733337,3.414510,1.093333,1.0,341,111,0,0,0.026667],
[4,0,0,311,543,282,-595.133362,634.133362,-0.418879,1.071000,1.041000,271,141,0,0,0.496667],
[5,0,683,673,250,167,-167.133331,482.200012,0.261206,1.936000,1.812000,125,83,0,0,0.933333],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.196667,1.296667,341,111,0,0,0.580000],
[18,0,0,0,796,310,-330.771332,-552.606018,0.105697,0.829899,0.819006,398,155,0,0,0.483022],
[19,0,0,0,796,310,733.242798,283.763489,-1.640935,0.958643,1.212168,398,155,0,0,0.408711],
[20,0,0,0,796,310,-861.589966,419.901337,-6.438468,0.854658,1.113135,398,155,0,0,0.420090],
[21,0,543,372,366,221,676.397644,509.031311,0.554194,1.399341,1.290404,183,110,0,0,0.278667],
[22,0,543,372,366,221,-542.702637,576.373962,0.177133,1.399341,1.290404,183,110,0,0,0.278667],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.990000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.990000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.792000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.990000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.990000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.990000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.990000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.990000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.792000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.792000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.792000],
[8,0,0,818,571,206,-346.616669,580.335327,-0.082310,1.126999,0.990333,285,103,0,0,0.413356],
[9,0,0,818,571,206,25.748667,584.296631,-0.112574,0.990333,0.990333,285,103,0,0,0.343689],
[10,0,0,818,571,206,633.813354,540.721985,0.071000,0.950720,0.900213,285,103,0,0,0.413356],
[11,0,0,818,571,206,451.591980,511.011993,0.175720,0.982411,0.767508,285,103,0,0,0.134689],
[12,0,0,818,571,206,-697.194641,-558.547974,3.304676,0.828909,0.796228,285,103,0,0,0.696667],
[13,0,0,818,571,206,645.697327,-574.393311,2.821866,1.004198,1.199294,285,103,0,0,0.664920],
[14,0,0,818,571,206,152.511337,-602.122681,2.946727,1.505307,1.199294,285,103,0,0,0.552689],
[15,0,0,818,571,206,-780.382629,-33.671333,1.577516,0.985382,1.199294,285,103,0,0,0.552689],
[16,0,0,818,571,206,-810.092651,-340.674652,4.047523,0.824948,0.697195,285,103,0,0,0.413356],
[17,0,0,818,571,206,774.440674,-301.061340,4.945984,0.959633,1.199294,285,103,0,0,0.552689]
],
[
[1,0,0,594,682,223,-575.450012,-496.600006,0.226788,1.096667,1.096667,341,111,0,0,0.020000],
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.198333,1.298333,341,111,0,0,0.590000],
[3,0,0,594,682,223,448.266663,518.366638,3.414510,1.096667,1.0,341,111,0,0,0.013333],
[4,0,0,311,543,282,-595.066650,634.066650,-0.418879,1.071000,1.041000,271,141,0,0,0.498333],
[5,0,683,673,250,167,-167.066666,481.600006,0.261206,1.936000,1.812000,125,83,0,0,0.966667],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.198333,1.298333,341,111,0,0,0.590000],
[18,0,0,0,796,310,-330.715668,-552.513000,0.105697,0.829760,0.818868,398,155,0,0,0.486506],
[19,0,0,0,796,310,732.921387,283.451721,-1.640354,0.958481,1.211964,398,155,0,0,0.414344],
[20,0,0,0,796,310,-861.445007,419.830658,-6.438468,0.854514,1.112947,398,155,0,0,0.423539],
[21,0,543,372,366,221,676.283813,508.945679,0.554194,1.399105,1.290187,183,110,0,0,0.279333],
[22,0,543,372,366,221,-542.611328,576.276978,0.177133,1.399105,1.290187,183,110,0,0,0.279333],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.995000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.995000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.796000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.995000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.995000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.995000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.995000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.995000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.796000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.796000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.796000],
[8,0,0,818,571,206,-346.558319,580.237671,-0.082310,1.126810,0.990167,285,103,0,0,0.416672],
[9,0,0,818,571,206,25.744333,584.198303,-0.112574,0.990167,0.990167,285,103,0,0,0.346839],
[10,0,0,818,571,206,633.706665,540.630981,0.071000,0.950560,0.900061,285,103,0,0,0.416672],
[11,0,0,818,571,206,451.515991,510.925995,0.175720,0.982245,0.767379,285,103,0,0,0.137339],
[12,0,0,818,571,206,-697.077332,-558.453979,3.304676,0.828770,0.796094,285,103,0,0,0.698333],
[13,0,0,818,571,206,645.588684,-574.296692,2.821866,1.004029,1.199092,285,103,0,0,0.664743],
[14,0,0,818,571,206,152.485672,-602.021362,2.946727,1.505053,1.199092,285,103,0,0,0.556339],
[15,0,0,818,571,206,-780.251343,-33.665665,1.577516,0.985216,1.199092,285,103,0,0,0.556339],
[16,0,0,818,571,206,-809.956360,-340.617340,4.047523,0.824809,0.697077,285,103,0,0,0.416672],
[17,0,0,818,571,206,774.310303,-301.010681,4.945984,0.959471,1.199092,285,103,0,0,0.556339]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.200000,1.300000,341,111,0,0,0.600000],
[4,0,0,311,543,282,-595.0,634.0,-0.418879,1.071000,1.041000,271,141,0,0,0.500000],
[5,0,683,673,250,167,-167.0,481.0,0.261206,1.936000,1.812000,125,83],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.200000,1.300000,341,111,0,0,0.600000],
[18,0,0,0,796,310,-330.660004,-552.419983,0.105697,0.829620,0.818730,398,155,0,0,0.490000],
[19,0,0,0,796,310,732.600037,283.140015,-1.639772,0.958320,1.211760,398,155,0,0,0.420000],
[20,0,0,0,796,310,-861.299988,419.760010,-6.438468,0.854370,1.112760,398,155,0,0,0.427000],
[21,0,543,372,366,221,676.169983,508.860016,0.554194,1.398870,1.289970,183,110,0,0,0.280000],
[22,0,543,372,366,221,-542.520020,576.179993,0.177133,1.398870,1.289970,183,110,0,0,0.280000],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.800000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.800000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.800000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.800000],
[8,0,0,818,571,206,-346.500000,580.140015,-0.082310,1.126620,0.990000,285,103,0,0,0.420000],
[9,0,0,818,571,206,25.740000,584.099976,-0.112574,0.990000,0.990000,285,103,0,0,0.350000],
[10,0,0,818,571,206,633.599976,540.539978,0.071000,0.950400,0.899910,285,103,0,0,0.420000],
[11,0,0,818,571,206,451.440002,510.839996,0.175720,0.982080,0.767250,285,103,0,0,0.140000],
[12,0,0,818,571,206,-696.960022,-558.359985,3.304676,0.828630,0.795960,285,103,0,0,0.700000],
[13,0,0,818,571,206,645.479980,-574.200012,2.821866,1.003860,1.198890,285,103,0,0,0.664557],
[14,0,0,818,571,206,152.460007,-601.919983,2.946727,1.504800,1.198890,285,103,0,0,0.560000],
[15,0,0,818,571,206,-780.119995,-33.660000,1.577516,0.985050,1.198890,285,103,0,0,0.560000],
[16,0,0,818,571,206,-809.820007,-340.559998,4.047523,0.824670,0.696960,285,103,0,0,0.420000],
[17,0,0,818,571,206,774.179993,-300.959991,4.945984,0.959310,1.198890,285,103,0,0,0.560000]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.198305,1.298305,341,111,0,0,0.589831],
[4,0,0,311,543,282,-595.067810,634.067810,-0.418879,1.071000,1.041000,271,141,0,0,0.498305],
[5,0,683,673,250,167,-167.0,480.733337,0.261206,1.942667,1.812000,125,83,0,0,0.966667],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.198305,1.298305,341,111,0,0,0.589831],
[18,0,0,0,796,310,-330.716614,-552.514587,0.105697,0.829762,0.818870,398,155,0,0,0.486446],
[19,0,0,0,796,310,732.926819,283.457001,-1.640363,0.958484,1.211967,398,155,0,0,0.414249],
[20,0,0,0,796,310,-861.447510,419.831879,-6.438468,0.854516,1.112950,398,155,0,0,0.423481],
[21,0,543,372,366,221,676.285767,508.947144,0.554194,1.399109,1.290191,183,110,0,0,0.279322],
[22,0,543,372,366,221,-542.612915,576.278687,0.177133,1.399109,1.290191,183,110,0,0,0.279322],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.994915],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.994915],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.795932],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.994915],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.994915],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.994915],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.994915],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.994915],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.795932],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.795932],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.795932],
[8,0,0,818,571,206,-346.559326,580.239319,-0.082310,1.126813,0.990170,285,103,0,0,0.416616],
[9,0,0,818,571,206,25.744408,584.200012,-0.112574,0.990170,0.990170,285,103,0,0,0.346785],
[10,0,0,818,571,206,633.708496,540.632568,0.071000,0.950563,0.900064,285,103,0,0,0.416616],
[11,0,0,818,571,206,451.517303,510.927490,0.175720,0.982248,0.767381,285,103,0,0,0.137294],
[12,0,0,818,571,206,-697.079346,-558.455627,3.304676,0.828772,0.796096,285,103,0,0,0.698305],
[13,0,0,818,571,206,645.590515,-574.298340,2.821866,1.004032,1.199095,285,103,0,0,0.661180],
[14,0,0,818,571,206,152.486115,-602.023071,2.946727,1.505058,1.199095,285,103,0,0,0.556277],
[15,0,0,818,571,206,-780.253601,-33.665764,1.577516,0.985219,1.199095,285,103,0,0,0.556277],
[16,0,0,818,571,206,-809.958679,-340.618317,4.047523,0.824811,0.697079,285,103,0,0,0.416616],
[17,0,0,818,571,206,774.312561,-301.011536,4.945984,0.959474,1.199095,285,103,0,0,0.556277]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.196610,1.296610,341,111,0,0,0.579661],
[4,0,0,311,543,282,-595.135620,634.135620,-0.418879,1.071000,1.041000,271,141,0,0,0.496610],
[5,0,683,673,250,167,-167.0,480.466675,0.261206,1.949333,1.812000,125,83,0,0,0.933333],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.196610,1.296610,341,111,0,0,0.579661],
[18,0,0,0,796,310,-330.773224,-552.609131,0.105697,0.829904,0.819010,398,155,0,0,0.482904],
[19,0,0,0,796,310,733.253723,283.774078,-1.640955,0.958648,1.212175,398,155,0,0,0.408521],
[20,0,0,0,796,310,-861.594910,419.903717,-6.438468,0.854663,1.113141,398,155,0,0,0.419973],
[21,0,543,372,366,221,676.401550,509.034241,0.554194,1.399349,1.290412,183,110,0,0,0.278644],
[22,0,543,372,366,221,-542.705750,576.377258,0.177133,1.399349,1.290412,183,110,0,0,0.278644],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.989830],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.989830],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.791864],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.989830],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.989830],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.989830],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.989830],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.989830],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.791864],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.791864],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.791864],
[8,0,0,818,571,206,-346.618652,580.338623,-0.082310,1.127006,0.990339,285,103,0,0,0.413243],
[9,0,0,818,571,206,25.748814,584.299988,-0.112574,0.990339,0.990339,285,103,0,0,0.343582],
[10,0,0,818,571,206,633.816956,540.725098,0.071000,0.950725,0.900218,285,103,0,0,0.413243],
[11,0,0,818,571,206,451.594574,511.014923,0.175720,0.982416,0.767513,285,103,0,0,0.134599],
[12,0,0,818,571,206,-697.198669,-558.551208,3.304676,0.828914,0.796233,285,103,0,0,0.696610],
[13,0,0,818,571,206,645.700989,-574.396606,2.821866,1.004204,1.199301,285,103,0,0,0.657812],
[14,0,0,818,571,206,152.512207,-602.126099,2.946727,1.505315,1.199301,285,103,0,0,0.552565],
[15,0,0,818,571,206,-780.387146,-33.671524,1.577516,0.985387,1.199301,285,103,0,0,0.552565],
[16,0,0,818,571,206,-810.097290,-340.676605,4.047523,0.824952,0.697199,285,103,0,0,0.413243],
[17,0,0,818,571,206,774.445068,-301.063049,4.945984,0.959638,1.199301,285,103,0,0,0.552565]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.194915,1.294915,341,111,0,0,0.569492],
[4,0,0,311,543,282,-595.203369,634.203369,-0.418879,1.071000,1.041000,271,141,0,0,0.494915],
[5,0,683,673,250,167,-167.0,480.200012,0.261206,1.956000,1.812000,125,83,0,0,0.900000],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.194915,1.294915,341,111,0,0,0.569492],
[18,0,0,0,796,310,-330.829834,-552.703735,0.105697,0.830046,0.819151,398,155,0,0,0.479374],
[19,0,0,0,796,310,733.580688,284.091278,-1.641547,0.958812,1.212382,398,155,0,0,0.402815],
[20,0,0,0,796,310,-861.742371,419.975616,-6.438468,0.854809,1.113332,398,155,0,0,0.416478],
[21,0,543,372,366,221,676.517273,509.121368,0.554194,1.399588,1.290632,183,110,0,0,0.277966],
[22,0,543,372,366,221,-542.798645,576.475952,0.177133,1.399588,1.290632,183,110,0,0,0.277966],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.984746],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.984746],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.787797],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.984746],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.984746],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.984746],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.984746],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.984746],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.787797],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.787797],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.787797],
[8,0,0,818,571,206,-346.677979,580.437988,-0.082310,1.127199,0.990508,285,103,0,0,0.409882],
[9,0,0,818,571,206,25.753222,584.400024,-0.112574,0.990508,0.990508,285,103,0,0,0.340391],
[10,0,0,818,571,206,633.925415,540.817627,0.071000,0.950888,0.900372,285,103,0,0,0.409882],
[11,0,0,818,571,206,451.671875,511.102386,0.175720,0.982584,0.767644,285,103,0,0,0.131916],
[12,0,0,818,571,206,-697.317993,-558.646790,3.304676,0.829056,0.796369,285,103,0,0,0.694915],
[13,0,0,818,571,206,645.811523,-574.494934,2.821866,1.004376,1.199506,285,103,0,0,0.654452],
[14,0,0,818,571,206,152.538315,-602.229187,2.946727,1.505573,1.199506,285,103,0,0,0.548865],
[15,0,0,818,571,206,-780.520691,-33.677288,1.577516,0.985556,1.199506,285,103,0,0,0.548865],
[16,0,0,818,571,206,-810.235962,-340.734924,4.047523,0.825094,0.697318,285,103,0,0,0.409882],
[17,0,0,818,571,206,774.577637,-301.114594,4.945984,0.959803,1.199506,285,103,0,0,0.548865]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.193220,1.293220,341,111,0,0,0.559322],
[4,0,0,311,543,282,-595.271179,634.271179,-0.418879,1.071000,1.041000,271,141,0,0,0.493220],
[5,0,683,673,250,167,-167.0,479.933319,0.261206,1.962667,1.812000,125,83,0,0,0.866667],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.193220,1.293220,341,111,0,0,0.559322],
[18,0,0,0,796,310,-330.886444,-552.798279,0.105697,0.830188,0.819291,398,155,0,0,0.475855],
[19,0,0,0,796,310,733.907654,284.408539,-1.642138,0.958976,1.212590,398,155,0,0,0.397133],
[20,0,0,0,796,310,-861.889832,420.047455,-6.438468,0.854955,1.113522,398,155,0,0,0.412995],
[21,0,543,372,366,221,676.633057,509.208466,0.554194,1.399828,1.290853,183,110,0,0,0.277288],
[22,0,543,372,366,221,-542.891541,576.574585,0.177133,1.399828,1.290853,183,110,0,0,0.277288],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.979661],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.979661],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.783729],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.979661],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.979661],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.979661],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.979661],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.979661],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.783729],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.783729],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.783729],
[8,0,0,818,571,206,-346.737274,580.537292,-0.082310,1.127392,0.990678,285,103,0,0,0.406533],
[9,0,0,818,571,206,25.757627,584.500000,-0.112574,0.990678,0.990678,285,103,0,0,0.337211],
[10,0,0,818,571,206,634.033875,540.910156,0.071000,0.951051,0.900526,285,103,0,0,0.406533],
[11,0,0,818,571,206,451.749146,511.189819,0.175720,0.982753,0.767775,285,103,0,0,0.129244],
[12,0,0,818,571,206,-697.437256,-558.742371,3.304676,0.829197,0.796505,285,103,0,0,0.693220],
[13,0,0,818,571,206,645.921997,-574.593201,2.821866,1.004547,1.199711,285,103,0,0,0.651101],
[14,0,0,818,571,206,152.564407,-602.332214,2.946727,1.505831,1.199711,285,103,0,0,0.545177],
[15,0,0,818,571,206,-780.654236,-33.683052,1.577516,0.985725,1.199711,285,103,0,0,0.545177],
[16,0,0,818,571,206,-810.374573,-340.793213,4.047523,0.825235,0.697437,285,103,0,0,0.406533],
[17,0,0,818,571,206,774.710144,-301.166107,4.945984,0.959967,1.199711,285,103,0,0,0.545177]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.191525,1.291525,341,111,0,0,0.549153],
[4,0,0,311,543,282,-595.338989,634.338989,-0.418879,1.071000,1.041000,271,141,0,0,0.491525],
[5,0,683,673,250,167,-167.0,479.666656,0.261206,1.969333,1.812000,125,83,0,0,0.833333],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.191525,1.291525,341,111,0,0,0.549153],
[18,0,0,0,796,310,-330.943054,-552.892883,0.105697,0.830330,0.819431,398,155,0,0,0.472347],
[19,0,0,0,796,310,734.234802,284.725891,-1.642730,0.959140,1.212797,398,155,0,0,0.391474],
[20,0,0,0,796,310,-862.037292,420.119324,-6.438468,0.855101,1.113713,398,155,0,0,0.409524],
[21,0,543,372,366,221,676.748840,509.295593,0.554194,1.400067,1.291074,183,110,0,0,0.276610],
[22,0,543,372,366,221,-542.984436,576.673218,0.177133,1.400067,1.291074,183,110,0,0,0.276610],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.974576],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.974576],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.779661],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.974576],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.974576],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.974576],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.974576],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.974576],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.779661],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.779661],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.779661],
[8,0,0,818,571,206,-346.796600,580.636597,-0.082310,1.127584,0.990847,285,103,0,0,0.403194],
[9,0,0,818,571,206,25.762033,584.600037,-0.112574,0.990847,0.990847,285,103,0,0,0.334042],
[10,0,0,818,571,206,634.142395,541.002747,0.071000,0.951214,0.900680,285,103,0,0,0.403194],
[11,0,0,818,571,206,451.826447,511.277283,0.175720,0.982921,0.767907,285,103,0,0,0.126584],
[12,0,0,818,571,206,-697.556641,-558.837952,3.304676,0.829339,0.796641,285,103,0,0,0.691525],
[13,0,0,818,571,206,646.032532,-574.691528,2.821866,1.004719,1.199916,285,103,0,0,0.647758],
[14,0,0,818,571,206,152.590515,-602.435242,2.946727,1.506088,1.199916,285,103,0,0,0.541500],
[15,0,0,818,571,206,-780.787781,-33.688812,1.577516,0.985893,1.199916,285,103,0,0,0.541500],
[16,0,0,818,571,206,-810.513245,-340.851532,4.047523,0.825376,0.697557,285,103,0,0,0.403194],
[17,0,0,818,571,206,774.842712,-301.217621,4.945984,0.960131,1.199916,285,103,0,0,0.541500]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.189831,1.289830,341,111,0,0,0.538983],
[4,0,0,311,543,282,-595.406799,634.406799,-0.418879,1.071000,1.041000,271,141,0,0,0.489831],
[5,0,683,673,250,167,-167.0,479.399994,0.261206,1.976000,1.812000,125,83,0,0,0.800000],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.189831,1.289830,341,111,0,0,0.538983],
[18,0,0,0,796,310,-330.999664,-552.987488,0.105697,0.830472,0.819571,398,155,0,0,0.468851],
[19,0,0,0,796,310,734.561951,285.043335,-1.643322,0.959304,1.213005,398,155,0,0,0.385837],
[20,0,0,0,796,310,-862.184753,420.191193,-6.438468,0.855248,1.113903,398,155,0,0,0.406065],
[21,0,543,372,366,221,676.864624,509.382721,0.554194,1.400307,1.291295,183,110,0,0,0.275932],
[22,0,543,372,366,221,-543.077332,576.771912,0.177133,1.400307,1.291295,183,110,0,0,0.275932],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.969492],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.969492],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.775593],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.969492],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.969492],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.969492],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.969492],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.969492],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.775593],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.775593],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.775593],
[8,0,0,818,571,206,-346.855957,580.735962,-0.082310,1.127777,0.991017,285,103,0,0,0.399868],
[9,0,0,818,571,206,25.766441,584.700012,-0.112574,0.991017,0.991017,285,103,0,0,0.330885],
[10,0,0,818,571,206,634.250854,541.095276,0.071000,0.951376,0.900834,285,103,0,0,0.399868],
[11,0,0,818,571,206,451.903748,511.364777,0.175720,0.983089,0.768038,285,103,0,0,0.123936],
[12,0,0,818,571,206,-697.675964,-558.933594,3.304676,0.829481,0.796778,285,103,0,0,0.689830],
[13,0,0,818,571,206,646.143066,-574.789856,2.821866,1.004891,1.200122,285,103,0,0,0.644424],
[14,0,0,818,571,206,152.616623,-602.538330,2.946727,1.506346,1.200122,285,103,0,0,0.537834],
[15,0,0,818,571,206,-780.921387,-33.694576,1.577516,0.986062,1.200122,285,103,0,0,0.537834],
[16,0,0,818,571,206,-810.651917,-340.909851,4.047523,0.825517,0.697676,285,103,0,0,0.399868],
[17,0,0,818,571,206,774.975281,-301.269165,4.945984,0.960295,1.200122,285,103,0,0,0.537834]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.188136,1.288136,341,111,0,0,0.528814],
[4,0,0,311,543,282,-595.474548,634.474548,-0.418879,1.071000,1.041000,271,141,0,0,0.488136],
[5,0,683,673,250,167,-167.0,479.133331,0.261206,1.982667,1.812000,125,83,0,0,0.766667],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.188136,1.288136,341,111,0,0,0.528814],
[18,0,0,0,796,310,-331.056274,-553.082031,0.105697,0.830614,0.819711,398,155,0,0,0.465366],
[19,0,0,0,796,310,734.889099,285.360901,-1.643913,0.959468,1.213212,398,155,0,0,0.380224],
[20,0,0,0,796,310,-862.332214,420.263062,-6.438468,0.855394,1.114094,398,155,0,0,0.402618],
[21,0,543,372,366,221,676.980347,509.469818,0.554194,1.400546,1.291516,183,110,0,0,0.275254],
[22,0,543,372,366,221,-543.170166,576.870483,0.177133,1.400546,1.291516,183,110,0,0,0.275254],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.964407],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.964407],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.771525],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.964407],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.964407],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.964407],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.964407],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.964407],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.771525],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.771525],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.771525],
[8,0,0,818,571,206,-346.915253,580.835266,-0.082310,1.127970,0.991186,285,103,0,0,0.396553],
[9,0,0,818,571,206,25.770847,584.799988,-0.112574,0.991186,0.991186,285,103,0,0,0.327739],
[10,0,0,818,571,206,634.359314,541.187805,0.071000,0.951539,0.900988,285,103,0,0,0.396553],
[11,0,0,818,571,206,451.981018,511.452209,0.175720,0.983257,0.768169,285,103,0,0,0.121298],
[12,0,0,818,571,206,-697.795227,-559.029175,3.304676,0.829623,0.796914,285,103,0,0,0.688136],
[13,0,0,818,571,206,646.253540,-574.888123,2.821866,1.005063,1.200327,285,103,0,0,0.641098],
[14,0,0,818,571,206,152.642715,-602.641357,2.946727,1.506603,1.200327,285,103,0,0,0.534180],
[15,0,0,818,571,206,-781.054932,-33.700340,1.577516,0.986230,1.200327,285,103,0,0,0.534180],
[16,0,0,818,571,206,-810.790527,-340.968140,4.047523,0.825658,0.697795,285,103,0,0,0.396553],
[17,0,0,818,571,206,775.107788,-301.320679,4.945984,0.960460,1.200327,285,103,0,0,0.534180]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.186441,1.286441,341,111,0,0,0.518644],
[4,0,0,311,543,282,-595.542358,634.542358,-0.418879,1.071000,1.041000,271,141,0,0,0.486441],
[5,0,683,673,250,167,-167.0,478.866669,0.261206,1.989333,1.812000,125,83,0,0,0.733333],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.186441,1.286441,341,111,0,0,0.518644],
[18,0,0,0,796,310,-331.112885,-553.176636,0.105697,0.830756,0.819851,398,155,0,0,0.461893],
[19,0,0,0,796,310,735.216492,285.678558,-1.644505,0.959633,1.213420,398,155,0,0,0.374634],
[20,0,0,0,796,310,-862.479675,420.334930,-6.438468,0.855540,1.114284,398,155,0,0,0.399183],
[21,0,543,372,366,221,677.096130,509.556976,0.554194,1.400786,1.291737,183,110,0,0,0.274576],
[22,0,543,372,366,221,-543.263062,576.969177,0.177133,1.400786,1.291737,183,110,0,0,0.274576],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.959322],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.959322],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.767458],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.959322],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.959322],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.959322],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.959322],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.959322],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.767458],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.767458],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.767458],
[8,0,0,818,571,206,-346.974579,580.934570,-0.082310,1.128163,0.991356,285,103,0,0,0.393249],
[9,0,0,818,571,206,25.775255,584.900024,-0.112574,0.991356,0.991356,285,103,0,0,0.324605],
[10,0,0,818,571,206,634.467834,541.280334,0.071000,0.951702,0.901143,285,103,0,0,0.393249],
[11,0,0,818,571,206,452.058319,511.539673,0.175720,0.983425,0.768301,285,103,0,0,0.118673],
[12,0,0,818,571,206,-697.914612,-559.124756,3.304676,0.829765,0.797050,285,103,0,0,0.686441],
[13,0,0,818,571,206,646.364075,-574.986450,2.821866,1.005235,1.200532,285,103,0,0,0.637782],
[14,0,0,818,571,206,152.668823,-602.744446,2.946727,1.506861,1.200532,285,103,0,0,0.530537],
[15,0,0,818,571,206,-781.188477,-33.706104,1.577516,0.986399,1.200532,285,103,0,0,0.530537],
[16,0,0,818,571,206,-810.929199,-341.026459,4.047523,0.825800,0.697915,285,103,0,0,0.393249],
[17,0,0,818,571,206,775.240356,-301.372223,4.945984,0.960624,1.200532,285,103,0,0,0.530537]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.184746,1.284746,341,111,0,0,0.508475],
[4,0,0,311,543,282,-595.610168,634.610168,-0.418879,1.071000,1.041000,271,141,0,0,0.484746],
[5,0,683,673,250,167,-167.0,478.600006,0.261206,1.996000,1.812000,125,83,0,0,0.700000],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.184746,1.284746,341,111,0,0,0.508475],
[18,0,0,0,796,310,-331.169495,-553.271179,0.105697,0.830898,0.819992,398,155,0,0,0.458431],
[19,0,0,0,796,310,735.543823,285.996246,-1.645097,0.959797,1.213627,398,155,0,0,0.369066],
[20,0,0,0,796,310,-862.627136,420.406769,-6.438468,0.855686,1.114475,398,155,0,0,0.395760],
[21,0,543,372,366,221,677.211853,509.644073,0.554194,1.401025,1.291958,183,110,0,0,0.273898],
[22,0,543,372,366,221,-543.355896,577.067810,0.177133,1.401025,1.291958,183,110,0,0,0.273898],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.954237],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.954237],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.763390],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.954237],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.954237],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.954237],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.954237],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.954237],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.763390],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.763390],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.763390],
[8,0,0,818,571,206,-347.033905,581.033875,-0.082310,1.128356,0.991525,285,103,0,0,0.389957],
[9,0,0,818,571,206,25.779661,585.0,-0.112574,0.991525,0.991525,285,103,0,0,0.321482],
[10,0,0,818,571,206,634.576294,541.372864,0.071000,0.951864,0.901297,285,103,0,0,0.389957],
[11,0,0,818,571,206,452.135590,511.627106,0.175720,0.983593,0.768432,285,103,0,0,0.116059],
[12,0,0,818,571,206,-698.033875,-559.220337,3.304676,0.829907,0.797186,285,103,0,0,0.684746],
[13,0,0,818,571,206,646.474548,-575.084717,2.821866,1.005407,1.200737,285,103,0,0,0.634473],
[14,0,0,818,571,206,152.694916,-602.847473,2.946727,1.507119,1.200737,285,103,0,0,0.526906],
[15,0,0,818,571,206,-781.322021,-33.711864,1.577516,0.986568,1.200737,285,103,0,0,0.526906],
[16,0,0,818,571,206,-811.067810,-341.084747,4.047523,0.825941,0.698034,285,103,0,0,0.389957],
[17,0,0,818,571,206,775.372864,-301.423737,4.945984,0.960788,1.200737,285,103,0,0,0.526906]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.183051,1.283051,341,111,0,0,0.498305],
[4,0,0,311,543,282,-595.677979,634.677979,-0.418879,1.071000,1.041000,271,141,0,0,0.483051],
[5,0,683,673,250,167,-167.0,478.333344,0.261206,2.002667,1.812000,125,83,0,0,0.666667],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.183051,1.283051,341,111,0,0,0.498305],
[18,0,0,0,796,310,-331.226105,-553.365784,0.105697,0.831040,0.820132,398,155,0,0,0.454981],
[19,0,0,0,796,310,735.871216,286.314087,-1.645688,0.959961,1.213835,398,155,0,0,0.363522],
[20,0,0,0,796,310,-862.774597,420.478638,-6.438468,0.855833,1.114665,398,155,0,0,0.392349],
[21,0,543,372,366,221,677.327637,509.731201,0.554194,1.401265,1.292179,183,110,0,0,0.273220],
[22,0,543,372,366,221,-543.448792,577.166443,0.177133,1.401265,1.292179,183,110,0,0,0.273220],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.949153],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.949153],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.759322],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.949153],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.949153],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.949153],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.949153],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.949153],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.759322],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.759322],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.759322],
[8,0,0,818,571,206,-347.093231,581.133240,-0.082310,1.128549,0.991695,285,103,0,0,0.386676],
[9,0,0,818,571,206,25.784069,585.100037,-0.112574,0.991695,0.991695,285,103,0,0,0.318371],
[10,0,0,818,571,206,634.684753,541.465454,0.071000,0.952027,0.901451,285,103,0,0,0.386676],
[11,0,0,818,571,206,452.212891,511.714569,0.175720,0.983761,0.768564,285,103,0,0,0.113456],
[12,0,0,818,571,206,-698.153198,-559.315918,3.304676,0.830049,0.797323,285,103,0,0,0.683051],
[13,0,0,818,571,206,646.585083,-575.183044,2.821866,1.005579,1.200943,285,103,0,0,0.631174],
[14,0,0,818,571,206,152.721024,-602.950500,2.946727,1.507376,1.200943,285,103,0,0,0.523286],
[15,0,0,818,571,206,-781.455627,-33.717628,1.577516,0.986736,1.200943,285,103,0,0,0.523286],
[16,0,0,818,571,206,-811.206421,-341.143066,4.047523,0.826082,0.698153,285,103,0,0,0.386676],
[17,0,0,818,571,206,775.505432,-301.475250,4.945984,0.960952,1.200943,285,103,0,0,0.523286]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.181356,1.281356,341,111,0,0,0.488136],
[4,0,0,311,543,282,-595.745789,634.745789,-0.418879,1.071000,1.041000,271,141,0,0,0.481356],
[5,0,683,673,250,167,-167.0,478.066681,0.261206,2.009333,1.812000,125,83,0,0,0.633333],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.181356,1.281356,341,111,0,0,0.488136],
[18,0,0,0,796,310,-331.282715,-553.460388,0.105697,0.831182,0.820272,398,155,0,0,0.451543],
[19,0,0,0,796,310,736.198792,286.632019,-1.646280,0.960125,1.214042,398,155,0,0,0.358001],
[20,0,0,0,796,310,-862.922058,420.550537,-6.438468,0.855979,1.114856,398,155,0,0,0.388950],
[21,0,543,372,366,221,677.443420,509.818329,0.554194,1.401504,1.292399,183,110,0,0,0.272542],
[22,0,543,372,366,221,-543.541687,577.265076,0.177133,1.401504,1.292399,183,110,0,0,0.272542],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.944068],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.944068],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.755254],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.944068],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.944068],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.944068],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.944068],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.944068],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.755254],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.755254],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.755254],
[8,0,0,818,571,206,-347.152557,581.232544,-0.082310,1.128742,0.991864,285,103,0,0,0.383407],
[9,0,0,818,571,206,25.788475,585.200012,-0.112574,0.991864,0.991864,285,103,0,0,0.315271],
[10,0,0,818,571,206,634.793213,541.557983,0.071000,0.952190,0.901605,285,103,0,0,0.383407],
[11,0,0,818,571,206,452.290192,511.802063,0.175720,0.983930,0.768695,285,103,0,0,0.110865],
[12,0,0,818,571,206,-698.272583,-559.411560,3.304676,0.830191,0.797459,285,103,0,0,0.681356],
[13,0,0,818,571,206,646.695618,-575.281372,2.821866,1.005751,1.201148,285,103,0,0,0.627882],
[14,0,0,818,571,206,152.747131,-603.053589,2.946727,1.507634,1.201148,285,103,0,0,0.519678],
[15,0,0,818,571,206,-781.589172,-33.723392,1.577516,0.986905,1.201148,285,103,0,0,0.519678],
[16,0,0,818,571,206,-811.345093,-341.201355,4.047523,0.826223,0.698273,285,103,0,0,0.383407],
[17,0,0,818,571,206,775.638000,-301.526794,4.945984,0.961117,1.201148,285,103,0,0,0.519678]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.179661,1.279661,341,111,0,0,0.477966],
[4,0,0,311,543,282,-595.813538,634.813538,-0.418879,1.071000,1.041000,271,141,0,0,0.479661],
[5,0,683,673,250,167,-167.0,477.799988,0.261206,2.016000,1.812000,125,83,0,0,0.600000],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.179661,1.279661,341,111,0,0,0.477966],
[18,0,0,0,796,310,-331.339325,-553.554932,0.105697,0.831324,0.820412,398,155,0,0,0.448115],
[19,0,0,0,796,310,736.526306,286.950012,-1.646871,0.960289,1.214249,398,155,0,0,0.352502],
[20,0,0,0,796,310,-863.069519,420.622375,-6.438468,0.856125,1.115046,398,155,0,0,0.385564],
[21,0,543,372,366,221,677.559143,509.905426,0.554194,1.401744,1.292620,183,110,0,0,0.271864],
[22,0,543,372,366,221,-543.634583,577.363708,0.177133,1.401744,1.292620,183,110,0,0,0.271864],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.938983],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.938983],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.751186],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.938983],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.938983],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.938983],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.938983],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.938983],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.751186],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.751186],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.751186],
[8,0,0,818,571,206,-347.211853,581.331848,-0.082310,1.128935,0.992034,285,103,0,0,0.380149],
[9,0,0,818,571,206,25.792881,585.299988,-0.112574,0.992034,0.992034,285,103,0,0,0.312183],
[10,0,0,818,571,206,634.901672,541.650513,0.071000,0.952353,0.901759,285,103,0,0,0.380149],
[11,0,0,818,571,206,452.367462,511.889496,0.175720,0.984098,0.768826,285,103,0,0,0.108285],
[12,0,0,818,571,206,-698.391846,-559.507141,3.304676,0.830332,0.797595,285,103,0,0,0.679661],
[13,0,0,818,571,206,646.806091,-575.379639,2.821866,1.005922,1.201353,285,103,0,0,0.624600],
[14,0,0,818,571,206,152.773224,-603.156616,2.946727,1.507892,1.201353,285,103,0,0,0.516082],
[15,0,0,818,571,206,-781.722717,-33.729153,1.577516,0.987074,1.201353,285,103,0,0,0.516082],
[16,0,0,818,571,206,-811.483704,-341.259674,4.047523,0.826364,0.698392,285,103,0,0,0.380149],
[17,0,0,818,571,206,775.770508,-301.578308,4.945984,0.961281,1.201353,285,103,0,0,0.516082]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.177966,1.277966,341,111,0,0,0.467797],
[4,0,0,311,543,282,-595.881348,634.881348,-0.418879,1.071000,1.041000,271,141,0,0,0.477966],
[5,0,683,673,250,167,-167.0,477.533325,0.261206,2.022667,1.812000,125,83,0,0,0.566667],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.177966,1.277966,341,111,0,0,0.467797],
[18,0,0,0,796,310,-331.395935,-553.649475,0.105697,0.831466,0.820552,398,155,0,0,0.444700],
[19,0,0,0,796,310,736.853943,287.268097,-1.647463,0.960453,1.214457,398,155,0,0,0.347027],
[20,0,0,0,796,310,-863.216980,420.694244,-6.438468,0.856272,1.115237,398,155,0,0,0.382189],
[21,0,543,372,366,221,677.674927,509.992554,0.554194,1.401983,1.292841,183,110,0,0,0.271186],
[22,0,543,372,366,221,-543.727478,577.462402,0.177133,1.401983,1.292841,183,110,0,0,0.271186],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.933898],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.933898],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.747119],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.933898],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.933898],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.933898],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.933898],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.933898],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.747119],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.747119],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.747119],
[8,0,0,818,571,206,-347.271210,581.431213,-0.082310,1.129128,0.992203,285,103,0,0,0.376903],
[9,0,0,818,571,206,25.797289,585.400024,-0.112574,0.992203,0.992203,285,103,0,0,0.309107],
[10,0,0,818,571,206,635.010193,541.743042,0.071000,0.952515,0.901913,285,103,0,0,0.376903],
[11,0,0,818,571,206,452.444763,511.976959,0.175720,0.984266,0.768958,285,103,0,0,0.105717],
[12,0,0,818,571,206,-698.511230,-559.602722,3.304676,0.830474,0.797732,285,103,0,0,0.677966],
[13,0,0,818,571,206,646.916626,-575.477966,2.821866,1.006094,1.201558,285,103,0,0,0.621326],
[14,0,0,818,571,206,152.799332,-603.259705,2.946727,1.508149,1.201558,285,103,0,0,0.512496],
[15,0,0,818,571,206,-781.856262,-33.734917,1.577516,0.987242,1.201558,285,103,0,0,0.512496],
[16,0,0,818,571,206,-811.622375,-341.317963,4.047523,0.826505,0.698511,285,103,0,0,0.376903],
[17,0,0,818,571,206,775.903076,-301.629852,4.945984,0.961445,1.201558,285,103,0,0,0.512496]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.176271,1.276271,341,111,0,0,0.457627],
[4,0,0,311,543,282,-595.949158,634.949158,-0.418879,1.071000,1.041000,271,141,0,0,0.476271],
[5,0,683,673,250,167,-167.0,477.266663,0.261206,2.029333,1.812000,125,83,0,0,0.533333],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.176271,1.276271,341,111,0,0,0.457627],
[18,0,0,0,796,310,-331.452545,-553.744080,0.105697,0.831608,0.820692,398,155,0,0,0.441296],
[19,0,0,0,796,310,737.181702,287.586273,-1.648055,0.960617,1.214664,398,155,0,0,0.341574],
[20,0,0,0,796,310,-863.364380,420.766083,-6.438468,0.856418,1.115427,398,155,0,0,0.378826],
[21,0,543,372,366,221,677.790649,510.079651,0.554194,1.402223,1.293062,183,110,0,0,0.270508],
[22,0,543,372,366,221,-543.820313,577.561035,0.177133,1.402223,1.293062,183,110,0,0,0.270508],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.928814],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.928814],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.743051],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.928814],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.928814],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.928814],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.928814],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.928814],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.743051],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.743051],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.743051],
[8,0,0,818,571,206,-347.330505,581.530518,-0.082310,1.129320,0.992373,285,103,0,0,0.373668],
[9,0,0,818,571,206,25.801695,585.500000,-0.112574,0.992373,0.992373,285,103,0,0,0.306041],
[10,0,0,818,571,206,635.118652,541.835571,0.071000,0.952678,0.902067,285,103,0,0,0.373668],
[11,0,0,818,571,206,452.522034,512.064392,0.175720,0.984434,0.769089,285,103,0,0,0.103160],
[12,0,0,818,571,206,-698.630493,-559.698303,3.304676,0.830616,0.797868,285,103,0,0,0.676271],
[13,0,0,818,571,206,647.027100,-575.576294,2.821866,1.006266,1.201764,285,103,0,0,0.618061],
[14,0,0,818,571,206,152.825424,-603.362732,2.946727,1.508407,1.201764,285,103,0,0,0.508923],
[15,0,0,818,571,206,-781.989807,-33.740677,1.577516,0.987411,1.201764,285,103,0,0,0.508923],
[16,0,0,818,571,206,-811.760986,-341.376282,4.047523,0.826647,0.698631,285,103,0,0,0.373668],
[17,0,0,818,571,206,776.035583,-301.681366,4.945984,0.961609,1.201764,285,103,0,0,0.508923]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.174576,1.274576,341,111,0,0,0.447458],
[4,0,0,311,543,282,-596.016968,635.016968,-0.418879,1.071000,1.041000,271,141,0,0,0.474576],
[5,0,683,673,250,167,-167.0,477.0,0.261206,2.036000,1.812000,125,83,0,0,0.500000],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.174576,1.274576,341,111,0,0,0.447458],
[18,0,0,0,796,310,-331.509155,-553.838623,0.105697,0.831751,0.820833,398,155,0,0,0.437903],
[19,0,0,0,796,310,737.509460,287.904602,-1.648646,0.960781,1.214872,398,155,0,0,0.336145],
[20,0,0,0,796,310,-863.511902,420.837982,-6.438468,0.856564,1.115618,398,155,0,0,0.375476],
[21,0,543,372,366,221,677.906433,510.166779,0.554194,1.402462,1.293283,183,110,0,0,0.269831],
[22,0,543,372,366,221,-543.913208,577.659668,0.177133,1.402462,1.293283,183,110,0,0,0.269831],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.923729],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.923729],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.738983],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.923729],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.923729],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.923729],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.923729],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.923729],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.738983],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.738983],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.738983],
[8,0,0,818,571,206,-347.389832,581.629822,-0.082310,1.129513,0.992542,285,103,0,0,0.370445],
[9,0,0,818,571,206,25.806103,585.600037,-0.112574,0.992542,0.992542,285,103,0,0,0.302988],
[10,0,0,818,571,206,635.227112,541.928162,0.071000,0.952841,0.902221,285,103,0,0,0.370445],
[11,0,0,818,571,206,452.599335,512.151855,0.175720,0.984602,0.769220,285,103,0,0,0.100615],
[12,0,0,818,571,206,-698.749817,-559.793884,3.304676,0.830758,0.798004,285,103,0,0,0.674576],
[13,0,0,818,571,206,647.137634,-575.674561,2.821866,1.006438,1.201969,285,103,0,0,0.614804],
[14,0,0,818,571,206,152.851532,-603.465759,2.946727,1.508664,1.201969,285,103,0,0,0.505361],
[15,0,0,818,571,206,-782.123413,-33.746441,1.577516,0.987580,1.201969,285,103,0,0,0.505361],
[16,0,0,818,571,206,-811.899658,-341.434570,4.047523,0.826788,0.698750,285,103,0,0,0.370445],
[17,0,0,818,571,206,776.168152,-301.732880,4.945984,0.961774,1.201969,285,103,0,0,0.505361]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.172881,1.272881,341,111,0,0,0.437288],
[4,0,0,311,543,282,-596.084717,635.084717,-0.418879,1.071000,1.041000,271,141,0,0,0.472881],
[5,0,683,673,250,167,-167.0,476.733337,0.261206,2.042667,1.812000,125,83,0,0,0.466667],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.172881,1.272881,341,111,0,0,0.437288],
[18,0,0,0,796,310,-331.565765,-553.933228,0.105697,0.831893,0.820973,398,155,0,0,0.434522],
[19,0,0,0,796,310,737.837280,288.222961,-1.649238,0.960945,1.215079,398,155,0,0,0.330738],
[20,0,0,0,796,310,-863.659302,420.909821,-6.438468,0.856710,1.115808,398,155,0,0,0.372138],
[21,0,543,372,366,221,678.022217,510.253876,0.554194,1.402702,1.293504,183,110,0,0,0.269153],
[22,0,543,372,366,221,-544.006104,577.758301,0.177133,1.402702,1.293504,183,110,0,0,0.269153],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.918644],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.918644],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.734915],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.918644],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.918644],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.918644],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.918644],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.918644],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.734915],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.734915],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.734915],
[8,0,0,818,571,206,-347.449158,581.729126,-0.082310,1.129706,0.992712,285,103,0,0,0.367234],
[9,0,0,818,571,206,25.810509,585.700012,-0.112574,0.992712,0.992712,285,103,0,0,0.299945],
[10,0,0,818,571,206,635.335571,542.020691,0.071000,0.953003,0.902375,285,103,0,0,0.367234],
[11,0,0,818,571,206,452.676605,512.239319,0.175720,0.984770,0.769352,285,103,0,0,0.098081],
[12,0,0,818,571,206,-698.869141,-559.889465,3.304676,0.830900,0.798140,285,103,0,0,0.672881],
[13,0,0,818,571,206,647.248108,-575.772888,2.821866,1.006610,1.202174,285,103,0,0,0.611555],
[14,0,0,818,571,206,152.877625,-603.568787,2.946727,1.508922,1.202174,285,103,0,0,0.501810],
[15,0,0,818,571,206,-782.256958,-33.752201,1.577516,0.987748,1.202174,285,103,0,0,0.501810],
[16,0,0,818,571,206,-812.038269,-341.492859,4.047523,0.826929,0.698869,285,103,0,0,0.367234],
[17,0,0,818,571,206,776.300659,-301.784393,4.945984,0.961938,1.202174,285,103,0,0,0.501810]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.171186,1.271186,341,111,0,0,0.427119],
[4,0,0,311,543,282,-596.152527,635.152527,-0.418879,1.071000,1.041000,271,141,0,0,0.471186],
[5,0,683,673,250,167,-167.0,476.466675,0.261206,2.049333,1.812000,125,83,0,0,0.433333],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.171186,1.271186,341,111,0,0,0.427119],
[18,0,0,0,796,310,-331.622375,-554.027771,0.105697,0.832035,0.821113,398,155,0,0,0.431152],
[19,0,0,0,796,310,738.165222,288.541412,-1.649830,0.961109,1.215287,398,155,0,0,0.325355],
[20,0,0,0,796,310,-863.806763,420.981689,-6.438468,0.856857,1.115999,398,155,0,0,0.368811],
[21,0,543,372,366,221,678.137939,510.341003,0.554194,1.402941,1.293724,183,110,0,0,0.268475],
[22,0,543,372,366,221,-544.098999,577.856934,0.177133,1.402941,1.293724,183,110,0,0,0.268475],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.913559],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.913559],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.730847],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.913559],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.913559],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.913559],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.913559],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.913559],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.730847],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.730847],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.730847],
[8,0,0,818,571,206,-347.508484,581.828491,-0.082310,1.129899,0.992881,285,103,0,0,0.364033],
[9,0,0,818,571,206,25.814915,585.799988,-0.112574,0.992881,0.992881,285,103,0,0,0.296915],
[10,0,0,818,571,206,635.444092,542.113220,0.071000,0.953166,0.902529,285,103,0,0,0.364033],
[11,0,0,818,571,206,452.753906,512.326782,0.175720,0.984938,0.769483,285,103,0,0,0.095559],
[12,0,0,818,571,206,-698.988464,-559.985107,3.304676,0.831042,0.798277,285,103,0,0,0.671186],
[13,0,0,818,571,206,647.358643,-575.871216,2.821866,1.006782,1.202379,285,103,0,0,0.608316],
[14,0,0,818,571,206,152.903732,-603.671875,2.946727,1.509180,1.202379,285,103,0,0,0.498271],
[15,0,0,818,571,206,-782.390503,-33.757965,1.577516,0.987917,1.202379,285,103,0,0,0.498271],
[16,0,0,818,571,206,-812.176941,-341.551178,4.047523,0.827070,0.698988,285,103,0,0,0.364033],
[17,0,0,818,571,206,776.433228,-301.835938,4.945984,0.962102,1.202379,285,103,0,0,0.498271]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.169492,1.269492,341,111,0,0,0.416949],
[4,0,0,311,543,282,-596.220337,635.220337,-0.418879,1.071000,1.041000,271,141,0,0,0.469492],
[5,0,683,673,250,167,-167.0,476.200012,0.261206,2.056000,1.812000,125,83,0,0,0.400000],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.169492,1.269492,341,111,0,0,0.416949],
[18,0,0,0,796,310,-331.678986,-554.122375,0.105697,0.832177,0.821253,398,155,0,0,0.427794],
[19,0,0,0,796,310,738.493225,288.859985,-1.650421,0.961273,1.215494,398,155,0,0,0.319994],
[20,0,0,0,796,310,-863.954285,421.053558,-6.438468,0.857003,1.116189,398,155,0,0,0.365497],
[21,0,543,372,366,221,678.253723,510.428162,0.554194,1.403181,1.293945,183,110,0,0,0.267797],
[22,0,543,372,366,221,-544.191895,577.955627,0.177133,1.403181,1.293945,183,110,0,0,0.267797],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.908475],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.908475],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.726780],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.908475],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.908475],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.908475],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.908475],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.908475],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.726780],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.726780],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.726780],
[8,0,0,818,571,206,-347.567810,581.927795,-0.082310,1.130092,0.993051,285,103,0,0,0.360845],
[9,0,0,818,571,206,25.819323,585.900024,-0.112574,0.993051,0.993051,285,103,0,0,0.293895],
[10,0,0,818,571,206,635.552551,542.205750,0.071000,0.953329,0.902683,285,103,0,0,0.360845],
[11,0,0,818,571,206,452.831207,512.414246,0.175720,0.985106,0.769614,285,103,0,0,0.093048],
[12,0,0,818,571,206,-699.107788,-560.080688,3.304676,0.831184,0.798413,285,103,0,0,0.669492],
[13,0,0,818,571,206,647.469177,-575.969482,2.821866,1.006954,1.202585,285,103,0,0,0.605085],
[14,0,0,818,571,206,152.929840,-603.774902,2.946727,1.509437,1.202585,285,103,0,0,0.494743],
[15,0,0,818,571,206,-782.524109,-33.763729,1.577516,0.988086,1.202585,285,103,0,0,0.494743],
[16,0,0,818,571,206,-812.315613,-341.609497,4.047523,0.827211,0.699108,285,103,0,0,0.360845],
[17,0,0,818,571,206,776.565796,-301.887451,4.945984,0.962266,1.202585,285,103,0,0,0.494743]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.167797,1.267797,341,111,0,0,0.406780],
[4,0,0,311,543,282,-596.288147,635.288147,-0.418879,1.071000,1.041000,271,141,0,0,0.467797],
[5,0,683,673,250,167,-167.0,475.933319,0.261206,2.062667,1.812000,125,83,0,0,0.366667],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.167797,1.267797,341,111,0,0,0.406780],
[18,0,0,0,796,310,-331.735596,-554.216919,0.105697,0.832319,0.821393,398,155,0,0,0.424447],
[19,0,0,0,796,310,738.821228,289.178650,-1.651013,0.961437,1.215702,398,155,0,0,0.314657],
[20,0,0,0,796,310,-864.101685,421.125427,-6.438468,0.857149,1.116380,398,155,0,0,0.362195],
[21,0,543,372,366,221,678.369507,510.515259,0.554194,1.403420,1.294166,183,110,0,0,0.267119],
[22,0,543,372,366,221,-544.284729,578.054260,0.177133,1.403420,1.294166,183,110,0,0,0.267119],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.903390],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.903390],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.722712],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.903390],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.903390],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.903390],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.903390],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.903390],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.722712],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.722712],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.722712],
[8,0,0,818,571,206,-347.627106,582.027100,-0.082310,1.130285,0.993220,285,103,0,0,0.357667],
[9,0,0,818,571,206,25.823729,586.0,-0.112574,0.993220,0.993220,285,103,0,0,0.290888],
[10,0,0,818,571,206,635.661011,542.298279,0.071000,0.953492,0.902837,285,103,0,0,0.357667],
[11,0,0,818,571,206,452.908478,512.501709,0.175720,0.985275,0.769746,285,103,0,0,0.090549],
[12,0,0,818,571,206,-699.227112,-560.176270,3.304676,0.831325,0.798549,285,103,0,0,0.667797],
[13,0,0,818,571,206,647.579651,-576.067810,2.821866,1.007125,1.202790,285,103,0,0,0.601862],
[14,0,0,818,571,206,152.955933,-603.877930,2.946727,1.509695,1.202790,285,103,0,0,0.491227],
[15,0,0,818,571,206,-782.657593,-33.769493,1.577516,0.988254,1.202790,285,103,0,0,0.491227],
[16,0,0,818,571,206,-812.454224,-341.667786,4.047523,0.827353,0.699227,285,103,0,0,0.357667],
[17,0,0,818,571,206,776.698303,-301.938965,4.945984,0.962430,1.202790,285,103,0,0,0.491227]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.166102,1.266102,341,111,0,0,0.396610],
[4,0,0,311,543,282,-596.355957,635.355957,-0.418879,1.071000,1.041000,271,141,0,0,0.466102],
[5,0,683,673,250,167,-167.0,475.666656,0.261206,2.069333,1.812000,125,83,0,0,0.333333],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.166102,1.266102,341,111,0,0,0.396610],
[18,0,0,0,796,310,-331.792206,-554.311523,0.105697,0.832461,0.821533,398,155,0,0,0.421112],
[19,0,0,0,796,310,739.149414,289.497375,-1.651605,0.961601,1.215909,398,155,0,0,0.309342],
[20,0,0,0,796,310,-864.249146,421.197296,-6.438468,0.857295,1.116570,398,155,0,0,0.358905],
[21,0,543,372,366,221,678.485291,510.602386,0.554194,1.403660,1.294387,183,110,0,0,0.266441],
[22,0,543,372,366,221,-544.377625,578.152893,0.177133,1.403660,1.294387,183,110,0,0,0.266441],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.898305],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.898305],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.718644],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.898305],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.898305],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.898305],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.898305],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.898305],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.718644],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.718644],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.718644],
[8,0,0,818,571,206,-347.686432,582.126465,-0.082310,1.130478,0.993390,285,103,0,0,0.354502],
[9,0,0,818,571,206,25.828136,586.100037,-0.112574,0.993390,0.993390,285,103,0,0,0.287891],
[10,0,0,818,571,206,635.769531,542.390869,0.071000,0.953654,0.902991,285,103,0,0,0.354502],
[11,0,0,818,571,206,452.985779,512.589172,0.175720,0.985443,0.769877,285,103,0,0,0.088061],
[12,0,0,818,571,206,-699.346436,-560.271851,3.304676,0.831467,0.798685,285,103,0,0,0.666102],
[13,0,0,818,571,206,647.690186,-576.166138,2.821866,1.007297,1.202995,285,103,0,0,0.598648],
[14,0,0,818,571,206,152.982040,-603.981018,2.946727,1.509953,1.202995,285,103,0,0,0.487722],
[15,0,0,818,571,206,-782.791199,-33.775253,1.577516,0.988423,1.202995,285,103,0,0,0.487722],
[16,0,0,818,571,206,-812.592896,-341.726105,4.047523,0.827494,0.699346,285,103,0,0,0.354502],
[17,0,0,818,571,206,776.830872,-301.990509,4.945984,0.962595,1.202995,285,103,0,0,0.487722]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.164407,1.264407,341,111,0,0,0.386441],
[4,0,0,311,543,282,-596.423706,635.423706,-0.418879,1.071000,1.041000,271,141,0,0,0.464407],
[5,0,683,673,250,167,-167.0,475.399994,0.261206,2.076000,1.812000,125,83,0,0,0.300000],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.164407,1.264407,341,111,0,0,0.386441],
[18,0,0,0,796,310,-331.848816,-554.406067,0.105697,0.832603,0.821674,398,155,0,0,0.417788],
[19,0,0,0,796,310,739.477539,289.816193,-1.652196,0.961765,1.216117,398,155,0,0,0.304051],
[20,0,0,0,796,310,-864.396606,421.269135,-6.438468,0.857442,1.116761,398,155,0,0,0.355627],
[21,0,543,372,366,221,678.601013,510.689484,0.554194,1.403899,1.294608,183,110,0,0,0.265763],
[22,0,543,372,366,221,-544.470520,578.251526,0.177133,1.403899,1.294608,183,110,0,0,0.265763],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.893220],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.893220],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.714576],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.893220],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.893220],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.893220],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.893220],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.893220],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.714576],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.714576],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.714576],
[8,0,0,818,571,206,-347.745758,582.225769,-0.082310,1.130671,0.993559,285,103,0,0,0.351347],
[9,0,0,818,571,206,25.832542,586.200012,-0.112574,0.993559,0.993559,285,103,0,0,0.284907],
[10,0,0,818,571,206,635.877930,542.483398,0.071000,0.953817,0.903145,285,103,0,0,0.351347],
[11,0,0,818,571,206,453.063049,512.676575,0.175720,0.985611,0.770008,285,103,0,0,0.085585],
[12,0,0,818,571,206,-699.465759,-560.367432,3.304676,0.831609,0.798822,285,103,0,0,0.664407],
[13,0,0,818,571,206,647.800659,-576.264404,2.821866,1.007469,1.203200,285,103,0,0,0.595443],
[14,0,0,818,571,206,153.008133,-604.084045,2.946727,1.510210,1.203200,285,103,0,0,0.484229],
[15,0,0,818,571,206,-782.924744,-33.781017,1.577516,0.988591,1.203200,285,103,0,0,0.484229],
[16,0,0,818,571,206,-812.731506,-341.784393,4.047523,0.827635,0.699466,285,103,0,0,0.351347],
[17,0,0,818,571,206,776.963379,-302.042023,4.945984,0.962759,1.203200,285,103,0,0,0.484229]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.162712,1.262712,341,111,0,0,0.376271],
[4,0,0,311,543,282,-596.491516,635.491516,-0.418879,1.071000,1.041000,271,141,0,0,0.462712],
[5,0,683,673,250,167,-167.0,475.133331,0.261206,2.082667,1.812000,125,83,0,0,0.266667],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.162712,1.262712,341,111,0,0,0.376271],
[18,0,0,0,796,310,-331.905426,-554.500671,0.105697,0.832745,0.821814,398,155,0,0,0.414476],
[19,0,0,0,796,310,739.805786,290.135132,-1.652788,0.961930,1.216324,398,155,0,0,0.298782],
[20,0,0,0,796,310,-864.544067,421.341003,-6.438468,0.857588,1.116951,398,155,0,0,0.352361],
[21,0,543,372,366,221,678.716797,510.776611,0.554194,1.404139,1.294829,183,110,0,0,0.265085],
[22,0,543,372,366,221,-544.563416,578.350159,0.177133,1.404139,1.294829,183,110,0,0,0.265085],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.888136],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.888136],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.710509],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.888136],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.888136],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.888136],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.888136],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.888136],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.710509],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.710509],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.710509],
[8,0,0,818,571,206,-347.805084,582.325073,-0.082310,1.130863,0.993729,285,103,0,0,0.348205],
[9,0,0,818,571,206,25.836948,586.299988,-0.112574,0.993729,0.993729,285,103,0,0,0.281933],
[10,0,0,818,571,206,635.986450,542.575928,0.071000,0.953980,0.903299,285,103,0,0,0.348205],
[11,0,0,818,571,206,453.140350,512.764099,0.175720,0.985779,0.770140,285,103,0,0,0.083120],
[12,0,0,818,571,206,-699.585083,-560.463074,3.304676,0.831751,0.798958,285,103,0,0,0.662712],
[13,0,0,818,571,206,647.911194,-576.362732,2.821866,1.007641,1.203406,285,103,0,0,0.592246],
[14,0,0,818,571,206,153.034241,-604.187134,2.946727,1.510468,1.203406,285,103,0,0,0.480747],
[15,0,0,818,571,206,-783.058289,-33.786781,1.577516,0.988760,1.203406,285,103,0,0,0.480747],
[16,0,0,818,571,206,-812.870178,-341.842712,4.047523,0.827776,0.699585,285,103,0,0,0.348205],
[17,0,0,818,571,206,777.095947,-302.093567,4.945984,0.962923,1.203406,285,103,0,0,0.480747]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.161017,1.261017,341,111,0,0,0.366102],
[4,0,0,311,543,282,-596.559326,635.559326,-0.418879,1.071000,1.041000,271,141,0,0,0.461017],
[5,0,683,673,250,167,-167.0,474.866669,0.261206,2.089333,1.812000,125,83,0,0,0.233333],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.161017,1.261017,341,111,0,0,0.366102],
[18,0,0,0,796,310,-331.962036,-554.595276,0.105697,0.832887,0.821954,398,155,0,0,0.411175],
[19,0,0,0,796,310,740.134216,290.454132,-1.653379,0.962094,1.216532,398,155,0,0,0.293536],
[20,0,0,0,796,310,-864.691528,421.412903,-6.438468,0.857734,1.117142,398,155,0,0,0.349107],
[21,0,543,372,366,221,678.832581,510.863739,0.554194,1.404378,1.295050,183,110,0,0,0.264407],
[22,0,543,372,366,221,-544.656311,578.448853,0.177133,1.404378,1.295050,183,110,0,0,0.264407],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.883051],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.883051],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.706441],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.883051],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.883051],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.883051],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.883051],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.883051],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.706441],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.706441],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.706441],
[8,0,0,818,571,206,-347.864410,582.424438,-0.082310,1.131056,0.993898,285,103,0,0,0.345073],
[9,0,0,818,571,206,25.841356,586.400024,-0.112574,0.993898,0.993898,285,103,0,0,0.278972],
[10,0,0,818,571,206,636.094910,542.668518,0.071000,0.954142,0.903454,285,103,0,0,0.345073],
[11,0,0,818,571,206,453.217651,512.851563,0.175720,0.985947,0.770271,285,103,0,0,0.080666],
[12,0,0,818,571,206,-699.704407,-560.558655,3.304676,0.831893,0.799094,285,103,0,0,0.661017],
[13,0,0,818,571,206,648.021729,-576.461060,2.821866,1.007813,1.203611,285,103,0,0,0.589058],
[14,0,0,818,571,206,153.060349,-604.290161,2.946727,1.510725,1.203611,285,103,0,0,0.477277],
[15,0,0,818,571,206,-783.191895,-33.792542,1.577516,0.988929,1.203611,285,103,0,0,0.477277],
[16,0,0,818,571,206,-813.008850,-341.901031,4.047523,0.827917,0.699704,285,103,0,0,0.345073],
[17,0,0,818,571,206,777.228516,-302.145081,4.945984,0.963087,1.203611,285,103,0,0,0.477277]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.159322,1.259322,341,111,0,0,0.355932],
[4,0,0,311,543,282,-596.627136,635.627136,-0.418879,1.071000,1.041000,271,141,0,0,0.459322],
[5,0,683,673,250,167,-167.0,474.600006,0.261206,2.096000,1.812000,125,83,0,0,0.200000],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.159322,1.259322,341,111,0,0,0.355932],
[18,0,0,0,796,310,-332.018646,-554.689819,0.105697,0.833029,0.822094,398,155,0,0,0.407886],
[19,0,0,0,796,310,740.462524,290.773254,-1.653971,0.962258,1.216739,398,155,0,0,0.288314],
[20,0,0,0,796,310,-864.838989,421.484741,-6.438468,0.857880,1.117332,398,155,0,0,0.345865],
[21,0,543,372,366,221,678.948303,510.950836,0.554194,1.404618,1.295270,183,110,0,0,0.263729],
[22,0,543,372,366,221,-544.749146,578.547424,0.177133,1.404618,1.295270,183,110,0,0,0.263729],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.877966],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.877966],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.702373],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.877966],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.877966],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.877966],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.877966],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.877966],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.702373],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.702373],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.702373],
[8,0,0,818,571,206,-347.923737,582.523743,-0.082310,1.131249,0.994068,285,103,0,0,0.341953],
[9,0,0,818,571,206,25.845762,586.500000,-0.112574,0.994068,0.994068,285,103,0,0,0.276021],
[10,0,0,818,571,206,636.203369,542.760986,0.071000,0.954305,0.903608,285,103,0,0,0.341953],
[11,0,0,818,571,206,453.294922,512.938965,0.175720,0.986115,0.770402,285,103,0,0,0.078225],
[12,0,0,818,571,206,-699.823730,-560.654236,3.304676,0.832035,0.799231,285,103,0,0,0.659322],
[13,0,0,818,571,206,648.132202,-576.559326,2.821866,1.007985,1.203816,285,103,0,0,0.585879],
[14,0,0,818,571,206,153.086441,-604.393188,2.946727,1.510983,1.203816,285,103,0,0,0.473818],
[15,0,0,818,571,206,-783.325439,-33.798306,1.577516,0.989097,1.203816,285,103,0,0,0.473818],
[16,0,0,818,571,206,-813.147461,-341.959320,4.047523,0.828058,0.699824,285,103,0,0,0.341953],
[17,0,0,818,571,206,777.361023,-302.196594,4.945984,0.963252,1.203816,285,103,0,0,0.473818]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.157627,1.257627,341,111,0,0,0.345763],
[4,0,0,311,543,282,-596.694885,635.694885,-0.418879,1.071000,1.041000,271,141,0,0,0.457627],
[5,0,683,673,250,167,-167.0,474.333344,0.261206,2.102667,1.812000,125,83,0,0,0.166667],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.157627,1.257627,341,111,0,0,0.345763],
[18,0,0,0,796,310,-332.075256,-554.784424,0.105697,0.833171,0.822234,398,155,0,0,0.404608],
[19,0,0,0,796,310,740.791016,291.092468,-1.654563,0.962422,1.216946,398,155,0,0,0.283114],
[20,0,0,0,796,310,-864.986450,421.556610,-6.438468,0.858027,1.117523,398,155,0,0,0.342635],
[21,0,543,372,366,221,679.064087,511.037964,0.554194,1.404857,1.295491,183,110,0,0,0.263051],
[22,0,543,372,366,221,-544.842041,578.646118,0.177133,1.404857,1.295491,183,110,0,0,0.263051],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.872881],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.872881],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.698305],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.872881],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.872881],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.872881],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.872881],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.872881],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.698305],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.698305],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.698305],
[8,0,0,818,571,206,-347.983063,582.623047,-0.082310,1.131442,0.994237,285,103,0,0,0.338845],
[9,0,0,818,571,206,25.850170,586.600037,-0.112574,0.994237,0.994237,285,103,0,0,0.273082],
[10,0,0,818,571,206,636.311890,542.853577,0.071000,0.954468,0.903762,285,103,0,0,0.338845],
[11,0,0,818,571,206,453.372223,513.026428,0.175720,0.986283,0.770534,285,103,0,0,0.075794],
[12,0,0,818,571,206,-699.943054,-560.749817,3.304676,0.832177,0.799367,285,103,0,0,0.657627],
[13,0,0,818,571,206,648.242737,-576.657654,2.821866,1.008157,1.204021,285,103,0,0,0.582708],
[14,0,0,818,571,206,153.112549,-604.496277,2.946727,1.511241,1.204021,285,103,0,0,0.470371],
[15,0,0,818,571,206,-783.458984,-33.804070,1.577516,0.989266,1.204021,285,103,0,0,0.470371],
[16,0,0,818,571,206,-813.286133,-342.017639,4.047523,0.828200,0.699943,285,103,0,0,0.338845],
[17,0,0,818,571,206,777.493591,-302.248138,4.945984,0.963416,1.204021,285,103,0,0,0.470371]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.155932,1.255932,341,111,0,0,0.335593],
[4,0,0,311,543,282,-596.762695,635.762695,-0.418879,1.071000,1.041000,271,141,0,0,0.455932],
[5,0,683,673,250,167,-167.0,474.066681,0.261206,2.109333,1.812000,125,83,0,0,0.133333],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.155932,1.255932,341,111,0,0,0.335593],
[18,0,0,0,796,310,-332.131866,-554.878967,0.105697,0.833313,0.822374,398,155,0,0,0.401342],
[19,0,0,0,796,310,741.119568,291.411743,-1.655154,0.962586,1.217154,398,155,0,0,0.277937],
[20,0,0,0,796,310,-865.133911,421.628479,-6.438468,0.858173,1.117713,398,155,0,0,0.339417],
[21,0,543,372,366,221,679.179810,511.125061,0.554194,1.405097,1.295712,183,110,0,0,0.262373],
[22,0,543,372,366,221,-544.934875,578.744751,0.177133,1.405097,1.295712,183,110,0,0,0.262373],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.867797],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.867797],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.694237],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.867797],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.867797],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.867797],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.867797],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.867797],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.694237],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.694237],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.694237],
[8,0,0,818,571,206,-348.042358,582.722351,-0.082310,1.131635,0.994407,285,103,0,0,0.335748],
[9,0,0,818,571,206,25.854576,586.700012,-0.112574,0.994407,0.994407,285,103,0,0,0.270155],
[10,0,0,818,571,206,636.420349,542.946106,0.071000,0.954630,0.903916,285,103,0,0,0.335748],
[11,0,0,818,571,206,453.449493,513.113892,0.175720,0.986452,0.770665,285,103,0,0,0.073375],
[12,0,0,818,571,206,-700.062378,-560.845398,3.304676,0.832318,0.799503,285,103,0,0,0.655932],
[13,0,0,818,571,206,648.353210,-576.755920,2.821866,1.008329,1.204226,285,103,0,0,0.579545],
[14,0,0,818,571,206,153.138641,-604.599304,2.946727,1.511498,1.204226,285,103,0,0,0.466935],
[15,0,0,818,571,206,-783.592529,-33.809830,1.577516,0.989435,1.204226,285,103,0,0,0.466935],
[16,0,0,818,571,206,-813.424744,-342.075928,4.047523,0.828341,0.700062,285,103,0,0,0.335748],
[17,0,0,818,571,206,777.626099,-302.299652,4.945984,0.963580,1.204226,285,103,0,0,0.466935]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.154237,1.254237,341,111,0,0,0.325424],
[4,0,0,311,543,282,-596.830505,635.830505,-0.418879,1.071000,1.041000,271,141,0,0,0.454237],
[5,0,683,673,250,167,-167.0,473.799988,0.261206,2.116000,1.812000,125,83,0,0,0.100000],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.154237,1.254237,341,111,0,0,0.325424],
[18,0,0,0,796,310,-332.188477,-554.973572,0.105697,0.833455,0.822515,398,155,0,0,0.398087],
[19,0,0,0,796,310,741.448181,291.731110,-1.655746,0.962750,1.217361,398,155,0,0,0.272784],
[20,0,0,0,796,310,-865.281372,421.700348,-6.438468,0.858319,1.117904,398,155,0,0,0.336211],
[21,0,543,372,366,221,679.295593,511.212219,0.554194,1.405336,1.295933,183,110,0,0,0.261695],
[22,0,543,372,366,221,-545.027771,578.843384,0.177133,1.405336,1.295933,183,110,0,0,0.261695],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.862712],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.862712],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.690170],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.862712],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.862712],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.862712],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.862712],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.862712],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.690170],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.690170],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.690170],
[8,0,0,818,571,206,-348.101685,582.821716,-0.082310,1.131828,0.994576,285,103,0,0,0.332663],
[9,0,0,818,571,206,25.858984,586.799988,-0.112574,0.994576,0.994576,285,103,0,0,0.267239],
[10,0,0,818,571,206,636.528809,543.038635,0.071000,0.954793,0.904070,285,103,0,0,0.332663],
[11,0,0,818,571,206,453.526794,513.201355,0.175720,0.986620,0.770797,285,103,0,0,0.070968],
[12,0,0,818,571,206,-700.181702,-560.941040,3.304676,0.832460,0.799639,285,103,0,0,0.654237],
[13,0,0,818,571,206,648.463745,-576.854248,2.821866,1.008500,1.204432,285,103,0,0,0.576391],
[14,0,0,818,571,206,153.164749,-604.702393,2.946727,1.511756,1.204432,285,103,0,0,0.463510],
[15,0,0,818,571,206,-783.726135,-33.815594,1.577516,0.989603,1.204432,285,103,0,0,0.463510],
[16,0,0,818,571,206,-813.563416,-342.134247,4.047523,0.828482,0.700182,285,103,0,0,0.332663],
[17,0,0,818,571,206,777.758667,-302.351196,4.945984,0.963744,1.204432,285,103,0,0,0.463510]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.152542,1.252542,341,111,0,0,0.315254],
[4,0,0,311,543,282,-596.898315,635.898315,-0.418879,1.071000,1.041000,271,141,0,0,0.452542],
[5,0,683,673,250,167,-167.0,473.533325,0.261206,2.122667,1.812000,125,83,0,0,0.066667],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.152542,1.252542,341,111,0,0,0.315254],
[18,0,0,0,796,310,-332.245087,-555.068176,0.105697,0.833597,0.822655,398,155,0,0,0.394843],
[19,0,0,0,796,310,741.776855,292.050629,-1.656338,0.962914,1.217569,398,155,0,0,0.267653],
[20,0,0,0,796,310,-865.428833,421.772217,-6.438468,0.858466,1.118094,398,155,0,0,0.333018],
[21,0,543,372,366,221,679.411377,511.299347,0.554194,1.405576,1.296154,183,110,0,0,0.261017],
[22,0,543,372,366,221,-545.120667,578.942078,0.177133,1.405576,1.296154,183,110,0,0,0.261017],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.857627],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.857627],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.686102],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.857627],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.857627],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.857627],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.857627],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.857627],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.686102],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.686102],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.686102],
[8,0,0,818,571,206,-348.161041,582.921021,-0.082310,1.132021,0.994746,285,103,0,0,0.329589],
[9,0,0,818,571,206,25.863390,586.900024,-0.112574,0.994746,0.994746,285,103,0,0,0.264335],
[10,0,0,818,571,206,636.637329,543.131226,0.071000,0.954956,0.904224,285,103,0,0,0.329589],
[11,0,0,818,571,206,453.604095,513.288818,0.175720,0.986788,0.770928,285,103,0,0,0.068572],
[12,0,0,818,571,206,-700.301025,-561.036621,3.304676,0.832602,0.799776,285,103,0,0,0.652542],
[13,0,0,818,571,206,648.574280,-576.952576,2.821866,1.008672,1.204637,285,103,0,0,0.573246],
[14,0,0,818,571,206,153.190857,-604.805420,2.946727,1.512014,1.204637,285,103,0,0,0.460098],
[15,0,0,818,571,206,-783.859680,-33.821358,1.577516,0.989772,1.204637,285,103,0,0,0.460098],
[16,0,0,818,571,206,-813.702087,-342.192566,4.047523,0.828623,0.700301,285,103,0,0,0.329589],
[17,0,0,818,571,206,777.891235,-302.402710,4.945984,0.963909,1.204637,285,103,0,0,0.460098]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.150848,1.250847,341,111,0,0,0.305085],
[4,0,0,311,543,282,-596.966125,635.966125,-0.418879,1.071000,1.041000,271,141,0,0,0.450847],
[5,0,683,673,250,167,-167.0,473.266663,0.261206,2.129333,1.812000,125,83,0,0,0.033333],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.150848,1.250847,341,111,0,0,0.305085],
[18,0,0,0,796,310,-332.301697,-555.162720,0.105697,0.833739,0.822795,398,155,0,0,0.391612],
[19,0,0,0,796,310,742.105591,292.370178,-1.656929,0.963078,1.217776,398,155,0,0,0.262545],
[20,0,0,0,796,310,-865.576294,421.844055,-6.438468,0.858612,1.118285,398,155,0,0,0.329836],
[21,0,543,372,366,221,679.527100,511.386444,0.554194,1.405815,1.296375,183,110,0,0,0.260339],
[22,0,543,372,366,221,-545.213562,579.040649,0.177133,1.405815,1.296375,183,110,0,0,0.260339],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.852542],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.852542],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.682034],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.852542],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.852542],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.852542],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.852542],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.852542],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.682034],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.682034],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.682034],
[8,0,0,818,571,206,-348.220337,583.020325,-0.082310,1.132214,0.994915,285,103,0,0,0.326527],
[9,0,0,818,571,206,25.867796,587.0,-0.112574,0.994915,0.994915,285,103,0,0,0.261442],
[10,0,0,818,571,206,636.745728,543.223755,0.071000,0.955119,0.904378,285,103,0,0,0.326527],
[11,0,0,818,571,206,453.681366,513.376282,0.175720,0.986956,0.771059,285,103,0,0,0.066188],
[12,0,0,818,571,206,-700.420349,-561.132202,3.304676,0.832744,0.799912,285,103,0,0,0.650847],
[13,0,0,818,571,206,648.684753,-577.050842,2.821866,1.008844,1.204842,285,103,0,0,0.570109],
[14,0,0,818,571,206,153.216949,-604.908447,2.946727,1.512271,1.204842,285,103,0,0,0.456696],
[15,0,0,818,571,206,-783.993225,-33.827118,1.577516,0.989941,1.204842,285,103,0,0,0.456696],
[16,0,0,818,571,206,-813.840698,-342.250854,4.047523,0.828764,0.700420,285,103,0,0,0.326527],
[17,0,0,818,571,206,778.023743,-302.454224,4.945984,0.964073,1.204842,285,103,0,0,0.456696]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.149153,1.249153,341,111,0,0,0.294915],
[4,0,0,311,543,282,-597.033875,636.033875,-0.418879,1.071000,1.041000,271,141,0,0,0.449153],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.149153,1.249153,341,111,0,0,0.294915],
[18,0,0,0,796,310,-332.358307,-555.257324,0.105697,0.833881,0.822935,398,155,0,0,0.388391],
[19,0,0,0,796,310,742.434387,292.689850,-1.657521,0.963242,1.217984,398,155,0,0,0.257461],
[20,0,0,0,796,310,-865.723755,421.915955,-6.438468,0.858758,1.118475,398,155,0,0,0.326667],
[21,0,543,372,366,221,679.642883,511.473572,0.554194,1.406055,1.296595,183,110,0,0,0.259661],
[22,0,543,372,366,221,-545.306458,579.139343,0.177133,1.406055,1.296595,183,110,0,0,0.259661],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.847458],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.847458],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.677966],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.847458],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.847458],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.847458],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.847458],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.847458],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.677966],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.677966],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.677966],
[8,0,0,818,571,206,-348.279663,583.119690,-0.082310,1.132406,0.995085,285,103,0,0,0.323476],
[9,0,0,818,571,206,25.872204,587.100037,-0.112574,0.995085,0.995085,285,103,0,0,0.258561],
[10,0,0,818,571,206,636.854248,543.316284,0.071000,0.955281,0.904532,285,103,0,0,0.323476],
[11,0,0,818,571,206,453.758667,513.463745,0.175720,0.987124,0.771191,285,103,0,0,0.063815],
[12,0,0,818,571,206,-700.539673,-561.227783,3.304676,0.832886,0.800048,285,103,0,0,0.649153],
[13,0,0,818,571,206,648.795288,-577.149170,2.821866,1.009016,1.205048,285,103,0,0,0.566981],
[14,0,0,818,571,206,153.243057,-605.011536,2.946727,1.512529,1.205048,285,103,0,0,0.453307],
[15,0,0,818,571,206,-784.126770,-33.832882,1.577516,0.990109,1.205048,285,103,0,0,0.453307],
[16,0,0,818,571,206,-813.979309,-342.309143,4.047523,0.828906,0.700540,285,103,0,0,0.323476],
[17,0,0,818,571,206,778.156311,-302.505768,4.945984,0.964237,1.205048,285,103,0,0,0.453307]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.147458,1.247458,341,111,0,0,0.284746],
[4,0,0,311,543,282,-597.101685,636.101685,-0.418879,1.071000,1.041000,271,141,0,0,0.447458],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.147458,1.247458,341,111,0,0,0.284746],
[18,0,0,0,796,310,-332.414917,-555.351868,0.105697,0.834023,0.823075,398,155,0,0,0.385182],
[19,0,0,0,796,310,742.763306,293.009583,-1.658113,0.963406,1.218191,398,155,0,0,0.252399],
[20,0,0,0,796,310,-865.871155,421.987793,-6.438468,0.858904,1.118666,398,155,0,0,0.323509],
[21,0,543,372,366,221,679.758606,511.560669,0.554194,1.406294,1.296816,183,110,0,0,0.258983],
[22,0,543,372,366,221,-545.399292,579.237976,0.177133,1.406294,1.296816,183,110,0,0,0.258983],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.842373],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.842373],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.673898],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.842373],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.842373],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.842373],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.842373],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.842373],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.673898],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.673898],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.673898],
[8,0,0,818,571,206,-348.338989,583.218994,-0.082310,1.132599,0.995254,285,103,0,0,0.320437],
[9,0,0,818,571,206,25.876610,587.200012,-0.112574,0.995254,0.995254,285,103,0,0,0.255691],
[10,0,0,818,571,206,636.962708,543.408813,0.071000,0.955444,0.904686,285,103,0,0,0.320437],
[11,0,0,818,571,206,453.835938,513.551147,0.175720,0.987292,0.771322,285,103,0,0,0.061454],
[12,0,0,818,571,206,-700.658997,-561.323364,3.304676,0.833028,0.800184,285,103,0,0,0.647458],
[13,0,0,818,571,206,648.905762,-577.247437,2.821866,1.009188,1.205253,285,103,0,0,0.563862],
[14,0,0,818,571,206,153.269150,-605.114563,2.946727,1.512786,1.205253,285,103,0,0,0.449928],
[15,0,0,818,571,206,-784.260315,-33.838642,1.577516,0.990278,1.205253,285,103,0,0,0.449928],
[16,0,0,818,571,206,-814.117981,-342.367462,4.047523,0.829047,0.700659,285,103,0,0,0.320437],
[17,0,0,818,571,206,778.288818,-302.557281,4.945984,0.964401,1.205253,285,103,0,0,0.449928]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.145763,1.245763,341,111,0,0,0.274576],
[4,0,0,311,543,282,-597.169495,636.169495,-0.418879,1.071000,1.041000,271,141,0,0,0.445763],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.145763,1.245763,341,111,0,0,0.274576],
[18,0,0,0,796,310,-332.471527,-555.446472,0.105697,0.834165,0.823215,398,155,0,0,0.381985],
[19,0,0,0,796,310,743.092285,293.329468,-1.658704,0.963570,1.218399,398,155,0,0,0.247360],
[20,0,0,0,796,310,-866.018677,422.059662,-6.438468,0.859051,1.118856,398,155,0,0,0.320364],
[21,0,543,372,366,221,679.874390,511.647797,0.554194,1.406534,1.297037,183,110,0,0,0.258305],
[22,0,543,372,366,221,-545.492188,579.336609,0.177133,1.406534,1.297037,183,110,0,0,0.258305],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.837288],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.837288],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.669831],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.837288],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.837288],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.837288],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.837288],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.837288],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.669831],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.669831],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.669831],
[8,0,0,818,571,206,-348.398315,583.318298,-0.082310,1.132792,0.995424,285,103,0,0,0.317409],
[9,0,0,818,571,206,25.881018,587.299988,-0.112574,0.995424,0.995424,285,103,0,0,0.252833],
[10,0,0,818,571,206,637.071167,543.501343,0.071000,0.955607,0.904840,285,103,0,0,0.317409],
[11,0,0,818,571,206,453.913208,513.638672,0.175720,0.987460,0.771453,285,103,0,0,0.059104],
[12,0,0,818,571,206,-700.778320,-561.419006,3.304676,0.833170,0.800321,285,103,0,0,0.645763],
[13,0,0,818,571,206,649.016296,-577.345764,2.821866,1.009360,1.205458,285,103,0,0,0.560751],
[14,0,0,818,571,206,153.295258,-605.217651,2.946727,1.513044,1.205458,285,103,0,0,0.446561],
[15,0,0,818,571,206,-784.393921,-33.844406,1.577516,0.990447,1.205458,285,103,0,0,0.446561],
[16,0,0,818,571,206,-814.256592,-342.425751,4.047523,0.829188,0.700778,285,103,0,0,0.317409],
[17,0,0,818,571,206,778.421387,-302.608826,4.945984,0.964566,1.205458,285,103,0,0,0.446561]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.144068,1.244068,341,111,0,0,0.264407],
[4,0,0,311,543,282,-597.237305,636.237305,-0.418879,1.071000,1.041000,271,141,0,0,0.444068],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.144068,1.244068,341,111,0,0,0.264407],
[18,0,0,0,796,310,-332.528137,-555.541016,0.105697,0.834307,0.823356,398,155,0,0,0.378799],
[19,0,0,0,796,310,743.421265,293.649384,-1.659296,0.963734,1.218606,398,155,0,0,0.242344],
[20,0,0,0,796,310,-866.166138,422.131531,-6.438468,0.859197,1.119047,398,155,0,0,0.317231],
[21,0,543,372,366,221,679.990173,511.734924,0.554194,1.406773,1.297258,183,110,0,0,0.257627],
[22,0,543,372,366,221,-545.585083,579.435242,0.177133,1.406773,1.297258,183,110,0,0,0.257627],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.832203],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.832203],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.665763],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.832203],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.832203],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.832203],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.832203],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.832203],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.665763],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.665763],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.665763],
[8,0,0,818,571,206,-348.457642,583.417664,-0.082310,1.132985,0.995593,285,103,0,0,0.314392],
[9,0,0,818,571,206,25.885424,587.400024,-0.112574,0.995593,0.995593,285,103,0,0,0.249986],
[10,0,0,818,571,206,637.179688,543.593933,0.071000,0.955769,0.904994,285,103,0,0,0.314392],
[11,0,0,818,571,206,453.990509,513.726135,0.175720,0.987628,0.771585,285,103,0,0,0.056765],
[12,0,0,818,571,206,-700.897644,-561.514587,3.304676,0.833312,0.800457,285,103,0,0,0.644068],
[13,0,0,818,571,206,649.126770,-577.444092,2.821866,1.009532,1.205663,285,103,0,0,0.557649],
[14,0,0,818,571,206,153.321365,-605.320679,2.946727,1.513302,1.205663,285,103,0,0,0.443206],
[15,0,0,818,571,206,-784.527466,-33.850170,1.577516,0.990615,1.205663,285,103,0,0,0.443206],
[16,0,0,818,571,206,-814.395264,-342.484070,4.047523,0.829329,0.700898,285,103,0,0,0.314392],
[17,0,0,818,571,206,778.553894,-302.660339,4.945984,0.964730,1.205663,285,103,0,0,0.443206]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.142373,1.242373,341,111,0,0,0.254237],
[4,0,0,311,543,282,-597.305115,636.305115,-0.418879,1.071000,1.041000,271,141,0,0,0.442373],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.142373,1.242373,341,111,0,0,0.254237],
[18,0,0,0,796,310,-332.584747,-555.635620,0.105697,0.834449,0.823496,398,155,0,0,0.375625],
[19,0,0,0,796,310,743.750366,293.969391,-1.659888,0.963898,1.218814,398,155,0,0,0.237351],
[20,0,0,0,796,310,-866.313538,422.203400,-6.438468,0.859343,1.119237,398,155,0,0,0.314109],
[21,0,543,372,366,221,680.105957,511.822021,0.554194,1.407013,1.297479,183,110,0,0,0.256949],
[22,0,543,372,366,221,-545.677979,579.533875,0.177133,1.407013,1.297479,183,110,0,0,0.256949],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.827119],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.827119],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.661695],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.827119],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.827119],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.827119],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.827119],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.827119],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.661695],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.661695],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.661695],
[8,0,0,818,571,206,-348.516937,583.516968,-0.082310,1.133178,0.995763,285,103,0,0,0.311388],
[9,0,0,818,571,206,25.889830,587.500000,-0.112574,0.995763,0.995763,285,103,0,0,0.247150],
[10,0,0,818,571,206,637.288147,543.686462,0.071000,0.955932,0.905148,285,103,0,0,0.311388],
[11,0,0,818,571,206,454.067780,513.813538,0.175720,0.987797,0.771716,285,103,0,0,0.054438],
[12,0,0,818,571,206,-701.016968,-561.610168,3.304676,0.833453,0.800593,285,103,0,0,0.642373],
[13,0,0,818,571,206,649.237305,-577.542358,2.821866,1.009703,1.205869,285,103,0,0,0.554555],
[14,0,0,818,571,206,153.347458,-605.423706,2.946727,1.513559,1.205869,285,103,0,0,0.439862],
[15,0,0,818,571,206,-784.661011,-33.855930,1.577516,0.990784,1.205869,285,103,0,0,0.439862],
[16,0,0,818,571,206,-814.533875,-342.542358,4.047523,0.829470,0.701017,285,103,0,0,0.311388],
[17,0,0,818,571,206,778.686462,-302.711853,4.945984,0.964894,1.205869,285,103,0,0,0.439862]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.140678,1.240678,341,111,0,0,0.244068],
[4,0,0,311,543,282,-597.372864,636.372864,-0.418879,1.071000,1.041000,271,141,0,0,0.440678],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.140678,1.240678,341,111,0,0,0.244068],
[18,0,0,0,796,310,-332.641357,-555.730164,0.105697,0.834591,0.823636,398,155,0,0,0.372462],
[19,0,0,0,796,310,744.079529,294.289520,-1.660479,0.964062,1.219021,398,155,0,0,0.232382],
[20,0,0,0,796,310,-866.461060,422.275269,-6.438468,0.859490,1.119428,398,155,0,0,0.311000],
[21,0,543,372,366,221,680.221680,511.909149,0.554194,1.407252,1.297700,183,110,0,0,0.256271],
[22,0,543,372,366,221,-545.770874,579.632568,0.177133,1.407252,1.297700,183,110,0,0,0.256271],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.822034],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.822034],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.657627],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.822034],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.822034],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.822034],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.822034],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.822034],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.657627],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.657627],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.657627],
[8,0,0,818,571,206,-348.576263,583.616272,-0.082310,1.133371,0.995932,285,103,0,0,0.308394],
[9,0,0,818,571,206,25.894238,587.600037,-0.112574,0.995932,0.995932,285,103,0,0,0.244326],
[10,0,0,818,571,206,637.396606,543.778992,0.071000,0.956095,0.905302,285,103,0,0,0.308394],
[11,0,0,818,571,206,454.145081,513.901001,0.175720,0.987965,0.771847,285,103,0,0,0.052123],
[12,0,0,818,571,206,-701.136292,-561.705750,3.304676,0.833595,0.800730,285,103,0,0,0.640678],
[13,0,0,818,571,206,649.347778,-577.640686,2.821866,1.009875,1.206074,285,103,0,0,0.551470],
[14,0,0,818,571,206,153.373566,-605.526794,2.946727,1.513817,1.206074,285,103,0,0,0.436530],
[15,0,0,818,571,206,-784.794617,-33.861694,1.577516,0.990953,1.206074,285,103,0,0,0.436530],
[16,0,0,818,571,206,-814.672546,-342.600677,4.047523,0.829612,0.701136,285,103,0,0,0.308394],
[17,0,0,818,571,206,778.818970,-302.763397,4.945984,0.965058,1.206074,285,103,0,0,0.436530]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.138983,1.238983,341,111,0,0,0.233898],
[4,0,0,311,543,282,-597.440674,636.440674,-0.418879,1.071000,1.041000,271,141,0,0,0.438983],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.138983,1.238983,341,111,0,0,0.233898],
[18,0,0,0,796,310,-332.697968,-555.824707,0.105697,0.834733,0.823776,398,155,0,0,0.369311],
[19,0,0,0,796,310,744.408691,294.609741,-1.661071,0.964226,1.219228,398,155,0,0,0.227435],
[20,0,0,0,796,310,-866.608459,422.347107,-6.438468,0.859636,1.119618,398,155,0,0,0.307903],
[21,0,543,372,366,221,680.337463,511.996277,0.554194,1.407492,1.297920,183,110,0,0,0.255593],
[22,0,543,372,366,221,-545.863708,579.731201,0.177133,1.407492,1.297920,183,110,0,0,0.255593],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.816949],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.816949],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.653559],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.816949],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.816949],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.816949],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.816949],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.816949],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.653559],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.653559],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.653559],
[8,0,0,818,571,206,-348.635590,583.715576,-0.082310,1.133564,0.996102,285,103,0,0,0.305412],
[9,0,0,818,571,206,25.898643,587.700012,-0.112574,0.996102,0.996102,285,103,0,0,0.241514],
[10,0,0,818,571,206,637.505066,543.871521,0.071000,0.956258,0.905456,285,103,0,0,0.305412],
[11,0,0,818,571,206,454.222351,513.988464,0.175720,0.988133,0.771979,285,103,0,0,0.049819],
[12,0,0,818,571,206,-701.255554,-561.801331,3.304676,0.833737,0.800866,285,103,0,0,0.638983],
[13,0,0,818,571,206,649.458313,-577.738953,2.821866,1.010047,1.206279,285,103,0,0,0.548393],
[14,0,0,818,571,206,153.399658,-605.629822,2.946727,1.514075,1.206279,285,103,0,0,0.433209],
[15,0,0,818,571,206,-784.928101,-33.867458,1.577516,0.991121,1.206279,285,103,0,0,0.433209],
[16,0,0,818,571,206,-814.811157,-342.658966,4.047523,0.829753,0.701256,285,103,0,0,0.305412],
[17,0,0,818,571,206,778.951538,-302.814911,4.945984,0.965222,1.206279,285,103,0,0,0.433209]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.137288,1.237288,341,111,0,0,0.223729],
[4,0,0,311,543,282,-597.508484,636.508484,-0.418879,1.071000,1.041000,271,141,0,0,0.437288],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.137288,1.237288,341,111,0,0,0.223729],
[18,0,0,0,796,310,-332.754578,-555.919312,0.105697,0.834875,0.823916,398,155,0,0,0.366171],
[19,0,0,0,796,310,744.738098,294.930054,-1.661662,0.964391,1.219436,398,155,0,0,0.222511],
[20,0,0,0,796,310,-866.755920,422.418976,-6.438468,0.859782,1.119809,398,155,0,0,0.304818],
[21,0,543,372,366,221,680.453247,512.083374,0.554194,1.407731,1.298141,183,110,0,0,0.254915],
[22,0,543,372,366,221,-545.956604,579.829834,0.177133,1.407731,1.298141,183,110,0,0,0.254915],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.811864],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.811864],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.649491],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.811864],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.811864],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.811864],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.811864],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.811864],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.649491],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.649491],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.649491],
[8,0,0,818,571,206,-348.694916,583.814941,-0.082310,1.133757,0.996271,285,103,0,0,0.302442],
[9,0,0,818,571,206,25.903051,587.799988,-0.112574,0.996271,0.996271,285,103,0,0,0.238713],
[10,0,0,818,571,206,637.613586,543.964050,0.071000,0.956420,0.905611,285,103,0,0,0.302442],
[11,0,0,818,571,206,454.299652,514.075928,0.175720,0.988301,0.772110,285,103,0,0,0.047527],
[12,0,0,818,571,206,-701.374939,-561.896973,3.304676,0.833879,0.801002,285,103,0,0,0.637288],
[13,0,0,818,571,206,649.568848,-577.837280,2.821866,1.010219,1.206484,285,103,0,0,0.545325],
[14,0,0,818,571,206,153.425766,-605.732910,2.946727,1.514332,1.206484,285,103,0,0,0.429899],
[15,0,0,818,571,206,-785.061707,-33.873222,1.577516,0.991290,1.206484,285,103,0,0,0.429899],
[16,0,0,818,571,206,-814.949829,-342.717285,4.047523,0.829894,0.701375,285,103,0,0,0.302442],
[17,0,0,818,571,206,779.084045,-302.866455,4.945984,0.965387,1.206484,285,103,0,0,0.429899]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.135593,1.235593,341,111,0,0,0.213559],
[4,0,0,311,543,282,-597.576294,636.576294,-0.418879,1.071000,1.041000,271,141,0,0,0.435593],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.135593,1.235593,341,111,0,0,0.213559],
[18,0,0,0,796,310,-332.811188,-556.013916,0.105697,0.835017,0.824057,398,155,0,0,0.363042],
[19,0,0,0,796,310,745.067444,295.250458,-1.662254,0.964555,1.219643,398,155,0,0,0.217610],
[20,0,0,0,796,310,-866.903442,422.490875,-6.438468,0.859928,1.119999,398,155,0,0,0.301745],
[21,0,543,372,366,221,680.569031,512.170532,0.554194,1.407971,1.298362,183,110,0,0,0.254237],
[22,0,543,372,366,221,-546.049500,579.928467,0.177133,1.407971,1.298362,183,110,0,0,0.254237],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.806780],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.806780],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.645424],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.806780],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.806780],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.806780],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.806780],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.806780],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.645424],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.645424],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.645424],
[8,0,0,818,571,206,-348.754242,583.914246,-0.082310,1.133950,0.996441,285,103,0,0,0.299483],
[9,0,0,818,571,206,25.907459,587.900024,-0.112574,0.996441,0.996441,285,103,0,0,0.235924],
[10,0,0,818,571,206,637.722046,544.056641,0.071000,0.956583,0.905765,285,103,0,0,0.299483],
[11,0,0,818,571,206,454.376953,514.163391,0.175720,0.988469,0.772242,285,103,0,0,0.045246],
[12,0,0,818,571,206,-701.494263,-561.992554,3.304676,0.834021,0.801138,285,103,0,0,0.635593],
[13,0,0,818,571,206,649.679321,-577.935608,2.821866,1.010391,1.206690,285,103,0,0,0.542266],
[14,0,0,818,571,206,153.451874,-605.835938,2.946727,1.514590,1.206690,285,103,0,0,0.426602],
[15,0,0,818,571,206,-785.195251,-33.878983,1.577516,0.991459,1.206690,285,103,0,0,0.426602],
[16,0,0,818,571,206,-815.088501,-342.775604,4.047523,0.830035,0.701494,285,103,0,0,0.299483],
[17,0,0,818,571,206,779.216614,-302.917969,4.945984,0.965551,1.206690,285,103,0,0,0.426602]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.133898,1.233898,341,111,0,0,0.203390],
[4,0,0,311,543,282,-597.644043,636.644043,-0.418879,1.071000,1.041000,271,141,0,0,0.433898],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.133898,1.233898,341,111,0,0,0.203390],
[18,0,0,0,796,310,-332.867798,-556.108459,0.105697,0.835159,0.824197,398,155,0,0,0.359925],
[19,0,0,0,796,310,745.396851,295.570923,-1.662846,0.964719,1.219851,398,155,0,0,0.212732],
[20,0,0,0,796,310,-867.050842,422.562714,-6.438468,0.860075,1.120190,398,155,0,0,0.298684],
[21,0,543,372,366,221,680.684753,512.257629,0.554194,1.408210,1.298583,183,110,0,0,0.253559],
[22,0,543,372,366,221,-546.142395,580.027100,0.177133,1.408210,1.298583,183,110,0,0,0.253559],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.801695],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.801695],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.641356],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.801695],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.801695],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.801695],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.801695],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.801695],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.641356],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.641356],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.641356],
[8,0,0,818,571,206,-348.813568,584.013550,-0.082310,1.134142,0.996610,285,103,0,0,0.296535],
[9,0,0,818,571,206,25.911865,588.0,-0.112574,0.996610,0.996610,285,103,0,0,0.233146],
[10,0,0,818,571,206,637.830505,544.149170,0.071000,0.956746,0.905919,285,103,0,0,0.296535],
[11,0,0,818,571,206,454.454224,514.250854,0.175720,0.988637,0.772373,285,103,0,0,0.042976],
[12,0,0,818,571,206,-701.613525,-562.088135,3.304676,0.834163,0.801275,285,103,0,0,0.633898],
[13,0,0,818,571,206,649.789856,-578.033875,2.821866,1.010563,1.206895,285,103,0,0,0.539215],
[14,0,0,818,571,206,153.477966,-605.938965,2.946727,1.514847,1.206895,285,103,0,0,0.423315],
[15,0,0,818,571,206,-785.328796,-33.884747,1.577516,0.991627,1.206895,285,103,0,0,0.423315],
[16,0,0,818,571,206,-815.227112,-342.833893,4.047523,0.830176,0.701614,285,103,0,0,0.296535],
[17,0,0,818,571,206,779.349121,-302.969482,4.945984,0.965715,1.206895,285,103,0,0,0.423315]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.132203,1.232203,341,111,0,0,0.193220],
[4,0,0,311,543,282,-597.711853,636.711853,-0.418879,1.071000,1.041000,271,141,0,0,0.432203],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.132203,1.232203,341,111,0,0,0.193220],
[18,0,0,0,796,310,-332.924408,-556.203064,0.105697,0.835301,0.824337,398,155,0,0,0.356820],
[19,0,0,0,796,310,745.726379,295.891541,-1.663437,0.964883,1.220058,398,155,0,0,0.207877],
[20,0,0,0,796,310,-867.198303,422.634583,-6.438468,0.860221,1.120380,398,155,0,0,0.295635],
[21,0,543,372,366,221,680.800537,512.344727,0.554194,1.408450,1.298804,183,110,0,0,0.252881],
[22,0,543,372,366,221,-546.235291,580.125793,0.177133,1.408450,1.298804,183,110,0,0,0.252881],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.796610],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.796610],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.637288],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.796610],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.796610],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.796610],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.796610],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.796610],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.637288],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.637288],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.637288],
[8,0,0,818,571,206,-348.872894,584.112915,-0.082310,1.134335,0.996780,285,103,0,0,0.293600],
[9,0,0,818,571,206,25.916271,588.100037,-0.112574,0.996780,0.996780,285,103,0,0,0.230379],
[10,0,0,818,571,206,637.938965,544.241699,0.071000,0.956908,0.906073,285,103,0,0,0.293600],
[11,0,0,818,571,206,454.531525,514.338318,0.175720,0.988805,0.772504,285,103,0,0,0.040718],
[12,0,0,818,571,206,-701.732910,-562.183716,3.304676,0.834305,0.801411,285,103,0,0,0.632203],
[13,0,0,818,571,206,649.900330,-578.132202,2.821866,1.010735,1.207100,285,103,0,0,0.536173],
[14,0,0,818,571,206,153.504074,-606.042053,2.946727,1.515105,1.207100,285,103,0,0,0.420040],
[15,0,0,818,571,206,-785.462402,-33.890511,1.577516,0.991796,1.207100,285,103,0,0,0.420040],
[16,0,0,818,571,206,-815.365784,-342.892212,4.047523,0.830317,0.701733,285,103,0,0,0.293600],
[17,0,0,818,571,206,779.481689,-303.021027,4.945984,0.965879,1.207100,285,103,0,0,0.420040]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.130509,1.230508,341,111,0,0,0.183051],
[4,0,0,311,543,282,-597.779663,636.779663,-0.418879,1.071000,1.041000,271,141,0,0,0.430508],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.130509,1.230508,341,111,0,0,0.183051],
[18,0,0,0,796,310,-332.981018,-556.297607,0.105697,0.835443,0.824477,398,155,0,0,0.353726],
[19,0,0,0,796,310,746.055908,296.212189,-1.664029,0.965047,1.220266,398,155,0,0,0.203045],
[20,0,0,0,796,310,-867.345764,422.706421,-6.438468,0.860367,1.120571,398,155,0,0,0.292599],
[21,0,543,372,366,221,680.916260,512.431885,0.554194,1.408689,1.299025,183,110,0,0,0.252203],
[22,0,543,372,366,221,-546.328125,580.224426,0.177133,1.408689,1.299025,183,110,0,0,0.252203],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.791525],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.791525],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.633220],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.791525],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.791525],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.791525],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.791525],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.791525],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.633220],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.633220],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.633220],
[8,0,0,818,571,206,-348.932190,584.212219,-0.082310,1.134528,0.996949,285,103,0,0,0.290675],
[9,0,0,818,571,206,25.920677,588.200012,-0.112574,0.996949,0.996949,285,103,0,0,0.227624],
[10,0,0,818,571,206,638.047424,544.334229,0.071000,0.957071,0.906227,285,103,0,0,0.290675],
[11,0,0,818,571,206,454.608795,514.425781,0.175720,0.988973,0.772636,285,103,0,0,0.038472],
[12,0,0,818,571,206,-701.852173,-562.279297,3.304676,0.834446,0.801547,285,103,0,0,0.630508],
[13,0,0,818,571,206,650.010864,-578.230469,2.821866,1.010906,1.207305,285,103,0,0,0.533139],
[14,0,0,818,571,206,153.530167,-606.145081,2.946727,1.515363,1.207305,285,103,0,0,0.416777],
[15,0,0,818,571,206,-785.595947,-33.896271,1.577516,0.991964,1.207305,285,103,0,0,0.416777],
[16,0,0,818,571,206,-815.504395,-342.950500,4.047523,0.830459,0.701852,285,103,0,0,0.290675],
[17,0,0,818,571,206,779.614197,-303.072540,4.945984,0.966044,1.207305,285,103,0,0,0.416777]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.128814,1.228814,341,111,0,0,0.172881],
[4,0,0,311,543,282,-597.847473,636.847473,-0.418879,1.071000,1.041000,271,141,0,0,0.428814],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.128814,1.228814,341,111,0,0,0.172881],
[18,0,0,0,796,310,-333.037628,-556.392212,0.105697,0.835585,0.824617,398,155,0,0,0.350644],
[19,0,0,0,796,310,746.385559,296.532959,-1.664621,0.965211,1.220473,398,155,0,0,0.198236],
[20,0,0,0,796,310,-867.493225,422.778320,-6.438468,0.860513,1.120761,398,155,0,0,0.289574],
[21,0,543,372,366,221,681.032043,512.518982,0.554194,1.408929,1.299246,183,110,0,0,0.251525],
[22,0,543,372,366,221,-546.421021,580.323059,0.177133,1.408929,1.299246,183,110,0,0,0.251525],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.786441],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.786441],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.629153],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.786441],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.786441],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.786441],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.786441],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.786441],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.629153],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.629153],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.629153],
[8,0,0,818,571,206,-348.991516,584.311523,-0.082310,1.134721,0.997119,285,103,0,0,0.287762],
[9,0,0,818,571,206,25.925085,588.299988,-0.112574,0.997119,0.997119,285,103,0,0,0.224881],
[10,0,0,818,571,206,638.155945,544.426758,0.071000,0.957234,0.906381,285,103,0,0,0.287762],
[11,0,0,818,571,206,454.686096,514.513245,0.175720,0.989142,0.772767,285,103,0,0,0.036237],
[12,0,0,818,571,206,-701.971558,-562.374939,3.304676,0.834588,0.801683,285,103,0,0,0.628814],
[13,0,0,818,571,206,650.121338,-578.328796,2.821866,1.011078,1.207511,285,103,0,0,0.530114],
[14,0,0,818,571,206,153.556274,-606.248169,2.946727,1.515620,1.207511,285,103,0,0,0.413525],
[15,0,0,818,571,206,-785.729492,-33.902035,1.577516,0.992133,1.207511,285,103,0,0,0.413525],
[16,0,0,818,571,206,-815.643066,-343.008820,4.047523,0.830600,0.701972,285,103,0,0,0.287762],
[17,0,0,818,571,206,779.746765,-303.124084,4.945984,0.966208,1.207511,285,103,0,0,0.413525]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.127119,1.227119,341,111,0,0,0.162712],
[4,0,0,311,543,282,-597.915283,636.915283,-0.418879,1.071000,1.041000,271,141,0,0,0.427119],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.127119,1.227119,341,111,0,0,0.162712],
[18,0,0,0,796,310,-333.094238,-556.486816,0.105697,0.835728,0.824757,398,155,0,0,0.347573],
[19,0,0,0,796,310,746.715332,296.853790,-1.665212,0.965375,1.220681,398,155,0,0,0.193450],
[20,0,0,0,796,310,-867.640686,422.850189,-6.438468,0.860660,1.120952,398,155,0,0,0.286561],
[21,0,543,372,366,221,681.147827,512.606140,0.554194,1.409168,1.299466,183,110,0,0,0.250847],
[22,0,543,372,366,221,-546.513916,580.421692,0.177133,1.409168,1.299466,183,110,0,0,0.250847],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.781356],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.781356],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.625085],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.781356],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.781356],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.781356],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.781356],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.781356],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.625085],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.625085],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.625085],
[8,0,0,818,571,206,-349.050873,584.410889,-0.082310,1.134914,0.997288,285,103,0,0,0.284861],
[9,0,0,818,571,206,25.929493,588.400024,-0.112574,0.997288,0.997288,285,103,0,0,0.222149],
[10,0,0,818,571,206,638.264404,544.519348,0.071000,0.957397,0.906535,285,103,0,0,0.284861],
[11,0,0,818,571,206,454.763397,514.600708,0.175720,0.989310,0.772898,285,103,0,0,0.034013],
[12,0,0,818,571,206,-702.090881,-562.470520,3.304676,0.834730,0.801820,285,103,0,0,0.627119],
[13,0,0,818,571,206,650.231873,-578.427124,2.821866,1.011250,1.207716,285,103,0,0,0.527097],
[14,0,0,818,571,206,153.582382,-606.351196,2.946727,1.515878,1.207716,285,103,0,0,0.410284],
[15,0,0,818,571,206,-785.863098,-33.907799,1.577516,0.992302,1.207716,285,103,0,0,0.410284],
[16,0,0,818,571,206,-815.781738,-343.067139,4.047523,0.830741,0.702091,285,103,0,0,0.284861],
[17,0,0,818,571,206,779.879333,-303.175598,4.945984,0.966372,1.207716,285,103,0,0,0.410284]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.125424,1.225424,341,111,0,0,0.152542],
[4,0,0,311,543,282,-597.983032,636.983032,-0.418879,1.071000,1.041000,271,141,0,0,0.425424],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.125424,1.225424,341,111,0,0,0.152542],
[18,0,0,0,796,310,-333.150848,-556.581360,0.105697,0.835869,0.824897,398,155,0,0,0.344513],
[19,0,0,0,796,310,747.045044,297.174744,-1.665804,0.965539,1.220888,398,155,0,0,0.188687],
[20,0,0,0,796,310,-867.788147,422.922028,-6.438468,0.860806,1.121142,398,155,0,0,0.283561],
[21,0,543,372,366,221,681.263550,512.693237,0.554194,1.409408,1.299687,183,110,0,0,0.250169],
[22,0,543,372,366,221,-546.606750,580.520325,0.177133,1.409408,1.299687,183,110,0,0,0.250169],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.776271],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.776271],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.621017],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.776271],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.776271],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.776271],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.776271],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.776271],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.621017],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.621017],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.621017],
[8,0,0,818,571,206,-349.110168,584.510193,-0.082310,1.135107,0.997458,285,103,0,0,0.281971],
[9,0,0,818,571,206,25.933899,588.500000,-0.112574,0.997458,0.997458,285,103,0,0,0.219428],
[10,0,0,818,571,206,638.372864,544.611877,0.071000,0.957559,0.906689,285,103,0,0,0.281971],
[11,0,0,818,571,206,454.840668,514.688110,0.175720,0.989478,0.773030,285,103,0,0,0.031801],
[12,0,0,818,571,206,-702.210144,-562.566101,3.304676,0.834872,0.801956,285,103,0,0,0.625424],
[13,0,0,818,571,206,650.342346,-578.525452,2.821866,1.011422,1.207921,285,103,0,0,0.524089],
[14,0,0,818,571,206,153.608475,-606.454224,2.946727,1.516136,1.207921,285,103,0,0,0.407055],
[15,0,0,818,571,206,-785.996582,-33.913559,1.577516,0.992470,1.207921,285,103,0,0,0.407055],
[16,0,0,818,571,206,-815.920349,-343.125427,4.047523,0.830882,0.702210,285,103,0,0,0.281971],
[17,0,0,818,571,206,780.011841,-303.227112,4.945984,0.966536,1.207921,285,103,0,0,0.407055]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.123729,1.223729,341,111,0,0,0.142373],
[4,0,0,311,543,282,-598.050842,637.050842,-0.418879,1.071000,1.041000,271,141,0,0,0.423729],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.123729,1.223729,341,111,0,0,0.142373],
[18,0,0,0,796,310,-333.207458,-556.675964,0.105697,0.836012,0.825038,398,155,0,0,0.341465],
[19,0,0,0,796,310,747.374878,297.495819,-1.666396,0.965703,1.221096,398,155,0,0,0.183947],
[20,0,0,0,796,310,-867.935608,422.993896,-6.438468,0.860952,1.121333,398,155,0,0,0.280572],
[21,0,543,372,366,221,681.379333,512.780334,0.554194,1.409647,1.299908,183,110,0,0,0.249492],
[22,0,543,372,366,221,-546.699646,580.619019,0.177133,1.409647,1.299908,183,110,0,0,0.249492],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.771186],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.771186],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.616949],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.771186],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.771186],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.771186],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.771186],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.771186],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.616949],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.616949],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.616949],
[8,0,0,818,571,206,-349.169495,584.609497,-0.082310,1.135300,0.997627,285,103,0,0,0.279092],
[9,0,0,818,571,206,25.938305,588.600037,-0.112574,0.997627,0.997627,285,103,0,0,0.216719],
[10,0,0,818,571,206,638.481384,544.704407,0.071000,0.957722,0.906843,285,103,0,0,0.279092],
[11,0,0,818,571,206,454.917969,514.775574,0.175720,0.989646,0.773161,285,103,0,0,0.029601],
[12,0,0,818,571,206,-702.329529,-562.661682,3.304676,0.835014,0.802092,285,103,0,0,0.623729],
[13,0,0,818,571,206,650.452881,-578.623718,2.821866,1.011594,1.208126,285,103,0,0,0.521090],
[14,0,0,818,571,206,153.634583,-606.557312,2.946727,1.516393,1.208126,285,103,0,0,0.403838],
[15,0,0,818,571,206,-786.130188,-33.919323,1.577516,0.992639,1.208126,285,103,0,0,0.403838],
[16,0,0,818,571,206,-816.059021,-343.183746,4.047523,0.831023,0.702330,285,103,0,0,0.279092],
[17,0,0,818,571,206,780.144409,-303.278656,4.945984,0.966701,1.208126,285,103,0,0,0.403838]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.122034,1.222034,341,111,0,0,0.132203],
[4,0,0,311,543,282,-598.118652,637.118652,-0.418879,1.071000,1.041000,271,141,0,0,0.422034],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.122034,1.222034,341,111,0,0,0.132203],
[18,0,0,0,796,310,-333.264069,-556.770508,0.105697,0.836154,0.825178,398,155,0,0,0.338429],
[19,0,0,0,796,310,747.704834,297.816925,-1.666987,0.965867,1.221303,398,155,0,0,0.179230],
[20,0,0,0,796,310,-868.083008,423.065765,-6.438468,0.861098,1.121523,398,155,0,0,0.277596],
[21,0,543,372,366,221,681.495056,512.867432,0.554194,1.409887,1.300129,183,110,0,0,0.248814],
[22,0,543,372,366,221,-546.792542,580.717590,0.177133,1.409887,1.300129,183,110,0,0,0.248814],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.766102],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.766102],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.612881],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.766102],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.766102],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.766102],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.766102],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.766102],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.612881],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.612881],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.612881],
[8,0,0,818,571,206,-349.228821,584.708801,-0.082310,1.135493,0.997797,285,103,0,0,0.276225],
[9,0,0,818,571,206,25.942711,588.700012,-0.112574,0.997797,0.997797,285,103,0,0,0.214022],
[10,0,0,818,571,206,638.589844,544.796936,0.071000,0.957885,0.906997,285,103,0,0,0.276225],
[11,0,0,818,571,206,454.995239,514.863037,0.175720,0.989814,0.773292,285,103,0,0,0.027412],
[12,0,0,818,571,206,-702.448792,-562.757263,3.304676,0.835156,0.802229,285,103,0,0,0.622034],
[13,0,0,818,571,206,650.563354,-578.722046,2.821866,1.011766,1.208332,285,103,0,0,0.518099],
[14,0,0,818,571,206,153.660675,-606.660339,2.946727,1.516651,1.208332,285,103,0,0,0.400632],
[15,0,0,818,571,206,-786.263733,-33.925083,1.577516,0.992808,1.208332,285,103,0,0,0.400632],
[16,0,0,818,571,206,-816.197632,-343.242035,4.047523,0.831165,0.702449,285,103,0,0,0.276225],
[17,0,0,818,571,206,780.276917,-303.330170,4.945984,0.966865,1.208332,285,103,0,0,0.400632]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.120339,1.220339,341,111,0,0,0.122034],
[4,0,0,311,543,282,-598.186462,637.186462,-0.418879,1.071000,1.041000,271,141,0,0,0.420339],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.120339,1.220339,341,111,0,0,0.122034],
[18,0,0,0,796,310,-333.320679,-556.865112,0.105697,0.836296,0.825318,398,155,0,0,0.335404],
[19,0,0,0,796,310,748.034790,298.138153,-1.667579,0.966031,1.221511,398,155,0,0,0.174536],
[20,0,0,0,796,310,-868.230530,423.137634,-6.438468,0.861245,1.121714,398,155,0,0,0.274631],
[21,0,543,372,366,221,681.610840,512.954590,0.554194,1.410126,1.300350,183,110,0,0,0.248136],
[22,0,543,372,366,221,-546.885437,580.816284,0.177133,1.410126,1.300350,183,110,0,0,0.248136],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.761017],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.761017],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.608814],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.761017],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.761017],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.761017],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.761017],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.761017],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.608814],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.608814],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.608814],
[8,0,0,818,571,206,-349.288147,584.808167,-0.082310,1.135685,0.997966,285,103,0,0,0.273370],
[9,0,0,818,571,206,25.947119,588.799988,-0.112574,0.997966,0.997966,285,103,0,0,0.211336],
[10,0,0,818,571,206,638.698303,544.889526,0.071000,0.958047,0.907151,285,103,0,0,0.273370],
[11,0,0,818,571,206,455.072540,514.950500,0.175720,0.989982,0.773424,285,103,0,0,0.025234],
[12,0,0,818,571,206,-702.568115,-562.852905,3.304676,0.835298,0.802365,285,103,0,0,0.620339],
[13,0,0,818,571,206,650.673889,-578.820374,2.821866,1.011938,1.208537,285,103,0,0,0.515117],
[14,0,0,818,571,206,153.686783,-606.763367,2.946727,1.516909,1.208537,285,103,0,0,0.397438],
[15,0,0,818,571,206,-786.397278,-33.930847,1.577516,0.992976,1.208537,285,103,0,0,0.397438],
[16,0,0,818,571,206,-816.336304,-343.300354,4.047523,0.831306,0.702568,285,103,0,0,0.273370],
[17,0,0,818,571,206,780.409485,-303.381683,4.945984,0.967029,1.208537,285,103,0,0,0.397438]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.118644,1.218644,341,111,0,0,0.111864],
[4,0,0,311,543,282,-598.254211,637.254211,-0.418879,1.071000,1.041000,271,141,0,0,0.418644],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.118644,1.218644,341,111,0,0,0.111864],
[18,0,0,0,796,310,-333.377289,-556.959656,0.105697,0.836438,0.825458,398,155,0,0,0.332390],
[19,0,0,0,796,310,748.364807,298.459442,-1.668170,0.966195,1.221718,398,155,0,0,0.169865],
[20,0,0,0,796,310,-868.377930,423.209473,-6.438468,0.861391,1.121904,398,155,0,0,0.271679],
[21,0,543,372,366,221,681.726563,513.041687,0.554194,1.410366,1.300571,183,110,0,0,0.247458],
[22,0,543,372,366,221,-546.978271,580.914917,0.177133,1.410366,1.300571,183,110,0,0,0.247458],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.755932],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.755932],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.604746],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.755932],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.755932],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.755932],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.755932],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.755932],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.604746],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.604746],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.604746],
[8,0,0,818,571,206,-349.347443,584.907471,-0.082310,1.135878,0.998136,285,103,0,0,0.270526],
[9,0,0,818,571,206,25.951525,588.899963,-0.112574,0.998136,0.998136,285,103,0,0,0.208661],
[10,0,0,818,571,206,638.806763,544.981995,0.071000,0.958210,0.907305,285,103,0,0,0.270526],
[11,0,0,818,571,206,455.149811,515.037964,0.175720,0.990150,0.773555,285,103,0,0,0.023068],
[12,0,0,818,571,206,-702.687439,-562.948486,3.304676,0.835440,0.802501,285,103,0,0,0.618644],
[13,0,0,818,571,206,650.784363,-578.918640,2.821866,1.012110,1.208742,285,103,0,0,0.512143],
[14,0,0,818,571,206,153.712875,-606.866455,2.946727,1.517166,1.208742,285,103,0,0,0.394255],
[15,0,0,818,571,206,-786.530823,-33.936607,1.577516,0.993145,1.208742,285,103,0,0,0.394255],
[16,0,0,818,571,206,-816.474915,-343.358643,4.047523,0.831447,0.702687,285,103,0,0,0.270526],
[17,0,0,818,571,206,780.541992,-303.433228,4.945984,0.967193,1.208742,285,103,0,0,0.394255]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.116949,1.216949,341,111,0,0,0.101695],
[4,0,0,311,543,282,-598.322021,637.322021,-0.418879,1.071000,1.041000,271,141,0,0,0.416949],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.116949,1.216949,341,111,0,0,0.101695],
[18,0,0,0,796,310,-333.433899,-557.054260,0.105697,0.836580,0.825598,398,155,0,0,0.329388],
[19,0,0,0,796,310,748.695007,298.780884,-1.668762,0.966359,1.221925,398,155,0,0,0.165217],
[20,0,0,0,796,310,-868.525452,423.281342,-6.438468,0.861537,1.122095,398,155,0,0,0.268739],
[21,0,543,372,366,221,681.842346,513.128784,0.554194,1.410605,1.300792,183,110,0,0,0.246780],
[22,0,543,372,366,221,-547.071167,581.013550,0.177133,1.410605,1.300792,183,110,0,0,0.246780],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.750847],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.750847],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.600678],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.750847],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.750847],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.750847],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.750847],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.750847],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.600678],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.600678],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.600678],
[8,0,0,818,571,206,-349.406769,585.006775,-0.082310,1.136071,0.998305,285,103,0,0,0.267693],
[9,0,0,818,571,206,25.955933,589.0,-0.112574,0.998305,0.998305,285,103,0,0,0.205998],
[10,0,0,818,571,206,638.915283,545.074585,0.071000,0.958373,0.907459,285,103,0,0,0.267693],
[11,0,0,818,571,206,455.227112,515.125427,0.175720,0.990319,0.773686,285,103,0,0,0.020914],
[12,0,0,818,571,206,-702.806763,-563.044067,3.304676,0.835581,0.802637,285,103,0,0,0.616949],
[13,0,0,818,571,206,650.894897,-579.016968,2.821866,1.012281,1.208947,285,103,0,0,0.509178],
[14,0,0,818,571,206,153.738983,-606.969482,2.946727,1.517424,1.208947,285,103,0,0,0.391083],
[15,0,0,818,571,206,-786.664429,-33.942371,1.577516,0.993314,1.208947,285,103,0,0,0.391083],
[16,0,0,818,571,206,-816.613586,-343.416962,4.047523,0.831588,0.702807,285,103,0,0,0.267693],
[17,0,0,818,571,206,780.674561,-303.484741,4.945984,0.967358,1.208947,285,103,0,0,0.391083]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.115254,1.215254,341,111,0,0,0.091525],
[4,0,0,311,543,282,-598.389832,637.389832,-0.418879,1.071000,1.041000,271,141,0,0,0.415254],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.115254,1.215254,341,111,0,0,0.091525],
[18,0,0,0,796,310,-333.490509,-557.148804,0.105697,0.836722,0.825738,398,155,0,0,0.326398],
[19,0,0,0,796,310,749.025208,299.102386,-1.669354,0.966523,1.222133,398,155,0,0,0.160592],
[20,0,0,0,796,310,-868.672913,423.353241,-6.438468,0.861684,1.122285,398,155,0,0,0.265811],
[21,0,543,372,366,221,681.958130,513.215942,0.554194,1.410845,1.301012,183,110,0,0,0.246102],
[22,0,543,372,366,221,-547.164063,581.112244,0.177133,1.410845,1.301012,183,110,0,0,0.246102],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.745763],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.745763],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.596610],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.745763],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.745763],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.745763],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.745763],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.745763],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.596610],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.596610],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.596610],
[8,0,0,818,571,206,-349.466095,585.106140,-0.082310,1.136264,0.998475,285,103,0,0,0.264872],
[9,0,0,818,571,206,25.960339,589.100037,-0.112574,0.998475,0.998475,285,103,0,0,0.203347],
[10,0,0,818,571,206,639.023743,545.167114,0.071000,0.958536,0.907613,285,103,0,0,0.264872],
[11,0,0,818,571,206,455.304413,515.212891,0.175720,0.990487,0.773818,285,103,0,0,0.018770],
[12,0,0,818,571,206,-702.926147,-563.139648,3.304676,0.835723,0.802774,285,103,0,0,0.615254],
[13,0,0,818,571,206,651.005432,-579.115295,2.821866,1.012453,1.209153,285,103,0,0,0.506222],
[14,0,0,818,571,206,153.765091,-607.072571,2.946727,1.517681,1.209153,285,103,0,0,0.387923],
[15,0,0,818,571,206,-786.797974,-33.948135,1.577516,0.993482,1.209153,285,103,0,0,0.387923],
[16,0,0,818,571,206,-816.752197,-343.475250,4.047523,0.831729,0.702926,285,103,0,0,0.264872],
[17,0,0,818,571,206,780.807129,-303.536285,4.945984,0.967522,1.209153,285,103,0,0,0.387923]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.113559,1.213559,341,111,0,0,0.081356],
[4,0,0,311,543,282,-598.457642,637.457642,-0.418879,1.071000,1.041000,271,141,0,0,0.413559],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.113559,1.213559,341,111,0,0,0.081356],
[18,0,0,0,796,310,-333.547119,-557.243408,0.105697,0.836864,0.825879,398,155,0,0,0.323419],
[19,0,0,0,796,310,749.355408,299.423950,-1.669945,0.966687,1.222340,398,155,0,0,0.155990],
[20,0,0,0,796,310,-868.820313,423.425079,-6.438468,0.861830,1.122476,398,155,0,0,0.262895],
[21,0,543,372,366,221,682.073914,513.303040,0.554194,1.411084,1.301233,183,110,0,0,0.245424],
[22,0,543,372,366,221,-547.256958,581.210815,0.177133,1.411084,1.301233,183,110,0,0,0.245424],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.740678],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.740678],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.592542],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.740678],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.740678],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.740678],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.740678],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.740678],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.592542],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.592542],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.592542],
[8,0,0,818,571,206,-349.525421,585.205444,-0.082310,1.136457,0.998644,285,103,0,0,0.262063],
[9,0,0,818,571,206,25.964745,589.200012,-0.112574,0.998644,0.998644,285,103,0,0,0.200707],
[10,0,0,818,571,206,639.132202,545.259644,0.071000,0.958698,0.907767,285,103,0,0,0.262063],
[11,0,0,818,571,206,455.381683,515.300354,0.175720,0.990655,0.773949,285,103,0,0,0.016639],
[12,0,0,818,571,206,-703.045410,-563.235229,3.304676,0.835865,0.802910,285,103,0,0,0.613559],
[13,0,0,818,571,206,651.115906,-579.213562,2.821866,1.012625,1.209358,285,103,0,0,0.503274],
[14,0,0,818,571,206,153.791183,-607.175598,2.946727,1.517939,1.209358,285,103,0,0,0.384775],
[15,0,0,818,571,206,-786.931519,-33.953899,1.577516,0.993651,1.209358,285,103,0,0,0.384775],
[16,0,0,818,571,206,-816.890808,-343.533569,4.047523,0.831870,0.703045,285,103,0,0,0.262063],
[17,0,0,818,571,206,780.939636,-303.587799,4.945984,0.967686,1.209358,285,103,0,0,0.384775]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.111864,1.211864,341,111,0,0,0.071186],
[4,0,0,311,543,282,-598.525452,637.525452,-0.418879,1.071000,1.041000,271,141,0,0,0.411864],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.111864,1.211864,341,111,0,0,0.071186],
[18,0,0,0,796,310,-333.603729,-557.337952,0.105697,0.837006,0.826019,398,155,0,0,0.320451],
[19,0,0,0,796,310,749.685791,299.745636,-1.670537,0.966852,1.222548,398,155,0,0,0.151411],
[20,0,0,0,796,310,-868.967834,423.496948,-6.438468,0.861976,1.122666,398,155,0,0,0.259991],
[21,0,543,372,366,221,682.189697,513.390198,0.554194,1.411324,1.301454,183,110,0,0,0.244746],
[22,0,543,372,366,221,-547.349854,581.309509,0.177133,1.411324,1.301454,183,110,0,0,0.244746],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.735593],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.735593],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.588475],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.735593],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.735593],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.735593],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.735593],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.735593],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.588475],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.588475],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.588475],
[8,0,0,818,571,206,-349.584747,585.304749,-0.082310,1.136650,0.998814,285,103,0,0,0.259265],
[9,0,0,818,571,206,25.969152,589.299988,-0.112574,0.998814,0.998814,285,103,0,0,0.198078],
[10,0,0,818,571,206,639.240662,545.352234,0.071000,0.958861,0.907921,285,103,0,0,0.259265],
[11,0,0,818,571,206,455.458984,515.387817,0.175720,0.990823,0.774081,285,103,0,0,0.014519],
[12,0,0,818,571,206,-703.164734,-563.330872,3.304676,0.836007,0.803046,285,103,0,0,0.611864],
[13,0,0,818,571,206,651.226440,-579.311890,2.821866,1.012797,1.209563,285,103,0,0,0.500335],
[14,0,0,818,571,206,153.817291,-607.278625,2.946727,1.518197,1.209563,285,103,0,0,0.381637],
[15,0,0,818,571,206,-787.065063,-33.959660,1.577516,0.993820,1.209563,285,103,0,0,0.381637],
[16,0,0,818,571,206,-817.029480,-343.591858,4.047523,0.832012,0.703165,285,103,0,0,0.259265],
[17,0,0,818,571,206,781.072205,-303.639313,4.945984,0.967850,1.209563,285,103,0,0,0.381637]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.110170,1.210170,341,111,0,0,0.061017],
[4,0,0,311,543,282,-598.593201,637.593201,-0.418879,1.071000,1.041000,271,141,0,0,0.410170],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.110170,1.210170,341,111,0,0,0.061017],
[18,0,0,0,796,310,-333.660339,-557.432556,0.105697,0.837148,0.826159,398,155,0,0,0.317495],
[19,0,0,0,796,310,750.016113,300.067413,-1.671129,0.967016,1.222755,398,155,0,0,0.146854],
[20,0,0,0,796,310,-869.115234,423.568817,-6.438468,0.862122,1.122857,398,155,0,0,0.257099],
[21,0,543,372,366,221,682.305420,513.477295,0.554194,1.411563,1.301675,183,110,0,0,0.244068],
[22,0,543,372,366,221,-547.442688,581.408142,0.177133,1.411563,1.301675,183,110,0,0,0.244068],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.730508],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.730508],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.584407],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.730508],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.730508],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.730508],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.730508],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.730508],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.584407],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.584407],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.584407],
[8,0,0,818,571,206,-349.644073,585.404053,-0.082310,1.136843,0.998983,285,103,0,0,0.256478],
[9,0,0,818,571,206,25.973558,589.399963,-0.112574,0.998983,0.998983,285,103,0,0,0.195461],
[10,0,0,818,571,206,639.349121,545.444702,0.071000,0.959024,0.908076,285,103,0,0,0.256478],
[11,0,0,818,571,206,455.536255,515.475220,0.175720,0.990991,0.774212,285,103,0,0,0.012410],
[12,0,0,818,571,206,-703.284058,-563.426453,3.304676,0.836149,0.803182,285,103,0,0,0.610170],
[13,0,0,818,571,206,651.336914,-579.410156,2.821866,1.012969,1.209768,285,103,0,0,0.497404],
[14,0,0,818,571,206,153.843384,-607.381653,2.946727,1.518454,1.209768,285,103,0,0,0.378512],
[15,0,0,818,571,206,-787.198608,-33.965424,1.577516,0.993988,1.209768,285,103,0,0,0.378512],
[16,0,0,818,571,206,-817.168091,-343.650146,4.047523,0.832153,0.703284,285,103,0,0,0.256478],
[17,0,0,818,571,206,781.204712,-303.690826,4.945984,0.968015,1.209768,285,103,0,0,0.378512]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.108475,1.208475,341,111,0,0,0.050847],
[4,0,0,311,543,282,-598.661011,637.661011,-0.418879,1.071000,1.041000,271,141,0,0,0.408475],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.108475,1.208475,341,111,0,0,0.050847],
[18,0,0,0,796,310,-333.716949,-557.527100,0.105697,0.837290,0.826299,398,155,0,0,0.314550],
[19,0,0,0,796,310,750.346619,300.389282,-1.671720,0.967180,1.222963,398,155,0,0,0.142321],
[20,0,0,0,796,310,-869.262695,423.640686,-6.438468,0.862269,1.123047,398,155,0,0,0.254219],
[21,0,543,372,366,221,682.421204,513.564392,0.554194,1.411803,1.301896,183,110,0,0,0.243390],
[22,0,543,372,366,221,-547.535583,581.506775,0.177133,1.411803,1.301896,183,110,0,0,0.243390],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.725424],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.725424],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.580339],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.725424],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.725424],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.725424],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.725424],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.725424],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.580339],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.580339],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.580339],
[8,0,0,818,571,206,-349.703400,585.503418,-0.082310,1.137036,0.999153,285,103,0,0,0.253703],
[9,0,0,818,571,206,25.977966,589.500000,-0.112574,0.999153,0.999153,285,103,0,0,0.192856],
[10,0,0,818,571,206,639.457642,545.537292,0.071000,0.959186,0.908230,285,103,0,0,0.253703],
[11,0,0,818,571,206,455.613556,515.562683,0.175720,0.991159,0.774343,285,103,0,0,0.010313],
[12,0,0,818,571,206,-703.403381,-563.522034,3.304676,0.836291,0.803319,285,103,0,0,0.608475],
[13,0,0,818,571,206,651.447449,-579.508484,2.821866,1.013141,1.209974,285,103,0,0,0.494482],
[14,0,0,818,571,206,153.869492,-607.484741,2.946727,1.518712,1.209974,285,103,0,0,0.375398],
[15,0,0,818,571,206,-787.332214,-33.971188,1.577516,0.994157,1.209974,285,103,0,0,0.375398],
[16,0,0,818,571,206,-817.306763,-343.708466,4.047523,0.832294,0.703403,285,103,0,0,0.253703],
[17,0,0,818,571,206,781.337280,-303.742371,4.945984,0.968179,1.209974,285,103,0,0,0.375398]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.106780,1.206780,341,111,0,0,0.040678],
[4,0,0,311,543,282,-598.728821,637.728821,-0.418879,1.071000,1.041000,271,141,0,0,0.406780],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.106780,1.206780,341,111,0,0,0.040678],
[18,0,0,0,796,310,-333.773560,-557.621704,0.105697,0.837432,0.826439,398,155,0,0,0.311617],
[19,0,0,0,796,310,750.677185,300.711243,-1.672312,0.967344,1.223170,398,155,0,0,0.137811],
[20,0,0,0,796,310,-869.410217,423.712555,-6.438468,0.862415,1.123238,398,155,0,0,0.251351],
[21,0,543,372,366,221,682.536987,513.651550,0.554194,1.412042,1.302117,183,110,0,0,0.242712],
[22,0,543,372,366,221,-547.628479,581.605408,0.177133,1.412042,1.302117,183,110,0,0,0.242712],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.720339],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.720339],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.576271],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.720339],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.720339],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.720339],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.720339],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.720339],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.576271],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.576271],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.576271],
[8,0,0,818,571,206,-349.762726,585.602722,-0.082310,1.137228,0.999322,285,103,0,0,0.250939],
[9,0,0,818,571,206,25.982374,589.600037,-0.112574,0.999322,0.999322,285,103,0,0,0.190261],
[10,0,0,818,571,206,639.566101,545.629822,0.071000,0.959349,0.908384,285,103,0,0,0.250939],
[11,0,0,818,571,206,455.690857,515.650208,0.175720,0.991327,0.774475,285,103,0,0,0.008228],
[12,0,0,818,571,206,-703.522705,-563.617615,3.304676,0.836433,0.803455,285,103,0,0,0.606780],
[13,0,0,818,571,206,651.557983,-579.606812,2.821866,1.013313,1.210179,285,103,0,0,0.491568],
[14,0,0,818,571,206,153.895599,-607.587830,2.946727,1.518970,1.210179,285,103,0,0,0.372295],
[15,0,0,818,571,206,-787.465759,-33.976952,1.577516,0.994325,1.210179,285,103,0,0,0.372295],
[16,0,0,818,571,206,-817.445435,-343.766785,4.047523,0.832435,0.703523,285,103,0,0,0.250939],
[17,0,0,818,571,206,781.469849,-303.793915,4.945984,0.968343,1.210179,285,103,0,0,0.372295]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.105085,1.205085,341,111,0,0,0.030508],
[4,0,0,311,543,282,-598.796631,637.796631,-0.418879,1.071000,1.041000,271,141,0,0,0.405085],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.105085,1.205085,341,111,0,0,0.030508],
[18,0,0,0,796,310,-333.830170,-557.716248,0.105697,0.837574,0.826580,398,155,0,0,0.308696],
[19,0,0,0,796,310,751.007751,301.033295,-1.672904,0.967508,1.223378,398,155,0,0,0.133324],
[20,0,0,0,796,310,-869.557617,423.784393,-6.438468,0.862561,1.123428,398,155,0,0,0.248495],
[21,0,543,372,366,221,682.652710,513.738647,0.554194,1.412282,1.302337,183,110,0,0,0.242034],
[22,0,543,372,366,221,-547.721375,581.704041,0.177133,1.412282,1.302337,183,110,0,0,0.242034],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.715254],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.715254],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.572203],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.715254],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.715254],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.715254],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.715254],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.715254],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.572203],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.572203],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.572203],
[8,0,0,818,571,206,-349.822021,585.702026,-0.082310,1.137421,0.999492,285,103,0,0,0.248187],
[9,0,0,818,571,206,25.986780,589.700012,-0.112574,0.999492,0.999492,285,103,0,0,0.187679],
[10,0,0,818,571,206,639.674561,545.722351,0.071000,0.959512,0.908538,285,103,0,0,0.248187],
[11,0,0,818,571,206,455.768127,515.737610,0.175720,0.991496,0.774606,285,103,0,0,0.006153],
[12,0,0,818,571,206,-703.642029,-563.713196,3.304676,0.836574,0.803591,285,103,0,0,0.605085],
[13,0,0,818,571,206,651.668457,-579.705078,2.821866,1.013484,1.210384,285,103,0,0,0.488663],
[14,0,0,818,571,206,153.921692,-607.690857,2.946727,1.519227,1.210384,285,103,0,0,0.369204],
[15,0,0,818,571,206,-787.599304,-33.982712,1.577516,0.994494,1.210384,285,103,0,0,0.369204],
[16,0,0,818,571,206,-817.584045,-343.825073,4.047523,0.832576,0.703642,285,103,0,0,0.248187],
[17,0,0,818,571,206,781.602356,-303.845428,4.945984,0.968507,1.210384,285,103,0,0,0.369204]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.103390,1.203390,341,111,0,0,0.020339],
[4,0,0,311,543,282,-598.864380,637.864380,-0.418879,1.071000,1.041000,271,141,0,0,0.403390],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.103390,1.203390,341,111,0,0,0.020339],
[18,0,0,0,796,310,-333.886780,-557.810852,0.105697,0.837716,0.826720,398,155,0,0,0.305786],
[19,0,0,0,796,310,751.338440,301.355469,-1.673495,0.967672,1.223585,398,155,0,0,0.128860],
[20,0,0,0,796,310,-869.705078,423.856262,-6.438468,0.862707,1.123619,398,155,0,0,0.245651],
[21,0,543,372,366,221,682.768494,513.825745,0.554194,1.412521,1.302558,183,110,0,0,0.241356],
[22,0,543,372,366,221,-547.814270,581.802734,0.177133,1.412521,1.302558,183,110,0,0,0.241356],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.710169],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.710169],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.568136],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.710169],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.710169],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.710169],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.710169],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.710169],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.568136],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.568136],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.568136],
[8,0,0,818,571,206,-349.881348,585.801392,-0.082310,1.137614,0.999661,285,103,0,0,0.245447],
[9,0,0,818,571,206,25.991186,589.799988,-0.112574,0.999661,0.999661,285,103,0,0,0.185108],
[10,0,0,818,571,206,639.783081,545.814941,0.071000,0.959675,0.908692,285,103,0,0,0.245447],
[11,0,0,818,571,206,455.845428,515.825073,0.175720,0.991664,0.774737,285,103,0,0,0.004091],
[12,0,0,818,571,206,-703.761353,-563.808838,3.304676,0.836716,0.803728,285,103,0,0,0.603390],
[13,0,0,818,571,206,651.778992,-579.803406,2.821866,1.013656,1.210590,285,103,0,0,0.485767],
[14,0,0,818,571,206,153.947800,-607.793884,2.946727,1.519485,1.210590,285,103,0,0,0.366125],
[15,0,0,818,571,206,-787.732910,-33.988476,1.577516,0.994663,1.210590,285,103,0,0,0.366125],
[16,0,0,818,571,206,-817.722717,-343.883392,4.047523,0.832718,0.703761,285,103,0,0,0.245447],
[17,0,0,818,571,206,781.734924,-303.896942,4.945984,0.968672,1.210590,285,103,0,0,0.366125]
],
[
[2,0,0,594,682,223,354.0,-488.0,0.105802,1.101695,1.201695,341,111,0,0,0.010170],
[4,0,0,311,543,282,-598.932190,637.932190,-0.418879,1.071000,1.041000,271,141,0,0,0.401695],
[6,0,0,594,682,223,-596.0,462.0,0.065799,1.101695,1.201695,341,111,0,0,0.010170],
[18,0,0,0,796,310,-333.943390,-557.905396,0.105697,0.837858,0.826860,398,155,0,0,0.302887],
[19,0,0,0,796,310,751.669189,301.677673,-1.674087,0.967836,1.223792,398,155,0,0,0.124418],
[20,0,0,0,796,310,-869.852539,423.928131,-6.438468,0.862854,1.123809,398,155,0,0,0.242820],
[21,0,543,372,366,221,682.884216,513.912842,0.554194,1.412760,1.302779,183,110,0,0,0.240678],
[22,0,543,372,366,221,-547.907104,581.901367,0.177133,1.412760,1.302779,183,110,0,0,0.240678],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.705085],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.705085],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.564068],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.705085],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.705085],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.705085],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.705085],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.705085],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.564068],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.564068],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.564068],
[8,0,0,818,571,206,-349.940674,585.900635,-0.082310,1.137807,0.999830,285,103,0,0,0.242718],
[9,0,0,818,571,206,25.995592,589.899963,-0.112574,0.999830,0.999830,285,103,0,0,0.182548],
[10,0,0,818,571,206,639.891479,545.907471,0.071000,0.959837,0.908846,285,103,0,0,0.242718],
[11,0,0,818,571,206,455.922699,515.912537,0.175720,0.991832,0.774869,285,103,0,0,0.002040],
[12,0,0,818,571,206,-703.880676,-563.904419,3.304676,0.836858,0.803864,285,103,0,0,0.601695],
[13,0,0,818,571,206,651.889465,-579.901672,2.821866,1.013828,1.210795,285,103,0,0,0.482879],
[14,0,0,818,571,206,153.973892,-607.896912,2.946727,1.519742,1.210795,285,103,0,0,0.363057],
[15,0,0,818,571,206,-787.866394,-33.994236,1.577516,0.994831,1.210795,285,103,0,0,0.363057],
[16,0,0,818,571,206,-817.861328,-343.941681,4.047523,0.832859,0.703881,285,103,0,0,0.242718],
[17,0,0,818,571,206,781.867432,-303.948456,4.945984,0.968836,1.210795,285,103,0,0,0.363057]
],
[
[4,0,0,311,543,282,-599.0,638.0,-0.418879,1.071000,1.041000,271,141,0,0,0.400000],
[18,0,0,0,796,310,-334.0,-558.0,0.105697,0.838000,0.827000,398,155,0,0,0.300000],
[19,0,0,0,796,310,752.0,302.0,-1.674678,0.968000,1.224000,398,155,0,0,0.120000],
[20,0,0,0,796,310,-870.0,424.0,-6.438468,0.863000,1.124000,398,155,0,0,0.240000],
[21,0,543,372,366,221,683.0,514.0,0.554194,1.413000,1.303000,183,110,0,0,0.240000],
[22,0,543,372,366,221,-548.0,582.0,0.177133,1.413000,1.303000,183,110,0,0,0.240000],
[24,0,0,0,796,310,-750.0,-570.0,0.341212,1.0,1.575000,398,155,0,0,0.700000],
[25,0,0,0,796,310,-786.0,-268.0,1.360764,1.0,1.0,398,155,0,0,0.700000],
[26,0,0,0,796,310,-664.0,454.0,2.456028,1.0,1.258000,398,155,0,0,0.560000],
[27,0,0,0,796,310,-810.0,76.0,1.935692,1.0,1.258000,398,155,0,0,0.700000],
[28,0,0,0,796,310,-416.0,630.0,-3.141593,1.0,1.258000,398,155,0,0,0.700000],
[29,0,0,0,796,310,849.0,488.0,-2.734128,1.0,1.258000,398,155,0,0,0.700000],
[30,0,0,0,796,310,847.0,-502.0,-0.357129,1.0,1.258000,398,155,1,0,0.700000],
[31,0,0,0,796,310,813.0,-134.0,-1.396804,1.0,1.258000,398,155,1,0,0.700000],
[32,0,0,0,796,310,739.0,128.0,-1.778159,1.100000,1.788000,398,155,1,0,0.560000],
[33,0,543,372,366,221,-326.0,524.0,-3.241914,1.100000,0.978000,183,110,0,0,0.560000],
[34,0,543,372,366,221,353.0,588.0,-2.452519,1.804000,1.791000,183,110,0,0,0.560000],
[8,0,0,818,571,206,-350.0,586.0,-0.082310,1.138000,1.0,285,103,0,0,0.240000],
[9,0,0,818,571,206,26.0,590.0,-0.112574,1.0,1.0,285,103,0,0,0.180000],
[10,0,0,818,571,206,640.0,546.0,0.071000,0.960000,0.909000,285,103,0,0,0.240000],
[12,0,0,818,571,206,-704.0,-564.0,3.304676,0.837000,0.804000,285,103,0,0,0.600000],
[13,0,0,818,571,206,652.0,-580.0,2.821866,1.014000,1.211000,285,103,0,0,0.480000],
[14,0,0,818,571,206,154.0,-608.0,2.946727,1.520000,1.211000,285,103,0,0,0.360000],
[15,0,0,818,571,206,-788.0,-34.0,1.577516,0.995000,1.211000,285,103,0,0,0.360000],
[16,0,0,818,571,206,-818.0,-344.0,4.047523,0.833000,0.704000,285,103,0,0,0.240000],
[17,0,0,818,571,206,782.0,-304.0,4.945984,0.969000,1.211000,285,103,0,0,0.360000]
]
]
}
}
]

},{}],3:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-hospital2-obj-01-01.png"],
"name": "obj01_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 500,
"MarginWidth": 258,
"MarginHeight": 258,
"parts": ["root","Obj","body","wheel_r","wheel_l","wheel_s_r","wheel_s_l","ban"],
"ssa": [
[
[3,0,350,76,93,217,43.0,34.0,0.0,1.0,1.0,39,114],
[4,0,447,446,41,66,3.0,154.0,0.0,1.0,1.0,17,32],
[5,0,447,378,37,66,147.0,110.0,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,0.0,0.0,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-104.0,58.0,0.0,1.0,1.0,37,111],
[6,0,447,367,25,9,73.0,28.0,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,43.0,34.0,0.0,1.0,1.0,39,114],
[4,0,447,446,41,66,3.0,154.0,0.0,1.0,1.0,17,32],
[5,0,447,378,37,66,147.0,110.0,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,0.0,0.0,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-104.0,58.0,0.0,1.0,1.0,37,111],
[6,0,447,367,25,9,73.0,28.0,0.0,1.0,1.0,12,4]
]
]
}
}
]

},{}],4:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-hospital2-obj-01-01.png"],
"name": "obj02_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 500,
"MarginWidth": 258,
"MarginHeight": 258,
"parts": ["root","Obj","body","wheel_r","wheel_l","wheel_r_1","wheel_l_1","wheel_s_r","wheel_s_l","ban"],
"ssa": [
[
[3,0,350,76,93,217,43.0,34.0,0.0,1.0,1.0,39,114],
[6,0,447,446,41,66,3.0,154.0,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,147.0,110.0,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,0.0,0.0,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-104.0,58.0,0.0,1.0,1.0,37,111],
[8,0,447,367,25,9,73.0,28.0,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,44.142857,35.142857,0.0,1.0,1.0,39,114],
[6,0,447,446,41,66,4.142857,155.142853,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,148.142853,111.142860,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,1.142857,1.142857,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-102.857140,59.142857,0.0,1.0,1.0,37,111],
[8,0,447,367,25,9,74.142860,29.142857,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,45.285713,36.285713,0.0,1.0,1.0,39,114],
[6,0,447,446,41,66,5.285714,156.285721,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,149.285721,112.285713,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,2.285714,2.285714,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-101.714287,60.285713,0.0,1.0,1.0,37,111],
[8,0,447,367,25,9,75.285713,30.285715,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,46.428570,37.428570,0.0,1.0,1.0,39,114],
[6,0,447,446,41,66,6.428572,157.428574,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,150.428574,113.428574,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,3.428571,3.428571,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-100.571426,61.428570,0.0,1.0,1.0,37,111],
[8,0,447,367,25,9,76.428574,31.428572,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,47.571430,38.571430,0.0,1.0,1.0,39,114],
[6,0,447,446,41,66,7.571429,158.571426,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,151.571426,114.571426,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,4.571429,4.571429,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-99.428574,62.571430,0.0,1.0,1.0,37,111],
[8,0,447,367,25,9,77.571426,32.571430,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,48.714287,39.714287,0.0,1.0,1.0,39,114],
[6,0,447,446,41,66,8.714286,159.714279,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,152.714279,115.714287,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,5.714286,5.714286,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-98.285713,63.714287,0.0,1.0,1.0,37,111],
[8,0,447,367,25,9,78.714287,33.714287,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,49.857143,40.857143,0.279253,1.0,1.0,39,103,0,1],
[5,0,350,76,93,217,49.857143,40.857143,0.0,1.0,1.0,39,114,0,0,0.600000],
[6,0,447,446,41,66,9.857143,162.857147,0.419211,1.0,1.0,17,34,0,1],
[7,0,447,378,37,66,154.857147,119.857140,0.291453,1.0,1.0,16,35,0,1],
[1,0,0,203,348,309,6.857143,6.857143,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-97.142860,64.857140,0.392699,1.0,1.0,37,106,0,1],
[4,0,350,295,95,217,-97.142860,64.857140,0.0,1.0,1.0,37,111,0,0,0.600000],
[8,0,447,367,25,9,79.857140,34.857143,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,51.0,42.0,0.279253,1.0,1.0,39,103,0,1],
[5,0,350,76,93,217,51.0,42.0,0.0,1.0,1.0,39,114,0,0,0.514286],
[6,0,447,446,41,66,11.0,164.0,0.419211,1.0,1.0,17,34,0,1],
[7,0,447,378,37,66,156.0,121.0,0.291453,1.0,1.0,16,35,0,1],
[1,0,0,203,348,309,8.0,8.0,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-96.0,66.0,0.392699,1.0,1.0,37,106,0,1],
[4,0,350,295,95,217,-96.0,66.0,0.0,1.0,1.0,37,111,0,0,0.514286],
[8,0,447,367,25,9,81.0,36.0,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,52.142857,43.142857,0.279253,1.0,1.0,39,103,0,1],
[5,0,350,76,93,217,52.142857,43.142857,0.0,1.0,1.0,39,114,0,0,0.428571],
[6,0,447,446,41,66,12.142858,165.142853,0.419211,1.0,1.0,17,34,0,1],
[7,0,447,378,37,66,157.142853,122.142860,0.291453,1.0,1.0,16,35,0,1],
[1,0,0,203,348,309,9.142858,9.142858,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-94.857140,67.142860,0.392699,1.0,1.0,37,106,0,1],
[4,0,350,295,95,217,-94.857140,67.142860,0.0,1.0,1.0,37,111,0,0,0.428571],
[8,0,447,367,25,9,82.142860,37.142857,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,53.285713,44.285713,0.279253,1.0,1.0,39,103,0,1],
[5,0,350,76,93,217,53.285713,44.285713,0.0,1.0,1.0,39,114,0,0,0.342857],
[6,0,447,446,41,66,13.285714,166.285721,0.419211,1.0,1.0,17,34,0,1],
[7,0,447,378,37,66,158.285721,123.285713,0.291453,1.0,1.0,16,35,0,1],
[1,0,0,203,348,309,10.285714,10.285714,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-93.714287,68.285713,0.392699,1.0,1.0,37,106,0,1],
[4,0,350,295,95,217,-93.714287,68.285713,0.0,1.0,1.0,37,111,0,0,0.342857],
[8,0,447,367,25,9,83.285713,38.285713,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,54.428574,45.428574,0.279253,1.0,1.0,39,103,0,1],
[5,0,350,76,93,217,54.428574,45.428574,0.0,1.0,1.0,39,114,0,0,0.257143],
[6,0,447,446,41,66,14.428572,167.428574,0.419211,1.0,1.0,17,34,0,1],
[7,0,447,378,37,66,159.428574,124.428574,0.291453,1.0,1.0,16,35,0,1],
[1,0,0,203,348,309,11.428572,11.428572,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-92.571426,69.428574,0.392699,1.0,1.0,37,106,0,1],
[4,0,350,295,95,217,-92.571426,69.428574,0.0,1.0,1.0,37,111,0,0,0.257143],
[8,0,447,367,25,9,84.428574,39.428574,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,55.571426,46.571426,0.279253,1.0,1.0,39,103,0,1],
[5,0,350,76,93,217,55.571426,46.571426,0.0,1.0,1.0,39,114,0,0,0.171429],
[6,0,447,446,41,66,15.571428,168.571426,0.419211,1.0,1.0,17,34,0,1],
[7,0,447,378,37,66,160.571426,125.571426,0.291453,1.0,1.0,16,35,0,1],
[1,0,0,203,348,309,12.571428,12.571428,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-91.428574,70.571426,0.392699,1.0,1.0,37,106,0,1],
[4,0,350,295,95,217,-91.428574,70.571426,0.0,1.0,1.0,37,111,0,0,0.171429],
[8,0,447,367,25,9,85.571426,40.571426,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,56.714287,47.714287,0.279253,1.0,1.0,39,103,0,1],
[5,0,350,76,93,217,56.714287,47.714287,0.0,1.0,1.0,39,114,0,0,0.085714],
[6,0,447,446,41,66,16.714287,169.714279,0.419211,1.0,1.0,17,34,0,1],
[7,0,447,378,37,66,161.714279,126.714287,0.291453,1.0,1.0,16,35,0,1],
[1,0,0,203,348,309,13.714286,13.714286,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-90.285713,71.714287,0.392699,1.0,1.0,37,106,0,1],
[4,0,350,295,95,217,-90.285713,71.714287,0.0,1.0,1.0,37,111,0,0,0.085714],
[8,0,447,367,25,9,86.714287,41.714287,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,57.857143,48.857143,0.279253,1.0,1.0,39,103,0,1],
[6,0,447,446,41,66,17.857143,170.857147,0.419211,1.0,1.0,17,34,0,1],
[7,0,447,378,37,66,162.857147,127.857140,0.291453,1.0,1.0,16,35,0,1],
[1,0,0,203,348,309,14.857142,14.857142,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-89.142860,72.857140,0.392699,1.0,1.0,37,106,0,1],
[8,0,447,367,25,9,87.857140,42.857143,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,59.0,50.0,0.0,1.0,1.0,39,114],
[5,0,350,76,93,217,59.0,50.0,0.279253,1.0,1.0,39,103,0,1,0.600000],
[6,0,447,446,41,66,19.0,170.0,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,163.0,126.0,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,16.0,16.0,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-88.0,74.0,0.0,1.0,1.0,37,111],
[4,0,350,295,95,217,-88.0,74.0,0.392699,1.0,1.0,37,106,0,1,0.600000],
[8,0,447,367,25,9,89.0,44.0,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,59.200001,50.200001,0.0,1.0,1.0,39,114],
[5,0,350,76,93,217,59.200001,50.200001,0.279253,1.0,1.0,39,103,0,1,0.500000],
[6,0,447,446,41,66,19.200001,170.199997,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,163.199997,126.199997,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,16.200001,16.200001,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-87.800003,74.199997,0.0,1.0,1.0,37,111],
[4,0,350,295,95,217,-87.800003,74.199997,0.392699,1.0,1.0,37,106,0,1,0.500000],
[8,0,447,367,25,9,89.199997,44.200001,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,59.400002,50.400002,0.0,1.0,1.0,39,114],
[5,0,350,76,93,217,59.400002,50.400002,0.279253,1.0,1.0,39,103,0,1,0.400000],
[6,0,447,446,41,66,19.400000,170.399994,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,163.399994,126.400002,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,16.400000,16.400000,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-87.599998,74.400002,0.0,1.0,1.0,37,111],
[4,0,350,295,95,217,-87.599998,74.400002,0.392699,1.0,1.0,37,106,0,1,0.400000],
[8,0,447,367,25,9,89.400002,44.400002,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,59.599998,50.599998,0.0,1.0,1.0,39,114],
[5,0,350,76,93,217,59.599998,50.599998,0.279253,1.0,1.0,39,103,0,1,0.300000],
[6,0,447,446,41,66,19.600000,170.600006,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,163.600006,126.599998,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,16.600000,16.600000,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-87.400002,74.599998,0.0,1.0,1.0,37,111],
[4,0,350,295,95,217,-87.400002,74.599998,0.392699,1.0,1.0,37,106,0,1,0.300000],
[8,0,447,367,25,9,89.599998,44.599998,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,59.799999,50.799999,0.0,1.0,1.0,39,114],
[5,0,350,76,93,217,59.799999,50.799999,0.279253,1.0,1.0,39,103,0,1,0.200000],
[6,0,447,446,41,66,19.799999,170.800003,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,163.800003,126.800003,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,16.799999,16.799999,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-87.199997,74.800003,0.0,1.0,1.0,37,111],
[4,0,350,295,95,217,-87.199997,74.800003,0.392699,1.0,1.0,37,106,0,1,0.200000],
[8,0,447,367,25,9,89.800003,44.799999,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,60.0,51.0,0.0,1.0,1.0,39,114],
[5,0,350,76,93,217,60.0,51.0,0.279253,1.0,1.0,39,103,0,1,0.100000],
[6,0,447,446,41,66,20.0,171.0,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,164.0,127.0,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,17.0,17.0,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-87.0,75.0,0.0,1.0,1.0,37,111],
[4,0,350,295,95,217,-87.0,75.0,0.392699,1.0,1.0,37,106,0,1,0.100000],
[8,0,447,367,25,9,90.0,45.0,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,60.200001,51.200001,0.0,1.0,1.0,39,114],
[6,0,447,446,41,66,20.200001,171.199997,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,164.199997,127.199997,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,17.200001,17.200001,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-86.800003,75.199997,0.0,1.0,1.0,37,111],
[8,0,447,367,25,9,90.199997,45.200001,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,60.400002,51.400002,0.0,1.0,1.0,39,114],
[6,0,447,446,41,66,20.400000,171.399994,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,164.399994,127.400002,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,17.400000,17.400000,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-86.599998,75.400002,0.0,1.0,1.0,37,111],
[8,0,447,367,25,9,90.400002,45.400002,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,60.599998,51.599998,0.0,1.0,1.0,39,114],
[6,0,447,446,41,66,20.600000,171.600006,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,164.600006,127.599998,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,17.600000,17.600000,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-86.400002,75.599998,0.0,1.0,1.0,37,111],
[8,0,447,367,25,9,90.599998,45.599998,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,60.799999,51.799999,0.0,1.0,1.0,39,114],
[6,0,447,446,41,66,20.799999,171.800003,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,164.800003,127.800003,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,17.799999,17.799999,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-86.199997,75.800003,0.0,1.0,1.0,37,111],
[8,0,447,367,25,9,90.800003,45.799999,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,61.0,52.0,0.0,1.0,1.0,39,114],
[6,0,447,446,41,66,21.0,172.0,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,165.0,128.0,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,18.0,18.0,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-86.0,76.0,0.0,1.0,1.0,37,111],
[8,0,447,367,25,9,91.0,46.0,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,61.0,52.0,0.0,1.0,1.0,39,114],
[6,0,447,446,41,66,21.0,172.0,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,165.0,128.0,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,18.0,18.0,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-86.0,76.0,0.0,1.0,1.0,37,111],
[8,0,447,367,25,9,91.0,46.0,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,61.0,52.0,0.0,1.0,1.0,39,114],
[6,0,447,446,41,66,21.0,172.0,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,165.0,128.0,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,18.0,18.0,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-86.0,76.0,0.0,1.0,1.0,37,111],
[8,0,447,367,25,9,91.0,46.0,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,61.0,52.0,0.0,1.0,1.0,39,114],
[6,0,447,446,41,66,21.0,172.0,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,165.0,128.0,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,18.0,18.0,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-86.0,76.0,0.0,1.0,1.0,37,111],
[8,0,447,367,25,9,91.0,46.0,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,61.0,52.0,0.0,1.0,1.0,39,114],
[6,0,447,446,41,66,21.0,172.0,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,165.0,128.0,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,18.0,18.0,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-86.0,76.0,0.0,1.0,1.0,37,111],
[8,0,447,367,25,9,91.0,46.0,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,61.0,52.0,0.0,1.0,1.0,39,114],
[6,0,447,446,41,66,21.0,172.0,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,165.0,128.0,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,18.0,18.0,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-86.0,76.0,0.0,1.0,1.0,37,111],
[8,0,447,367,25,9,91.0,46.0,0.0,1.0,1.0,12,4]
]
]
}
}
]

},{}],5:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-hospital2-obj-01-01.png"],
"name": "obj03_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 500,
"MarginWidth": 258,
"MarginHeight": 258,
"parts": ["root","Obj","body","wheel_r","wheel_l","wheel_s_r","wheel_s_l","ban"],
"ssa": [
[
[3,0,350,76,93,217,61.0,52.0,0.0,1.0,1.0,39,114],
[4,0,447,446,41,66,21.0,172.0,0.0,1.0,1.0,17,32],
[5,0,447,378,37,66,165.0,128.0,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,18.0,18.0,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-86.0,76.0,0.0,1.0,1.0,37,111],
[6,0,447,367,25,9,91.0,46.0,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,61.0,52.0,0.0,1.0,1.0,39,114],
[4,0,447,446,41,66,21.0,172.0,0.0,1.0,1.0,17,32],
[5,0,447,378,37,66,165.0,128.0,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,18.0,18.0,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-86.0,76.0,0.0,1.0,1.0,37,111],
[6,0,447,367,25,9,91.0,46.0,0.0,1.0,1.0,12,4]
]
]
}
}
]

},{}],6:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-01-01.png"],
"name": "obj01_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 200,
"MarginWidth": 108,
"MarginHeight": 108,
"parts": ["root","Obj","ramp","fire1","fire1_2"],
"ssa": [
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.0,1.0,1.0,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.004760,1.018182,0.990909,17,68],
[3,0,36,29,34,74,20.0,26.0,0.004760,1.010526,0.994737,17,68,0,0,0.166667]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.009520,1.036364,0.981818,17,68],
[3,0,36,29,34,74,20.0,26.0,0.009520,1.021053,0.989474,17,68,0,0,0.333333]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.014280,1.054546,0.972727,17,68],
[3,0,36,29,34,74,20.0,26.0,0.014280,1.031579,0.984211,17,68,0,0,0.500000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.019040,1.072727,0.963636,17,68],
[3,0,36,29,34,74,20.0,26.0,0.019040,1.042105,0.978947,17,68,0,0,0.666667]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.023800,1.090909,0.954545,17,68],
[3,0,36,29,34,74,20.0,26.0,0.023800,1.052632,0.973684,17,68,0,0,0.833333]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.028560,1.109091,0.945455,17,68],
[3,0,36,29,34,74,20.0,26.0,0.028560,1.063158,0.968421,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.033320,1.127273,0.936364,17,68,0,0,0.840000],
[3,0,36,29,34,74,20.0,26.0,0.033320,1.073684,0.963158,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.038080,1.145455,0.927273,17,68,0,0,0.680000],
[3,0,36,29,34,74,20.0,26.0,0.038080,1.084211,0.957895,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.042840,1.163636,0.918182,17,68,0,0,0.520000],
[3,0,36,29,34,74,20.0,26.0,0.042840,1.094737,0.952632,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.047600,1.181818,0.909091,17,68,0,0,0.360000],
[3,0,36,29,34,74,20.0,26.0,0.047600,1.105263,0.947368,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.052360,1.115790,0.942105,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.054542,1.126316,0.936842,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.056723,1.136842,0.931579,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.058905,1.147368,0.926316,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.061087,1.157895,0.921053,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.063268,1.168421,0.915789,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.065450,1.178947,0.910526,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.067632,1.189474,0.905263,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.069813,1.200000,0.900000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.047124,1.180000,0.910000,17,68,0,0,0.360000],
[3,0,36,29,34,74,20.0,26.0,0.062832,1.180000,0.910000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.041888,1.160000,0.920000,17,68,0,0,0.520000],
[3,0,36,29,34,74,20.0,26.0,0.055851,1.160000,0.920000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.036652,1.140000,0.930000,17,68,0,0,0.680000],
[3,0,36,29,34,74,20.0,26.0,0.048869,1.140000,0.930000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.031416,1.120000,0.940000,17,68,0,0,0.840000],
[3,0,36,29,34,74,20.0,26.0,0.041888,1.120000,0.940000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.026180,1.100000,0.950000,17,68],
[3,0,36,29,34,74,20.0,26.0,0.034907,1.100000,0.950000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.020944,1.080000,0.960000,17,68],
[3,0,36,29,34,74,20.0,26.0,0.027925,1.080000,0.960000,17,68,0,0,0.800000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.015708,1.060000,0.970000,17,68],
[3,0,36,29,34,74,20.0,26.0,0.020944,1.060000,0.970000,17,68,0,0,0.600000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.010472,1.040000,0.980000,17,68],
[3,0,36,29,34,74,20.0,26.0,0.013963,1.040000,0.980000,17,68,0,0,0.400000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.005236,1.020000,0.990000,17,68],
[3,0,36,29,34,74,20.0,26.0,0.006981,1.020000,0.990000,17,68,0,0,0.200000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.0,1.0,1.0,17,68]
]
]
}
}
]

},{}],7:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-01-01.png"],
"name": "obj02_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 200,
"MarginWidth": 108,
"MarginHeight": 108,
"parts": ["root","Obj","ramp","fire1","fire1_2"],
"ssa": [
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.0,1.0,1.0,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.002756,1.015790,0.989474,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.005512,1.031579,0.978947,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.008267,1.047368,0.968421,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.011023,1.063158,0.957895,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.013779,1.078947,0.947368,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.016535,1.094737,0.936842,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.019290,1.110526,0.926316,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.022046,1.126316,0.915789,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.024802,1.142105,0.905263,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.027558,1.157895,0.894737,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.030314,1.173684,0.884211,17,68,0,0,0.922222],
[3,0,36,29,34,74,20.0,26.0,0.005818,1.044444,0.888889,17,68,0,0,0.111111]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.033069,1.189474,0.873684,17,68,0,0,0.844444],
[3,0,36,29,34,74,20.0,26.0,0.011636,1.088889,0.877778,17,68,0,0,0.222222]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.035825,1.205263,0.863158,17,68,0,0,0.766667],
[3,0,36,29,34,74,20.0,26.0,0.017453,1.133333,0.866667,17,68,0,0,0.333333]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.038581,1.221053,0.852632,17,68,0,0,0.688889],
[3,0,36,29,34,74,20.0,26.0,0.023271,1.177778,0.855556,17,68,0,0,0.444444]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.041337,1.236842,0.842105,17,68,0,0,0.611111],
[3,0,36,29,34,74,20.0,26.0,0.029089,1.222222,0.844444,17,68,0,0,0.555556]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.044093,1.252632,0.831579,17,68,0,0,0.533333],
[3,0,36,29,34,74,20.0,26.0,0.034907,1.266667,0.833333,17,68,0,0,0.666667]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.046848,1.268421,0.821053,17,68,0,0,0.455556],
[3,0,36,29,34,74,20.0,26.0,0.040724,1.311111,0.822222,17,68,0,0,0.777778]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.049604,1.284210,0.810526,17,68,0,0,0.377778],
[3,0,36,29,34,74,20.0,26.0,0.046542,1.355556,0.811111,17,68,0,0,0.888889]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.300000,0.800000,17,68,0,0,0.300000],
[3,0,36,29,34,74,20.0,26.0,0.052360,1.400000,0.800000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.047124,1.270000,0.820000,17,68,0,0,0.440000],
[3,0,36,29,34,74,20.0,26.0,0.047124,1.360000,0.820000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.041888,1.240000,0.840000,17,68,0,0,0.580000],
[3,0,36,29,34,74,20.0,26.0,0.041888,1.320000,0.840000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.036652,1.210000,0.860000,17,68,0,0,0.720000],
[3,0,36,29,34,74,20.0,26.0,0.036652,1.280000,0.860000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.031416,1.180000,0.880000,17,68,0,0,0.860000],
[3,0,36,29,34,74,20.0,26.0,0.031416,1.240000,0.880000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.026180,1.150000,0.900000,17,68],
[3,0,36,29,34,74,20.0,26.0,0.026180,1.200000,0.900000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.020944,1.120000,0.920000,17,68],
[3,0,36,29,34,74,20.0,26.0,0.020944,1.160000,0.920000,17,68,0,0,0.800000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.015708,1.090000,0.940000,17,68],
[3,0,36,29,34,74,20.0,26.0,0.015708,1.120000,0.940000,17,68,0,0,0.600000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.010472,1.060000,0.960000,17,68],
[3,0,36,29,34,74,20.0,26.0,0.010472,1.080000,0.960000,17,68,0,0,0.400000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.005236,1.030000,0.980000,17,68],
[3,0,36,29,34,74,20.0,26.0,0.005236,1.040000,0.980000,17,68,0,0,0.200000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.0,1.0,1.0,17,68]
]
]
}
}
]

},{}],8:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-01-01.png"],
"name": "obj03_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 200,
"MarginWidth": 108,
"MarginHeight": 108,
"parts": ["root","Obj","ramp","fire1","fire1_2"],
"ssa": [
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.0,1.0,1.0,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.004760,1.018182,0.990909,17,68],
[3,0,36,29,34,74,20.0,26.0,0.004760,1.010526,0.994737,17,68,0,0,0.166667]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.009520,1.036364,0.981818,17,68],
[3,0,36,29,34,74,20.0,26.0,0.009520,1.021053,0.989474,17,68,0,0,0.333333]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.014280,1.054546,0.972727,17,68],
[3,0,36,29,34,74,20.0,26.0,0.014280,1.031579,0.984211,17,68,0,0,0.500000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.019040,1.072727,0.963636,17,68],
[3,0,36,29,34,74,20.0,26.0,0.019040,1.042105,0.978947,17,68,0,0,0.666667]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.023800,1.090909,0.954545,17,68],
[3,0,36,29,34,74,20.0,26.0,0.023800,1.052632,0.973684,17,68,0,0,0.833333]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.028560,1.109091,0.945455,17,68],
[3,0,36,29,34,74,20.0,26.0,0.028560,1.063158,0.968421,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.033320,1.127273,0.936364,17,68,0,0,0.840000],
[3,0,36,29,34,74,20.0,26.0,0.033320,1.073684,0.963158,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.038080,1.145455,0.927273,17,68,0,0,0.680000],
[3,0,36,29,34,74,20.0,26.0,0.038080,1.084211,0.957895,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.042840,1.163636,0.918182,17,68,0,0,0.520000],
[3,0,36,29,34,74,20.0,26.0,0.042840,1.094737,0.952632,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.047600,1.181818,0.909091,17,68,0,0,0.360000],
[3,0,36,29,34,74,20.0,26.0,0.047600,1.105263,0.947368,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.052360,1.115790,0.942105,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.054542,1.126316,0.936842,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.056723,1.136842,0.931579,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.058905,1.147368,0.926316,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.061087,1.157895,0.921053,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.063268,1.168421,0.915789,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.065450,1.178947,0.910526,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.067632,1.189474,0.905263,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.069813,1.200000,0.900000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.047124,1.180000,0.910000,17,68,0,0,0.360000],
[3,0,36,29,34,74,20.0,26.0,0.062832,1.180000,0.910000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.041888,1.160000,0.920000,17,68,0,0,0.520000],
[3,0,36,29,34,74,20.0,26.0,0.055851,1.160000,0.920000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.036652,1.140000,0.930000,17,68,0,0,0.680000],
[3,0,36,29,34,74,20.0,26.0,0.048869,1.140000,0.930000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.031416,1.120000,0.940000,17,68,0,0,0.840000],
[3,0,36,29,34,74,20.0,26.0,0.041888,1.120000,0.940000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.026180,1.100000,0.950000,17,68],
[3,0,36,29,34,74,20.0,26.0,0.034907,1.100000,0.950000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.020944,1.080000,0.960000,17,68],
[3,0,36,29,34,74,20.0,26.0,0.027925,1.080000,0.960000,17,68,0,0,0.800000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.015708,1.060000,0.970000,17,68],
[3,0,36,29,34,74,20.0,26.0,0.020944,1.060000,0.970000,17,68,0,0,0.600000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.010472,1.040000,0.980000,17,68],
[3,0,36,29,34,74,20.0,26.0,0.013963,1.040000,0.980000,17,68,0,0,0.400000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.005236,1.020000,0.990000,17,68],
[3,0,36,29,34,74,20.0,26.0,0.006981,1.020000,0.990000,17,68,0,0,0.200000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.0,1.0,1.0,17,68]
]
]
}
}
]

},{}],9:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-01-01.png"],
"name": "obj04_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 200,
"MarginWidth": 108,
"MarginHeight": 108,
"parts": ["root","Obj","ramp","baby","fire1"],
"ssa": [
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[3,0,0,29,34,74,20.0,26.0,0.0,1.0,1.0,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.235619,1.193104,1.193104,51,53,0,0,0.034483],
[3,0,0,29,34,74,20.0,26.0,0.002182,1.012500,0.991667,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.209440,1.186207,1.186207,51,53,0,0,0.068966],
[3,0,0,29,34,74,20.0,26.0,0.004363,1.025000,0.983333,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.183260,1.179310,1.179310,51,53,0,0,0.103448],
[3,0,0,29,34,74,20.0,26.0,0.006545,1.037500,0.975000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.157080,1.172414,1.172414,51,53,0,0,0.137931],
[3,0,0,29,34,74,20.0,26.0,0.008727,1.050000,0.966667,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.130900,1.165517,1.165517,51,53,0,0,0.172414],
[3,0,0,29,34,74,20.0,26.0,0.010908,1.062500,0.958333,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.104720,1.158621,1.158621,51,53,0,0,0.206897],
[3,0,0,29,34,74,20.0,26.0,0.013090,1.075000,0.950000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.078540,1.151724,1.151724,51,53,0,0,0.241379],
[3,0,0,29,34,74,20.0,26.0,0.015272,1.087500,0.941667,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.052360,1.144828,1.144828,51,53,0,0,0.275862],
[3,0,0,29,34,74,20.0,26.0,0.017453,1.100000,0.933333,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.026180,1.137931,1.137931,51,53,0,0,0.310345],
[3,0,0,29,34,74,20.0,26.0,0.019635,1.112500,0.925000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.0,1.131034,1.131034,51,53,0,0,0.344828],
[3,0,0,29,34,74,20.0,26.0,0.021817,1.125000,0.916667,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.010472,1.124138,1.124138,51,53,0,0,0.379310],
[3,0,0,29,34,74,20.0,26.0,0.023998,1.137500,0.908333,17,68,0,0,0.928571]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.020944,1.117241,1.117241,51,53,0,0,0.413793],
[3,0,0,29,34,74,20.0,26.0,0.026180,1.150000,0.900000,17,68,0,0,0.857143]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.031416,1.110345,1.110345,51,53,0,0,0.448276],
[3,0,0,29,34,74,20.0,26.0,0.028362,1.162500,0.891667,17,68,0,0,0.785714]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.041888,1.103448,1.103448,51,53,0,0,0.482759],
[3,0,0,29,34,74,20.0,26.0,0.030543,1.175000,0.883333,17,68,0,0,0.714286]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.052360,1.096552,1.096552,51,53,0,0,0.517241],
[3,0,0,29,34,74,20.0,26.0,0.032725,1.187500,0.875000,17,68,0,0,0.642857]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.062832,1.089655,1.089655,51,53,0,0,0.551724],
[3,0,0,29,34,74,20.0,26.0,0.034907,1.200000,0.866667,17,68,0,0,0.571429]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.073304,1.082759,1.082759,51,53,0,0,0.586207],
[3,0,0,29,34,74,20.0,26.0,0.037088,1.212500,0.858333,17,68,0,0,0.500000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.083776,1.075862,1.075862,51,53,0,0,0.620690],
[3,0,0,29,34,74,20.0,26.0,0.039270,1.225000,0.850000,17,68,0,0,0.428571]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.094248,1.068966,1.068966,51,53,0,0,0.655172],
[3,0,0,29,34,74,20.0,26.0,0.041452,1.237500,0.841667,17,68,0,0,0.357143]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.104720,1.062069,1.062069,51,53,0,0,0.689655],
[3,0,0,29,34,74,20.0,26.0,0.043633,1.250000,0.833333,17,68,0,0,0.285714]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.093084,1.055172,1.055172,51,53,0,0,0.724138],
[3,0,0,29,34,74,20.0,26.0,0.045815,1.262500,0.825000,17,68,0,0,0.214286]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.081449,1.048276,1.048276,51,53,0,0,0.758621],
[3,0,0,29,34,74,20.0,26.0,0.047997,1.275000,0.816667,17,68,0,0,0.142857]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.069813,1.041379,1.041379,51,53,0,0,0.793103],
[3,0,0,29,34,74,20.0,26.0,0.050178,1.287500,0.808333,17,68,0,0,0.071429]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.058178,1.034483,1.034483,51,53,0,0,0.827586]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.046542,1.027586,1.027586,51,53,0,0,0.862069]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.034907,1.020690,1.020690,51,53,0,0,0.896552]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.023271,1.013793,1.013793,51,53,0,0,0.931035]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.011636,1.006897,1.006897,51,53,0,0,0.965517]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.0,1.0,1.0,51,53]
]
]
}
}
]

},{}],10:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-01-01.png"],
"name": "obj05_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 200,
"MarginWidth": 108,
"MarginHeight": 108,
"parts": ["root","Obj","ramp","baby"],
"ssa": [
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.0,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.926199,0.066667,-0.002633,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.857037,0.133333,-0.005193,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.792973,0.200000,-0.007934,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.732803,0.266667,-0.010529,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.674417,0.333333,-0.013411,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.613438,0.400000,-0.015832,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.563385,0.466667,-0.018771,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.506336,0.533333,-0.021479,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.455473,0.600000,-0.024300,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.411222,0.666667,-0.026797,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.367531,0.733333,-0.029790,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.324699,0.800000,-0.032415,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.283033,0.866667,-0.035085,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.242838,0.933333,-0.037791,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.204418,1.0,-0.040526,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.173132,1.066667,-0.043281,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.143564,1.133333,-0.046508,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.115910,1.200000,-0.049275,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.086315,1.266667,-0.052035,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.063459,1.333333,-0.054778,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.043123,1.400000,-0.057946,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.028238,1.466667,-0.060624,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.013018,1.533333,-0.063693,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.000860,1.600000,-0.066688,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,29.991957,1.666667,-0.070005,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,29.986500,1.733333,-0.073188,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,29.984722,1.800000,-0.076216,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,29.986080,1.866667,-0.079754,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,29.991428,1.933333,-0.083283,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.0,2.0,-0.087266,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.011301,1.948552,-0.089561,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.025663,1.883827,-0.089665,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.042038,1.818986,-0.088781,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.057133,1.750742,-0.087148,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.076887,1.683094,-0.085123,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.098320,1.619108,-0.082608,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.121313,1.551161,-0.080043,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.145748,1.479745,-0.077171,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.171513,1.405349,-0.074025,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.198484,1.339582,-0.071134,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.226549,1.272296,-0.067564,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.260515,1.203800,-0.064357,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.290543,1.134403,-0.060473,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.326481,1.064413,-0.057044,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.357924,0.994141,-0.053546,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.395187,0.923894,-0.049402,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.432903,0.853981,-0.045820,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.470881,0.784713,-0.041635,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.514368,0.705125,-0.038066,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.557680,0.638311,-0.033950,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.600536,0.573120,-0.029917,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.642662,0.499525,-0.026000,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.688831,0.429050,-0.021705,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.738152,0.352956,-0.017650,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.784863,0.282309,-0.013884,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.836708,0.210255,-0.009654,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.890209,0.140636,-0.005719,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.943010,0.073553,-0.002204,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.0,1.0,1.0,51,53]
]
]
}
}
]

},{}],11:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-01-01.png"],
"name": "obj06_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 200,
"MarginWidth": 108,
"MarginHeight": 108,
"parts": ["root","Obj","ramp","baby","fire1","fire1_2"],
"ssa": [
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.0,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.010472,1.006896,1.006896,51,53,0,0,0.965517],
[4,0,36,29,34,74,20.0,26.0,0.004760,1.010526,0.994737,17,68,0,0,0.090909]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.020944,1.013793,1.013793,51,53,0,0,0.931035],
[4,0,36,29,34,74,20.0,26.0,0.009520,1.021053,0.989474,17,68,0,0,0.181818]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.031416,1.020690,1.020690,51,53,0,0,0.896552],
[4,0,36,29,34,74,20.0,26.0,0.014280,1.031579,0.984211,17,68,0,0,0.272727]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.041888,1.027586,1.027586,51,53,0,0,0.862069],
[4,0,36,29,34,74,20.0,26.0,0.019040,1.042105,0.978947,17,68,0,0,0.363636]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.052360,1.034483,1.034483,51,53,0,0,0.827586],
[4,0,36,29,34,74,20.0,26.0,0.023800,1.052632,0.973684,17,68,0,0,0.454545]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.062832,1.041379,1.041379,51,53,0,0,0.793103],
[4,0,36,29,34,74,20.0,26.0,0.028560,1.063158,0.968421,17,68,0,0,0.545455]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.073304,1.048276,1.048276,51,53,0,0,0.758621],
[4,0,36,29,34,74,20.0,26.0,0.033320,1.073684,0.963158,17,68,0,0,0.636364]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.083776,1.055172,1.055172,51,53,0,0,0.724138],
[4,0,36,29,34,74,20.0,26.0,0.038080,1.084211,0.957895,17,68,0,0,0.727273]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.094248,1.062069,1.062069,51,53,0,0,0.689655],
[4,0,36,29,34,74,20.0,26.0,0.042840,1.094737,0.952632,17,68,0,0,0.818182]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.104720,1.068966,1.068966,51,53,0,0,0.655172],
[4,0,36,29,34,74,20.0,26.0,0.047600,1.105263,0.947368,17,68,0,0,0.909091]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.094248,1.075862,1.075862,51,53,0,0,0.620690],
[4,0,36,29,34,74,20.0,26.0,0.052360,1.115790,0.942105,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.083776,1.082759,1.082759,51,53,0,0,0.586207],
[4,0,36,29,34,74,20.0,26.0,0.054542,1.126316,0.936842,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.073304,1.089655,1.089655,51,53,0,0,0.551724],
[4,0,36,29,34,74,20.0,26.0,0.056723,1.136842,0.931579,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.062832,1.096552,1.096552,51,53,0,0,0.517241],
[4,0,36,29,34,74,20.0,26.0,0.058905,1.147368,0.926316,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.052360,1.103448,1.103448,51,53,0,0,0.482759],
[4,0,36,29,34,74,20.0,26.0,0.061087,1.157895,0.921053,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.041888,1.110345,1.110345,51,53,0,0,0.448276],
[4,0,36,29,34,74,20.0,26.0,0.063268,1.168421,0.915789,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.031416,1.117241,1.117241,51,53,0,0,0.413793],
[4,0,36,29,34,74,20.0,26.0,0.065450,1.178947,0.910526,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.020944,1.124138,1.124138,51,53,0,0,0.379310],
[4,0,36,29,34,74,20.0,26.0,0.067632,1.189474,0.905263,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.010472,1.131034,1.131034,51,53,0,0,0.344828],
[3,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[4,0,36,29,34,74,20.0,26.0,0.069813,1.200000,0.900000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.0,1.137931,1.137931,51,53,0,0,0.310345],
[3,0,0,29,34,74,20.0,26.0,0.047124,1.180000,0.910000,17,68,0,0,0.360000],
[4,0,36,29,34,74,20.0,26.0,0.062832,1.180000,0.910000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.029089,1.144828,1.144828,51,53,0,0,0.275862],
[3,0,0,29,34,74,20.0,26.0,0.041888,1.160000,0.920000,17,68,0,0,0.520000],
[4,0,36,29,34,74,20.0,26.0,0.055851,1.160000,0.920000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.058178,1.151724,1.151724,51,53,0,0,0.241379],
[3,0,0,29,34,74,20.0,26.0,0.036652,1.140000,0.930000,17,68,0,0,0.680000],
[4,0,36,29,34,74,20.0,26.0,0.048869,1.140000,0.930000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.087266,1.158621,1.158621,51,53,0,0,0.206897],
[3,0,0,29,34,74,20.0,26.0,0.031416,1.120000,0.940000,17,68,0,0,0.840000],
[4,0,36,29,34,74,20.0,26.0,0.041888,1.120000,0.940000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.116355,1.165517,1.165517,51,53,0,0,0.172414],
[3,0,0,29,34,74,20.0,26.0,0.026180,1.100000,0.950000,17,68],
[4,0,36,29,34,74,20.0,26.0,0.034907,1.100000,0.950000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.145444,1.172414,1.172414,51,53,0,0,0.137931],
[3,0,0,29,34,74,20.0,26.0,0.020944,1.080000,0.960000,17,68],
[4,0,36,29,34,74,20.0,26.0,0.027925,1.080000,0.960000,17,68,0,0,0.800000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.174533,1.179310,1.179310,51,53,0,0,0.103448],
[3,0,0,29,34,74,20.0,26.0,0.015708,1.060000,0.970000,17,68],
[4,0,36,29,34,74,20.0,26.0,0.020944,1.060000,0.970000,17,68,0,0,0.600000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.203622,1.186207,1.186207,51,53,0,0,0.068965],
[3,0,0,29,34,74,20.0,26.0,0.010472,1.040000,0.980000,17,68],
[4,0,36,29,34,74,20.0,26.0,0.013963,1.040000,0.980000,17,68,0,0,0.400000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.232711,1.193103,1.193103,51,53,0,0,0.034483],
[3,0,0,29,34,74,20.0,26.0,0.005236,1.020000,0.990000,17,68],
[4,0,36,29,34,74,20.0,26.0,0.006981,1.020000,0.990000,17,68,0,0,0.200000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[3,0,0,29,34,74,20.0,26.0,0.0,1.0,1.0,17,68]
]
]
}
}
]

},{}],12:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-02-01.png"],
"name": "obj01_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 460,
"CanvasHeight": 370,
"MarginWidth": 238,
"MarginHeight": 193,
"parts": ["root","Obj","bike","part_1","01","04"],
"ssa": [
[
[1,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[1,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
]
]
}
}
]

},{}],13:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-02-01.png"],
"name": "obj02_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 460,
"CanvasHeight": 370,
"MarginWidth": 238,
"MarginHeight": 193,
"parts": ["root","Obj","bike","03","01","04"],
"ssa": [
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.500000,90.500000,0.017453,1.001000,0.995000,100,66],
[3,0,0,204,335,308,9.500000,0.500000,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.500000,91.500000,0.008727,1.002500,0.997500,3,7]
],
[
[2,0,0,129,105,72,-104.0,91.0,0.034907,1.002000,0.990000,100,66],
[3,0,0,204,335,308,9.0,1.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-102.0,92.0,0.017453,1.005000,0.995000,3,7]
],
[
[2,0,0,129,105,72,-104.500000,91.500000,0.052360,1.003000,0.985000,100,66],
[3,0,0,204,335,308,8.500000,1.500000,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-102.500000,92.500000,0.026180,1.007500,0.992500,3,7]
],
[
[2,0,0,129,105,72,-105.0,92.0,0.069813,1.004000,0.980000,100,66],
[3,0,0,204,335,308,8.0,2.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-103.0,93.0,0.034907,1.010000,0.990000,3,7]
],
[
[2,0,0,129,105,72,-105.500000,92.500000,0.087266,1.005000,0.975000,100,66],
[3,0,0,204,335,308,7.500000,2.500000,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-103.500000,93.500000,0.043633,1.012500,0.987500,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.104720,1.006000,0.970000,100,66],
[3,0,0,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.052360,1.015000,0.985000,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.107213,1.007000,0.965000,100,66],
[3,0,0,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.054853,1.017500,0.982500,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.109706,1.008000,0.960000,100,66],
[3,0,0,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.057347,1.020000,0.980000,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.112200,1.009000,0.955000,100,66],
[3,0,0,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.059840,1.022500,0.977500,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.114693,1.010000,0.950000,100,66],
[3,0,0,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.062333,1.025000,0.975000,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.117186,1.011000,0.945000,100,66],
[3,0,0,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.064827,1.027500,0.972500,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.119680,1.012000,0.940000,100,66],
[3,0,0,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.067320,1.030000,0.970000,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.122173,1.013000,0.935000,100,66],
[3,0,0,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.069813,1.032500,0.967500,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.124666,1.014000,0.930000,100,66],
[3,0,0,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.072306,1.035000,0.965000,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.127160,1.015000,0.925000,100,66],
[3,0,0,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.074800,1.037500,0.962500,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.129653,1.016000,0.920000,100,66],
[3,0,0,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.077293,1.040000,0.960000,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.132146,1.017000,0.915000,100,66],
[3,0,0,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.079786,1.042500,0.957500,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.134640,1.018000,0.910000,100,66],
[3,0,0,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.082280,1.045000,0.955000,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.137133,1.019000,0.905000,100,66],
[3,0,0,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.084773,1.047500,0.952500,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.139626,1.020000,0.900000,100,66],
[3,0,0,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.087266,1.050000,0.950000,3,7]
],
[
[2,0,0,129,105,72,-105.666664,92.666664,0.124112,1.017778,0.911111,100,66],
[3,0,0,204,335,308,7.333333,2.666667,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-103.666664,93.666664,0.077570,1.044444,0.955556,3,7]
],
[
[2,0,0,129,105,72,-105.333336,92.333336,0.108598,1.015556,0.922222,100,66],
[3,0,0,204,335,308,7.666667,2.333333,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-103.333336,93.333336,0.067874,1.038889,0.961111,3,7]
],
[
[2,0,0,129,105,72,-105.0,92.0,0.093084,1.013333,0.933333,100,66],
[3,0,0,204,335,308,8.0,2.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-103.0,93.0,0.058178,1.033333,0.966667,3,7]
],
[
[2,0,0,129,105,72,-104.666664,91.666664,0.077570,1.011111,0.944444,100,66],
[3,0,0,204,335,308,8.333333,1.666667,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-102.666664,92.666664,0.048481,1.027778,0.972222,3,7]
],
[
[2,0,0,129,105,72,-104.333336,91.333336,0.062056,1.008889,0.955556,100,66],
[3,0,0,204,335,308,8.666667,1.333333,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-102.333336,92.333336,0.038785,1.022222,0.977778,3,7]
],
[
[2,0,0,129,105,72,-104.0,91.0,0.046542,1.006667,0.966667,100,66],
[3,0,0,204,335,308,9.0,1.000000,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-102.0,92.0,0.029089,1.016667,0.983333,3,7]
],
[
[2,0,0,129,105,72,-103.666664,90.666664,0.031028,1.004444,0.977778,100,66],
[3,0,0,204,335,308,9.333333,0.666667,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.666664,91.666664,0.019393,1.011111,0.988889,3,7]
],
[
[2,0,0,129,105,72,-103.333336,90.333336,0.015514,1.002222,0.988889,100,66],
[3,0,0,204,335,308,9.666667,0.333333,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.333336,91.333336,0.009696,1.005556,0.994444,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
]
]
}
}
]

},{}],14:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-02-01.png"],
"name": "obj03_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 460,
"CanvasHeight": 370,
"MarginWidth": 238,
"MarginHeight": 193,
"parts": ["root","Obj","bike","03","01","04"],
"ssa": [
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
]
]
}
}
]

},{}],15:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-02-01.png"],
"name": "obj04_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 460,
"CanvasHeight": 370,
"MarginWidth": 238,
"MarginHeight": 193,
"parts": ["root","Obj","bike","03","01_2","04","bike_ura","03_1","01_3","04_1"],
"ssa": [
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.965517],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.965517],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.965517],
[6,0,0,129,105,72,-105.182068,91.737930,0.0,1.019310,1.019310,100,66,0,0,0.034483],
[7,0,337,204,335,308,10.0,0.0,0.0,1.019310,1.019310,167,154,0,0,0.034483],
[8,0,107,144,107,58,-103.143448,92.757240,0.0,1.019310,1.019310,3,7,0,0,0.034483]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.931035],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.931035],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.931035],
[6,0,0,129,105,72,-105.104141,91.675865,0.0,1.018621,1.018621,100,66,0,0,0.068966],
[7,0,337,204,335,308,10.0,0.0,0.0,1.018621,1.018621,167,154,0,0,0.068966],
[8,0,107,144,107,58,-103.066902,92.694489,0.0,1.018621,1.018621,3,7,0,0,0.068966]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.896552],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.896552],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.896552],
[6,0,0,129,105,72,-105.026199,91.613785,0.0,1.017931,1.017931,100,66,0,0,0.103448],
[7,0,337,204,335,308,10.0,0.0,0.0,1.017931,1.017931,167,154,0,0,0.103448],
[8,0,107,144,107,58,-102.990341,92.631721,0.0,1.017931,1.017931,3,7,0,0,0.103448]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.862069],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.862069],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.862069],
[6,0,0,129,105,72,-104.948273,91.551720,0.0,1.017241,1.017241,100,66,0,0,0.137931],
[7,0,337,204,335,308,10.0,0.0,0.0,1.017241,1.017241,167,154,0,0,0.137931],
[8,0,107,144,107,58,-102.913788,92.568962,0.0,1.017241,1.017241,3,7,0,0,0.137931]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.827586],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.827586],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.827586],
[6,0,0,129,105,72,-104.870346,91.489655,0.0,1.016552,1.016552,100,66,0,0,0.172414],
[7,0,337,204,335,308,10.0,0.0,0.0,1.016552,1.016552,167,154,0,0,0.172414],
[8,0,107,144,107,58,-102.837242,92.506210,0.0,1.016552,1.016552,3,7,0,0,0.172414]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.793103],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.793103],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.793103],
[6,0,0,129,105,72,-104.792419,91.427589,0.0,1.015862,1.015862,100,66,0,0,0.206897],
[7,0,337,204,335,308,10.0,0.0,0.0,1.015862,1.015862,167,154,0,0,0.206897],
[8,0,107,144,107,58,-102.760696,92.443451,0.0,1.015862,1.015862,3,7,0,0,0.206897]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.758621],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.758621],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.758621],
[6,0,0,129,105,72,-104.714478,91.365509,0.0,1.015172,1.015172,100,66,0,0,0.241379],
[7,0,337,204,335,308,10.0,0.0,0.0,1.015172,1.015172,167,154,0,0,0.241379],
[8,0,107,144,107,58,-102.684135,92.380684,0.0,1.015172,1.015172,3,7,0,0,0.241379]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.724138],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.724138],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.724138],
[6,0,0,129,105,72,-104.636551,91.303444,0.0,1.014483,1.014483,100,66,0,0,0.275862],
[7,0,337,204,335,308,10.0,0.0,0.0,1.014483,1.014483,167,154,0,0,0.275862],
[8,0,107,144,107,58,-102.607582,92.317932,0.0,1.014483,1.014483,3,7,0,0,0.275862]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.689655],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.689655],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.689655],
[6,0,0,129,105,72,-104.558624,91.241379,0.0,1.013793,1.013793,100,66,0,0,0.310345],
[7,0,337,204,335,308,10.0,0.0,0.0,1.013793,1.013793,167,154,0,0,0.310345],
[8,0,107,144,107,58,-102.531036,92.255173,0.0,1.013793,1.013793,3,7,0,0,0.310345]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.655172],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.655172],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.655172],
[6,0,0,129,105,72,-104.480698,91.179314,0.0,1.013103,1.013103,100,66,0,0,0.344828],
[7,0,337,204,335,308,10.0,0.0,0.0,1.013103,1.013103,167,154,0,0,0.344828],
[8,0,107,144,107,58,-102.454483,92.192413,0.0,1.013103,1.013103,3,7,0,0,0.344828]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.620690],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.620690],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.620690],
[6,0,0,129,105,72,-104.402756,91.117233,0.0,1.012414,1.012414,100,66,0,0,0.379310],
[7,0,337,204,335,308,10.0,0.0,0.0,1.012414,1.012414,167,154,0,0,0.379310],
[8,0,107,144,107,58,-102.377922,92.129654,0.0,1.012414,1.012414,3,7,0,0,0.379310]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.586207],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.586207],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.586207],
[6,0,0,129,105,72,-104.324821,91.055168,0.0,1.011724,1.011724,100,66,0,0,0.413793],
[7,0,337,204,335,308,10.0,0.0,0.0,1.011724,1.011724,167,154,0,0,0.413793],
[8,0,107,144,107,58,-102.301376,92.066895,0.0,1.011724,1.011724,3,7,0,0,0.413793]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.551724],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.551724],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.551724],
[6,0,0,129,105,72,-104.246895,90.993103,0.0,1.011034,1.011034,100,66,0,0,0.448276],
[7,0,337,204,335,308,10.0,0.0,0.0,1.011034,1.011034,167,154,0,0,0.448276],
[8,0,107,144,107,58,-102.224831,92.004135,0.0,1.011034,1.011034,3,7,0,0,0.448276]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.517241],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.517241],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.517241],
[6,0,0,129,105,72,-104.168968,90.931038,0.0,1.010345,1.010345,100,66,0,0,0.482759],
[7,0,337,204,335,308,10.0,0.0,0.0,1.010345,1.010345,167,154,0,0,0.482759],
[8,0,107,144,107,58,-102.148277,91.941383,0.0,1.010345,1.010345,3,7,0,0,0.482759]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.482759],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.482759],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.482759],
[6,0,0,129,105,72,-104.091026,90.868958,0.0,1.009655,1.009655,100,66,0,0,0.517241],
[7,0,337,204,335,308,10.0,0.0,0.0,1.009655,1.009655,167,154,0,0,0.517241],
[8,0,107,144,107,58,-102.071716,91.878616,0.0,1.009655,1.009655,3,7,0,0,0.517241]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.448276],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.448276],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.448276],
[6,0,0,129,105,72,-104.013100,90.806892,0.0,1.008965,1.008965,100,66,0,0,0.551724],
[7,0,337,204,335,308,10.0,0.0,0.0,1.008965,1.008965,167,154,0,0,0.551724],
[8,0,107,144,107,58,-101.995171,91.815857,0.0,1.008965,1.008965,3,7,0,0,0.551724]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.413793],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.413793],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.413793],
[6,0,0,129,105,72,-103.935173,90.744827,0.0,1.008276,1.008276,100,66,0,0,0.586207],
[7,0,337,204,335,308,10.0,0.0,0.0,1.008276,1.008276,167,154,0,0,0.586207],
[8,0,107,144,107,58,-101.918625,91.753105,0.0,1.008276,1.008276,3,7,0,0,0.586207]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.379310],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.379310],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.379310],
[6,0,0,129,105,72,-103.857246,90.682762,0.0,1.007586,1.007586,100,66,0,0,0.620690],
[7,0,337,204,335,308,10.0,0.0,0.0,1.007586,1.007586,167,154,0,0,0.620690],
[8,0,107,144,107,58,-101.842072,91.690346,0.0,1.007586,1.007586,3,7,0,0,0.620690]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.344828],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.344828],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.344828],
[6,0,0,129,105,72,-103.779305,90.620682,0.0,1.006896,1.006896,100,66,0,0,0.655172],
[7,0,337,204,335,308,10.0,0.0,0.0,1.006896,1.006896,167,154,0,0,0.655172],
[8,0,107,144,107,58,-101.765511,91.627579,0.0,1.006896,1.006896,3,7,0,0,0.655172]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.310345],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.310345],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.310345],
[6,0,0,129,105,72,-103.701378,90.558617,0.0,1.006207,1.006207,100,66,0,0,0.689655],
[7,0,337,204,335,308,10.0,0.0,0.0,1.006207,1.006207,167,154,0,0,0.689655],
[8,0,107,144,107,58,-101.688965,91.564827,0.0,1.006207,1.006207,3,7,0,0,0.689655]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.275862],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.275862],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.275862],
[6,0,0,129,105,72,-103.623451,90.496552,0.0,1.005517,1.005517,100,66,0,0,0.724138],
[7,0,337,204,335,308,10.0,0.0,0.0,1.005517,1.005517,167,154,0,0,0.724138],
[8,0,107,144,107,58,-101.612411,91.502068,0.0,1.005517,1.005517,3,7,0,0,0.724138]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.241379],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.241379],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.241379],
[6,0,0,129,105,72,-103.545525,90.434486,0.0,1.004828,1.004828,100,66,0,0,0.758621],
[7,0,337,204,335,308,10.0,0.0,0.0,1.004828,1.004828,167,154,0,0,0.758621],
[8,0,107,144,107,58,-101.535866,91.439316,0.0,1.004828,1.004828,3,7,0,0,0.758621]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.206897],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.206897],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.206897],
[6,0,0,129,105,72,-103.467583,90.372406,0.0,1.004138,1.004138,100,66,0,0,0.793103],
[7,0,337,204,335,308,10.0,0.0,0.0,1.004138,1.004138,167,154,0,0,0.793103],
[8,0,107,144,107,58,-101.459305,91.376549,0.0,1.004138,1.004138,3,7,0,0,0.793103]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.172414],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.172414],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.172414],
[6,0,0,129,105,72,-103.389648,90.310341,0.0,1.003448,1.003448,100,66,0,0,0.827586],
[7,0,337,204,335,308,10.0,0.0,0.0,1.003448,1.003448,167,154,0,0,0.827586],
[8,0,107,144,107,58,-101.382759,91.313789,0.0,1.003448,1.003448,3,7,0,0,0.827586]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.137931],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.137931],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.137931],
[6,0,0,129,105,72,-103.311722,90.248276,0.0,1.002759,1.002759,100,66,0,0,0.862069],
[7,0,337,204,335,308,10.0,0.0,0.0,1.002759,1.002759,167,154,0,0,0.862069],
[8,0,107,144,107,58,-101.306206,91.251038,0.0,1.002759,1.002759,3,7,0,0,0.862069]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.103448],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.103448],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.103448],
[6,0,0,129,105,72,-103.233795,90.186211,0.0,1.002069,1.002069,100,66,0,0,0.896552],
[7,0,337,204,335,308,10.0,0.0,0.0,1.002069,1.002069,167,154,0,0,0.896552],
[8,0,107,144,107,58,-101.229660,91.188278,0.0,1.002069,1.002069,3,7,0,0,0.896552]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.068965],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.068965],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.068965],
[6,0,0,129,105,72,-103.155853,90.124130,0.0,1.001379,1.001379,100,66,0,0,0.931035],
[7,0,337,204,335,308,10.0,0.0,0.0,1.001379,1.001379,167,154,0,0,0.931035],
[8,0,107,144,107,58,-101.153099,91.125511,0.0,1.001379,1.001379,3,7,0,0,0.931035]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.034483],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.034483],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.034483],
[6,0,0,129,105,72,-103.077927,90.062065,0.0,1.000690,1.000690,100,66,0,0,0.965517],
[7,0,337,204,335,308,10.0,0.0,0.0,1.000690,1.000690,167,154,0,0,0.965517],
[8,0,107,144,107,58,-101.076546,91.062759,0.0,1.000690,1.000690,3,7,0,0,0.965517]
],
[
[6,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[7,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[8,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
]
]
}
}
]

},{}],16:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-02-01.png"],
"name": "obj05_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 460,
"CanvasHeight": 370,
"MarginWidth": 238,
"MarginHeight": 193,
"parts": ["root","Obj","bike","03","01","04"],
"ssa": [
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.500000,90.500000,0.017453,1.001000,0.995000,100,66],
[3,0,337,204,335,308,9.500000,0.500000,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.500000,91.500000,0.008727,1.002500,0.997500,3,7]
],
[
[2,0,0,129,105,72,-104.0,91.0,0.034907,1.002000,0.990000,100,66],
[3,0,337,204,335,308,9.0,1.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-102.0,92.0,0.017453,1.005000,0.995000,3,7]
],
[
[2,0,0,129,105,72,-104.500000,91.500000,0.052360,1.003000,0.985000,100,66],
[3,0,337,204,335,308,8.500000,1.500000,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-102.500000,92.500000,0.026180,1.007500,0.992500,3,7]
],
[
[2,0,0,129,105,72,-105.0,92.0,0.069813,1.004000,0.980000,100,66],
[3,0,337,204,335,308,8.0,2.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-103.0,93.0,0.034907,1.010000,0.990000,3,7]
],
[
[2,0,0,129,105,72,-105.500000,92.500000,0.087266,1.005000,0.975000,100,66],
[3,0,337,204,335,308,7.500000,2.500000,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-103.500000,93.500000,0.043633,1.012500,0.987500,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.104720,1.006000,0.970000,100,66],
[3,0,337,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.052360,1.015000,0.985000,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.107213,1.007000,0.965000,100,66],
[3,0,337,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.054853,1.017500,0.982500,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.109706,1.008000,0.960000,100,66],
[3,0,337,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.057347,1.020000,0.980000,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.112200,1.009000,0.955000,100,66],
[3,0,337,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.059840,1.022500,0.977500,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.114693,1.010000,0.950000,100,66],
[3,0,337,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.062333,1.025000,0.975000,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.117186,1.011000,0.945000,100,66],
[3,0,337,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.064827,1.027500,0.972500,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.119680,1.012000,0.940000,100,66],
[3,0,337,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.067320,1.030000,0.970000,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.122173,1.013000,0.935000,100,66],
[3,0,337,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.069813,1.032500,0.967500,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.124666,1.014000,0.930000,100,66],
[3,0,337,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.072306,1.035000,0.965000,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.127160,1.015000,0.925000,100,66],
[3,0,337,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.074800,1.037500,0.962500,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.129653,1.016000,0.920000,100,66],
[3,0,337,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.077293,1.040000,0.960000,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.132146,1.017000,0.915000,100,66],
[3,0,337,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.079786,1.042500,0.957500,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.134640,1.018000,0.910000,100,66],
[3,0,337,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.082280,1.045000,0.955000,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.137133,1.019000,0.905000,100,66],
[3,0,337,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.084773,1.047500,0.952500,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.139626,1.020000,0.900000,100,66],
[3,0,337,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.087266,1.050000,0.950000,3,7]
],
[
[2,0,0,129,105,72,-105.666664,92.666664,0.124112,1.017778,0.911111,100,66],
[3,0,337,204,335,308,7.333333,2.666667,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-103.666664,93.666664,0.077570,1.044444,0.955556,3,7]
],
[
[2,0,0,129,105,72,-105.333336,92.333336,0.108598,1.015556,0.922222,100,66],
[3,0,337,204,335,308,7.666667,2.333333,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-103.333336,93.333336,0.067874,1.038889,0.961111,3,7]
],
[
[2,0,0,129,105,72,-105.0,92.0,0.093084,1.013333,0.933333,100,66],
[3,0,337,204,335,308,8.0,2.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-103.0,93.0,0.058178,1.033333,0.966667,3,7]
],
[
[2,0,0,129,105,72,-104.666664,91.666664,0.077570,1.011111,0.944444,100,66],
[3,0,337,204,335,308,8.333333,1.666667,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-102.666664,92.666664,0.048481,1.027778,0.972222,3,7]
],
[
[2,0,0,129,105,72,-104.333336,91.333336,0.062056,1.008889,0.955556,100,66],
[3,0,337,204,335,308,8.666667,1.333333,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-102.333336,92.333336,0.038785,1.022222,0.977778,3,7]
],
[
[2,0,0,129,105,72,-104.0,91.0,0.046542,1.006667,0.966667,100,66],
[3,0,337,204,335,308,9.0,1.000000,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-102.0,92.0,0.029089,1.016667,0.983333,3,7]
],
[
[2,0,0,129,105,72,-103.666664,90.666664,0.031028,1.004444,0.977778,100,66],
[3,0,337,204,335,308,9.333333,0.666667,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.666664,91.666664,0.019393,1.011111,0.988889,3,7]
],
[
[2,0,0,129,105,72,-103.333336,90.333336,0.015514,1.002222,0.988889,100,66],
[3,0,337,204,335,308,9.666667,0.333333,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.333336,91.333336,0.009696,1.005556,0.994444,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
]
]
}
}
]

},{}],17:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-02-01.png"],
"name": "obj06_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 460,
"CanvasHeight": 370,
"MarginWidth": 238,
"MarginHeight": 193,
"parts": ["root","Obj","bike","03","01_2","04","bike_ura","03_1","01_3","04_1"],
"ssa": [
[
[6,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[7,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[8,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.034483],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.034483],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.034483],
[6,0,0,129,105,72,-103.077927,90.062065,0.0,1.000690,1.000690,100,66,0,0,0.965517],
[7,0,337,204,335,308,10.0,0.0,0.0,1.000690,1.000690,167,154,0,0,0.965517],
[8,0,107,144,107,58,-101.076546,91.062759,0.0,1.000690,1.000690,3,7,0,0,0.965517]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.068966],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.068966],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.068966],
[6,0,0,129,105,72,-103.155853,90.124130,0.0,1.001379,1.001379,100,66,0,0,0.931035],
[7,0,337,204,335,308,10.0,0.0,0.0,1.001379,1.001379,167,154,0,0,0.931035],
[8,0,107,144,107,58,-101.153099,91.125511,0.0,1.001379,1.001379,3,7,0,0,0.931035]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.103448],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.103448],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.103448],
[6,0,0,129,105,72,-103.233795,90.186211,0.0,1.002069,1.002069,100,66,0,0,0.896552],
[7,0,337,204,335,308,10.0,0.0,0.0,1.002069,1.002069,167,154,0,0,0.896552],
[8,0,107,144,107,58,-101.229660,91.188278,0.0,1.002069,1.002069,3,7,0,0,0.896552]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.137931],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.137931],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.137931],
[6,0,0,129,105,72,-103.311722,90.248276,0.0,1.002759,1.002759,100,66,0,0,0.862069],
[7,0,337,204,335,308,10.0,0.0,0.0,1.002759,1.002759,167,154,0,0,0.862069],
[8,0,107,144,107,58,-101.306206,91.251038,0.0,1.002759,1.002759,3,7,0,0,0.862069]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.172414],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.172414],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.172414],
[6,0,0,129,105,72,-103.389648,90.310341,0.0,1.003448,1.003448,100,66,0,0,0.827586],
[7,0,337,204,335,308,10.0,0.0,0.0,1.003448,1.003448,167,154,0,0,0.827586],
[8,0,107,144,107,58,-101.382759,91.313789,0.0,1.003448,1.003448,3,7,0,0,0.827586]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.206897],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.206897],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.206897],
[6,0,0,129,105,72,-103.467583,90.372406,0.0,1.004138,1.004138,100,66,0,0,0.793103],
[7,0,337,204,335,308,10.0,0.0,0.0,1.004138,1.004138,167,154,0,0,0.793103],
[8,0,107,144,107,58,-101.459305,91.376549,0.0,1.004138,1.004138,3,7,0,0,0.793103]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.241379],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.241379],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.241379],
[6,0,0,129,105,72,-103.545525,90.434486,0.0,1.004828,1.004828,100,66,0,0,0.758621],
[7,0,337,204,335,308,10.0,0.0,0.0,1.004828,1.004828,167,154,0,0,0.758621],
[8,0,107,144,107,58,-101.535866,91.439316,0.0,1.004828,1.004828,3,7,0,0,0.758621]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.275862],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.275862],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.275862],
[6,0,0,129,105,72,-103.623451,90.496552,0.0,1.005517,1.005517,100,66,0,0,0.724138],
[7,0,337,204,335,308,10.0,0.0,0.0,1.005517,1.005517,167,154,0,0,0.724138],
[8,0,107,144,107,58,-101.612411,91.502068,0.0,1.005517,1.005517,3,7,0,0,0.724138]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.310345],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.310345],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.310345],
[6,0,0,129,105,72,-103.701378,90.558617,0.0,1.006207,1.006207,100,66,0,0,0.689655],
[7,0,337,204,335,308,10.0,0.0,0.0,1.006207,1.006207,167,154,0,0,0.689655],
[8,0,107,144,107,58,-101.688965,91.564827,0.0,1.006207,1.006207,3,7,0,0,0.689655]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.344828],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.344828],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.344828],
[6,0,0,129,105,72,-103.779305,90.620682,0.0,1.006896,1.006896,100,66,0,0,0.655172],
[7,0,337,204,335,308,10.0,0.0,0.0,1.006896,1.006896,167,154,0,0,0.655172],
[8,0,107,144,107,58,-101.765511,91.627579,0.0,1.006896,1.006896,3,7,0,0,0.655172]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.379310],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.379310],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.379310],
[6,0,0,129,105,72,-103.857246,90.682762,0.0,1.007586,1.007586,100,66,0,0,0.620690],
[7,0,337,204,335,308,10.0,0.0,0.0,1.007586,1.007586,167,154,0,0,0.620690],
[8,0,107,144,107,58,-101.842072,91.690346,0.0,1.007586,1.007586,3,7,0,0,0.620690]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.413793],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.413793],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.413793],
[6,0,0,129,105,72,-103.935173,90.744827,0.0,1.008276,1.008276,100,66,0,0,0.586207],
[7,0,337,204,335,308,10.0,0.0,0.0,1.008276,1.008276,167,154,0,0,0.586207],
[8,0,107,144,107,58,-101.918625,91.753105,0.0,1.008276,1.008276,3,7,0,0,0.586207]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.448276],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.448276],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.448276],
[6,0,0,129,105,72,-104.013100,90.806892,0.0,1.008965,1.008965,100,66,0,0,0.551724],
[7,0,337,204,335,308,10.0,0.0,0.0,1.008965,1.008965,167,154,0,0,0.551724],
[8,0,107,144,107,58,-101.995171,91.815857,0.0,1.008965,1.008965,3,7,0,0,0.551724]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.482759],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.482759],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.482759],
[6,0,0,129,105,72,-104.091026,90.868958,0.0,1.009655,1.009655,100,66,0,0,0.517241],
[7,0,337,204,335,308,10.0,0.0,0.0,1.009655,1.009655,167,154,0,0,0.517241],
[8,0,107,144,107,58,-102.071716,91.878616,0.0,1.009655,1.009655,3,7,0,0,0.517241]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.517241],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.517241],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.517241],
[6,0,0,129,105,72,-104.168968,90.931038,0.0,1.010345,1.010345,100,66,0,0,0.482759],
[7,0,337,204,335,308,10.0,0.0,0.0,1.010345,1.010345,167,154,0,0,0.482759],
[8,0,107,144,107,58,-102.148277,91.941383,0.0,1.010345,1.010345,3,7,0,0,0.482759]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.551724],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.551724],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.551724],
[6,0,0,129,105,72,-104.246895,90.993103,0.0,1.011034,1.011034,100,66,0,0,0.448276],
[7,0,337,204,335,308,10.0,0.0,0.0,1.011034,1.011034,167,154,0,0,0.448276],
[8,0,107,144,107,58,-102.224831,92.004135,0.0,1.011034,1.011034,3,7,0,0,0.448276]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.586207],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.586207],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.586207],
[6,0,0,129,105,72,-104.324821,91.055168,0.0,1.011724,1.011724,100,66,0,0,0.413793],
[7,0,337,204,335,308,10.0,0.0,0.0,1.011724,1.011724,167,154,0,0,0.413793],
[8,0,107,144,107,58,-102.301376,92.066895,0.0,1.011724,1.011724,3,7,0,0,0.413793]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.620690],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.620690],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.620690],
[6,0,0,129,105,72,-104.402756,91.117233,0.0,1.012414,1.012414,100,66,0,0,0.379310],
[7,0,337,204,335,308,10.0,0.0,0.0,1.012414,1.012414,167,154,0,0,0.379310],
[8,0,107,144,107,58,-102.377922,92.129654,0.0,1.012414,1.012414,3,7,0,0,0.379310]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.655172],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.655172],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.655172],
[6,0,0,129,105,72,-104.480698,91.179314,0.0,1.013103,1.013103,100,66,0,0,0.344828],
[7,0,337,204,335,308,10.0,0.0,0.0,1.013103,1.013103,167,154,0,0,0.344828],
[8,0,107,144,107,58,-102.454483,92.192413,0.0,1.013103,1.013103,3,7,0,0,0.344828]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.689655],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.689655],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.689655],
[6,0,0,129,105,72,-104.558624,91.241379,0.0,1.013793,1.013793,100,66,0,0,0.310345],
[7,0,337,204,335,308,10.0,0.0,0.0,1.013793,1.013793,167,154,0,0,0.310345],
[8,0,107,144,107,58,-102.531036,92.255173,0.0,1.013793,1.013793,3,7,0,0,0.310345]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.724138],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.724138],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.724138],
[6,0,0,129,105,72,-104.636551,91.303444,0.0,1.014483,1.014483,100,66,0,0,0.275862],
[7,0,337,204,335,308,10.0,0.0,0.0,1.014483,1.014483,167,154,0,0,0.275862],
[8,0,107,144,107,58,-102.607582,92.317932,0.0,1.014483,1.014483,3,7,0,0,0.275862]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.758621],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.758621],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.758621],
[6,0,0,129,105,72,-104.714478,91.365509,0.0,1.015172,1.015172,100,66,0,0,0.241379],
[7,0,337,204,335,308,10.0,0.0,0.0,1.015172,1.015172,167,154,0,0,0.241379],
[8,0,107,144,107,58,-102.684135,92.380684,0.0,1.015172,1.015172,3,7,0,0,0.241379]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.793103],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.793103],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.793103],
[6,0,0,129,105,72,-104.792419,91.427589,0.0,1.015862,1.015862,100,66,0,0,0.206897],
[7,0,337,204,335,308,10.0,0.0,0.0,1.015862,1.015862,167,154,0,0,0.206897],
[8,0,107,144,107,58,-102.760696,92.443451,0.0,1.015862,1.015862,3,7,0,0,0.206897]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.827586],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.827586],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.827586],
[6,0,0,129,105,72,-104.870346,91.489655,0.0,1.016552,1.016552,100,66,0,0,0.172414],
[7,0,337,204,335,308,10.0,0.0,0.0,1.016552,1.016552,167,154,0,0,0.172414],
[8,0,107,144,107,58,-102.837242,92.506210,0.0,1.016552,1.016552,3,7,0,0,0.172414]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.862069],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.862069],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.862069],
[6,0,0,129,105,72,-104.948273,91.551720,0.0,1.017241,1.017241,100,66,0,0,0.137931],
[7,0,337,204,335,308,10.0,0.0,0.0,1.017241,1.017241,167,154,0,0,0.137931],
[8,0,107,144,107,58,-102.913788,92.568962,0.0,1.017241,1.017241,3,7,0,0,0.137931]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.896552],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.896552],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.896552],
[6,0,0,129,105,72,-105.026199,91.613785,0.0,1.017931,1.017931,100,66,0,0,0.103448],
[7,0,337,204,335,308,10.0,0.0,0.0,1.017931,1.017931,167,154,0,0,0.103448],
[8,0,107,144,107,58,-102.990341,92.631721,0.0,1.017931,1.017931,3,7,0,0,0.103448]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.931035],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.931035],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.931035],
[6,0,0,129,105,72,-105.104141,91.675865,0.0,1.018621,1.018621,100,66,0,0,0.068965],
[7,0,337,204,335,308,10.0,0.0,0.0,1.018621,1.018621,167,154,0,0,0.068965],
[8,0,107,144,107,58,-103.066902,92.694489,0.0,1.018621,1.018621,3,7,0,0,0.068965]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.965517],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.965517],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.965517],
[6,0,0,129,105,72,-105.182068,91.737930,0.0,1.019310,1.019310,100,66,0,0,0.034483],
[7,0,337,204,335,308,10.0,0.0,0.0,1.019310,1.019310,167,154,0,0,0.034483],
[8,0,107,144,107,58,-103.143448,92.757240,0.0,1.019310,1.019310,3,7,0,0,0.034483]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
]
]
}
}
]

},{}],18:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-03-01.png"],
"name": "obj01_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 600,
"CanvasHeight": 600,
"MarginWidth": 308,
"MarginHeight": 308,
"parts": ["root","Obj","03","01","02","02_left","01_right"],
"ssa": [
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.0,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.0,-153.0,0.0,1.0,1.0,136,27],
[5,0,233,267,231,344,119.0,-145.0,0.0,1.0,1.0,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.001309,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.029922,-152.970078,-0.000261,1.000299,1.000150,136,27],
[5,0,233,267,231,344,118.958305,-145.041702,-0.000582,1.000417,1.000208,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.002618,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.058090,-152.941910,-0.000507,1.000581,1.000291,136,27],
[5,0,233,267,231,344,118.916466,-145.083542,-0.001166,1.000835,1.000418,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.003927,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.086990,-152.913010,-0.000759,1.000870,1.000435,136,27],
[5,0,233,267,231,344,118.875374,-145.124634,-0.001740,1.001246,1.000623,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.005236,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.116669,-152.883331,-0.001018,1.001167,1.000583,136,27],
[5,0,233,267,231,344,118.832626,-145.167374,-0.002337,1.001674,1.000837,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.006545,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.145409,-152.854584,-0.001269,1.001454,1.000727,136,27],
[5,0,233,267,231,344,118.790367,-145.209625,-0.002927,1.002096,1.001048,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.007854,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.176476,-152.823517,-0.001540,1.001765,1.000882,136,27],
[5,0,233,267,231,344,118.750237,-145.249756,-0.003487,1.002498,1.001249,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.009163,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.204781,-152.795227,-0.001787,1.002048,1.001024,136,27],
[5,0,233,267,231,344,118.708069,-145.291931,-0.004076,1.002919,1.001460,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.010472,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.234459,-152.765549,-0.002046,1.002345,1.001172,136,27],
[5,0,233,267,231,344,118.669792,-145.330215,-0.004611,1.003302,1.001651,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.011781,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.265358,-152.734650,-0.002316,1.002654,1.001327,136,27],
[5,0,233,267,231,344,118.630478,-145.369522,-0.005159,1.003695,1.001848,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.013090,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.291931,-152.708069,-0.002548,1.002919,1.001460,136,27],
[5,0,233,267,231,344,118.584595,-145.415405,-0.005800,1.004154,1.002077,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.014399,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.324669,-152.675323,-0.002833,1.003247,1.001623,136,27],
[5,0,233,267,231,344,118.543900,-145.456100,-0.006368,1.004561,1.002280,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.015708,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.352562,-152.647430,-0.003077,1.003526,1.001763,136,27],
[5,0,233,267,231,344,118.502930,-145.497070,-0.006940,1.004971,1.002485,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.017017,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.380913,-152.619095,-0.003324,1.003809,1.001904,136,27],
[5,0,233,267,231,344,118.461945,-145.538055,-0.007513,1.005381,1.002690,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.018326,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.409622,-152.590378,-0.003575,1.004096,1.002048,136,27],
[5,0,233,267,231,344,118.421188,-145.578812,-0.008082,1.005788,1.002894,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.019635,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.438614,-152.561386,-0.003828,1.004386,1.002193,136,27],
[5,0,233,267,231,344,118.380913,-145.619095,-0.008644,1.006191,1.003095,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.020944,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.467796,-152.532211,-0.004082,1.004678,1.002339,136,27],
[5,0,233,267,231,344,118.341347,-145.658661,-0.009197,1.006587,1.003293,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.022253,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.497070,-152.502930,-0.004338,1.004971,1.002485,136,27],
[5,0,233,267,231,344,118.302750,-145.697250,-0.009735,1.006973,1.003486,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.023562,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.526360,-152.473648,-0.004593,1.005264,1.002632,136,27],
[5,0,233,267,231,344,118.260124,-145.739868,-0.010331,1.007399,1.003699,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.024871,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.555565,-152.444443,-0.004848,1.005556,1.002778,136,27],
[5,0,233,267,231,344,118.224419,-145.775574,-0.010829,1.007756,1.003878,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.026180,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.584595,-152.415405,-0.005102,1.005846,1.002923,136,27],
[5,0,233,267,231,344,118.181091,-145.818909,-0.011434,1.008189,1.004094,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.025509,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.613373,-152.386627,-0.005353,1.006134,1.003067,136,27],
[5,0,233,267,231,344,118.145409,-145.854584,-0.011932,1.008546,1.004273,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.024837,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.641800,-152.358200,-0.005601,1.006418,1.003209,136,27],
[5,0,233,267,231,344,118.105125,-145.894867,-0.012495,1.008949,1.004474,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.024166,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.669792,-152.330215,-0.005845,1.006698,1.003349,136,27],
[5,0,233,267,231,344,118.067169,-145.932831,-0.013025,1.009328,1.004664,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.023495,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.697250,-152.302750,-0.006085,1.006973,1.003486,136,27],
[5,0,233,267,231,344,118.029930,-145.970078,-0.013545,1.009701,1.004850,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.022824,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.729385,-152.270615,-0.006365,1.007294,1.003647,136,27],
[5,0,233,267,231,344,118.0,-146.0,-0.013963,1.010000,1.005000,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.022152,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.755371,-152.244629,-0.006592,1.007554,1.003777,136,27],
[5,0,233,267,231,344,118.023735,-145.970078,-0.013545,1.009701,1.004850,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.021481,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.785477,-152.214523,-0.006855,1.007855,1.003927,136,27],
[5,0,233,267,231,344,118.052353,-145.938950,-0.013110,1.009390,1.004695,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.020810,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.814255,-152.185745,-0.007106,1.008142,1.004071,136,27],
[5,0,233,267,231,344,118.080147,-145.909500,-0.012699,1.009095,1.004547,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.020138,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.841545,-152.158447,-0.007344,1.008415,1.004208,136,27],
[5,0,233,267,231,344,118.108925,-145.879379,-0.012278,1.008794,1.004397,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.019467,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.867210,-152.132797,-0.007568,1.008672,1.004336,136,27],
[5,0,233,267,231,344,118.136948,-145.850296,-0.011872,1.008503,1.004251,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.018796,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.894875,-152.105133,-0.007809,1.008949,1.004474,136,27],
[5,0,233,267,231,344,118.167381,-145.818909,-0.011434,1.008189,1.004094,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.018125,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.923195,-152.076813,-0.008056,1.009232,1.004616,136,27],
[5,0,233,267,231,344,118.199959,-145.790375,-0.011036,1.007904,1.003952,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.017453,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.950409,-152.049591,-0.008294,1.009504,1.004752,136,27],
[5,0,233,267,231,344,118.229416,-145.760468,-0.010618,1.007605,1.003802,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.016782,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.978180,-152.021820,-0.008536,1.009782,1.004891,136,27],
[5,0,233,267,231,344,118.260124,-145.729385,-0.010184,1.007294,1.003647,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.016111,1.0,1.0,22,8],
[4,0,254,613,252,411,-103.0,-152.0,-0.008727,1.010000,1.005000,136,27],
[5,0,233,267,231,344,118.286560,-145.697250,-0.009735,1.006973,1.003486,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.015439,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.955742,-152.044266,-0.008340,1.009557,1.004779,136,27],
[5,0,233,267,231,344,118.319153,-145.669785,-0.009352,1.006698,1.003349,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.014768,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.913002,-152.086990,-0.007967,1.009130,1.004565,136,27],
[5,0,233,267,231,344,118.346947,-145.636154,-0.008882,1.006361,1.003181,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.014097,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.871315,-152.128693,-0.007604,1.008713,1.004357,136,27],
[5,0,233,267,231,344,118.380905,-145.607651,-0.008484,1.006076,1.003038,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.013426,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.828094,-152.171906,-0.007226,1.008281,1.004140,136,27],
[5,0,233,267,231,344,118.409622,-145.578812,-0.008082,1.005788,1.002894,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.012754,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.785477,-152.214523,-0.006855,1.007855,1.003927,136,27],
[5,0,233,267,231,344,118.438614,-145.549728,-0.007676,1.005497,1.002749,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.012083,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.739868,-152.260132,-0.006457,1.007399,1.003699,136,27],
[5,0,233,267,231,344,118.467796,-145.520508,-0.007268,1.005205,1.002603,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.011412,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.697250,-152.302750,-0.006085,1.006973,1.003486,136,27],
[5,0,233,267,231,344,118.502930,-145.491211,-0.006859,1.004912,1.002456,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.010740,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.653053,-152.346939,-0.005699,1.006531,1.003265,136,27],
[5,0,233,267,231,344,118.532204,-145.456100,-0.006368,1.004561,1.002280,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.010069,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.613373,-152.386627,-0.005353,1.006134,1.003067,136,27],
[5,0,233,267,231,344,118.561386,-145.426987,-0.005962,1.004270,1.002135,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.009398,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.567200,-152.432800,-0.004950,1.005672,1.002836,136,27],
[5,0,233,267,231,344,118.590378,-145.398102,-0.005559,1.003981,1.001991,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.008727,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.526352,-152.473648,-0.004593,1.005264,1.002632,136,27],
[5,0,233,267,231,344,118.619087,-145.369522,-0.005159,1.003695,1.001848,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.008055,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.485352,-152.514648,-0.004236,1.004853,1.002427,136,27],
[5,0,233,267,231,344,118.653053,-145.341339,-0.004766,1.003413,1.001707,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.007384,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.444435,-152.555557,-0.003878,1.004444,1.002222,136,27],
[5,0,233,267,231,344,118.680847,-145.308197,-0.004303,1.003082,1.001541,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.006713,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.398102,-152.601898,-0.003474,1.003981,1.001991,136,27],
[5,0,233,267,231,344,118.713440,-145.281219,-0.003927,1.002812,1.001406,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.006042,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.358200,-152.641800,-0.003126,1.003582,1.001791,136,27],
[5,0,233,267,231,344,118.739876,-145.249756,-0.003487,1.002498,1.001249,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.005370,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.313660,-152.686340,-0.002737,1.003137,1.001568,136,27],
[5,0,233,267,231,344,118.770576,-145.224426,-0.003133,1.002244,1.001122,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.004699,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.270615,-152.729385,-0.002362,1.002706,1.001353,136,27],
[5,0,233,267,231,344,118.800041,-145.195190,-0.002725,1.001952,1.000976,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.004028,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.229424,-152.770584,-0.002002,1.002294,1.001147,136,27],
[5,0,233,267,231,344,118.832619,-145.162888,-0.002274,1.001629,1.000814,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.003356,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.190445,-152.809555,-0.001662,1.001904,1.000952,136,27],
[5,0,233,267,231,344,118.863052,-145.136948,-0.001912,1.001369,1.000685,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.002685,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.149712,-152.850296,-0.001306,1.001497,1.000749,136,27],
[5,0,233,267,231,344,118.891075,-145.105133,-0.001468,1.001051,1.000526,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.002014,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.108925,-152.891083,-0.000951,1.001089,1.000545,136,27],
[5,0,233,267,231,344,118.919853,-145.076813,-0.001072,1.000768,1.000384,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.001343,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.070320,-152.929688,-0.000614,1.000703,1.000352,136,27],
[5,0,233,267,231,344,118.947647,-145.049591,-0.000692,1.000496,1.000248,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.000671,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.032143,-152.967865,-0.000280,1.000321,1.000161,136,27],
[5,0,233,267,231,344,118.976265,-145.023727,-0.000331,1.000237,1.000119,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.0,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.0,-153.0,0.0,1.0,1.0,136,27],
[5,0,233,267,231,344,119.0,-145.0,0.0,1.0,1.0,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
]
]
}
}
]

},{}],19:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-03-01.png"],
"name": "obj02_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 600,
"CanvasHeight": 600,
"MarginWidth": 308,
"MarginHeight": 308,
"parts": ["root","Obj","03","01","02","02_left","01_right"],
"ssa": [
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.0,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.0,-153.0,0.0,1.0,1.0,136,27],
[5,0,233,267,231,344,119.0,-145.0,0.0,1.0,1.0,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.000997,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.090508,-152.909500,-0.000790,1.000905,1.000453,136,27],
[5,0,233,267,231,344,118.837105,-145.162888,-0.002274,1.001629,1.000814,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.001995,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.181091,-152.818909,-0.001580,1.001811,1.000905,136,27],
[5,0,233,267,231,344,118.675331,-145.324677,-0.004533,1.003247,1.001623,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.002992,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.270615,-152.729385,-0.002362,1.002706,1.001353,136,27],
[5,0,233,267,231,344,118.520500,-145.479492,-0.006695,1.004795,1.002398,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.003989,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.358200,-152.641800,-0.003126,1.003582,1.001791,136,27],
[5,0,233,267,231,344,118.369522,-145.630478,-0.008803,1.006305,1.003152,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.004987,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.444443,-152.555557,-0.003878,1.004444,1.002222,136,27],
[5,0,233,267,231,344,118.224419,-145.775574,-0.010829,1.007756,1.003878,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.005984,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.532204,-152.467789,-0.004644,1.005322,1.002661,136,27],
[5,0,233,267,231,344,118.090508,-145.909485,-0.012699,1.009095,1.004547,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.006981,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.619087,-152.380905,-0.005403,1.006191,1.003095,136,27],
[5,0,233,267,231,344,118.0,-146.0,-0.013963,1.010000,1.005000,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.005773,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.702675,-152.297333,-0.006132,1.007027,1.003513,136,27],
[5,0,233,267,231,344,118.034424,-145.953110,-0.011555,1.009531,1.004766,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.004565,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.785477,-152.214523,-0.006855,1.007855,1.003927,136,27],
[5,0,233,267,231,344,118.076805,-145.905914,-0.009035,1.009059,1.004530,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.003356,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.867210,-152.132797,-0.007568,1.008672,1.004336,136,27],
[5,0,233,267,231,344,118.124626,-145.858841,-0.006635,1.008588,1.004294,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.002148,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.941910,-152.058090,-0.008220,1.009419,1.004710,136,27],
[5,0,233,267,231,344,118.167381,-145.809555,-0.004293,1.008096,1.004048,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.000940,1.0,1.0,22,8],
[4,0,254,613,252,411,-103.0,-152.0,-0.008727,1.010000,1.005000,136,27],
[5,0,233,267,231,344,118.214523,-145.765549,-0.002002,1.007656,1.003828,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.000269,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.938950,-152.061050,-0.006242,1.009390,1.004695,136,27],
[5,0,233,267,231,344,118.265358,-145.718781,0.000444,1.007188,1.003594,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.001477,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.875374,-152.124634,-0.003721,1.008754,1.004377,136,27],
[5,0,233,267,231,344,118.308197,-145.669785,0.002680,1.006698,1.003349,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.002685,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.814255,-152.185745,-0.001320,1.008142,1.004071,136,27],
[5,0,233,267,231,344,118.358200,-145.624786,0.004903,1.006248,1.003124,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.003893,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.750237,-152.249756,0.001146,1.007502,1.003751,136,27],
[5,0,233,267,231,344,118.403854,-145.573013,0.007098,1.005730,1.002865,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.005102,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.691811,-152.308197,0.003547,1.006918,1.003459,136,27],
[5,0,233,267,231,344,118.450264,-145.526352,0.009177,1.005264,1.002632,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.006310,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.630478,-152.369522,0.005914,1.006305,1.003152,136,27],
[5,0,233,267,231,344,118.502930,-145.485352,0.010681,1.004853,1.002427,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.007518,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.567200,-152.432800,0.008269,1.005672,1.002836,136,27],
[5,0,233,267,231,344,118.549728,-145.438614,0.009964,1.004386,1.002193,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.008727,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.508789,-152.491211,0.010470,1.005088,1.002544,136,27],
[5,0,233,267,231,344,118.596146,-145.392349,0.008989,1.003924,1.001962,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.007757,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.444435,-152.555557,0.012553,1.004444,1.002222,136,27],
[5,0,233,267,231,344,118.641800,-145.341339,0.008014,1.003413,1.001707,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.006787,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.386627,-152.613373,0.014085,1.003866,1.001933,136,27],
[5,0,233,267,231,344,118.691811,-145.297333,0.006916,1.002973,1.001487,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.005818,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.324669,-152.675323,0.012657,1.003247,1.001623,136,27],
[5,0,233,267,231,344,118.734642,-145.254929,0.005872,1.002549,1.001275,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.004848,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.265358,-152.734650,0.010494,1.002654,1.001327,136,27],
[5,0,233,267,231,344,118.785477,-145.209625,0.004810,1.002096,1.001048,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.003879,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.209633,-152.790375,0.008234,1.002096,1.001048,136,27],
[5,0,233,267,231,344,118.832619,-145.162888,0.003766,1.001629,1.000814,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.002909,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.149712,-152.850296,0.005851,1.001497,1.000749,136,27],
[5,0,233,267,231,344,118.875374,-145.116669,0.002668,1.001167,1.000583,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.001939,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.094078,-152.905930,0.003591,1.000941,1.000470,136,27],
[5,0,233,267,231,344,118.923195,-145.073532,0.001646,1.000735,1.000368,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.000970,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.041695,-152.958298,0.001428,1.000417,1.000208,136,27],
[5,0,233,267,231,344,118.965576,-145.034424,0.000717,1.000344,1.000172,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.0,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.0,-153.0,0.0,1.0,1.0,136,27],
[5,0,233,267,231,344,119.0,-145.0,0.0,1.0,1.0,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
]
]
}
}
]

},{}],20:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-03-01.png"],
"name": "obj03_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 600,
"CanvasHeight": 600,
"MarginWidth": 308,
"MarginHeight": 308,
"parts": ["root","Obj","03","01","02","02_left","01_right"],
"ssa": [
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.0,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.0,-153.0,0.0,1.0,1.0,136,27],
[5,0,233,267,231,344,119.0,-145.0,0.0,1.0,1.0,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.001309,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.029922,-152.970078,-0.000261,1.000299,1.000150,136,27],
[5,0,233,267,231,344,118.958305,-145.041702,-0.000582,1.000417,1.000208,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.002618,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.058090,-152.941910,-0.000507,1.000581,1.000291,136,27],
[5,0,233,267,231,344,118.916466,-145.083542,-0.001166,1.000835,1.000418,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.003927,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.086990,-152.913010,-0.000759,1.000870,1.000435,136,27],
[5,0,233,267,231,344,118.875374,-145.124634,-0.001740,1.001246,1.000623,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.005236,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.116669,-152.883331,-0.001018,1.001167,1.000583,136,27],
[5,0,233,267,231,344,118.832626,-145.167374,-0.002337,1.001674,1.000837,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.006545,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.145409,-152.854584,-0.001269,1.001454,1.000727,136,27],
[5,0,233,267,231,344,118.790367,-145.209625,-0.002927,1.002096,1.001048,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.007854,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.176476,-152.823517,-0.001540,1.001765,1.000882,136,27],
[5,0,233,267,231,344,118.750237,-145.249756,-0.003487,1.002498,1.001249,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.009163,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.204781,-152.795227,-0.001787,1.002048,1.001024,136,27],
[5,0,233,267,231,344,118.708069,-145.291931,-0.004076,1.002919,1.001460,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.010472,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.234459,-152.765549,-0.002046,1.002345,1.001172,136,27],
[5,0,233,267,231,344,118.669792,-145.330215,-0.004611,1.003302,1.001651,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.011781,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.265358,-152.734650,-0.002316,1.002654,1.001327,136,27],
[5,0,233,267,231,344,118.630478,-145.369522,-0.005159,1.003695,1.001848,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.013090,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.291931,-152.708069,-0.002548,1.002919,1.001460,136,27],
[5,0,233,267,231,344,118.584595,-145.415405,-0.005800,1.004154,1.002077,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.014399,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.324669,-152.675323,-0.002833,1.003247,1.001623,136,27],
[5,0,233,267,231,344,118.543900,-145.456100,-0.006368,1.004561,1.002280,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.015708,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.352562,-152.647430,-0.003077,1.003526,1.001763,136,27],
[5,0,233,267,231,344,118.502930,-145.497070,-0.006940,1.004971,1.002485,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.017017,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.380913,-152.619095,-0.003324,1.003809,1.001904,136,27],
[5,0,233,267,231,344,118.461945,-145.538055,-0.007513,1.005381,1.002690,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.018326,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.409622,-152.590378,-0.003575,1.004096,1.002048,136,27],
[5,0,233,267,231,344,118.421188,-145.578812,-0.008082,1.005788,1.002894,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.019635,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.438614,-152.561386,-0.003828,1.004386,1.002193,136,27],
[5,0,233,267,231,344,118.380913,-145.619095,-0.008644,1.006191,1.003095,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.020944,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.467796,-152.532211,-0.004082,1.004678,1.002339,136,27],
[5,0,233,267,231,344,118.341347,-145.658661,-0.009197,1.006587,1.003293,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.022253,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.497070,-152.502930,-0.004338,1.004971,1.002485,136,27],
[5,0,233,267,231,344,118.302750,-145.697250,-0.009735,1.006973,1.003486,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.023562,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.526360,-152.473648,-0.004593,1.005264,1.002632,136,27],
[5,0,233,267,231,344,118.260124,-145.739868,-0.010331,1.007399,1.003699,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.024871,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.555565,-152.444443,-0.004848,1.005556,1.002778,136,27],
[5,0,233,267,231,344,118.224419,-145.775574,-0.010829,1.007756,1.003878,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.026180,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.584595,-152.415405,-0.005102,1.005846,1.002923,136,27],
[5,0,233,267,231,344,118.181091,-145.818909,-0.011434,1.008189,1.004094,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.025509,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.613373,-152.386627,-0.005353,1.006134,1.003067,136,27],
[5,0,233,267,231,344,118.145409,-145.854584,-0.011932,1.008546,1.004273,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.024837,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.641800,-152.358200,-0.005601,1.006418,1.003209,136,27],
[5,0,233,267,231,344,118.105125,-145.894867,-0.012495,1.008949,1.004474,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.024166,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.669792,-152.330215,-0.005845,1.006698,1.003349,136,27],
[5,0,233,267,231,344,118.067169,-145.932831,-0.013025,1.009328,1.004664,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.023495,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.697250,-152.302750,-0.006085,1.006973,1.003486,136,27],
[5,0,233,267,231,344,118.029930,-145.970078,-0.013545,1.009701,1.004850,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.022824,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.729385,-152.270615,-0.006365,1.007294,1.003647,136,27],
[5,0,233,267,231,344,118.0,-146.0,-0.013963,1.010000,1.005000,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.022152,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.755371,-152.244629,-0.006592,1.007554,1.003777,136,27],
[5,0,233,267,231,344,118.023735,-145.970078,-0.013545,1.009701,1.004850,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.021481,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.785477,-152.214523,-0.006855,1.007855,1.003927,136,27],
[5,0,233,267,231,344,118.052353,-145.938950,-0.013110,1.009390,1.004695,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.020810,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.814255,-152.185745,-0.007106,1.008142,1.004071,136,27],
[5,0,233,267,231,344,118.080147,-145.909500,-0.012699,1.009095,1.004547,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.020138,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.841545,-152.158447,-0.007344,1.008415,1.004208,136,27],
[5,0,233,267,231,344,118.108925,-145.879379,-0.012278,1.008794,1.004397,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.019467,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.867210,-152.132797,-0.007568,1.008672,1.004336,136,27],
[5,0,233,267,231,344,118.136948,-145.850296,-0.011872,1.008503,1.004251,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.018796,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.894875,-152.105133,-0.007809,1.008949,1.004474,136,27],
[5,0,233,267,231,344,118.167381,-145.818909,-0.011434,1.008189,1.004094,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.018125,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.923195,-152.076813,-0.008056,1.009232,1.004616,136,27],
[5,0,233,267,231,344,118.199959,-145.790375,-0.011036,1.007904,1.003952,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.017453,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.950409,-152.049591,-0.008294,1.009504,1.004752,136,27],
[5,0,233,267,231,344,118.229416,-145.760468,-0.010618,1.007605,1.003802,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.016782,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.978180,-152.021820,-0.008536,1.009782,1.004891,136,27],
[5,0,233,267,231,344,118.260124,-145.729385,-0.010184,1.007294,1.003647,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.016111,1.0,1.0,22,8],
[4,0,254,613,252,411,-103.0,-152.0,-0.008727,1.010000,1.005000,136,27],
[5,0,233,267,231,344,118.286560,-145.697250,-0.009735,1.006973,1.003486,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.015439,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.955742,-152.044266,-0.008340,1.009557,1.004779,136,27],
[5,0,233,267,231,344,118.319153,-145.669785,-0.009352,1.006698,1.003349,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.014768,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.913002,-152.086990,-0.007967,1.009130,1.004565,136,27],
[5,0,233,267,231,344,118.346947,-145.636154,-0.008882,1.006361,1.003181,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.014097,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.871315,-152.128693,-0.007604,1.008713,1.004357,136,27],
[5,0,233,267,231,344,118.380905,-145.607651,-0.008484,1.006076,1.003038,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.013426,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.828094,-152.171906,-0.007226,1.008281,1.004140,136,27],
[5,0,233,267,231,344,118.409622,-145.578812,-0.008082,1.005788,1.002894,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.012754,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.785477,-152.214523,-0.006855,1.007855,1.003927,136,27],
[5,0,233,267,231,344,118.438614,-145.549728,-0.007676,1.005497,1.002749,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.012083,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.739868,-152.260132,-0.006457,1.007399,1.003699,136,27],
[5,0,233,267,231,344,118.467796,-145.520508,-0.007268,1.005205,1.002603,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.011412,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.697250,-152.302750,-0.006085,1.006973,1.003486,136,27],
[5,0,233,267,231,344,118.502930,-145.491211,-0.006859,1.004912,1.002456,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.010740,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.653053,-152.346939,-0.005699,1.006531,1.003265,136,27],
[5,0,233,267,231,344,118.532204,-145.456100,-0.006368,1.004561,1.002280,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.010069,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.613373,-152.386627,-0.005353,1.006134,1.003067,136,27],
[5,0,233,267,231,344,118.561386,-145.426987,-0.005962,1.004270,1.002135,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.009398,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.567200,-152.432800,-0.004950,1.005672,1.002836,136,27],
[5,0,233,267,231,344,118.590378,-145.398102,-0.005559,1.003981,1.001991,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.008727,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.526352,-152.473648,-0.004593,1.005264,1.002632,136,27],
[5,0,233,267,231,344,118.619087,-145.369522,-0.005159,1.003695,1.001848,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.008055,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.485352,-152.514648,-0.004236,1.004853,1.002427,136,27],
[5,0,233,267,231,344,118.653053,-145.341339,-0.004766,1.003413,1.001707,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.007384,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.444435,-152.555557,-0.003878,1.004444,1.002222,136,27],
[5,0,233,267,231,344,118.680847,-145.308197,-0.004303,1.003082,1.001541,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.006713,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.398102,-152.601898,-0.003474,1.003981,1.001991,136,27],
[5,0,233,267,231,344,118.713440,-145.281219,-0.003927,1.002812,1.001406,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.006042,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.358200,-152.641800,-0.003126,1.003582,1.001791,136,27],
[5,0,233,267,231,344,118.739876,-145.249756,-0.003487,1.002498,1.001249,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.005370,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.313660,-152.686340,-0.002737,1.003137,1.001568,136,27],
[5,0,233,267,231,344,118.770576,-145.224426,-0.003133,1.002244,1.001122,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.004699,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.270615,-152.729385,-0.002362,1.002706,1.001353,136,27],
[5,0,233,267,231,344,118.800041,-145.195190,-0.002725,1.001952,1.000976,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.004028,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.229424,-152.770584,-0.002002,1.002294,1.001147,136,27],
[5,0,233,267,231,344,118.832619,-145.162888,-0.002274,1.001629,1.000814,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.003356,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.190445,-152.809555,-0.001662,1.001904,1.000952,136,27],
[5,0,233,267,231,344,118.863052,-145.136948,-0.001912,1.001369,1.000685,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.002685,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.149712,-152.850296,-0.001306,1.001497,1.000749,136,27],
[5,0,233,267,231,344,118.891075,-145.105133,-0.001468,1.001051,1.000526,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.002014,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.108925,-152.891083,-0.000951,1.001089,1.000545,136,27],
[5,0,233,267,231,344,118.919853,-145.076813,-0.001072,1.000768,1.000384,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.001343,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.070320,-152.929688,-0.000614,1.000703,1.000352,136,27],
[5,0,233,267,231,344,118.947647,-145.049591,-0.000692,1.000496,1.000248,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.000671,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.032143,-152.967865,-0.000280,1.000321,1.000161,136,27],
[5,0,233,267,231,344,118.976265,-145.023727,-0.000331,1.000237,1.000119,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.0,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.0,-153.0,0.0,1.0,1.0,136,27],
[5,0,233,267,231,344,119.0,-145.0,0.0,1.0,1.0,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
]
]
}
}
]

},{}],21:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-03-01.png"],
"name": "obj04_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 600,
"CanvasHeight": 600,
"MarginWidth": 308,
"MarginHeight": 308,
"parts": ["root","Obj","omote","03","01","02","02_left_1","01_right_1","ura","03_1","01_1","02_1","02_left_2","01_right_2"],
"ssa": [
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[4,0,508,275,37,410,224.0,-145.0,0.0,1.0,1.0,22,8],
[5,0,254,613,252,411,-102.0,-153.0,0.0,1.0,1.0,136,27],
[6,0,233,267,231,344,119.0,-145.0,0.0,1.0,1.0,114,15],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.965517],
[4,0,508,275,37,410,224.0,-145.0,-0.000997,1.0,1.0,22,8,0,0,0.965517],
[8,0,508,687,452,337,0.0,0.0,0.0,1.096552,1.096552,226,168,0,0,0.034483],
[10,0,508,275,37,410,245.627594,-159.000015,-0.000997,1.096552,1.096552,22,8,0,0,0.034483],
[5,0,254,613,252,411,-102.090508,-152.909500,-0.000790,1.000905,1.000453,136,27,0,0,0.965517],
[6,0,233,267,231,344,118.837105,-145.162888,-0.002274,1.001629,1.000814,114,15,0,0,0.965517],
[11,0,0,613,252,411,-111.947525,-167.673187,-0.000790,1.097544,1.097048,136,27,0,0,0.034483],
[12,0,0,267,231,344,130.311035,-159.178635,-0.002274,1.098338,1.097445,114,15,0,0,0.034483],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.965517],
[9,0,0,235,497,30,4.386207,-175.448288,0.0,1.096552,1.096552,248,15,0,0,0.034483]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.931035],
[4,0,508,275,37,410,224.0,-145.0,-0.001995,1.0,1.0,22,8,0,0,0.931035],
[8,0,508,687,452,337,0.0,0.0,0.0,1.093104,1.093104,226,168,0,0,0.068966],
[10,0,508,275,37,410,244.855194,-158.500000,-0.001995,1.093104,1.093104,22,8,0,0,0.068966],
[5,0,254,613,252,411,-102.181091,-152.818909,-0.001580,1.001811,1.000905,136,27,0,0,0.931035],
[6,0,233,267,231,344,118.675331,-145.324677,-0.004533,1.003247,1.001623,114,15,0,0,0.931035],
[11,0,0,613,252,411,-111.694511,-167.046890,-0.001580,1.095083,1.094093,136,27,0,0,0.068966],
[12,0,0,267,231,344,129.724426,-158.854904,-0.004533,1.096653,1.094878,114,15,0,0,0.068966],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.931035],
[9,0,0,235,497,30,4.372414,-174.896561,0.0,1.093104,1.093104,248,15,0,0,0.068966]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.896552],
[4,0,508,275,37,410,224.0,-145.0,-0.002992,1.0,1.0,22,8,0,0,0.896552],
[8,0,508,687,452,337,0.0,0.0,0.0,1.089655,1.089655,226,168,0,0,0.103448],
[10,0,508,275,37,410,244.082764,-157.999985,-0.002992,1.089655,1.089655,22,8,0,0,0.103448],
[5,0,254,613,252,411,-102.270615,-152.729385,-0.002362,1.002706,1.001353,136,27,0,0,0.896552],
[6,0,233,267,231,344,118.520500,-145.479492,-0.006695,1.004795,1.002398,114,15,0,0,0.896552],
[11,0,0,613,252,411,-111.439705,-166.422363,-0.002362,1.092604,1.091130,136,27,0,0,0.103448],
[12,0,0,267,231,344,129.146484,-158.522476,-0.006695,1.094880,1.092268,114,15,0,0,0.103448],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.896552],
[9,0,0,235,497,30,4.358621,-174.344818,0.0,1.089655,1.089655,248,15,0,0,0.103448]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.862069],
[4,0,508,275,37,410,224.0,-145.0,-0.003989,1.0,1.0,22,8,0,0,0.862069],
[8,0,508,687,452,337,0.0,0.0,0.0,1.086207,1.086207,226,168,0,0,0.137931],
[10,0,508,275,37,410,243.310349,-157.500000,-0.003989,1.086207,1.086207,22,8,0,0,0.137931],
[5,0,254,613,252,411,-102.358200,-152.641800,-0.003126,1.003582,1.001791,136,27,0,0,0.862069],
[6,0,233,267,231,344,118.369522,-145.630478,-0.008803,1.006305,1.003152,114,15,0,0,0.862069],
[11,0,0,613,252,411,-111.182190,-165.800583,-0.003126,1.090098,1.088152,136,27,0,0,0.137931],
[12,0,0,267,231,344,128.573792,-158.184830,-0.008803,1.093055,1.089631,114,15,0,0,0.137931],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.862069],
[9,0,0,235,497,30,4.344828,-173.793106,0.0,1.086207,1.086207,248,15,0,0,0.137931]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.827586],
[4,0,508,275,37,410,224.0,-145.0,-0.004987,1.0,1.0,22,8,0,0,0.827586],
[8,0,508,687,452,337,0.0,0.0,0.0,1.082759,1.082759,226,168,0,0,0.172414],
[10,0,508,275,37,410,242.537949,-157.000015,-0.004987,1.082759,1.082759,22,8,0,0,0.172414],
[5,0,254,613,252,411,-102.444443,-152.555557,-0.003878,1.004444,1.002222,136,27,0,0,0.827586],
[6,0,233,267,231,344,118.224419,-145.775574,-0.010829,1.007756,1.003878,114,15,0,0,0.827586],
[11,0,0,613,252,411,-110.922607,-165.180862,-0.003878,1.087571,1.085165,136,27,0,0,0.172414],
[12,0,0,267,231,344,128.008514,-157.839783,-0.010829,1.091156,1.086957,114,15,0,0,0.172414],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.827586],
[9,0,0,235,497,30,4.331035,-173.241394,0.0,1.082759,1.082759,248,15,0,0,0.172414]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.793103],
[4,0,508,275,37,410,224.0,-145.0,-0.005984,1.0,1.0,22,8,0,0,0.793103],
[8,0,508,687,452,337,0.0,0.0,0.0,1.079310,1.079310,226,168,0,0,0.206897],
[10,0,508,275,37,410,241.765533,-156.500015,-0.005984,1.079310,1.079310,22,8,0,0,0.206897],
[5,0,254,613,252,411,-102.532204,-152.467789,-0.004644,1.005322,1.002661,136,27,0,0,0.793103],
[6,0,233,267,231,344,118.090508,-145.909485,-0.012699,1.009095,1.004547,114,15,0,0,0.793103],
[11,0,0,613,252,411,-110.664078,-164.560074,-0.004644,1.085055,1.082182,136,27,0,0,0.206897],
[12,0,0,267,231,344,127.456314,-157.481628,-0.012699,1.089127,1.084219,114,15,0,0,0.206897],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.793103],
[9,0,0,235,497,30,4.317242,-172.689667,0.0,1.079310,1.079310,248,15,0,0,0.206897]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.758621],
[4,0,508,275,37,410,224.0,-145.0,-0.006981,1.0,1.0,22,8,0,0,0.758621],
[8,0,508,687,452,337,0.0,0.0,0.0,1.075862,1.075862,226,168,0,0,0.241379],
[10,0,508,275,37,410,240.993103,-156.0,-0.006981,1.075862,1.075862,22,8,0,0,0.241379],
[5,0,254,613,252,411,-102.619087,-152.380905,-0.005403,1.006191,1.003095,136,27,0,0,0.758621],
[6,0,233,267,231,344,118.0,-146.0,-0.013963,1.010000,1.005000,114,15,0,0,0.758621],
[11,0,0,613,252,411,-110.403976,-163.940826,-0.005403,1.082523,1.079192,136,27,0,0,0.241379],
[12,0,0,267,231,344,126.951729,-157.075851,-0.013963,1.086621,1.081241,114,15,0,0,0.241379],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.758621],
[9,0,0,235,497,30,4.303448,-172.137924,0.0,1.075862,1.075862,248,15,0,0,0.241379]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.724138],
[4,0,508,275,37,410,224.0,-145.0,-0.005773,1.0,1.0,22,8,0,0,0.724138],
[8,0,508,687,452,337,0.0,0.0,0.0,1.072414,1.072414,226,168,0,0,0.275862],
[10,0,508,275,37,410,240.220688,-155.500000,-0.005773,1.072414,1.072414,22,8,0,0,0.275862],
[5,0,254,613,252,411,-102.702675,-152.297333,-0.006132,1.007027,1.003513,136,27,0,0,0.724138],
[6,0,233,267,231,344,118.034424,-145.953110,-0.011555,1.009531,1.004766,114,15,0,0,0.724138],
[11,0,0,613,252,411,-110.139763,-163.325760,-0.006132,1.079949,1.076182,136,27,0,0,0.275862],
[12,0,0,267,231,344,126.581749,-156.522125,-0.011555,1.082635,1.077524,114,15,0,0,0.275862],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.724138],
[9,0,0,235,497,30,4.289655,-171.586212,0.0,1.072414,1.072414,248,15,0,0,0.275862]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.689655],
[4,0,508,275,37,410,224.0,-145.0,-0.004565,1.0,1.0,22,8,0,0,0.689655],
[8,0,508,687,452,337,0.0,0.0,0.0,1.068966,1.068966,226,168,0,0,0.310345],
[10,0,508,275,37,410,239.448288,-155.0,-0.004565,1.068966,1.068966,22,8,0,0,0.310345],
[5,0,254,613,252,411,-102.785477,-152.214523,-0.006855,1.007855,1.003927,136,27,0,0,0.689655],
[6,0,233,267,231,344,118.076805,-145.905914,-0.009035,1.009059,1.004530,114,15,0,0,0.689655],
[11,0,0,613,252,411,-109.874130,-162.712082,-0.006855,1.077362,1.073164,136,27,0,0,0.310345],
[12,0,0,267,231,344,126.220039,-155.968399,-0.009035,1.078650,1.073807,114,15,0,0,0.310345],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.689655],
[9,0,0,235,497,30,4.275862,-171.034485,0.0,1.068966,1.068966,248,15,0,0,0.310345]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.655172],
[4,0,508,275,37,410,224.0,-145.0,-0.003356,1.0,1.0,22,8,0,0,0.655172],
[8,0,508,687,452,337,0.0,0.0,0.0,1.065517,1.065517,226,168,0,0,0.344828],
[10,0,508,275,37,410,238.675873,-154.500015,-0.003356,1.065517,1.065517,22,8,0,0,0.344828],
[5,0,254,613,252,411,-102.867210,-152.132797,-0.007568,1.008672,1.004336,136,27,0,0,0.655172],
[6,0,233,267,231,344,118.124626,-145.858841,-0.006635,1.008588,1.004294,114,15,0,0,0.655172],
[11,0,0,613,252,411,-109.606789,-162.100128,-0.007568,1.074758,1.070137,136,27,0,0,0.344828],
[12,0,0,267,231,344,125.863831,-155.415131,-0.006635,1.074668,1.070093,114,15,0,0,0.344828],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.655172],
[9,0,0,235,497,30,4.262069,-170.482773,0.0,1.065517,1.065517,248,15,0,0,0.344828]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.620690],
[4,0,508,275,37,410,224.0,-145.0,-0.002148,1.0,1.0,22,8,0,0,0.620690],
[8,0,508,687,452,337,0.0,0.0,0.0,1.062069,1.062069,226,168,0,0,0.379310],
[10,0,508,275,37,410,237.903442,-154.0,-0.002148,1.062069,1.062069,22,8,0,0,0.379310],
[5,0,254,613,252,411,-102.941910,-152.058090,-0.008220,1.009419,1.004710,136,27,0,0,0.620690],
[6,0,233,267,231,344,118.167381,-145.809555,-0.004293,1.008096,1.004048,114,15,0,0,0.620690],
[11,0,0,613,252,411,-109.331406,-161.496170,-0.008220,1.072073,1.067071,136,27,0,0,0.379310],
[12,0,0,267,231,344,125.501907,-154.859802,-0.004293,1.070667,1.066368,114,15,0,0,0.379310],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.620690],
[9,0,0,235,497,30,4.248276,-169.931030,0.0,1.062069,1.062069,248,15,0,0,0.379310]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.586207],
[4,0,508,275,37,410,224.0,-145.0,-0.000940,1.0,1.0,22,8,0,0,0.586207],
[8,0,508,687,452,337,0.0,0.0,0.0,1.058621,1.058621,226,168,0,0,0.413793],
[10,0,508,275,37,410,237.131027,-153.500000,-0.000940,1.058621,1.058621,22,8,0,0,0.413793],
[5,0,254,613,252,411,-103.0,-152.0,-0.008727,1.010000,1.005000,136,27,0,0,0.586207],
[6,0,233,267,231,344,118.214523,-145.765549,-0.002002,1.007656,1.003828,114,15,0,0,0.586207],
[11,0,0,613,252,411,-109.037933,-160.910339,-0.008727,1.069207,1.063914,136,27,0,0,0.413793],
[12,0,0,267,231,344,125.144341,-154.310410,-0.002002,1.066725,1.062673,114,15,0,0,0.413793],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.586207],
[9,0,0,235,497,30,4.234483,-169.379303,0.0,1.058621,1.058621,248,15,0,0,0.413793]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.551724],
[4,0,508,275,37,410,224.0,-145.0,0.000269,1.0,1.0,22,8,0,0,0.551724],
[8,0,508,687,452,337,0.0,0.0,0.0,1.055172,1.055172,226,168,0,0,0.448276],
[10,0,508,275,37,410,236.358627,-153.0,0.000269,1.055172,1.055172,22,8,0,0,0.448276],
[5,0,254,613,252,411,-102.938950,-152.061050,-0.006242,1.009390,1.004695,136,27,0,0,0.551724],
[6,0,233,267,231,344,118.265358,-145.718781,0.000444,1.007188,1.003594,114,15,0,0,0.551724],
[11,0,0,613,252,411,-108.618347,-160.450623,-0.006242,1.065080,1.060126,136,27,0,0,0.448276],
[12,0,0,267,231,344,124.790344,-153.758438,0.000444,1.062757,1.058965,114,15,0,0,0.448276],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.551724],
[9,0,0,235,497,30,4.220690,-168.827591,0.0,1.055172,1.055172,248,15,0,0,0.448276]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.517241],
[4,0,508,275,37,410,224.0,-145.0,0.001477,1.0,1.0,22,8,0,0,0.517241],
[8,0,508,687,452,337,0.0,0.0,0.0,1.051724,1.051724,226,168,0,0,0.482759],
[10,0,508,275,37,410,235.586212,-152.500015,0.001477,1.051724,1.051724,22,8,0,0,0.482759],
[5,0,254,613,252,411,-102.875374,-152.124634,-0.003721,1.008754,1.004377,136,27,0,0,0.517241],
[6,0,233,267,231,344,118.308197,-145.669785,0.002680,1.006698,1.003349,114,15,0,0,0.517241],
[11,0,0,613,252,411,-108.196526,-159.993164,-0.003721,1.060931,1.056327,136,27,0,0,0.482759],
[12,0,0,267,231,344,124.427589,-153.204453,0.002680,1.058769,1.055246,114,15,0,0,0.482759],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.517241],
[9,0,0,235,497,30,4.206897,-168.275879,0.0,1.051724,1.051724,248,15,0,0,0.482759]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.482759],
[4,0,508,275,37,410,224.0,-145.0,0.002685,1.0,1.0,22,8,0,0,0.482759],
[8,0,508,687,452,337,0.0,0.0,0.0,1.048276,1.048276,226,168,0,0,0.517241],
[10,0,508,275,37,410,234.813782,-152.0,0.002685,1.048276,1.048276,22,8,0,0,0.517241],
[5,0,254,613,252,411,-102.814255,-152.185745,-0.001320,1.008142,1.004071,136,27,0,0,0.482759],
[6,0,233,267,231,344,118.358200,-145.624786,0.004903,1.006248,1.003124,114,15,0,0,0.482759],
[11,0,0,613,252,411,-107.777702,-159.532639,-0.001320,1.056811,1.052544,136,27,0,0,0.517241],
[12,0,0,267,231,344,124.072037,-152.654953,0.004903,1.054825,1.051551,114,15,0,0,0.517241],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.482759],
[9,0,0,235,497,30,4.193103,-167.724136,0.0,1.048276,1.048276,248,15,0,0,0.517241]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.448276],
[4,0,508,275,37,410,224.0,-145.0,0.003893,1.0,1.0,22,8,0,0,0.448276],
[8,0,508,687,452,337,0.0,0.0,0.0,1.044828,1.044828,226,168,0,0,0.551724],
[10,0,508,275,37,410,234.041367,-151.500000,0.003893,1.044828,1.044828,22,8,0,0,0.551724],
[5,0,254,613,252,411,-102.750237,-152.249756,0.001146,1.007502,1.003751,136,27,0,0,0.448276],
[6,0,233,267,231,344,118.403854,-145.573013,0.007098,1.005730,1.002865,114,15,0,0,0.448276],
[11,0,0,613,252,411,-107.356277,-159.074753,0.001146,1.052666,1.048747,136,27,0,0,0.551724],
[12,0,0,267,231,344,123.711617,-152.098694,0.007098,1.050815,1.047821,114,15,0,0,0.551724],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.448276],
[9,0,0,235,497,30,4.179310,-167.172409,0.0,1.044828,1.044828,248,15,0,0,0.551724]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.413793],
[4,0,508,275,37,410,224.0,-145.0,0.005102,1.0,1.0,22,8,0,0,0.413793],
[8,0,508,687,452,337,0.0,0.0,0.0,1.041379,1.041379,226,168,0,0,0.586207],
[10,0,508,275,37,410,233.268967,-151.0,0.005102,1.041379,1.041379,22,8,0,0,0.586207],
[5,0,254,613,252,411,-102.691811,-152.308197,0.003547,1.006918,1.003459,136,27,0,0,0.413793],
[6,0,233,267,231,344,118.450264,-145.526352,0.009177,1.005264,1.002632,114,15,0,0,0.413793],
[11,0,0,613,252,411,-106.941124,-158.610611,0.003547,1.048584,1.044982,136,27,0,0,0.586207],
[12,0,0,267,231,344,123.351662,-151.548141,0.009177,1.046861,1.044120,114,15,0,0,0.586207],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.413793],
[9,0,0,235,497,30,4.165517,-166.620697,0.0,1.041379,1.041379,248,15,0,0,0.586207]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.379310],
[4,0,508,275,37,410,224.0,-145.0,0.006310,1.0,1.0,22,8,0,0,0.379310],
[8,0,508,687,452,337,0.0,0.0,0.0,1.037931,1.037931,226,168,0,0,0.620690],
[10,0,508,275,37,410,232.496552,-150.500000,0.006310,1.037931,1.037931,22,8,0,0,0.620690],
[5,0,254,613,252,411,-102.630478,-152.369522,0.005914,1.006305,1.003152,136,27,0,0,0.379310],
[6,0,233,267,231,344,118.502930,-145.485352,0.010681,1.004853,1.002427,114,15,0,0,0.379310],
[11,0,0,613,252,411,-106.523361,-158.149063,0.005914,1.044475,1.041203,136,27,0,0,0.620690],
[12,0,0,267,231,344,122.997879,-151.003769,0.010681,1.042969,1.040450,114,15,0,0,0.620690],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.379310],
[9,0,0,235,497,30,4.151724,-166.068970,0.0,1.037931,1.037931,248,15,0,0,0.620690]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.344828],
[4,0,508,275,37,410,224.0,-145.0,0.007518,1.0,1.0,22,8,0,0,0.344828],
[8,0,508,687,452,337,0.0,0.0,0.0,1.034483,1.034483,226,168,0,0,0.655172],
[10,0,508,275,37,410,231.724121,-150.0,0.007518,1.034483,1.034483,22,8,0,0,0.655172],
[5,0,254,613,252,411,-102.567200,-152.432800,0.008269,1.005672,1.002836,136,27,0,0,0.344828],
[6,0,233,267,231,344,118.549728,-145.438614,0.009964,1.004386,1.002193,114,15,0,0,0.344828],
[11,0,0,613,252,411,-106.103996,-157.689102,0.008269,1.040350,1.037416,136,27,0,0,0.655172],
[12,0,0,267,231,344,122.637650,-150.453735,0.009964,1.039020,1.036751,114,15,0,0,0.655172],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.344828],
[9,0,0,235,497,30,4.137931,-165.517242,0.0,1.034483,1.034483,248,15,0,0,0.655172]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.310345],
[4,0,508,275,37,410,224.0,-145.0,0.008727,1.0,1.0,22,8,0,0,0.310345],
[8,0,508,687,452,337,0.0,0.0,0.0,1.031034,1.031034,226,168,0,0,0.689655],
[10,0,508,275,37,410,230.951721,-149.500000,0.008727,1.031034,1.031034,22,8,0,0,0.689655],
[5,0,254,613,252,411,-102.508789,-152.491211,0.010470,1.005088,1.002544,136,27,0,0,0.310345],
[6,0,233,267,231,344,118.596146,-145.392349,0.008989,1.003924,1.001962,114,15,0,0,0.310345],
[11,0,0,613,252,411,-105.690094,-157.223694,0.010470,1.036280,1.033657,136,27,0,0,0.689655],
[12,0,0,267,231,344,122.276711,-149.904526,0.008989,1.035080,1.033057,114,15,0,0,0.689655],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.310345],
[9,0,0,235,497,30,4.124138,-164.965515,0.0,1.031034,1.031034,248,15,0,0,0.689655]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.275862],
[4,0,508,275,37,410,224.0,-145.0,0.007757,1.0,1.0,22,8,0,0,0.275862],
[8,0,508,687,452,337,0.0,0.0,0.0,1.027586,1.027586,226,168,0,0,0.724138],
[10,0,508,275,37,410,230.179321,-149.0,0.007757,1.027586,1.027586,22,8,0,0,0.724138],
[5,0,254,613,252,411,-102.444435,-152.555557,0.012553,1.004444,1.002222,136,27,0,0,0.275862],
[6,0,233,267,231,344,118.641800,-145.341339,0.008014,1.003413,1.001707,114,15,0,0,0.275862],
[11,0,0,613,252,411,-105.270493,-156.763992,0.012553,1.032153,1.029870,136,27,0,0,0.724138],
[12,0,0,267,231,344,121.914680,-149.350754,0.008014,1.031094,1.029340,114,15,0,0,0.724138],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.275862],
[9,0,0,235,497,30,4.110345,-164.413788,0.0,1.027586,1.027586,248,15,0,0,0.724138]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.241379],
[4,0,508,275,37,410,224.0,-145.0,0.006787,1.0,1.0,22,8,0,0,0.241379],
[8,0,508,687,452,337,0.0,0.0,0.0,1.024138,1.024138,226,168,0,0,0.758621],
[10,0,508,275,37,410,229.406906,-148.500000,0.006787,1.024138,1.024138,22,8,0,0,0.758621],
[5,0,254,613,252,411,-102.386627,-152.613373,0.014085,1.003866,1.001933,136,27,0,0,0.241379],
[6,0,233,267,231,344,118.691811,-145.297333,0.006916,1.002973,1.001487,114,15,0,0,0.241379],
[11,0,0,613,252,411,-104.858032,-156.297150,0.014085,1.028098,1.026118,136,27,0,0,0.758621],
[12,0,0,267,231,344,121.556786,-148.804504,0.006916,1.027183,1.025661,114,15,0,0,0.758621],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.241379],
[9,0,0,235,497,30,4.096552,-163.862076,0.0,1.024138,1.024138,248,15,0,0,0.758621]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.206897],
[4,0,508,275,37,410,224.0,-145.0,0.005818,1.0,1.0,22,8,0,0,0.206897],
[8,0,508,687,452,337,0.0,0.0,0.0,1.020690,1.020690,226,168,0,0,0.793103],
[10,0,508,275,37,410,228.634476,-147.999985,0.005818,1.020690,1.020690,22,8,0,0,0.793103],
[5,0,254,613,252,411,-102.324669,-152.675323,0.012657,1.003247,1.001623,136,27,0,0,0.206897],
[6,0,233,267,231,344,118.734642,-145.254929,0.005872,1.002549,1.001275,114,15,0,0,0.206897],
[11,0,0,613,252,411,-104.441727,-155.834122,0.012657,1.024003,1.022347,136,27,0,0,0.793103],
[12,0,0,267,231,344,121.191216,-148.260193,0.005872,1.023292,1.021991,114,15,0,0,0.793103],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.206897],
[9,0,0,235,497,30,4.082758,-163.310333,0.0,1.020690,1.020690,248,15,0,0,0.793103]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.172414],
[4,0,508,275,37,410,224.0,-145.0,0.004848,1.0,1.0,22,8,0,0,0.172414],
[8,0,508,687,452,337,0.0,0.0,0.0,1.017241,1.017241,226,168,0,0,0.827586],
[10,0,508,275,37,410,227.862076,-147.500000,0.004848,1.017241,1.017241,22,8,0,0,0.827586],
[5,0,254,613,252,411,-102.265358,-152.734650,0.010494,1.002654,1.001327,136,27,0,0,0.172414],
[6,0,233,267,231,344,118.785477,-145.209625,0.004810,1.002096,1.001048,114,15,0,0,0.172414],
[11,0,0,613,252,411,-104.028557,-155.367996,0.010494,1.019941,1.018591,136,27,0,0,0.827586],
[12,0,0,267,231,344,120.833496,-147.713242,0.004810,1.019374,1.018308,114,15,0,0,0.827586],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.172414],
[9,0,0,235,497,30,4.068965,-162.758621,0.0,1.017241,1.017241,248,15,0,0,0.827586]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.137931],
[4,0,508,275,37,410,224.0,-145.0,0.003879,1.0,1.0,22,8,0,0,0.137931],
[8,0,508,687,452,337,0.0,0.0,0.0,1.013793,1.013793,226,168,0,0,0.862069],
[10,0,508,275,37,410,227.089661,-147.0,0.003879,1.013793,1.013793,22,8,0,0,0.862069],
[5,0,254,613,252,411,-102.209633,-152.790375,0.008234,1.002096,1.001048,136,27,0,0,0.137931],
[6,0,233,267,231,344,118.832619,-145.162888,0.003766,1.001629,1.000814,114,15,0,0,0.137931],
[11,0,0,613,252,411,-103.619415,-154.897812,0.008234,1.015918,1.014856,136,27,0,0,0.862069],
[12,0,0,267,231,344,120.471695,-147.165131,0.003766,1.015444,1.014619,114,15,0,0,0.862069],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.137931],
[9,0,0,235,497,30,4.055172,-162.206894,0.0,1.013793,1.013793,248,15,0,0,0.862069]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.103448],
[4,0,508,275,37,410,224.0,-145.0,0.002909,1.0,1.0,22,8,0,0,0.103448],
[8,0,508,687,452,337,0.0,0.0,0.0,1.010345,1.010345,226,168,0,0,0.896552],
[10,0,508,275,37,410,226.317245,-146.500015,0.002909,1.010345,1.010345,22,8,0,0,0.896552],
[5,0,254,613,252,411,-102.149712,-152.850296,0.005851,1.001497,1.000749,136,27,0,0,0.103448],
[6,0,233,267,231,344,118.875374,-145.116669,0.002668,1.001167,1.000583,114,15,0,0,0.103448],
[11,0,0,613,252,411,-103.206436,-154.431503,0.005851,1.011858,1.011101,136,27,0,0,0.896552],
[12,0,0,267,231,344,120.105125,-146.617889,0.002668,1.011524,1.010934,114,15,0,0,0.896552],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.103448],
[9,0,0,235,497,30,4.041379,-161.655182,0.0,1.010345,1.010345,248,15,0,0,0.896552]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.068965],
[4,0,508,275,37,410,224.0,-145.0,0.001939,1.0,1.0,22,8,0,0,0.068965],
[8,0,508,687,452,337,0.0,0.0,0.0,1.006896,1.006896,226,168,0,0,0.931035],
[10,0,508,275,37,410,225.544815,-146.0,0.001939,1.006896,1.006896,22,8,0,0,0.931035],
[5,0,254,613,252,411,-102.094078,-152.905930,0.003591,1.000941,1.000470,136,27,0,0,0.068965],
[6,0,233,267,231,344,118.923195,-145.073532,0.001646,1.000735,1.000368,114,15,0,0,0.068965],
[11,0,0,613,252,411,-102.798164,-153.960434,0.003591,1.007844,1.007370,136,27,0,0,0.931035],
[12,0,0,267,231,344,119.743347,-146.074036,0.001646,1.007637,1.007267,114,15,0,0,0.931035],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.068965],
[9,0,0,235,497,30,4.027586,-161.103439,0.0,1.006896,1.006896,248,15,0,0,0.931035]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.034483],
[4,0,508,275,37,410,224.0,-145.0,0.000970,1.0,1.0,22,8,0,0,0.034483],
[8,0,508,687,452,337,0.0,0.0,0.0,1.003448,1.003448,226,168,0,0,0.965517],
[10,0,508,275,37,410,224.772415,-145.500000,0.000970,1.003448,1.003448,22,8,0,0,0.965517],
[5,0,254,613,252,411,-102.041695,-152.958298,0.001428,1.000417,1.000208,136,27,0,0,0.034483],
[6,0,233,267,231,344,118.965576,-145.034424,0.000717,1.000344,1.000172,114,15,0,0,0.034483],
[11,0,0,613,252,411,-102.393562,-153.485748,0.001428,1.003867,1.003657,136,27,0,0,0.965517],
[12,0,0,267,231,344,119.375801,-145.534546,0.000717,1.003794,1.003621,114,15,0,0,0.965517],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.034483],
[9,0,0,235,497,30,4.013793,-160.551727,0.0,1.003448,1.003448,248,15,0,0,0.965517]
],
[
[8,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[10,0,508,275,37,410,224.0,-145.0,0.0,1.0,1.0,22,8],
[11,0,0,613,252,411,-102.0,-153.0,0.0,1.0,1.0,136,27],
[12,0,0,267,231,344,119.0,-145.0,0.0,1.0,1.0,114,15],
[9,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
]
]
}
}
]

},{}],22:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-03-01.png"],
"name": "obj05_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 600,
"CanvasHeight": 600,
"MarginWidth": 308,
"MarginHeight": 308,
"parts": ["root","Obj","03","01","02","02_left","01_right"],
"ssa": [
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.0,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.0,-153.0,0.0,1.0,1.0,136,27],
[5,0,0,267,231,344,119.0,-145.0,0.0,1.0,1.0,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.001309,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.029922,-152.970078,-0.000261,1.000299,1.000150,136,27],
[5,0,0,267,231,344,118.958305,-145.041702,-0.000582,1.000417,1.000208,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.002618,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.058090,-152.941910,-0.000507,1.000581,1.000291,136,27],
[5,0,0,267,231,344,118.916466,-145.083542,-0.001166,1.000835,1.000418,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.003927,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.086990,-152.913010,-0.000759,1.000870,1.000435,136,27],
[5,0,0,267,231,344,118.875374,-145.124634,-0.001740,1.001246,1.000623,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.005236,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.116669,-152.883331,-0.001018,1.001167,1.000583,136,27],
[5,0,0,267,231,344,118.832626,-145.167374,-0.002337,1.001674,1.000837,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.006545,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.145409,-152.854584,-0.001269,1.001454,1.000727,136,27],
[5,0,0,267,231,344,118.790367,-145.209625,-0.002927,1.002096,1.001048,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.007854,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.176476,-152.823517,-0.001540,1.001765,1.000882,136,27],
[5,0,0,267,231,344,118.750237,-145.249756,-0.003487,1.002498,1.001249,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.009163,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.204781,-152.795227,-0.001787,1.002048,1.001024,136,27],
[5,0,0,267,231,344,118.708069,-145.291931,-0.004076,1.002919,1.001460,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.010472,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.234459,-152.765549,-0.002046,1.002345,1.001172,136,27],
[5,0,0,267,231,344,118.669792,-145.330215,-0.004611,1.003302,1.001651,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.011781,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.265358,-152.734650,-0.002316,1.002654,1.001327,136,27],
[5,0,0,267,231,344,118.630478,-145.369522,-0.005159,1.003695,1.001848,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.013090,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.291931,-152.708069,-0.002548,1.002919,1.001460,136,27],
[5,0,0,267,231,344,118.584595,-145.415405,-0.005800,1.004154,1.002077,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.014399,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.324669,-152.675323,-0.002833,1.003247,1.001623,136,27],
[5,0,0,267,231,344,118.543900,-145.456100,-0.006368,1.004561,1.002280,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.015708,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.352562,-152.647430,-0.003077,1.003526,1.001763,136,27],
[5,0,0,267,231,344,118.502930,-145.497070,-0.006940,1.004971,1.002485,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.017017,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.380913,-152.619095,-0.003324,1.003809,1.001904,136,27],
[5,0,0,267,231,344,118.461945,-145.538055,-0.007513,1.005381,1.002690,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.018326,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.409622,-152.590378,-0.003575,1.004096,1.002048,136,27],
[5,0,0,267,231,344,118.421188,-145.578812,-0.008082,1.005788,1.002894,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.019635,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.438614,-152.561386,-0.003828,1.004386,1.002193,136,27],
[5,0,0,267,231,344,118.380913,-145.619095,-0.008644,1.006191,1.003095,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.020944,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.467796,-152.532211,-0.004082,1.004678,1.002339,136,27],
[5,0,0,267,231,344,118.341347,-145.658661,-0.009197,1.006587,1.003293,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.022253,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.497070,-152.502930,-0.004338,1.004971,1.002485,136,27],
[5,0,0,267,231,344,118.302750,-145.697250,-0.009735,1.006973,1.003486,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.023562,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.526360,-152.473648,-0.004593,1.005264,1.002632,136,27],
[5,0,0,267,231,344,118.260124,-145.739868,-0.010331,1.007399,1.003699,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.024871,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.555565,-152.444443,-0.004848,1.005556,1.002778,136,27],
[5,0,0,267,231,344,118.224419,-145.775574,-0.010829,1.007756,1.003878,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.026180,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.584595,-152.415405,-0.005102,1.005846,1.002923,136,27],
[5,0,0,267,231,344,118.181091,-145.818909,-0.011434,1.008189,1.004094,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.025509,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.613373,-152.386627,-0.005353,1.006134,1.003067,136,27],
[5,0,0,267,231,344,118.145409,-145.854584,-0.011932,1.008546,1.004273,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.024837,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.641800,-152.358200,-0.005601,1.006418,1.003209,136,27],
[5,0,0,267,231,344,118.105125,-145.894867,-0.012495,1.008949,1.004474,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.024166,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.669792,-152.330215,-0.005845,1.006698,1.003349,136,27],
[5,0,0,267,231,344,118.067169,-145.932831,-0.013025,1.009328,1.004664,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.023495,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.697250,-152.302750,-0.006085,1.006973,1.003486,136,27],
[5,0,0,267,231,344,118.029930,-145.970078,-0.013545,1.009701,1.004850,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.022824,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.729385,-152.270615,-0.006365,1.007294,1.003647,136,27],
[5,0,0,267,231,344,118.0,-146.0,-0.013963,1.010000,1.005000,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.022152,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.755371,-152.244629,-0.006592,1.007554,1.003777,136,27],
[5,0,0,267,231,344,118.023735,-145.970078,-0.013545,1.009701,1.004850,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.021481,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.785477,-152.214523,-0.006855,1.007855,1.003927,136,27],
[5,0,0,267,231,344,118.052353,-145.938950,-0.013110,1.009390,1.004695,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.020810,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.814255,-152.185745,-0.007106,1.008142,1.004071,136,27],
[5,0,0,267,231,344,118.080147,-145.909500,-0.012699,1.009095,1.004547,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.020138,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.841545,-152.158447,-0.007344,1.008415,1.004208,136,27],
[5,0,0,267,231,344,118.108925,-145.879379,-0.012278,1.008794,1.004397,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.019467,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.867210,-152.132797,-0.007568,1.008672,1.004336,136,27],
[5,0,0,267,231,344,118.136948,-145.850296,-0.011872,1.008503,1.004251,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.018796,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.894875,-152.105133,-0.007809,1.008949,1.004474,136,27],
[5,0,0,267,231,344,118.167381,-145.818909,-0.011434,1.008189,1.004094,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.018125,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.923195,-152.076813,-0.008056,1.009232,1.004616,136,27],
[5,0,0,267,231,344,118.199959,-145.790375,-0.011036,1.007904,1.003952,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.017453,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.950409,-152.049591,-0.008294,1.009504,1.004752,136,27],
[5,0,0,267,231,344,118.229416,-145.760468,-0.010618,1.007605,1.003802,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.016782,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.978180,-152.021820,-0.008536,1.009782,1.004891,136,27],
[5,0,0,267,231,344,118.260124,-145.729385,-0.010184,1.007294,1.003647,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.016111,1.0,1.0,22,8],
[4,0,0,613,252,411,-103.0,-152.0,-0.008727,1.010000,1.005000,136,27],
[5,0,0,267,231,344,118.286560,-145.697250,-0.009735,1.006973,1.003486,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.015439,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.955742,-152.044266,-0.008340,1.009557,1.004779,136,27],
[5,0,0,267,231,344,118.319153,-145.669785,-0.009352,1.006698,1.003349,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.014768,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.913002,-152.086990,-0.007967,1.009130,1.004565,136,27],
[5,0,0,267,231,344,118.346947,-145.636154,-0.008882,1.006361,1.003181,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.014097,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.871315,-152.128693,-0.007604,1.008713,1.004357,136,27],
[5,0,0,267,231,344,118.380905,-145.607651,-0.008484,1.006076,1.003038,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.013426,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.828094,-152.171906,-0.007226,1.008281,1.004140,136,27],
[5,0,0,267,231,344,118.409622,-145.578812,-0.008082,1.005788,1.002894,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.012754,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.785477,-152.214523,-0.006855,1.007855,1.003927,136,27],
[5,0,0,267,231,344,118.438614,-145.549728,-0.007676,1.005497,1.002749,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.012083,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.739868,-152.260132,-0.006457,1.007399,1.003699,136,27],
[5,0,0,267,231,344,118.467796,-145.520508,-0.007268,1.005205,1.002603,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.011412,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.697250,-152.302750,-0.006085,1.006973,1.003486,136,27],
[5,0,0,267,231,344,118.502930,-145.491211,-0.006859,1.004912,1.002456,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.010740,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.653053,-152.346939,-0.005699,1.006531,1.003265,136,27],
[5,0,0,267,231,344,118.532204,-145.456100,-0.006368,1.004561,1.002280,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.010069,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.613373,-152.386627,-0.005353,1.006134,1.003067,136,27],
[5,0,0,267,231,344,118.561386,-145.426987,-0.005962,1.004270,1.002135,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.009398,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.567200,-152.432800,-0.004950,1.005672,1.002836,136,27],
[5,0,0,267,231,344,118.590378,-145.398102,-0.005559,1.003981,1.001991,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.008727,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.526352,-152.473648,-0.004593,1.005264,1.002632,136,27],
[5,0,0,267,231,344,118.619087,-145.369522,-0.005159,1.003695,1.001848,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.008055,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.485352,-152.514648,-0.004236,1.004853,1.002427,136,27],
[5,0,0,267,231,344,118.653053,-145.341339,-0.004766,1.003413,1.001707,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.007384,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.444435,-152.555557,-0.003878,1.004444,1.002222,136,27],
[5,0,0,267,231,344,118.680847,-145.308197,-0.004303,1.003082,1.001541,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.006713,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.398102,-152.601898,-0.003474,1.003981,1.001991,136,27],
[5,0,0,267,231,344,118.713440,-145.281219,-0.003927,1.002812,1.001406,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.006042,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.358200,-152.641800,-0.003126,1.003582,1.001791,136,27],
[5,0,0,267,231,344,118.739876,-145.249756,-0.003487,1.002498,1.001249,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.005370,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.313660,-152.686340,-0.002737,1.003137,1.001568,136,27],
[5,0,0,267,231,344,118.770576,-145.224426,-0.003133,1.002244,1.001122,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.004699,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.270615,-152.729385,-0.002362,1.002706,1.001353,136,27],
[5,0,0,267,231,344,118.800041,-145.195190,-0.002725,1.001952,1.000976,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.004028,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.229424,-152.770584,-0.002002,1.002294,1.001147,136,27],
[5,0,0,267,231,344,118.832619,-145.162888,-0.002274,1.001629,1.000814,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.003356,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.190445,-152.809555,-0.001662,1.001904,1.000952,136,27],
[5,0,0,267,231,344,118.863052,-145.136948,-0.001912,1.001369,1.000685,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.002685,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.149712,-152.850296,-0.001306,1.001497,1.000749,136,27],
[5,0,0,267,231,344,118.891075,-145.105133,-0.001468,1.001051,1.000526,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.002014,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.108925,-152.891083,-0.000951,1.001089,1.000545,136,27],
[5,0,0,267,231,344,118.919853,-145.076813,-0.001072,1.000768,1.000384,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.001343,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.070320,-152.929688,-0.000614,1.000703,1.000352,136,27],
[5,0,0,267,231,344,118.947647,-145.049591,-0.000692,1.000496,1.000248,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.000671,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.032143,-152.967865,-0.000280,1.000321,1.000161,136,27],
[5,0,0,267,231,344,118.976265,-145.023727,-0.000331,1.000237,1.000119,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.0,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.0,-153.0,0.0,1.0,1.0,136,27],
[5,0,0,267,231,344,119.0,-145.0,0.0,1.0,1.0,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
]
]
}
}
]

},{}],23:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-03-01.png"],
"name": "obj06_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 600,
"CanvasHeight": 600,
"MarginWidth": 308,
"MarginHeight": 308,
"parts": ["root","Obj","omote","03","01","02","02_left_1","01_right_1","ura","03_1","01_1","02_1","02_left_2","01_right_2"],
"ssa": [
[
[8,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[10,0,508,275,37,410,224.0,-145.0,0.0,1.0,1.0,22,8],
[11,0,0,613,252,411,-102.0,-153.0,0.0,1.0,1.0,136,27],
[12,0,0,267,231,344,119.0,-145.0,0.0,1.0,1.0,114,15],
[9,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.034483],
[4,0,508,275,37,410,224.0,-145.0,-0.000997,1.0,1.0,22,8,0,0,0.034483],
[8,0,508,687,452,337,0.0,0.0,0.0,1.003448,1.003448,226,168,0,0,0.965517],
[10,0,508,275,37,410,224.772415,-145.500000,-0.000997,1.003448,1.003448,22,8,0,0,0.965517],
[5,0,254,613,252,411,-102.090508,-152.909500,-0.000790,1.000905,1.000453,136,27,0,0,0.034483],
[6,0,233,267,231,344,118.837105,-145.162888,-0.002274,1.001629,1.000814,114,15,0,0,0.034483],
[11,0,0,613,252,411,-102.442543,-153.436768,-0.000790,1.004356,1.003902,136,27,0,0,0.965517],
[12,0,0,267,231,344,119.246887,-145.663452,-0.002274,1.005083,1.004266,114,15,0,0,0.965517],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.034483],
[9,0,0,235,497,30,4.013793,-160.551727,0.0,1.003448,1.003448,248,15,0,0,0.965517]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.068966],
[4,0,508,275,37,410,224.0,-145.0,-0.001995,1.0,1.0,22,8,0,0,0.068966],
[8,0,508,687,452,337,0.0,0.0,0.0,1.006896,1.006896,226,168,0,0,0.931035],
[10,0,508,275,37,410,225.544815,-146.0,-0.001995,1.006896,1.006896,22,8,0,0,0.931035],
[5,0,254,613,252,411,-102.181091,-152.818909,-0.001580,1.001811,1.000905,136,27,0,0,0.068966],
[6,0,233,267,231,344,118.675331,-145.324677,-0.004533,1.003247,1.001623,114,15,0,0,0.068966],
[11,0,0,613,252,411,-102.885780,-153.872818,-0.001580,1.008720,1.007808,136,27,0,0,0.931035],
[12,0,0,267,231,344,119.493774,-146.326904,-0.004533,1.010166,1.008531,114,15,0,0,0.931035],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.068966],
[9,0,0,235,497,30,4.027586,-161.103439,0.0,1.006896,1.006896,248,15,0,0,0.931035]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.103448],
[4,0,508,275,37,410,224.0,-145.0,-0.002992,1.0,1.0,22,8,0,0,0.103448],
[8,0,508,687,452,337,0.0,0.0,0.0,1.010345,1.010345,226,168,0,0,0.896552],
[10,0,508,275,37,410,226.317245,-146.500015,-0.002992,1.010345,1.010345,22,8,0,0,0.896552],
[5,0,254,613,252,411,-102.270615,-152.729385,-0.002362,1.002706,1.001353,136,27,0,0,0.103448],
[6,0,233,267,231,344,118.520500,-145.479492,-0.006695,1.004795,1.002398,114,15,0,0,0.103448],
[11,0,0,613,252,411,-103.328590,-154.309357,-0.002362,1.013079,1.011712,136,27,0,0,0.896552],
[12,0,0,267,231,344,119.746582,-146.984467,-0.006695,1.015189,1.012767,114,15,0,0,0.896552],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.103448],
[9,0,0,235,497,30,4.041379,-161.655182,0.0,1.010345,1.010345,248,15,0,0,0.896552]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.137931],
[4,0,508,275,37,410,224.0,-145.0,-0.003989,1.0,1.0,22,8,0,0,0.137931],
[8,0,508,687,452,337,0.0,0.0,0.0,1.013793,1.013793,226,168,0,0,0.862069],
[10,0,508,275,37,410,227.089661,-147.0,-0.003989,1.013793,1.013793,22,8,0,0,0.862069],
[5,0,254,613,252,411,-102.358200,-152.641800,-0.003126,1.003582,1.001791,136,27,0,0,0.137931],
[6,0,233,267,231,344,118.369522,-145.630478,-0.008803,1.006305,1.003152,114,15,0,0,0.137931],
[11,0,0,613,252,411,-103.770035,-154.747208,-0.003126,1.017424,1.015609,136,27,0,0,0.862069],
[12,0,0,267,231,344,120.002213,-147.639175,-0.008803,1.020185,1.016989,114,15,0,0,0.862069],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.137931],
[9,0,0,235,497,30,4.055172,-162.206894,0.0,1.013793,1.013793,248,15,0,0,0.862069]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.172414],
[4,0,508,275,37,410,224.0,-145.0,-0.004987,1.0,1.0,22,8,0,0,0.172414],
[8,0,508,687,452,337,0.0,0.0,0.0,1.017241,1.017241,226,168,0,0,0.827586],
[10,0,508,275,37,410,227.862076,-147.500000,-0.004987,1.017241,1.017241,22,8,0,0,0.827586],
[5,0,254,613,252,411,-102.444443,-152.555557,-0.003878,1.004444,1.002222,136,27,0,0,0.172414],
[6,0,233,267,231,344,118.224419,-145.775574,-0.010829,1.007756,1.003878,114,15,0,0,0.172414],
[11,0,0,613,252,411,-104.210724,-155.185837,-0.003878,1.021762,1.019502,136,27,0,0,0.827586],
[12,0,0,267,231,344,120.262764,-148.288956,-0.010829,1.025131,1.021186,114,15,0,0,0.827586],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.172414],
[9,0,0,235,497,30,4.068965,-162.758621,0.0,1.017241,1.017241,248,15,0,0,0.827586]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.206897],
[4,0,508,275,37,410,224.0,-145.0,-0.005984,1.0,1.0,22,8,0,0,0.206897],
[8,0,508,687,452,337,0.0,0.0,0.0,1.020690,1.020690,226,168,0,0,0.793103],
[10,0,508,275,37,410,228.634476,-147.999985,-0.005984,1.020690,1.020690,22,8,0,0,0.793103],
[5,0,254,613,252,411,-102.532204,-152.467789,-0.004644,1.005322,1.002661,136,27,0,0,0.206897],
[6,0,233,267,231,344,118.090508,-145.909485,-0.012699,1.009095,1.004547,114,15,0,0,0.206897],
[11,0,0,613,252,411,-104.653557,-155.622284,-0.004644,1.026122,1.023406,136,27,0,0,0.793103],
[12,0,0,267,231,344,120.533752,-148.928299,-0.012699,1.029973,1.025331,114,15,0,0,0.793103],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.206897],
[9,0,0,235,497,30,4.082758,-163.310333,0.0,1.020690,1.020690,248,15,0,0,0.793103]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.241379],
[4,0,508,275,37,410,224.0,-145.0,-0.006981,1.0,1.0,22,8,0,0,0.241379],
[8,0,508,687,452,337,0.0,0.0,0.0,1.024138,1.024138,226,168,0,0,0.758621],
[10,0,508,275,37,410,229.406906,-148.500000,-0.006981,1.024138,1.024138,22,8,0,0,0.758621],
[5,0,254,613,252,411,-102.619087,-152.380905,-0.005403,1.006191,1.003095,136,27,0,0,0.241379],
[6,0,233,267,231,344,118.0,-146.0,-0.013963,1.010000,1.005000,114,15,0,0,0.241379],
[11,0,0,613,252,411,-105.096107,-156.059082,-0.005403,1.030478,1.027308,136,27,0,0,0.758621],
[12,0,0,267,231,344,120.848282,-149.524139,-0.013963,1.034379,1.029259,114,15,0,0,0.758621],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.241379],
[9,0,0,235,497,30,4.096552,-163.862076,0.0,1.024138,1.024138,248,15,0,0,0.758621]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.275862],
[4,0,508,275,37,410,224.0,-145.0,-0.005773,1.0,1.0,22,8,0,0,0.275862],
[8,0,508,687,452,337,0.0,0.0,0.0,1.027586,1.027586,226,168,0,0,0.724138],
[10,0,508,275,37,410,230.179321,-149.0,-0.005773,1.027586,1.027586,22,8,0,0,0.724138],
[5,0,254,613,252,411,-102.702675,-152.297333,-0.006132,1.007027,1.003513,136,27,0,0,0.275862],
[6,0,233,267,231,344,118.034424,-145.953110,-0.011555,1.009531,1.004766,114,15,0,0,0.275862],
[11,0,0,613,252,411,-105.535858,-156.498627,-0.006132,1.034807,1.031196,136,27,0,0,0.724138],
[12,0,0,267,231,344,121.290550,-149.979401,-0.011555,1.037380,1.032483,114,15,0,0,0.724138],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.275862],
[9,0,0,235,497,30,4.110345,-164.413788,0.0,1.027586,1.027586,248,15,0,0,0.724138]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.310345],
[4,0,508,275,37,410,224.0,-145.0,-0.004565,1.0,1.0,22,8,0,0,0.310345],
[8,0,508,687,452,337,0.0,0.0,0.0,1.031034,1.031034,226,168,0,0,0.689655],
[10,0,508,275,37,410,230.951721,-149.500000,-0.004565,1.031034,1.031034,22,8,0,0,0.689655],
[5,0,254,613,252,411,-102.785477,-152.214523,-0.006855,1.007855,1.003927,136,27,0,0,0.310345],
[6,0,233,267,231,344,118.076805,-145.905914,-0.009035,1.009059,1.004530,114,15,0,0,0.310345],
[11,0,0,613,252,411,-105.975372,-156.938416,-0.006855,1.039133,1.035084,136,27,0,0,0.689655],
[12,0,0,267,231,344,121.741257,-150.434036,-0.009035,1.040375,1.035705,114,15,0,0,0.689655],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.310345],
[9,0,0,235,497,30,4.124138,-164.965515,0.0,1.031034,1.031034,248,15,0,0,0.689655]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.344828],
[4,0,508,275,37,410,224.0,-145.0,-0.003356,1.0,1.0,22,8,0,0,0.344828],
[8,0,508,687,452,337,0.0,0.0,0.0,1.034483,1.034483,226,168,0,0,0.655172],
[10,0,508,275,37,410,231.724121,-150.0,-0.003356,1.034483,1.034483,22,8,0,0,0.655172],
[5,0,254,613,252,411,-102.867210,-152.132797,-0.007568,1.008672,1.004336,136,27,0,0,0.344828],
[6,0,233,267,231,344,118.124626,-145.858841,-0.006635,1.008588,1.004294,114,15,0,0,0.344828],
[11,0,0,613,252,411,-106.414352,-157.378754,-0.007568,1.043454,1.038968,136,27,0,0,0.655172],
[12,0,0,267,231,344,122.197884,-150.888458,-0.006635,1.043367,1.038925,114,15,0,0,0.655172],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.344828],
[9,0,0,235,497,30,4.137931,-165.517242,0.0,1.034483,1.034483,248,15,0,0,0.655172]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.379310],
[4,0,508,275,37,410,224.0,-145.0,-0.002148,1.0,1.0,22,8,0,0,0.379310],
[8,0,508,687,452,337,0.0,0.0,0.0,1.037931,1.037931,226,168,0,0,0.620690],
[10,0,508,275,37,410,232.496552,-150.500000,-0.002148,1.037931,1.037931,22,8,0,0,0.620690],
[5,0,254,613,252,411,-102.941910,-152.058090,-0.008220,1.009419,1.004710,136,27,0,0,0.379310],
[6,0,233,267,231,344,118.167381,-145.809555,-0.004293,1.008096,1.004048,114,15,0,0,0.379310],
[11,0,0,613,252,411,-106.846603,-157.825806,-0.008220,1.047707,1.042819,136,27,0,0,0.620690],
[12,0,0,267,231,344,122.649597,-151.340271,-0.004293,1.046334,1.042132,114,15,0,0,0.620690],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.379310],
[9,0,0,235,497,30,4.151724,-166.068970,0.0,1.037931,1.037931,248,15,0,0,0.620690]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.413793],
[4,0,508,275,37,410,224.0,-145.0,-0.000940,1.0,1.0,22,8,0,0,0.413793],
[8,0,508,687,452,337,0.0,0.0,0.0,1.041379,1.041379,226,168,0,0,0.586207],
[10,0,508,275,37,410,233.268967,-151.0,-0.000940,1.041379,1.041379,22,8,0,0,0.586207],
[5,0,254,613,252,411,-103.0,-152.0,-0.008727,1.010000,1.005000,136,27,0,0,0.413793],
[6,0,233,267,231,344,118.214523,-145.765549,-0.002002,1.007656,1.003828,114,15,0,0,0.413793],
[11,0,0,613,252,411,-107.262070,-158.289658,-0.008727,1.051793,1.046586,136,27,0,0,0.586207],
[12,0,0,267,231,344,123.106163,-151.797226,-0.002002,1.049352,1.045365,114,15,0,0,0.586207],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.413793],
[9,0,0,235,497,30,4.165517,-166.620697,0.0,1.041379,1.041379,248,15,0,0,0.586207]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.448276],
[4,0,508,275,37,410,224.0,-145.0,0.000269,1.0,1.0,22,8,0,0,0.448276],
[8,0,508,687,452,337,0.0,0.0,0.0,1.044828,1.044828,226,168,0,0,0.551724],
[10,0,508,275,37,410,234.041367,-151.500000,0.000269,1.044828,1.044828,22,8,0,0,0.551724],
[5,0,254,613,252,411,-102.938950,-152.061050,-0.006242,1.009390,1.004695,136,27,0,0,0.448276],
[6,0,233,267,231,344,118.265358,-145.718781,0.000444,1.007188,1.003594,114,15,0,0,0.448276],
[11,0,0,613,252,411,-107.553452,-158.877579,-0.006242,1.054638,1.049733,136,27,0,0,0.551724],
[12,0,0,267,231,344,123.566910,-152.251007,0.000444,1.052338,1.048583,114,15,0,0,0.551724],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.448276],
[9,0,0,235,497,30,4.179310,-167.172409,0.0,1.044828,1.044828,248,15,0,0,0.551724]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.482759],
[4,0,508,275,37,410,224.0,-145.0,0.001477,1.0,1.0,22,8,0,0,0.482759],
[8,0,508,687,452,337,0.0,0.0,0.0,1.048276,1.048276,226,168,0,0,0.517241],
[10,0,508,275,37,410,234.813782,-152.0,0.001477,1.048276,1.048276,22,8,0,0,0.517241],
[5,0,254,613,252,411,-102.875374,-152.124634,-0.003721,1.008754,1.004377,136,27,0,0,0.482759],
[6,0,233,267,231,344,118.308197,-145.669785,0.002680,1.006698,1.003349,114,15,0,0,0.482759],
[11,0,0,613,252,411,-107.841774,-159.468567,-0.003721,1.057452,1.052864,136,27,0,0,0.517241],
[12,0,0,267,231,344,124.019623,-152.702118,0.002680,1.055297,1.051786,114,15,0,0,0.517241],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.482759],
[9,0,0,235,497,30,4.193103,-167.724136,0.0,1.048276,1.048276,248,15,0,0,0.517241]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.517241],
[4,0,508,275,37,410,224.0,-145.0,0.002685,1.0,1.0,22,8,0,0,0.517241],
[8,0,508,687,452,337,0.0,0.0,0.0,1.051724,1.051724,226,168,0,0,0.482759],
[10,0,508,275,37,410,235.586212,-152.500015,0.002685,1.051724,1.051724,22,8,0,0,0.482759],
[5,0,254,613,252,411,-102.814255,-152.185745,-0.001320,1.008142,1.004071,136,27,0,0,0.517241],
[6,0,233,267,231,344,118.358200,-145.624786,0.004903,1.006248,1.003124,114,15,0,0,0.517241],
[11,0,0,613,252,411,-108.132240,-160.057434,-0.001320,1.060288,1.056006,136,27,0,0,0.482759],
[12,0,0,267,231,344,124.480179,-153.157120,0.004903,1.058295,1.055010,114,15,0,0,0.482759],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.517241],
[9,0,0,235,497,30,4.206897,-168.275879,0.0,1.051724,1.051724,248,15,0,0,0.482759]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.551724],
[4,0,508,275,37,410,224.0,-145.0,0.003893,1.0,1.0,22,8,0,0,0.551724],
[8,0,508,687,452,337,0.0,0.0,0.0,1.055172,1.055172,226,168,0,0,0.448276],
[10,0,508,275,37,410,236.358627,-153.0,0.003893,1.055172,1.055172,22,8,0,0,0.448276],
[5,0,254,613,252,411,-102.750237,-152.249756,0.001146,1.007502,1.003751,136,27,0,0,0.551724],
[6,0,233,267,231,344,118.403854,-145.573013,0.007098,1.005730,1.002865,114,15,0,0,0.551724],
[11,0,0,613,252,411,-108.419220,-160.649750,0.001146,1.063089,1.059131,136,27,0,0,0.448276],
[12,0,0,267,231,344,124.936485,-153.604630,0.007098,1.061219,1.058196,114,15,0,0,0.448276],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.551724],
[9,0,0,235,497,30,4.220690,-168.827591,0.0,1.055172,1.055172,248,15,0,0,0.448276]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.586207],
[4,0,508,275,37,410,224.0,-145.0,0.005102,1.0,1.0,22,8,0,0,0.586207],
[8,0,508,687,452,337,0.0,0.0,0.0,1.058621,1.058621,226,168,0,0,0.413793],
[10,0,508,275,37,410,237.131027,-153.500000,0.005102,1.058621,1.058621,22,8,0,0,0.413793],
[5,0,254,613,252,411,-102.691811,-152.308197,0.003547,1.006918,1.003459,136,27,0,0,0.586207],
[6,0,233,267,231,344,118.450264,-145.526352,0.009177,1.005264,1.002632,114,15,0,0,0.586207],
[11,0,0,613,252,411,-108.711678,-161.236603,0.003547,1.065944,1.062283,136,27,0,0,0.413793],
[12,0,0,267,231,344,125.393898,-154.057205,0.009177,1.064193,1.061407,114,15,0,0,0.413793],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.586207],
[9,0,0,235,497,30,4.234483,-169.379303,0.0,1.058621,1.058621,248,15,0,0,0.413793]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.620690],
[4,0,508,275,37,410,224.0,-145.0,0.006310,1.0,1.0,22,8,0,0,0.620690],
[8,0,508,687,452,337,0.0,0.0,0.0,1.062069,1.062069,226,168,0,0,0.379310],
[10,0,508,275,37,410,237.903442,-154.0,0.006310,1.062069,1.062069,22,8,0,0,0.379310],
[5,0,254,613,252,411,-102.630478,-152.369522,0.005914,1.006305,1.003152,136,27,0,0,0.620690],
[6,0,233,267,231,344,118.502930,-145.485352,0.010681,1.004853,1.002427,114,15,0,0,0.620690],
[11,0,0,613,252,411,-109.000641,-161.826935,0.005914,1.068765,1.065417,136,27,0,0,0.379310],
[12,0,0,267,231,344,125.858284,-154.515472,0.010681,1.067224,1.064646,114,15,0,0,0.379310],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.620690],
[9,0,0,235,497,30,4.248276,-169.931030,0.0,1.062069,1.062069,248,15,0,0,0.379310]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.655172],
[4,0,508,275,37,410,224.0,-145.0,0.007518,1.0,1.0,22,8,0,0,0.655172],
[8,0,508,687,452,337,0.0,0.0,0.0,1.065517,1.065517,226,168,0,0,0.344828],
[10,0,508,275,37,410,238.675873,-154.500015,0.007518,1.065517,1.065517,22,8,0,0,0.344828],
[5,0,254,613,252,411,-102.567200,-152.432800,0.008269,1.005672,1.002836,136,27,0,0,0.655172],
[6,0,233,267,231,344,118.549728,-145.438614,0.009964,1.004386,1.002193,114,15,0,0,0.655172],
[11,0,0,613,252,411,-109.287125,-162.419785,0.008269,1.071561,1.068539,136,27,0,0,0.344828],
[12,0,0,267,231,344,126.316788,-154.967361,0.009964,1.070191,1.067854,114,15,0,0,0.344828],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.655172],
[9,0,0,235,497,30,4.262069,-170.482773,0.0,1.065517,1.065517,248,15,0,0,0.344828]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.689655],
[4,0,508,275,37,410,224.0,-145.0,0.008727,1.0,1.0,22,8,0,0,0.689655],
[8,0,508,687,452,337,0.0,0.0,0.0,1.068966,1.068966,226,168,0,0,0.310345],
[10,0,508,275,37,410,239.448288,-155.0,0.008727,1.068966,1.068966,22,8,0,0,0.310345],
[5,0,254,613,252,411,-102.508789,-152.491211,0.010470,1.005088,1.002544,136,27,0,0,0.689655],
[6,0,233,267,231,344,118.596146,-145.392349,0.008989,1.003924,1.001962,114,15,0,0,0.689655],
[11,0,0,613,252,411,-109.578362,-163.007843,0.010470,1.074404,1.071685,136,27,0,0,0.310345],
[12,0,0,267,231,344,126.775192,-155.419418,0.008989,1.073160,1.071063,114,15,0,0,0.310345],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.689655],
[9,0,0,235,497,30,4.275862,-171.034485,0.0,1.068966,1.068966,248,15,0,0,0.310345]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.724138],
[4,0,508,275,37,410,224.0,-145.0,0.007757,1.0,1.0,22,8,0,0,0.724138],
[8,0,508,687,452,337,0.0,0.0,0.0,1.072414,1.072414,226,168,0,0,0.275862],
[10,0,508,275,37,410,240.220688,-155.500000,0.007757,1.072414,1.072414,22,8,0,0,0.275862],
[5,0,254,613,252,411,-102.444435,-152.555557,0.012553,1.004444,1.002222,136,27,0,0,0.724138],
[6,0,233,267,231,344,118.641800,-145.341339,0.008014,1.003413,1.001707,114,15,0,0,0.724138],
[11,0,0,613,252,411,-109.862823,-163.602692,0.012553,1.077180,1.074797,136,27,0,0,0.275862],
[12,0,0,267,231,344,127.233109,-155.866074,0.008014,1.076074,1.074244,114,15,0,0,0.275862],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.724138],
[9,0,0,235,497,30,4.289655,-171.586212,0.0,1.072414,1.072414,248,15,0,0,0.275862]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.758621],
[4,0,508,275,37,410,224.0,-145.0,0.006787,1.0,1.0,22,8,0,0,0.758621],
[8,0,508,687,452,337,0.0,0.0,0.0,1.075862,1.075862,226,168,0,0,0.241379],
[10,0,508,275,37,410,240.993103,-156.0,0.006787,1.075862,1.075862,22,8,0,0,0.241379],
[5,0,254,613,252,411,-102.386627,-152.613373,0.014085,1.003866,1.001933,136,27,0,0,0.758621],
[6,0,233,267,231,344,118.691811,-145.297333,0.006916,1.002973,1.001487,114,15,0,0,0.758621],
[11,0,0,613,252,411,-110.153885,-164.190933,0.014085,1.080022,1.077942,136,27,0,0,0.241379],
[12,0,0,267,231,344,127.696014,-156.319870,0.006916,1.079061,1.077461,114,15,0,0,0.241379],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.758621],
[9,0,0,235,497,30,4.303448,-172.137924,0.0,1.075862,1.075862,248,15,0,0,0.241379]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.793103],
[4,0,508,275,37,410,224.0,-145.0,0.005818,1.0,1.0,22,8,0,0,0.793103],
[8,0,508,687,452,337,0.0,0.0,0.0,1.079310,1.079310,226,168,0,0,0.206897],
[10,0,508,275,37,410,241.765533,-156.500015,0.005818,1.079310,1.079310,22,8,0,0,0.206897],
[5,0,254,613,252,411,-102.324669,-152.675323,0.012657,1.003247,1.001623,136,27,0,0,0.793103],
[6,0,233,267,231,344,118.734642,-145.254929,0.005872,1.002549,1.001275,114,15,0,0,0.793103],
[11,0,0,613,252,411,-110.440079,-164.784073,0.012657,1.082815,1.081063,136,27,0,0,0.206897],
[12,0,0,267,231,344,128.151535,-156.775162,0.005872,1.082062,1.080686,114,15,0,0,0.206897],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.793103],
[9,0,0,235,497,30,4.317242,-172.689667,0.0,1.079310,1.079310,248,15,0,0,0.206897]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.827586],
[4,0,508,275,37,410,224.0,-145.0,0.004848,1.0,1.0,22,8,0,0,0.827586],
[8,0,508,687,452,337,0.0,0.0,0.0,1.082759,1.082759,226,168,0,0,0.172414],
[10,0,508,275,37,410,242.537949,-157.000015,0.004848,1.082759,1.082759,22,8,0,0,0.172414],
[5,0,254,613,252,411,-102.265358,-152.734650,0.010494,1.002654,1.001327,136,27,0,0,0.827586],
[6,0,233,267,231,344,118.785477,-145.209625,0.004810,1.002096,1.001048,114,15,0,0,0.827586],
[11,0,0,613,252,411,-110.728706,-165.374771,0.010494,1.085632,1.084195,136,27,0,0,0.172414],
[12,0,0,267,231,344,128.616013,-157.226990,0.004810,1.085028,1.083894,114,15,0,0,0.172414],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.827586],
[9,0,0,235,497,30,4.331035,-173.241394,0.0,1.082759,1.082759,248,15,0,0,0.172414]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.862069],
[4,0,508,275,37,410,224.0,-145.0,0.003879,1.0,1.0,22,8,0,0,0.862069],
[8,0,508,687,452,337,0.0,0.0,0.0,1.086207,1.086207,226,168,0,0,0.137931],
[10,0,508,275,37,410,243.310349,-157.500000,0.003879,1.086207,1.086207,22,8,0,0,0.137931],
[5,0,254,613,252,411,-102.209633,-152.790375,0.008234,1.002096,1.001048,136,27,0,0,0.862069],
[6,0,233,267,231,344,118.832619,-145.162888,0.003766,1.001629,1.000814,114,15,0,0,0.862069],
[11,0,0,613,252,411,-111.020813,-165.961960,0.008234,1.088484,1.087345,136,27,0,0,0.137931],
[12,0,0,267,231,344,129.076813,-157.676941,0.003766,1.087976,1.087092,114,15,0,0,0.137931],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.862069],
[9,0,0,235,497,30,4.344828,-173.793106,0.0,1.086207,1.086207,248,15,0,0,0.137931]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.896552],
[4,0,508,275,37,410,224.0,-145.0,0.002909,1.0,1.0,22,8,0,0,0.896552],
[8,0,508,687,452,337,0.0,0.0,0.0,1.089655,1.089655,226,168,0,0,0.103448],
[10,0,508,275,37,410,244.082764,-157.999985,0.002909,1.089655,1.089655,22,8,0,0,0.103448],
[5,0,254,613,252,411,-102.149712,-152.850296,0.005851,1.001497,1.000749,136,27,0,0,0.896552],
[6,0,233,267,231,344,118.875374,-145.116669,0.002668,1.001167,1.000583,114,15,0,0,0.896552],
[11,0,0,613,252,411,-111.307961,-166.554092,0.005851,1.091287,1.090471,136,27,0,0,0.103448],
[12,0,0,267,231,344,129.533173,-158.127121,0.002668,1.090926,1.090291,114,15,0,0,0.103448],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.896552],
[9,0,0,235,497,30,4.358621,-174.344818,0.0,1.089655,1.089655,248,15,0,0,0.103448]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.931035],
[4,0,508,275,37,410,224.0,-145.0,0.001939,1.0,1.0,22,8,0,0,0.931035],
[8,0,508,687,452,337,0.0,0.0,0.0,1.093104,1.093104,226,168,0,0,0.068965],
[10,0,508,275,37,410,244.855194,-158.500000,0.001939,1.093104,1.093104,22,8,0,0,0.068965],
[5,0,254,613,252,411,-102.094078,-152.905930,0.003591,1.000941,1.000470,136,27,0,0,0.931035],
[6,0,233,267,231,344,118.923195,-145.073532,0.001646,1.000735,1.000368,114,15,0,0,0.931035],
[11,0,0,613,252,411,-111.599396,-167.141998,0.003591,1.094132,1.093618,136,27,0,0,0.068965],
[12,0,0,267,231,344,129.995361,-158.580383,0.001646,1.093907,1.093505,114,15,0,0,0.068965],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.931035],
[9,0,0,235,497,30,4.372414,-174.896561,0.0,1.093104,1.093104,248,15,0,0,0.068965]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.965517],
[4,0,508,275,37,410,224.0,-145.0,0.000970,1.0,1.0,22,8,0,0,0.965517],
[8,0,508,687,452,337,0.0,0.0,0.0,1.096552,1.096552,226,168,0,0,0.034483],
[10,0,508,275,37,410,245.627594,-159.000015,0.000970,1.096552,1.096552,22,8,0,0,0.034483],
[5,0,254,613,252,411,-102.041695,-152.958298,0.001428,1.000417,1.000208,136,27,0,0,0.965517],
[6,0,233,267,231,344,118.965576,-145.034424,0.000717,1.000344,1.000172,114,15,0,0,0.965517],
[11,0,0,613,252,411,-111.893997,-167.726700,0.001428,1.097009,1.096780,136,27,0,0,0.034483],
[12,0,0,267,231,344,130.451904,-159.037750,0.000717,1.096929,1.096740,114,15,0,0,0.034483],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.965517],
[9,0,0,235,497,30,4.386207,-175.448288,0.0,1.096552,1.096552,248,15,0,0,0.034483]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[4,0,508,275,37,410,224.0,-145.0,0.0,1.0,1.0,22,8],
[5,0,254,613,252,411,-102.0,-153.0,0.0,1.0,1.0,136,27],
[6,0,233,267,231,344,119.0,-145.0,0.0,1.0,1.0,114,15],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
]
]
}
}
]

},{}],24:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-04-01.png"],
"name": "obj01_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 380,
"CanvasHeight": 460,
"MarginWidth": 198,
"MarginHeight": 238,
"parts": ["root","Obj","01_2","01_1"],
"ssa": [
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310]
]
]
}
}
]

},{}],25:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-04-01.png"],
"name": "obj02_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 380,
"CanvasHeight": 460,
"MarginWidth": 198,
"MarginHeight": 238,
"parts": ["root","Obj","01_2","01_1"],
"ssa": [
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.333334,107.666664,0.017453,1.0,1.006667,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.666666,107.333336,0.034907,1.0,1.013333,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-9.0,107.0,0.052360,1.0,1.020000,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.799999,107.199997,0.034907,1.004000,1.012000,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.600000,107.400002,0.017453,1.008000,1.004000,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.400000,107.599998,-0.000000,1.012000,0.996000,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.200001,107.800003,-0.017453,1.016000,0.988000,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,-0.034907,1.020000,0.980000,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,-0.026180,1.017500,0.982500,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,-0.017453,1.015000,0.985000,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,-0.008727,1.012500,0.987500,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.0,1.010000,0.990000,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.008727,1.007500,0.992500,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.017453,1.005000,0.995000,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.026180,1.002500,0.997500,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.034907,1.0,1.0,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.032221,1.0,1.0,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.029536,1.0,1.0,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.026851,1.0,1.0,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.024166,1.0,1.0,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.021481,1.0,1.0,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.018796,1.0,1.0,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.016111,1.0,1.0,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.013426,1.0,1.0,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.010740,1.0,1.0,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.008055,1.0,1.0,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.005370,1.0,1.0,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.002685,1.0,1.0,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310]
]
]
}
}
]

},{}],26:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-04-01.png"],
"name": "obj03_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 380,
"CanvasHeight": 460,
"MarginWidth": 198,
"MarginHeight": 238,
"parts": ["root","Obj","01_2","01_1"],
"ssa": [
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310]
]
]
}
}
]

},{}],27:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-04-01.png"],
"name": "obj04_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 380,
"CanvasHeight": 460,
"MarginWidth": 198,
"MarginHeight": 238,
"parts": ["root","Obj","omote","01_2","01_1","ura","01_3","01_4"],
"ssa": [
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.965517],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.965517],
[5,0,285,58,283,130,10.193104,214.055176,0.0,1.019310,1.019310,110,117,0,0,0.034483],
[6,0,285,190,283,322,-6.115862,114.162758,0.0,1.019310,1.019310,101,310,0,0,0.034483]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.931035],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.931035],
[5,0,285,58,283,130,10.186207,213.910355,0.0,1.018621,1.018621,110,117,0,0,0.068966],
[6,0,285,190,283,322,-6.111725,114.085526,0.0,1.018621,1.018621,101,310,0,0,0.068966]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.896552],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.896552],
[5,0,285,58,283,130,10.179310,213.765503,0.0,1.017931,1.017931,110,117,0,0,0.103448],
[6,0,285,190,283,322,-6.107586,114.008270,0.0,1.017931,1.017931,101,310,0,0,0.103448]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.862069],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.862069],
[5,0,285,58,283,130,10.172414,213.620682,0.0,1.017241,1.017241,110,117,0,0,0.137931],
[6,0,285,190,283,322,-6.103448,113.931030,0.0,1.017241,1.017241,101,310,0,0,0.137931]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.827586],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.827586],
[5,0,285,58,283,130,10.165518,213.475861,0.0,1.016552,1.016552,110,117,0,0,0.172414],
[6,0,285,190,283,322,-6.099310,113.853790,0.0,1.016552,1.016552,101,310,0,0,0.172414]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.793103],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.793103],
[5,0,285,58,283,130,10.158621,213.331039,0.0,1.015862,1.015862,110,117,0,0,0.206897],
[6,0,285,190,283,322,-6.095173,113.776550,0.0,1.015862,1.015862,101,310,0,0,0.206897]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.758621],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.758621],
[5,0,285,58,283,130,10.151724,213.186203,0.0,1.015172,1.015172,110,117,0,0,0.241379],
[6,0,285,190,283,322,-6.091034,113.699310,0.0,1.015172,1.015172,101,310,0,0,0.241379]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.724138],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.724138],
[5,0,285,58,283,130,10.144827,213.041382,0.0,1.014483,1.014483,110,117,0,0,0.275862],
[6,0,285,190,283,322,-6.086897,113.622070,0.0,1.014483,1.014483,101,310,0,0,0.275862]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.689655],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.689655],
[5,0,285,58,283,130,10.137931,212.896561,0.0,1.013793,1.013793,110,117,0,0,0.310345],
[6,0,285,190,283,322,-6.082759,113.544838,0.0,1.013793,1.013793,101,310,0,0,0.310345]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.655172],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.655172],
[5,0,285,58,283,130,10.131035,212.751740,0.0,1.013103,1.013103,110,117,0,0,0.344828],
[6,0,285,190,283,322,-6.078621,113.467598,0.0,1.013103,1.013103,101,310,0,0,0.344828]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.620690],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.620690],
[5,0,285,58,283,130,10.124138,212.606888,0.0,1.012414,1.012414,110,117,0,0,0.379310],
[6,0,285,190,283,322,-6.074482,113.390343,0.0,1.012414,1.012414,101,310,0,0,0.379310]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.586207],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.586207],
[5,0,285,58,283,130,10.117241,212.462067,0.0,1.011724,1.011724,110,117,0,0,0.413793],
[6,0,285,190,283,322,-6.070345,113.313103,0.0,1.011724,1.011724,101,310,0,0,0.413793]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.551724],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.551724],
[5,0,285,58,283,130,10.110345,212.317245,0.0,1.011034,1.011034,110,117,0,0,0.448276],
[6,0,285,190,283,322,-6.066207,113.235863,0.0,1.011034,1.011034,101,310,0,0,0.448276]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.517241],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.517241],
[5,0,285,58,283,130,10.103449,212.172424,0.0,1.010345,1.010345,110,117,0,0,0.482759],
[6,0,285,190,283,322,-6.062069,113.158630,0.0,1.010345,1.010345,101,310,0,0,0.482759]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.482759],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.482759],
[5,0,285,58,283,130,10.096551,212.027573,0.0,1.009655,1.009655,110,117,0,0,0.517241],
[6,0,285,190,283,322,-6.057931,113.081367,0.0,1.009655,1.009655,101,310,0,0,0.517241]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.448276],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.448276],
[5,0,285,58,283,130,10.089655,211.882751,0.0,1.008965,1.008965,110,117,0,0,0.551724],
[6,0,285,190,283,322,-6.053793,113.004135,0.0,1.008965,1.008965,101,310,0,0,0.551724]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.413793],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.413793],
[5,0,285,58,283,130,10.082759,211.737930,0.0,1.008276,1.008276,110,117,0,0,0.586207],
[6,0,285,190,283,322,-6.049655,112.926895,0.0,1.008276,1.008276,101,310,0,0,0.586207]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.379310],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.379310],
[5,0,285,58,283,130,10.075863,211.593109,0.0,1.007586,1.007586,110,117,0,0,0.620690],
[6,0,285,190,283,322,-6.045517,112.849655,0.0,1.007586,1.007586,101,310,0,0,0.620690]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.344828],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.344828],
[5,0,285,58,283,130,10.068965,211.448257,0.0,1.006896,1.006896,110,117,0,0,0.655172],
[6,0,285,190,283,322,-6.041379,112.772400,0.0,1.006896,1.006896,101,310,0,0,0.655172]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.310345],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.310345],
[5,0,285,58,283,130,10.062069,211.303436,0.0,1.006207,1.006207,110,117,0,0,0.689655],
[6,0,285,190,283,322,-6.037241,112.695160,0.0,1.006207,1.006207,101,310,0,0,0.689655]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.275862],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.275862],
[5,0,285,58,283,130,10.055172,211.158615,0.0,1.005517,1.005517,110,117,0,0,0.724138],
[6,0,285,190,283,322,-6.033104,112.617928,0.0,1.005517,1.005517,101,310,0,0,0.724138]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.241379],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.241379],
[5,0,285,58,283,130,10.048276,211.013794,0.0,1.004828,1.004828,110,117,0,0,0.758621],
[6,0,285,190,283,322,-6.028966,112.540688,0.0,1.004828,1.004828,101,310,0,0,0.758621]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.206897],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.206897],
[5,0,285,58,283,130,10.041379,210.868958,0.0,1.004138,1.004138,110,117,0,0,0.793103],
[6,0,285,190,283,322,-6.024827,112.463448,0.0,1.004138,1.004138,101,310,0,0,0.793103]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.172414],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.172414],
[5,0,285,58,283,130,10.034483,210.724136,0.0,1.003448,1.003448,110,117,0,0,0.827586],
[6,0,285,190,283,322,-6.020689,112.386208,0.0,1.003448,1.003448,101,310,0,0,0.827586]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.137931],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.137931],
[5,0,285,58,283,130,10.027586,210.579315,0.0,1.002759,1.002759,110,117,0,0,0.862069],
[6,0,285,190,283,322,-6.016552,112.308968,0.0,1.002759,1.002759,101,310,0,0,0.862069]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.103448],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.103448],
[5,0,285,58,283,130,10.020690,210.434494,0.0,1.002069,1.002069,110,117,0,0,0.896552],
[6,0,285,190,283,322,-6.012414,112.231735,0.0,1.002069,1.002069,101,310,0,0,0.896552]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.068965],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.068965],
[5,0,285,58,283,130,10.013792,210.289642,0.0,1.001379,1.001379,110,117,0,0,0.931035],
[6,0,285,190,283,322,-6.008276,112.154472,0.0,1.001379,1.001379,101,310,0,0,0.931035]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.034483],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.034483],
[5,0,285,58,283,130,10.006896,210.144821,0.0,1.000690,1.000690,110,117,0,0,0.965517],
[6,0,285,190,283,322,-6.004138,112.077240,0.0,1.000690,1.000690,101,310,0,0,0.965517]
],
[
[5,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[6,0,285,190,283,322,-6.0,112.0,0.0,1.0,1.0,101,310]
]
]
}
}
]

},{}],28:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-04-01.png"],
"name": "obj05_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 380,
"CanvasHeight": 460,
"MarginWidth": 198,
"MarginHeight": 238,
"parts": ["root","Obj","ura","01_3","01_4"],
"ssa": [
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.0,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.003491,1.0,1.002000,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.006981,1.0,1.004000,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.010472,1.0,1.006000,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.013963,1.0,1.008000,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.017453,1.0,1.010000,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.020944,1.0,1.012000,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.024435,1.0,1.014000,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.027925,1.0,1.016000,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.031416,1.0,1.018000,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.034907,1.0,1.020000,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.030879,1.001539,1.018461,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.026851,1.003077,1.016923,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.022824,1.004615,1.015385,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.018796,1.006154,1.013846,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.014768,1.007692,1.012308,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.010740,1.009231,1.010769,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.006713,1.010769,1.009231,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.002685,1.012308,1.007692,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,-0.001343,1.013846,1.006154,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,-0.005370,1.015385,1.004615,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,-0.009398,1.016923,1.003077,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,-0.013426,1.018461,1.001539,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,-0.017453,1.020000,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,-0.015400,1.018824,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,-0.013347,1.017647,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,-0.011293,1.016471,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,-0.009240,1.015294,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,-0.007187,1.014118,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,-0.005133,1.012941,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,-0.003080,1.011765,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,-0.001027,1.010588,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.001027,1.009412,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.003080,1.008235,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.005133,1.007059,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.007187,1.005882,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.009240,1.004706,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.011293,1.003529,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.013347,1.002353,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.015400,1.001176,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.017453,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.016535,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.015616,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.014698,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.013779,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.012860,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.011942,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.011023,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.010105,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.009186,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.008267,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.007349,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.006430,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.005512,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.004593,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.003674,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.002756,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.001837,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.000919,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.0,1.0,1.0,101,310]
]
]
}
}
]

},{}],29:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-04-01.png"],
"name": "obj06_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 380,
"CanvasHeight": 460,
"MarginWidth": 198,
"MarginHeight": 238,
"parts": ["root","Obj","omote","01_2","01_1","ura","01_3","01_4"],
"ssa": [
[
[5,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[6,0,285,190,283,322,-6.0,112.0,0.0,1.0,1.0,101,310]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.034483],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.034483],
[5,0,285,58,283,130,10.006896,210.144821,0.0,1.000690,1.000690,110,117,0,0,0.965517],
[6,0,285,190,283,322,-6.004138,112.077240,0.0,1.000690,1.000690,101,310,0,0,0.965517]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.068966],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.068966],
[5,0,285,58,283,130,10.013792,210.289642,0.0,1.001379,1.001379,110,117,0,0,0.931035],
[6,0,285,190,283,322,-6.008276,112.154472,0.0,1.001379,1.001379,101,310,0,0,0.931035]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.103448],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.103448],
[5,0,285,58,283,130,10.020690,210.434494,0.0,1.002069,1.002069,110,117,0,0,0.896552],
[6,0,285,190,283,322,-6.012414,112.231735,0.0,1.002069,1.002069,101,310,0,0,0.896552]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.137931],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.137931],
[5,0,285,58,283,130,10.027586,210.579315,0.0,1.002759,1.002759,110,117,0,0,0.862069],
[6,0,285,190,283,322,-6.016552,112.308968,0.0,1.002759,1.002759,101,310,0,0,0.862069]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.172414],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.172414],
[5,0,285,58,283,130,10.034483,210.724136,0.0,1.003448,1.003448,110,117,0,0,0.827586],
[6,0,285,190,283,322,-6.020689,112.386208,0.0,1.003448,1.003448,101,310,0,0,0.827586]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.206897],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.206897],
[5,0,285,58,283,130,10.041379,210.868958,0.0,1.004138,1.004138,110,117,0,0,0.793103],
[6,0,285,190,283,322,-6.024827,112.463448,0.0,1.004138,1.004138,101,310,0,0,0.793103]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.241379],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.241379],
[5,0,285,58,283,130,10.048276,211.013794,0.0,1.004828,1.004828,110,117,0,0,0.758621],
[6,0,285,190,283,322,-6.028966,112.540688,0.0,1.004828,1.004828,101,310,0,0,0.758621]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.275862],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.275862],
[5,0,285,58,283,130,10.055172,211.158615,0.0,1.005517,1.005517,110,117,0,0,0.724138],
[6,0,285,190,283,322,-6.033104,112.617928,0.0,1.005517,1.005517,101,310,0,0,0.724138]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.310345],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.310345],
[5,0,285,58,283,130,10.062069,211.303436,0.0,1.006207,1.006207,110,117,0,0,0.689655],
[6,0,285,190,283,322,-6.037241,112.695160,0.0,1.006207,1.006207,101,310,0,0,0.689655]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.344828],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.344828],
[5,0,285,58,283,130,10.068965,211.448257,0.0,1.006896,1.006896,110,117,0,0,0.655172],
[6,0,285,190,283,322,-6.041379,112.772400,0.0,1.006896,1.006896,101,310,0,0,0.655172]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.379310],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.379310],
[5,0,285,58,283,130,10.075863,211.593109,0.0,1.007586,1.007586,110,117,0,0,0.620690],
[6,0,285,190,283,322,-6.045517,112.849655,0.0,1.007586,1.007586,101,310,0,0,0.620690]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.413793],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.413793],
[5,0,285,58,283,130,10.082759,211.737930,0.0,1.008276,1.008276,110,117,0,0,0.586207],
[6,0,285,190,283,322,-6.049655,112.926895,0.0,1.008276,1.008276,101,310,0,0,0.586207]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.448276],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.448276],
[5,0,285,58,283,130,10.089655,211.882751,0.0,1.008965,1.008965,110,117,0,0,0.551724],
[6,0,285,190,283,322,-6.053793,113.004135,0.0,1.008965,1.008965,101,310,0,0,0.551724]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.482759],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.482759],
[5,0,285,58,283,130,10.096551,212.027573,0.0,1.009655,1.009655,110,117,0,0,0.517241],
[6,0,285,190,283,322,-6.057931,113.081367,0.0,1.009655,1.009655,101,310,0,0,0.517241]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.517241],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.517241],
[5,0,285,58,283,130,10.103449,212.172424,0.0,1.010345,1.010345,110,117,0,0,0.482759],
[6,0,285,190,283,322,-6.062069,113.158630,0.0,1.010345,1.010345,101,310,0,0,0.482759]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.551724],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.551724],
[5,0,285,58,283,130,10.110345,212.317245,0.0,1.011034,1.011034,110,117,0,0,0.448276],
[6,0,285,190,283,322,-6.066207,113.235863,0.0,1.011034,1.011034,101,310,0,0,0.448276]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.586207],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.586207],
[5,0,285,58,283,130,10.117241,212.462067,0.0,1.011724,1.011724,110,117,0,0,0.413793],
[6,0,285,190,283,322,-6.070345,113.313103,0.0,1.011724,1.011724,101,310,0,0,0.413793]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.620690],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.620690],
[5,0,285,58,283,130,10.124138,212.606888,0.0,1.012414,1.012414,110,117,0,0,0.379310],
[6,0,285,190,283,322,-6.074482,113.390343,0.0,1.012414,1.012414,101,310,0,0,0.379310]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.655172],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.655172],
[5,0,285,58,283,130,10.131035,212.751740,0.0,1.013103,1.013103,110,117,0,0,0.344828],
[6,0,285,190,283,322,-6.078621,113.467598,0.0,1.013103,1.013103,101,310,0,0,0.344828]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.689655],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.689655],
[5,0,285,58,283,130,10.137931,212.896561,0.0,1.013793,1.013793,110,117,0,0,0.310345],
[6,0,285,190,283,322,-6.082759,113.544838,0.0,1.013793,1.013793,101,310,0,0,0.310345]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.724138],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.724138],
[5,0,285,58,283,130,10.144827,213.041382,0.0,1.014483,1.014483,110,117,0,0,0.275862],
[6,0,285,190,283,322,-6.086897,113.622070,0.0,1.014483,1.014483,101,310,0,0,0.275862]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.758621],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.758621],
[5,0,285,58,283,130,10.151724,213.186203,0.0,1.015172,1.015172,110,117,0,0,0.241379],
[6,0,285,190,283,322,-6.091034,113.699310,0.0,1.015172,1.015172,101,310,0,0,0.241379]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.793103],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.793103],
[5,0,285,58,283,130,10.158621,213.331039,0.0,1.015862,1.015862,110,117,0,0,0.206897],
[6,0,285,190,283,322,-6.095173,113.776550,0.0,1.015862,1.015862,101,310,0,0,0.206897]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.827586],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.827586],
[5,0,285,58,283,130,10.165518,213.475861,0.0,1.016552,1.016552,110,117,0,0,0.172414],
[6,0,285,190,283,322,-6.099310,113.853790,0.0,1.016552,1.016552,101,310,0,0,0.172414]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.862069],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.862069],
[5,0,285,58,283,130,10.172414,213.620682,0.0,1.017241,1.017241,110,117,0,0,0.137931],
[6,0,285,190,283,322,-6.103448,113.931030,0.0,1.017241,1.017241,101,310,0,0,0.137931]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.896552],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.896552],
[5,0,285,58,283,130,10.179310,213.765503,0.0,1.017931,1.017931,110,117,0,0,0.103448],
[6,0,285,190,283,322,-6.107586,114.008270,0.0,1.017931,1.017931,101,310,0,0,0.103448]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.931035],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.931035],
[5,0,285,58,283,130,10.186207,213.910355,0.0,1.018621,1.018621,110,117,0,0,0.068965],
[6,0,285,190,283,322,-6.111725,114.085526,0.0,1.018621,1.018621,101,310,0,0,0.068965]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.965517],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.965517],
[5,0,285,58,283,130,10.193104,214.055176,0.0,1.019310,1.019310,110,117,0,0,0.034483],
[6,0,285,190,283,322,-6.115862,114.162758,0.0,1.019310,1.019310,101,310,0,0,0.034483]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310]
]
]
}
}
]

},{}],30:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-05-01.png"],
"name": "obj01_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 380,
"CanvasHeight": 200,
"MarginWidth": 198,
"MarginHeight": 108,
"parts": ["root","Obj","01"],
"ssa": [
[
[1,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86]
],
[
[1,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86]
]
]
}
}
]

},{}],31:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-05-01.png"],
"name": "obj02_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 380,
"CanvasHeight": 200,
"MarginWidth": 198,
"MarginHeight": 108,
"parts": ["root","Obj","01"],
"ssa": [
[
[1,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86]
],
[
[1,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86]
]
]
}
}
]

},{}],32:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-05-01.png"],
"name": "obj03_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 380,
"CanvasHeight": 200,
"MarginWidth": 198,
"MarginHeight": 108,
"parts": ["root","Obj","01"],
"ssa": [
[
[1,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86]
],
[
[1,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86]
]
]
}
}
]

},{}],33:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-05-01.png"],
"name": "obj04_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 380,
"CanvasHeight": 200,
"MarginWidth": 198,
"MarginHeight": 108,
"parts": ["root","Obj","omote","01","ura","02"],
"ssa": [
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.965517],
[4,0,0,340,357,172,0.0,0.0,0.0,1.019310,1.019310,178,86,0,0,0.034483]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.931035],
[4,0,0,340,357,172,0.0,0.0,0.0,1.018621,1.018621,178,86,0,0,0.068966]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.896552],
[4,0,0,340,357,172,0.0,0.0,0.0,1.017931,1.017931,178,86,0,0,0.103448]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.862069],
[4,0,0,340,357,172,0.0,0.0,0.0,1.017241,1.017241,178,86,0,0,0.137931]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.827586],
[4,0,0,340,357,172,0.0,0.0,0.0,1.016552,1.016552,178,86,0,0,0.172414]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.793103],
[4,0,0,340,357,172,0.0,0.0,0.0,1.015862,1.015862,178,86,0,0,0.206897]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.758621],
[4,0,0,340,357,172,0.0,0.0,0.0,1.015172,1.015172,178,86,0,0,0.241379]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.724138],
[4,0,0,340,357,172,0.0,0.0,0.0,1.014483,1.014483,178,86,0,0,0.275862]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.689655],
[4,0,0,340,357,172,0.0,0.0,0.0,1.013793,1.013793,178,86,0,0,0.310345]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.655172],
[4,0,0,340,357,172,0.0,0.0,0.0,1.013103,1.013103,178,86,0,0,0.344828]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.620690],
[4,0,0,340,357,172,0.0,0.0,0.0,1.012414,1.012414,178,86,0,0,0.379310]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.586207],
[4,0,0,340,357,172,0.0,0.0,0.0,1.011724,1.011724,178,86,0,0,0.413793]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.551724],
[4,0,0,340,357,172,0.0,0.0,0.0,1.011034,1.011034,178,86,0,0,0.448276]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.517241],
[4,0,0,340,357,172,0.0,0.0,0.0,1.010345,1.010345,178,86,0,0,0.482759]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.482759],
[4,0,0,340,357,172,0.0,0.0,0.0,1.009655,1.009655,178,86,0,0,0.517241]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.448276],
[4,0,0,340,357,172,0.0,0.0,0.0,1.008965,1.008965,178,86,0,0,0.551724]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.413793],
[4,0,0,340,357,172,0.0,0.0,0.0,1.008276,1.008276,178,86,0,0,0.586207]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.379310],
[4,0,0,340,357,172,0.0,0.0,0.0,1.007586,1.007586,178,86,0,0,0.620690]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.344828],
[4,0,0,340,357,172,0.0,0.0,0.0,1.006896,1.006896,178,86,0,0,0.655172]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.310345],
[4,0,0,340,357,172,0.0,0.0,0.0,1.006207,1.006207,178,86,0,0,0.689655]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.275862],
[4,0,0,340,357,172,0.0,0.0,0.0,1.005517,1.005517,178,86,0,0,0.724138]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.241379],
[4,0,0,340,357,172,0.0,0.0,0.0,1.004828,1.004828,178,86,0,0,0.758621]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.206897],
[4,0,0,340,357,172,0.0,0.0,0.0,1.004138,1.004138,178,86,0,0,0.793103]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.172414],
[4,0,0,340,357,172,0.0,0.0,0.0,1.003448,1.003448,178,86,0,0,0.827586]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.137931],
[4,0,0,340,357,172,0.0,0.0,0.0,1.002759,1.002759,178,86,0,0,0.862069]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.103448],
[4,0,0,340,357,172,0.0,0.0,0.0,1.002069,1.002069,178,86,0,0,0.896552]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.068965],
[4,0,0,340,357,172,0.0,0.0,0.0,1.001379,1.001379,178,86,0,0,0.931035]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.034483],
[4,0,0,340,357,172,0.0,0.0,0.0,1.000690,1.000690,178,86,0,0,0.965517]
],
[
[4,0,0,340,357,172,0.0,0.0,0.0,1.0,1.0,178,86]
]
]
}
}
]

},{}],34:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-05-01.png"],
"name": "obj05_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 380,
"CanvasHeight": 200,
"MarginWidth": 198,
"MarginHeight": 108,
"parts": ["root","Obj","01"],
"ssa": [
[
[1,0,0,340,357,172,0.0,0.0,0.0,1.0,1.0,178,86]
],
[
[1,0,0,340,357,172,0.0,0.0,0.0,1.0,1.0,178,86]
]
]
}
}
]

},{}],35:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-05-01.png"],
"name": "obj06_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 380,
"CanvasHeight": 200,
"MarginWidth": 198,
"MarginHeight": 108,
"parts": ["root","Obj","omote","01","ura","02"],
"ssa": [
[
[4,0,0,340,357,172,0.0,0.0,0.0,1.0,1.0,178,86]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.034483],
[4,0,0,340,357,172,0.0,0.0,0.0,1.000690,1.000690,178,86,0,0,0.965517]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.068966],
[4,0,0,340,357,172,0.0,0.0,0.0,1.001379,1.001379,178,86,0,0,0.931035]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.103448],
[4,0,0,340,357,172,0.0,0.0,0.0,1.002069,1.002069,178,86,0,0,0.896552]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.137931],
[4,0,0,340,357,172,0.0,0.0,0.0,1.002759,1.002759,178,86,0,0,0.862069]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.172414],
[4,0,0,340,357,172,0.0,0.0,0.0,1.003448,1.003448,178,86,0,0,0.827586]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.206897],
[4,0,0,340,357,172,0.0,0.0,0.0,1.004138,1.004138,178,86,0,0,0.793103]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.241379],
[4,0,0,340,357,172,0.0,0.0,0.0,1.004828,1.004828,178,86,0,0,0.758621]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.275862],
[4,0,0,340,357,172,0.0,0.0,0.0,1.005517,1.005517,178,86,0,0,0.724138]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.310345],
[4,0,0,340,357,172,0.0,0.0,0.0,1.006207,1.006207,178,86,0,0,0.689655]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.344828],
[4,0,0,340,357,172,0.0,0.0,0.0,1.006896,1.006896,178,86,0,0,0.655172]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.379310],
[4,0,0,340,357,172,0.0,0.0,0.0,1.007586,1.007586,178,86,0,0,0.620690]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.413793],
[4,0,0,340,357,172,0.0,0.0,0.0,1.008276,1.008276,178,86,0,0,0.586207]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.448276],
[4,0,0,340,357,172,0.0,0.0,0.0,1.008965,1.008965,178,86,0,0,0.551724]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.482759],
[4,0,0,340,357,172,0.0,0.0,0.0,1.009655,1.009655,178,86,0,0,0.517241]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.517241],
[4,0,0,340,357,172,0.0,0.0,0.0,1.010345,1.010345,178,86,0,0,0.482759]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.551724],
[4,0,0,340,357,172,0.0,0.0,0.0,1.011034,1.011034,178,86,0,0,0.448276]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.586207],
[4,0,0,340,357,172,0.0,0.0,0.0,1.011724,1.011724,178,86,0,0,0.413793]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.620690],
[4,0,0,340,357,172,0.0,0.0,0.0,1.012414,1.012414,178,86,0,0,0.379310]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.655172],
[4,0,0,340,357,172,0.0,0.0,0.0,1.013103,1.013103,178,86,0,0,0.344828]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.689655],
[4,0,0,340,357,172,0.0,0.0,0.0,1.013793,1.013793,178,86,0,0,0.310345]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.724138],
[4,0,0,340,357,172,0.0,0.0,0.0,1.014483,1.014483,178,86,0,0,0.275862]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.758621],
[4,0,0,340,357,172,0.0,0.0,0.0,1.015172,1.015172,178,86,0,0,0.241379]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.793103],
[4,0,0,340,357,172,0.0,0.0,0.0,1.015862,1.015862,178,86,0,0,0.206897]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.827586],
[4,0,0,340,357,172,0.0,0.0,0.0,1.016552,1.016552,178,86,0,0,0.172414]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.862069],
[4,0,0,340,357,172,0.0,0.0,0.0,1.017241,1.017241,178,86,0,0,0.137931]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.896552],
[4,0,0,340,357,172,0.0,0.0,0.0,1.017931,1.017931,178,86,0,0,0.103448]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.931035],
[4,0,0,340,357,172,0.0,0.0,0.0,1.018621,1.018621,178,86,0,0,0.068965]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.965517],
[4,0,0,340,357,172,0.0,0.0,0.0,1.019310,1.019310,178,86,0,0,0.034483]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86]
]
]
}
}
]

},{}],36:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-06-01.png"],
"name": "obj01_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 440,
"CanvasHeight": 600,
"MarginWidth": 228,
"MarginHeight": 308,
"parts": ["root","Obj","01"],
"ssa": [
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261]
]
]
}
}
]

},{}],37:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-06-01.png"],
"name": "obj02_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 440,
"CanvasHeight": 600,
"MarginWidth": 228,
"MarginHeight": 308,
"parts": ["root","Obj","01","02"],
"ssa": [
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.965517],
[2,0,368,502,366,522,0.0,0.0,0.0,1.019310,1.019310,183,261,0,0,0.034483]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.931035],
[2,0,368,502,366,522,0.0,0.0,0.0,1.018621,1.018621,183,261,0,0,0.068966]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.896552],
[2,0,368,502,366,522,0.0,0.0,0.0,1.017931,1.017931,183,261,0,0,0.103448]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.862069],
[2,0,368,502,366,522,0.0,0.0,0.0,1.017241,1.017241,183,261,0,0,0.137931]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.827586],
[2,0,368,502,366,522,0.0,0.0,0.0,1.016552,1.016552,183,261,0,0,0.172414]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.793103],
[2,0,368,502,366,522,0.0,0.0,0.0,1.015862,1.015862,183,261,0,0,0.206897]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.758621],
[2,0,368,502,366,522,0.0,0.0,0.0,1.015172,1.015172,183,261,0,0,0.241379]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.724138],
[2,0,368,502,366,522,0.0,0.0,0.0,1.014483,1.014483,183,261,0,0,0.275862]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.689655],
[2,0,368,502,366,522,0.0,0.0,0.0,1.013793,1.013793,183,261,0,0,0.310345]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.655172],
[2,0,368,502,366,522,0.0,0.0,0.0,1.013103,1.013103,183,261,0,0,0.344828]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.620690],
[2,0,368,502,366,522,0.0,0.0,0.0,1.012414,1.012414,183,261,0,0,0.379310]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.586207],
[2,0,368,502,366,522,0.0,0.0,0.0,1.011724,1.011724,183,261,0,0,0.413793]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.551724],
[2,0,368,502,366,522,0.0,0.0,0.0,1.011034,1.011034,183,261,0,0,0.448276]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.517241],
[2,0,368,502,366,522,0.0,0.0,0.0,1.010345,1.010345,183,261,0,0,0.482759]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.482759],
[2,0,368,502,366,522,0.0,0.0,0.0,1.009655,1.009655,183,261,0,0,0.517241]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.448276],
[2,0,368,502,366,522,0.0,0.0,0.0,1.008965,1.008965,183,261,0,0,0.551724]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.413793],
[2,0,368,502,366,522,0.0,0.0,0.0,1.008276,1.008276,183,261,0,0,0.586207]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.379310],
[2,0,368,502,366,522,0.0,0.0,0.0,1.007586,1.007586,183,261,0,0,0.620690]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.344828],
[2,0,368,502,366,522,0.0,0.0,0.0,1.006896,1.006896,183,261,0,0,0.655172]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.310345],
[2,0,368,502,366,522,0.0,0.0,0.0,1.006207,1.006207,183,261,0,0,0.689655]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.275862],
[2,0,368,502,366,522,0.0,0.0,0.0,1.005517,1.005517,183,261,0,0,0.724138]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.241379],
[2,0,368,502,366,522,0.0,0.0,0.0,1.004828,1.004828,183,261,0,0,0.758621]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.206897],
[2,0,368,502,366,522,0.0,0.0,0.0,1.004138,1.004138,183,261,0,0,0.793103]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.172414],
[2,0,368,502,366,522,0.0,0.0,0.0,1.003448,1.003448,183,261,0,0,0.827586]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.137931],
[2,0,368,502,366,522,0.0,0.0,0.0,1.002759,1.002759,183,261,0,0,0.862069]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.103448],
[2,0,368,502,366,522,0.0,0.0,0.0,1.002069,1.002069,183,261,0,0,0.896552]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.068965],
[2,0,368,502,366,522,0.0,0.0,0.0,1.001379,1.001379,183,261,0,0,0.931035]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.034483],
[2,0,368,502,366,522,0.0,0.0,0.0,1.000690,1.000690,183,261,0,0,0.965517]
],
[
[2,0,368,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261]
]
]
}
}
]

},{}],38:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-06-01.png"],
"name": "obj03_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 440,
"CanvasHeight": 600,
"MarginWidth": 228,
"MarginHeight": 308,
"parts": ["root","Obj","02"],
"ssa": [
[
[1,0,368,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261]
],
[
[1,0,368,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261]
]
]
}
}
]

},{}],39:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-07-01.png"],
"name": "obj01_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 140,
"MarginWidth": 108,
"MarginHeight": 78,
"parts": ["root","Obj","omote"],
"ssa": [
[
[1,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84]
],
[
[1,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84]
]
]
}
}
]

},{}],40:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-07-01.png"],
"name": "obj02_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 140,
"MarginWidth": 108,
"MarginHeight": 78,
"parts": ["root","Obj","omote"],
"ssa": [
[
[1,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84]
],
[
[1,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84]
]
]
}
}
]

},{}],41:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-07-01.png"],
"name": "obj03_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 140,
"MarginWidth": 108,
"MarginHeight": 78,
"parts": ["root","Obj","omote"],
"ssa": [
[
[1,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84]
],
[
[1,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84]
]
]
}
}
]

},{}],42:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-07-01.png"],
"name": "obj04_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 140,
"MarginWidth": 108,
"MarginHeight": 78,
"parts": ["root","Obj","omote","omote_1","ura","ura_1","left","right"],
"ssa": [
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.965517],
[4,0,0,72,152,91,-20.386208,40.772415,0.0,1.019310,1.019310,50,84,0,0,0.034483],
[5,0,155,217,28,39,-37.714485,13.251036,0.0,1.019310,1.019310,14,19,0,0,0.034483],
[6,0,187,216,32,40,-8.154484,23.444139,0.0,1.019310,1.019310,16,20,0,0,0.034483]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.931035],
[4,0,0,72,152,91,-20.372414,40.744827,0.0,1.018621,1.018621,50,84,0,0,0.068966],
[5,0,155,217,28,39,-37.688965,13.242067,0.0,1.018621,1.018621,14,19,0,0,0.068966],
[6,0,187,216,32,40,-8.148965,23.428274,0.0,1.018621,1.018621,16,20,0,0,0.068966]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.896552],
[4,0,0,72,152,91,-20.358620,40.717239,0.0,1.017931,1.017931,50,84,0,0,0.103448],
[5,0,155,217,28,39,-37.663445,13.233103,0.0,1.017931,1.017931,14,19,0,0,0.103448],
[6,0,187,216,32,40,-8.143448,23.412413,0.0,1.017931,1.017931,16,20,0,0,0.103448]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.862069],
[4,0,0,72,152,91,-20.344828,40.689655,0.0,1.017241,1.017241,50,84,0,0,0.137931],
[5,0,155,217,28,39,-37.637932,13.224138,0.0,1.017241,1.017241,14,19,0,0,0.137931],
[6,0,187,216,32,40,-8.137932,23.396553,0.0,1.017241,1.017241,16,20,0,0,0.137931]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.827586],
[4,0,0,72,152,91,-20.331036,40.662071,0.0,1.016552,1.016552,50,84,0,0,0.172414],
[5,0,155,217,28,39,-37.612415,13.215174,0.0,1.016552,1.016552,14,19,0,0,0.172414],
[6,0,187,216,32,40,-8.132415,23.380692,0.0,1.016552,1.016552,16,20,0,0,0.172414]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.793103],
[4,0,0,72,152,91,-20.317242,40.634483,0.0,1.015862,1.015862,50,84,0,0,0.206897],
[5,0,155,217,28,39,-37.586899,13.206207,0.0,1.015862,1.015862,14,19,0,0,0.206897],
[6,0,187,216,32,40,-8.126896,23.364828,0.0,1.015862,1.015862,16,20,0,0,0.206897]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.758621],
[4,0,0,72,152,91,-20.303448,40.606895,0.0,1.015172,1.015172,50,84,0,0,0.241379],
[5,0,155,217,28,39,-37.561378,13.197241,0.0,1.015172,1.015172,14,19,0,0,0.241379],
[6,0,187,216,32,40,-8.121380,23.348965,0.0,1.015172,1.015172,16,20,0,0,0.241379]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.724138],
[4,0,0,72,152,91,-20.289654,40.579308,0.0,1.014483,1.014483,50,84,0,0,0.275862],
[5,0,155,217,28,39,-37.535858,13.188274,0.0,1.014483,1.014483,14,19,0,0,0.275862],
[6,0,187,216,32,40,-8.115861,23.333101,0.0,1.014483,1.014483,16,20,0,0,0.275862]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.689655],
[4,0,0,72,152,91,-20.275862,40.551723,0.0,1.013793,1.013793,50,84,0,0,0.310345],
[5,0,155,217,28,39,-37.510345,13.179310,0.0,1.013793,1.013793,14,19,0,0,0.310345],
[6,0,187,216,32,40,-8.110344,23.317240,0.0,1.013793,1.013793,16,20,0,0,0.310345]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.655172],
[4,0,0,72,152,91,-20.262070,40.524139,0.0,1.013103,1.013103,50,84,0,0,0.344828],
[5,0,155,217,28,39,-37.484829,13.170345,0.0,1.013103,1.013103,14,19,0,0,0.344828],
[6,0,187,216,32,40,-8.104828,23.301380,0.0,1.013103,1.013103,16,20,0,0,0.344828]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.620690],
[4,0,0,72,152,91,-20.248276,40.496552,0.0,1.012414,1.012414,50,84,0,0,0.379310],
[5,0,155,217,28,39,-37.459309,13.161381,0.0,1.012414,1.012414,14,19,0,0,0.379310],
[6,0,187,216,32,40,-8.099311,23.285519,0.0,1.012414,1.012414,16,20,0,0,0.379310]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.586207],
[4,0,0,72,152,91,-20.234482,40.468964,0.0,1.011724,1.011724,50,84,0,0,0.413793],
[5,0,155,217,28,39,-37.433792,13.152412,0.0,1.011724,1.011724,14,19,0,0,0.413793],
[6,0,187,216,32,40,-8.093792,23.269653,0.0,1.011724,1.011724,16,20,0,0,0.413793]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.551724],
[4,0,0,72,152,91,-20.220690,40.441380,0.0,1.011034,1.011034,50,84,0,0,0.448276],
[5,0,155,217,28,39,-37.408276,13.143448,0.0,1.011034,1.011034,14,19,0,0,0.448276],
[6,0,187,216,32,40,-8.088276,23.253794,0.0,1.011034,1.011034,16,20,0,0,0.448276]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.517241],
[4,0,0,72,152,91,-20.206898,40.413795,0.0,1.010345,1.010345,50,84,0,0,0.482759],
[5,0,155,217,28,39,-37.382759,13.134483,0.0,1.010345,1.010345,14,19,0,0,0.482759],
[6,0,187,216,32,40,-8.082760,23.237932,0.0,1.010345,1.010345,16,20,0,0,0.482759]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.482759],
[4,0,0,72,152,91,-20.193102,40.386204,0.0,1.009655,1.009655,50,84,0,0,0.517241],
[5,0,155,217,28,39,-37.357239,13.125515,0.0,1.009655,1.009655,14,19,0,0,0.517241],
[6,0,187,216,32,40,-8.077240,23.222067,0.0,1.009655,1.009655,16,20,0,0,0.517241]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.448276],
[4,0,0,72,152,91,-20.179310,40.358620,0.0,1.008965,1.008965,50,84,0,0,0.551724],
[5,0,155,217,28,39,-37.331722,13.116550,0.0,1.008965,1.008965,14,19,0,0,0.551724],
[6,0,187,216,32,40,-8.071724,23.206207,0.0,1.008965,1.008965,16,20,0,0,0.551724]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.413793],
[4,0,0,72,152,91,-20.165518,40.331036,0.0,1.008276,1.008276,50,84,0,0,0.586207],
[5,0,155,217,28,39,-37.306206,13.107588,0.0,1.008276,1.008276,14,19,0,0,0.586207],
[6,0,187,216,32,40,-8.066208,23.190346,0.0,1.008276,1.008276,16,20,0,0,0.586207]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.379310],
[4,0,0,72,152,91,-20.151726,40.303452,0.0,1.007586,1.007586,50,84,0,0,0.620690],
[5,0,155,217,28,39,-37.280693,13.098623,0.0,1.007586,1.007586,14,19,0,0,0.620690],
[6,0,187,216,32,40,-8.060691,23.174486,0.0,1.007586,1.007586,16,20,0,0,0.620690]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.344828],
[4,0,0,72,152,91,-20.137930,40.275860,0.0,1.006896,1.006896,50,84,0,0,0.655172],
[5,0,155,217,28,39,-37.255173,13.089655,0.0,1.006896,1.006896,14,19,0,0,0.655172],
[6,0,187,216,32,40,-8.055172,23.158619,0.0,1.006896,1.006896,16,20,0,0,0.655172]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.310345],
[4,0,0,72,152,91,-20.124138,40.248276,0.0,1.006207,1.006207,50,84,0,0,0.689655],
[5,0,155,217,28,39,-37.229652,13.080690,0.0,1.006207,1.006207,14,19,0,0,0.689655],
[6,0,187,216,32,40,-8.049656,23.142759,0.0,1.006207,1.006207,16,20,0,0,0.689655]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.275862],
[4,0,0,72,152,91,-20.110344,40.220688,0.0,1.005517,1.005517,50,84,0,0,0.724138],
[5,0,155,217,28,39,-37.204140,13.071722,0.0,1.005517,1.005517,14,19,0,0,0.724138],
[6,0,187,216,32,40,-8.044137,23.126894,0.0,1.005517,1.005517,16,20,0,0,0.724138]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.241379],
[4,0,0,72,152,91,-20.096552,40.193104,0.0,1.004828,1.004828,50,84,0,0,0.758621],
[5,0,155,217,28,39,-37.178619,13.062757,0.0,1.004828,1.004828,14,19,0,0,0.758621],
[6,0,187,216,32,40,-8.038620,23.111034,0.0,1.004828,1.004828,16,20,0,0,0.758621]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.206897],
[4,0,0,72,152,91,-20.082758,40.165516,0.0,1.004138,1.004138,50,84,0,0,0.793103],
[5,0,155,217,28,39,-37.153099,13.053793,0.0,1.004138,1.004138,14,19,0,0,0.793103],
[6,0,187,216,32,40,-8.033104,23.095173,0.0,1.004138,1.004138,16,20,0,0,0.793103]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.172414],
[4,0,0,72,152,91,-20.068966,40.137932,0.0,1.003448,1.003448,50,84,0,0,0.827586],
[5,0,155,217,28,39,-37.127586,13.044828,0.0,1.003448,1.003448,14,19,0,0,0.827586],
[6,0,187,216,32,40,-8.027587,23.079311,0.0,1.003448,1.003448,16,20,0,0,0.827586]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.137931],
[4,0,0,72,152,91,-20.055172,40.110344,0.0,1.002759,1.002759,50,84,0,0,0.862069],
[5,0,155,217,28,39,-37.102066,13.035862,0.0,1.002759,1.002759,14,19,0,0,0.862069],
[6,0,187,216,32,40,-8.022068,23.063448,0.0,1.002759,1.002759,16,20,0,0,0.862069]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.103448],
[4,0,0,72,152,91,-20.041380,40.082760,0.0,1.002069,1.002069,50,84,0,0,0.896552],
[5,0,155,217,28,39,-37.076553,13.026897,0.0,1.002069,1.002069,14,19,0,0,0.896552],
[6,0,187,216,32,40,-8.016552,23.047586,0.0,1.002069,1.002069,16,20,0,0,0.896552]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.068965],
[4,0,0,72,152,91,-20.027584,40.055168,0.0,1.001379,1.001379,50,84,0,0,0.931035],
[5,0,155,217,28,39,-37.051033,13.017929,0.0,1.001379,1.001379,14,19,0,0,0.931035],
[6,0,187,216,32,40,-8.011033,23.031721,0.0,1.001379,1.001379,16,20,0,0,0.931035]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.034483],
[4,0,0,72,152,91,-20.013792,40.027584,0.0,1.000690,1.000690,50,84,0,0,0.965517],
[5,0,155,217,28,39,-37.025517,13.008965,0.0,1.000690,1.000690,14,19,0,0,0.965517],
[6,0,187,216,32,40,-8.005516,23.015860,0.0,1.000690,1.000690,16,20,0,0,0.965517]
],
[
[4,0,0,72,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[5,0,155,217,28,39,-37.0,13.0,0.0,1.0,1.0,14,19],
[6,0,187,216,32,40,-8.0,23.0,0.0,1.0,1.0,16,20]
]
]
}
}
]

},{}],43:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-07-01.png"],
"name": "obj05_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 140,
"MarginWidth": 108,
"MarginHeight": 78,
"parts": ["root","Obj","ura_1","left","right"],
"ssa": [
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[2,0,155,217,28,39,-37.0,13.0,0.0,1.0,1.0,14,19],
[3,0,187,216,32,40,-8.0,23.0,0.0,1.0,1.0,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.999333,50,84],
[2,0,155,217,28,39,-37.0,13.051311,0.0,1.0,0.997668,14,19],
[3,0,187,216,32,40,-7.966666,23.011333,0.0,1.0,0.997668,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.998667,50,84],
[2,0,155,217,28,39,-37.0,13.102579,0.0,1.0,0.995338,14,19],
[3,0,187,216,32,40,-7.933333,23.022667,0.0,1.0,0.995338,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.998000,50,84],
[2,0,155,217,28,39,-37.0,13.153799,0.0,1.0,0.993010,14,19],
[3,0,187,216,32,40,-7.900000,23.034000,0.0,1.0,0.993010,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.997333,50,84],
[2,0,155,217,28,39,-37.0,13.204977,0.0,1.0,0.990684,14,19],
[3,0,187,216,32,40,-7.866667,23.045334,0.0,1.0,0.990684,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.996667,50,84],
[2,0,155,217,28,39,-37.0,13.256111,0.0,1.0,0.988361,14,19],
[3,0,187,216,32,40,-7.833333,23.056667,0.0,1.0,0.988361,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.996000,50,84],
[2,0,155,217,28,39,-37.0,13.307201,0.0,1.0,0.986040,14,19],
[3,0,187,216,32,40,-7.800000,23.068001,0.0,1.0,0.986040,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.995333,50,84],
[2,0,155,217,28,39,-37.0,13.358246,0.0,1.0,0.983721,14,19],
[3,0,187,216,32,40,-7.766666,23.079334,0.0,1.0,0.983721,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.994667,50,84],
[2,0,155,217,28,39,-37.0,13.409243,0.0,1.0,0.981404,14,19],
[3,0,187,216,32,40,-7.733334,23.090666,0.0,1.0,0.981404,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.994000,50,84],
[2,0,155,217,28,39,-37.0,13.460199,0.0,1.0,0.979090,14,19],
[3,0,187,216,32,40,-7.700000,23.101999,0.0,1.0,0.979090,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.993333,50,84],
[2,0,155,217,28,39,-37.0,13.511112,0.0,1.0,0.976778,14,19],
[3,0,187,216,32,40,-7.666667,23.113333,0.0,1.0,0.976778,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.992667,50,84],
[2,0,155,217,28,39,-37.0,13.561977,0.0,1.0,0.974468,14,19],
[3,0,187,216,32,40,-7.633333,23.124666,0.0,1.0,0.974468,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.992000,50,84],
[2,0,155,217,28,39,-37.0,13.612801,0.0,1.0,0.972160,14,19],
[3,0,187,216,32,40,-7.600000,23.136000,0.0,1.0,0.972160,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.991333,50,84],
[2,0,155,217,28,39,-37.0,13.663576,0.0,1.0,0.969854,14,19],
[3,0,187,216,32,40,-7.566667,23.147333,0.0,1.0,0.969854,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.990667,50,84],
[2,0,155,217,28,39,-37.0,13.714312,0.0,1.0,0.967551,14,19],
[3,0,187,216,32,40,-7.533334,23.158667,0.0,1.0,0.967551,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.990000,50,84],
[2,0,155,217,28,39,-37.0,13.764999,0.0,1.0,0.965250,14,19],
[3,0,187,216,32,40,-7.500000,23.170000,0.0,1.0,0.965250,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.989333,50,84],
[2,0,155,217,28,39,-37.0,13.815643,0.0,1.0,0.962951,14,19],
[3,0,187,216,32,40,-7.466666,23.181334,0.0,1.0,0.962951,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.988667,50,84],
[2,0,155,217,28,39,-37.0,13.866245,0.0,1.0,0.960654,14,19],
[3,0,187,216,32,40,-7.433333,23.192667,0.0,1.0,0.960654,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.988000,50,84],
[2,0,155,217,28,39,-37.0,13.916800,0.0,1.0,0.958360,14,19],
[3,0,187,216,32,40,-7.400000,23.203999,0.0,1.0,0.958360,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.987333,50,84],
[2,0,155,217,28,39,-37.0,13.967310,0.0,1.0,0.956068,14,19],
[3,0,187,216,32,40,-7.366667,23.215332,0.0,1.0,0.956068,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.986667,50,84],
[2,0,155,217,28,39,-37.0,14.017776,0.0,1.0,0.953778,14,19],
[3,0,187,216,32,40,-7.333333,23.226665,0.0,1.0,0.953778,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.986000,50,84],
[2,0,155,217,28,39,-37.0,14.068201,0.0,1.0,0.951490,14,19],
[3,0,187,216,32,40,-7.300000,23.238001,0.0,1.0,0.951490,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.985333,50,84],
[2,0,155,217,28,39,-37.0,14.118578,0.0,1.0,0.949204,14,19],
[3,0,187,216,32,40,-7.266666,23.249334,0.0,1.0,0.949204,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.984667,50,84],
[2,0,155,217,28,39,-37.0,14.168909,0.0,1.0,0.946921,14,19],
[3,0,187,216,32,40,-7.233334,23.260666,0.0,1.0,0.946921,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.984000,50,84],
[2,0,155,217,28,39,-37.0,14.219198,0.0,1.0,0.944640,14,19],
[3,0,187,216,32,40,-7.200000,23.271999,0.0,1.0,0.944640,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.983333,50,84],
[2,0,155,217,28,39,-37.0,14.269445,0.0,1.0,0.942361,14,19],
[3,0,187,216,32,40,-7.166667,23.283333,0.0,1.0,0.942361,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.982667,50,84],
[2,0,155,217,28,39,-37.0,14.319645,0.0,1.0,0.940084,14,19],
[3,0,187,216,32,40,-7.133333,23.294666,0.0,1.0,0.940084,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.982000,50,84],
[2,0,155,217,28,39,-37.0,14.369801,0.0,1.0,0.937810,14,19],
[3,0,187,216,32,40,-7.100000,23.306000,0.0,1.0,0.937810,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.981333,50,84],
[2,0,155,217,28,39,-37.0,14.419909,0.0,1.0,0.935538,14,19],
[3,0,187,216,32,40,-7.066667,23.317333,0.0,1.0,0.935538,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.980667,50,84],
[2,0,155,217,28,39,-37.0,14.469978,0.0,1.0,0.933268,14,19],
[3,0,187,216,32,40,-7.033334,23.328667,0.0,1.0,0.933268,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.980000,50,84],
[2,0,155,217,28,39,-37.0,14.520000,0.0,1.0,0.931000,14,19],
[3,0,187,216,32,40,-7.0,23.340000,0.0,1.0,0.931000,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.980690,50,84],
[2,0,155,217,28,39,-37.0,14.468252,0.0,1.0,0.933346,14,19],
[3,0,187,216,32,40,-7.034483,23.328276,0.0,1.0,0.933346,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.981379,50,84],
[2,0,155,217,28,39,-37.0,14.416456,0.0,1.0,0.935694,14,19],
[3,0,187,216,32,40,-7.068966,23.316551,0.0,1.0,0.935694,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.982069,50,84],
[2,0,155,217,28,39,-37.0,14.364613,0.0,1.0,0.938045,14,19],
[3,0,187,216,32,40,-7.103448,23.304829,0.0,1.0,0.938045,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.982759,50,84],
[2,0,155,217,28,39,-37.0,14.312721,0.0,1.0,0.940398,14,19],
[3,0,187,216,32,40,-7.137931,23.293102,0.0,1.0,0.940398,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.983448,50,84],
[2,0,155,217,28,39,-37.0,14.260786,0.0,1.0,0.942754,14,19],
[3,0,187,216,32,40,-7.172414,23.281380,0.0,1.0,0.942754,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.984138,50,84],
[2,0,155,217,28,39,-37.0,14.208799,0.0,1.0,0.945112,14,19],
[3,0,187,216,32,40,-7.206897,23.269655,0.0,1.0,0.945112,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.984828,50,84],
[2,0,155,217,28,39,-37.0,14.156767,0.0,1.0,0.947472,14,19],
[3,0,187,216,32,40,-7.241380,23.257931,0.0,1.0,0.947472,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.985517,50,84],
[2,0,155,217,28,39,-37.0,14.104685,0.0,1.0,0.949835,14,19],
[3,0,187,216,32,40,-7.275862,23.246206,0.0,1.0,0.949835,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.986207,50,84],
[2,0,155,217,28,39,-37.0,14.052557,0.0,1.0,0.952200,14,19],
[3,0,187,216,32,40,-7.310345,23.234484,0.0,1.0,0.952200,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.986897,50,84],
[2,0,155,217,28,39,-37.0,14.000380,0.0,1.0,0.954567,14,19],
[3,0,187,216,32,40,-7.344828,23.222757,0.0,1.0,0.954567,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.987586,50,84],
[2,0,155,217,28,39,-37.0,13.948156,0.0,1.0,0.956937,14,19],
[3,0,187,216,32,40,-7.379311,23.211035,0.0,1.0,0.956937,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.988276,50,84],
[2,0,155,217,28,39,-37.0,13.895885,0.0,1.0,0.959309,14,19],
[3,0,187,216,32,40,-7.413794,23.199310,0.0,1.0,0.959309,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.988966,50,84],
[2,0,155,217,28,39,-37.0,13.843567,0.0,1.0,0.961684,14,19],
[3,0,187,216,32,40,-7.448276,23.187586,0.0,1.0,0.961684,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.989655,50,84],
[2,0,155,217,28,39,-37.0,13.791199,0.0,1.0,0.964061,14,19],
[3,0,187,216,32,40,-7.482759,23.175861,0.0,1.0,0.964061,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.990345,50,84],
[2,0,155,217,28,39,-37.0,13.738789,0.0,1.0,0.966440,14,19],
[3,0,187,216,32,40,-7.517241,23.164139,0.0,1.0,0.966440,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.991035,50,84],
[2,0,155,217,28,39,-37.0,13.686325,0.0,1.0,0.968822,14,19],
[3,0,187,216,32,40,-7.551724,23.152412,0.0,1.0,0.968822,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.991724,50,84],
[2,0,155,217,28,39,-37.0,13.633818,0.0,1.0,0.971206,14,19],
[3,0,187,216,32,40,-7.586206,23.140690,0.0,1.0,0.971206,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.992414,50,84],
[2,0,155,217,28,39,-37.0,13.581261,0.0,1.0,0.973592,14,19],
[3,0,187,216,32,40,-7.620689,23.128965,0.0,1.0,0.973592,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.993103,50,84],
[2,0,155,217,28,39,-37.0,13.528656,0.0,1.0,0.975981,14,19],
[3,0,187,216,32,40,-7.655172,23.117241,0.0,1.0,0.975981,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.993793,50,84],
[2,0,155,217,28,39,-37.0,13.476004,0.0,1.0,0.978372,14,19],
[3,0,187,216,32,40,-7.689655,23.105516,0.0,1.0,0.978372,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.994483,50,84],
[2,0,155,217,28,39,-37.0,13.423306,0.0,1.0,0.980766,14,19],
[3,0,187,216,32,40,-7.724138,23.093794,0.0,1.0,0.980766,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.995172,50,84],
[2,0,155,217,28,39,-37.0,13.370558,0.0,1.0,0.983162,14,19],
[3,0,187,216,32,40,-7.758620,23.082069,0.0,1.0,0.983162,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.995862,50,84],
[2,0,155,217,28,39,-37.0,13.317764,0.0,1.0,0.985560,14,19],
[3,0,187,216,32,40,-7.793103,23.070345,0.0,1.0,0.985560,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.996552,50,84],
[2,0,155,217,28,39,-37.0,13.264921,0.0,1.0,0.987961,14,19],
[3,0,187,216,32,40,-7.827586,23.058620,0.0,1.0,0.987961,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.997241,50,84],
[2,0,155,217,28,39,-37.0,13.212034,0.0,1.0,0.990364,14,19],
[3,0,187,216,32,40,-7.862069,23.046896,0.0,1.0,0.990364,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.997931,50,84],
[2,0,155,217,28,39,-37.0,13.159096,0.0,1.0,0.992769,14,19],
[3,0,187,216,32,40,-7.896552,23.035172,0.0,1.0,0.992769,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.998621,50,84],
[2,0,155,217,28,39,-37.0,13.106112,0.0,1.0,0.995177,14,19],
[3,0,187,216,32,40,-7.931034,23.023449,0.0,1.0,0.995177,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.999310,50,84],
[2,0,155,217,28,39,-37.0,13.053080,0.0,1.0,0.997587,14,19],
[3,0,187,216,32,40,-7.965517,23.011724,0.0,1.0,0.997587,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[2,0,155,217,28,39,-37.0,13.0,0.0,1.0,1.0,14,19],
[3,0,187,216,32,40,-8.0,23.0,0.0,1.0,1.0,16,20]
]
]
}
}
]

},{}],44:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-07-01.png"],
"name": "obj06_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 140,
"MarginWidth": 108,
"MarginHeight": 78,
"parts": ["root","Obj","omote","omote_1","ura","ura_1","left","right"],
"ssa": [
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[5,0,155,217,28,39,-37.0,13.0,0.0,1.0,1.0,14,19],
[6,0,187,216,32,40,-8.0,23.0,0.0,1.0,1.0,16,20]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.013792,40.027584,0.0,1.000690,1.000690,50,84,0,0,0.965517],
[5,0,155,217,28,39,-37.025517,13.008965,0.0,1.000690,1.000690,14,19,0,0,0.965517],
[6,0,187,216,32,40,-8.005516,23.015860,0.0,1.000690,1.000690,16,20,0,0,0.965517]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.027584,40.055168,0.0,1.001379,1.001379,50,84,0,0,0.931035],
[5,0,155,217,28,39,-37.051033,13.017929,0.0,1.001379,1.001379,14,19,0,0,0.931035],
[6,0,187,216,32,40,-8.011033,23.031721,0.0,1.001379,1.001379,16,20,0,0,0.931035]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.041380,40.082760,0.0,1.002069,1.002069,50,84,0,0,0.896552],
[5,0,155,217,28,39,-37.076553,13.026897,0.0,1.002069,1.002069,14,19,0,0,0.896552],
[6,0,187,216,32,40,-8.016552,23.047586,0.0,1.002069,1.002069,16,20,0,0,0.896552]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.055172,40.110344,0.0,1.002759,1.002759,50,84,0,0,0.862069],
[5,0,155,217,28,39,-37.102066,13.035862,0.0,1.002759,1.002759,14,19,0,0,0.862069],
[6,0,187,216,32,40,-8.022068,23.063448,0.0,1.002759,1.002759,16,20,0,0,0.862069]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.068966,40.137932,0.0,1.003448,1.003448,50,84,0,0,0.827586],
[5,0,155,217,28,39,-37.127586,13.044828,0.0,1.003448,1.003448,14,19,0,0,0.827586],
[6,0,187,216,32,40,-8.027587,23.079311,0.0,1.003448,1.003448,16,20,0,0,0.827586]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.082758,40.165516,0.0,1.004138,1.004138,50,84,0,0,0.793103],
[5,0,155,217,28,39,-37.153099,13.053793,0.0,1.004138,1.004138,14,19,0,0,0.793103],
[6,0,187,216,32,40,-8.033104,23.095173,0.0,1.004138,1.004138,16,20,0,0,0.793103]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.096552,40.193104,0.0,1.004828,1.004828,50,84,0,0,0.758621],
[5,0,155,217,28,39,-37.178619,13.062757,0.0,1.004828,1.004828,14,19,0,0,0.758621],
[6,0,187,216,32,40,-8.038620,23.111034,0.0,1.004828,1.004828,16,20,0,0,0.758621]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.110344,40.220688,0.0,1.005517,1.005517,50,84,0,0,0.724138],
[5,0,155,217,28,39,-37.204140,13.071722,0.0,1.005517,1.005517,14,19,0,0,0.724138],
[6,0,187,216,32,40,-8.044137,23.126894,0.0,1.005517,1.005517,16,20,0,0,0.724138]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.124138,40.248276,0.0,1.006207,1.006207,50,84,0,0,0.689655],
[5,0,155,217,28,39,-37.229652,13.080690,0.0,1.006207,1.006207,14,19,0,0,0.689655],
[6,0,187,216,32,40,-8.049656,23.142759,0.0,1.006207,1.006207,16,20,0,0,0.689655]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.137930,40.275860,0.0,1.006896,1.006896,50,84,0,0,0.655172],
[5,0,155,217,28,39,-37.255173,13.089655,0.0,1.006896,1.006896,14,19,0,0,0.655172],
[6,0,187,216,32,40,-8.055172,23.158619,0.0,1.006896,1.006896,16,20,0,0,0.655172]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.151726,40.303452,0.0,1.007586,1.007586,50,84,0,0,0.620690],
[5,0,155,217,28,39,-37.280693,13.098623,0.0,1.007586,1.007586,14,19,0,0,0.620690],
[6,0,187,216,32,40,-8.060691,23.174486,0.0,1.007586,1.007586,16,20,0,0,0.620690]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.165518,40.331036,0.0,1.008276,1.008276,50,84,0,0,0.586207],
[5,0,155,217,28,39,-37.306206,13.107588,0.0,1.008276,1.008276,14,19,0,0,0.586207],
[6,0,187,216,32,40,-8.066208,23.190346,0.0,1.008276,1.008276,16,20,0,0,0.586207]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.179310,40.358620,0.0,1.008965,1.008965,50,84,0,0,0.551724],
[5,0,155,217,28,39,-37.331722,13.116550,0.0,1.008965,1.008965,14,19,0,0,0.551724],
[6,0,187,216,32,40,-8.071724,23.206207,0.0,1.008965,1.008965,16,20,0,0,0.551724]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.193102,40.386204,0.0,1.009655,1.009655,50,84,0,0,0.517241],
[5,0,155,217,28,39,-37.357239,13.125515,0.0,1.009655,1.009655,14,19,0,0,0.517241],
[6,0,187,216,32,40,-8.077240,23.222067,0.0,1.009655,1.009655,16,20,0,0,0.517241]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.206898,40.413795,0.0,1.010345,1.010345,50,84,0,0,0.482759],
[5,0,155,217,28,39,-37.382759,13.134483,0.0,1.010345,1.010345,14,19,0,0,0.482759],
[6,0,187,216,32,40,-8.082760,23.237932,0.0,1.010345,1.010345,16,20,0,0,0.482759]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.220690,40.441380,0.0,1.011034,1.011034,50,84,0,0,0.448276],
[5,0,155,217,28,39,-37.408276,13.143448,0.0,1.011034,1.011034,14,19,0,0,0.448276],
[6,0,187,216,32,40,-8.088276,23.253794,0.0,1.011034,1.011034,16,20,0,0,0.448276]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.234482,40.468964,0.0,1.011724,1.011724,50,84,0,0,0.413793],
[5,0,155,217,28,39,-37.433792,13.152412,0.0,1.011724,1.011724,14,19,0,0,0.413793],
[6,0,187,216,32,40,-8.093792,23.269653,0.0,1.011724,1.011724,16,20,0,0,0.413793]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.248276,40.496552,0.0,1.012414,1.012414,50,84,0,0,0.379310],
[5,0,155,217,28,39,-37.459309,13.161381,0.0,1.012414,1.012414,14,19,0,0,0.379310],
[6,0,187,216,32,40,-8.099311,23.285519,0.0,1.012414,1.012414,16,20,0,0,0.379310]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.262070,40.524139,0.0,1.013103,1.013103,50,84,0,0,0.344828],
[5,0,155,217,28,39,-37.484829,13.170345,0.0,1.013103,1.013103,14,19,0,0,0.344828],
[6,0,187,216,32,40,-8.104828,23.301380,0.0,1.013103,1.013103,16,20,0,0,0.344828]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.275862,40.551723,0.0,1.013793,1.013793,50,84,0,0,0.310345],
[5,0,155,217,28,39,-37.510345,13.179310,0.0,1.013793,1.013793,14,19,0,0,0.310345],
[6,0,187,216,32,40,-8.110344,23.317240,0.0,1.013793,1.013793,16,20,0,0,0.310345]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.289654,40.579308,0.0,1.014483,1.014483,50,84,0,0,0.275862],
[5,0,155,217,28,39,-37.535858,13.188274,0.0,1.014483,1.014483,14,19,0,0,0.275862],
[6,0,187,216,32,40,-8.115861,23.333101,0.0,1.014483,1.014483,16,20,0,0,0.275862]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.303448,40.606895,0.0,1.015172,1.015172,50,84,0,0,0.241379],
[5,0,155,217,28,39,-37.561378,13.197241,0.0,1.015172,1.015172,14,19,0,0,0.241379],
[6,0,187,216,32,40,-8.121380,23.348965,0.0,1.015172,1.015172,16,20,0,0,0.241379]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.317242,40.634483,0.0,1.015862,1.015862,50,84,0,0,0.206897],
[5,0,155,217,28,39,-37.586899,13.206207,0.0,1.015862,1.015862,14,19,0,0,0.206897],
[6,0,187,216,32,40,-8.126896,23.364828,0.0,1.015862,1.015862,16,20,0,0,0.206897]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.331036,40.662071,0.0,1.016552,1.016552,50,84,0,0,0.172414],
[5,0,155,217,28,39,-37.612415,13.215174,0.0,1.016552,1.016552,14,19,0,0,0.172414],
[6,0,187,216,32,40,-8.132415,23.380692,0.0,1.016552,1.016552,16,20,0,0,0.172414]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.344828,40.689655,0.0,1.017241,1.017241,50,84,0,0,0.137931],
[5,0,155,217,28,39,-37.637932,13.224138,0.0,1.017241,1.017241,14,19,0,0,0.137931],
[6,0,187,216,32,40,-8.137932,23.396553,0.0,1.017241,1.017241,16,20,0,0,0.137931]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.358620,40.717239,0.0,1.017931,1.017931,50,84,0,0,0.103448],
[5,0,155,217,28,39,-37.663445,13.233103,0.0,1.017931,1.017931,14,19,0,0,0.103448],
[6,0,187,216,32,40,-8.143448,23.412413,0.0,1.017931,1.017931,16,20,0,0,0.103448]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.372414,40.744827,0.0,1.018621,1.018621,50,84,0,0,0.068965],
[5,0,155,217,28,39,-37.688965,13.242067,0.0,1.018621,1.018621,14,19,0,0,0.068965],
[6,0,187,216,32,40,-8.148965,23.428274,0.0,1.018621,1.018621,16,20,0,0,0.068965]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.386208,40.772415,0.0,1.019310,1.019310,50,84,0,0,0.034483],
[5,0,155,217,28,39,-37.714485,13.251036,0.0,1.019310,1.019310,14,19,0,0,0.034483],
[6,0,187,216,32,40,-8.154484,23.444139,0.0,1.019310,1.019310,16,20,0,0,0.034483]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84]
]
]
}
}
]

},{}],45:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-08-01.png"],
"name": "obj01_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 400,
"CanvasHeight": 500,
"MarginWidth": 208,
"MarginHeight": 258,
"parts": ["root","Obj","omote"],
"ssa": [
[
[1,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483]
],
[
[1,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483]
]
]
}
}
]

},{}],46:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-08-01.png"],
"name": "obj02_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 400,
"CanvasHeight": 500,
"MarginWidth": 208,
"MarginHeight": 258,
"parts": ["root","Obj","omote"],
"ssa": [
[
[1,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483]
],
[
[1,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483]
]
]
}
}
]

},{}],47:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-08-01.png"],
"name": "obj03_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 400,
"CanvasHeight": 500,
"MarginWidth": 208,
"MarginHeight": 258,
"parts": ["root","Obj","omote"],
"ssa": [
[
[1,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483]
],
[
[1,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483]
]
]
}
}
]

},{}],48:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-08-01.png"],
"name": "obj04_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 400,
"CanvasHeight": 500,
"MarginWidth": 208,
"MarginHeight": 258,
"parts": ["root","Obj","omote","omote_1","ura","ura_1","02","01","03","back"],
"ssa": [
[
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483]
],
[
[8,0,511,499,82,13,-27.521379,-110.085518,0.0,1.019310,1.019310,41,6,0,0,0.034483],
[6,0,520,220,58,80,-14.270346,-157.993103,0.0,1.019310,1.019310,46,74,0,0,0.034483],
[5,0,520,302,82,93,-21.405518,-103.969658,0.0,1.019310,1.019310,13,76,0,0,0.034483],
[7,0,516,406,65,81,-31.598621,-101.931038,0.0,1.019310,1.019310,58,73,0,0,0.034483],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.965517],
[4,0,255,29,254,483,12.231724,252.788971,0.0,1.019310,1.019310,127,483,0,0,0.034483]
],
[
[8,0,511,499,82,13,-27.502760,-110.011040,0.0,1.018621,1.018621,41,6,0,0,0.068966],
[6,0,520,220,58,80,-14.260690,-157.886215,0.0,1.018621,1.018621,46,74,0,0,0.068966],
[5,0,520,302,82,93,-21.391035,-103.899315,0.0,1.018621,1.018621,13,76,0,0,0.068966],
[7,0,516,406,65,81,-31.577242,-101.862076,0.0,1.018621,1.018621,58,73,0,0,0.068966],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.931035],
[4,0,255,29,254,483,12.223449,252.617935,0.0,1.018621,1.018621,127,483,0,0,0.068966]
],
[
[8,0,511,499,82,13,-27.484137,-109.936546,0.0,1.017931,1.017931,41,6,0,0,0.103448],
[6,0,520,220,58,80,-14.251034,-157.779297,0.0,1.017931,1.017931,46,74,0,0,0.103448],
[5,0,520,302,82,93,-21.376551,-103.828964,0.0,1.017931,1.017931,13,76,0,0,0.103448],
[7,0,516,406,65,81,-31.555861,-101.793098,0.0,1.017931,1.017931,58,73,0,0,0.103448],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.896552],
[4,0,255,29,254,483,12.215172,252.446884,0.0,1.017931,1.017931,127,483,0,0,0.103448]
],
[
[8,0,511,499,82,13,-27.465517,-109.862068,0.0,1.017241,1.017241,41,6,0,0,0.137931],
[6,0,520,220,58,80,-14.241379,-157.672409,0.0,1.017241,1.017241,46,74,0,0,0.137931],
[5,0,520,302,82,93,-21.362068,-103.758621,0.0,1.017241,1.017241,13,76,0,0,0.137931],
[7,0,516,406,65,81,-31.534483,-101.724136,0.0,1.017241,1.017241,58,73,0,0,0.137931],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.862069],
[4,0,255,29,254,483,12.206896,252.275864,0.0,1.017241,1.017241,127,483,0,0,0.137931]
],
[
[8,0,511,499,82,13,-27.446898,-109.787590,0.0,1.016552,1.016552,41,6,0,0,0.172414],
[6,0,520,220,58,80,-14.231724,-157.565521,0.0,1.016552,1.016552,46,74,0,0,0.172414],
[5,0,520,302,82,93,-21.347586,-103.688278,0.0,1.016552,1.016552,13,76,0,0,0.172414],
[7,0,516,406,65,81,-31.513103,-101.655174,0.0,1.016552,1.016552,58,73,0,0,0.172414],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.827586],
[4,0,255,29,254,483,12.198621,252.104828,0.0,1.016552,1.016552,127,483,0,0,0.172414]
],
[
[8,0,511,499,82,13,-27.428276,-109.713104,0.0,1.015862,1.015862,41,6,0,0,0.206897],
[6,0,520,220,58,80,-14.222071,-157.458618,0.0,1.015862,1.015862,46,74,0,0,0.206897],
[5,0,520,302,82,93,-21.333105,-103.617935,0.0,1.015862,1.015862,13,76,0,0,0.206897],
[7,0,516,406,65,81,-31.491726,-101.586212,0.0,1.015862,1.015862,58,73,0,0,0.206897],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.793103],
[4,0,255,29,254,483,12.190346,251.933807,0.0,1.015862,1.015862,127,483,0,0,0.206897]
],
[
[8,0,511,499,82,13,-27.409655,-109.638618,0.0,1.015172,1.015172,41,6,0,0,0.241379],
[6,0,520,220,58,80,-14.212412,-157.351715,0.0,1.015172,1.015172,46,74,0,0,0.241379],
[5,0,520,302,82,93,-21.318619,-103.547585,0.0,1.015172,1.015172,13,76,0,0,0.241379],
[7,0,516,406,65,81,-31.470343,-101.517235,0.0,1.015172,1.015172,58,73,0,0,0.241379],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.758621],
[4,0,255,29,254,483,12.182068,251.762741,0.0,1.015172,1.015172,127,483,0,0,0.241379]
],
[
[8,0,511,499,82,13,-27.391033,-109.564133,0.0,1.014483,1.014483,41,6,0,0,0.275862],
[6,0,520,220,58,80,-14.202759,-157.244827,0.0,1.014483,1.014483,46,74,0,0,0.275862],
[5,0,520,302,82,93,-21.304138,-103.477242,0.0,1.014483,1.014483,13,76,0,0,0.275862],
[7,0,516,406,65,81,-31.448965,-101.448273,0.0,1.014483,1.014483,58,73,0,0,0.275862],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.724138],
[4,0,255,29,254,483,12.173793,251.591721,0.0,1.014483,1.014483,127,483,0,0,0.275862]
],
[
[8,0,511,499,82,13,-27.372414,-109.489655,0.0,1.013793,1.013793,41,6,0,0,0.310345],
[6,0,520,220,58,80,-14.193104,-157.137939,0.0,1.013793,1.013793,46,74,0,0,0.310345],
[5,0,520,302,82,93,-21.289656,-103.406898,0.0,1.013793,1.013793,13,76,0,0,0.310345],
[7,0,516,406,65,81,-31.427586,-101.379311,0.0,1.013793,1.013793,58,73,0,0,0.310345],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.689655],
[4,0,255,29,254,483,12.165518,251.420685,0.0,1.013793,1.013793,127,483,0,0,0.310345]
],
[
[8,0,511,499,82,13,-27.353794,-109.415176,0.0,1.013103,1.013103,41,6,0,0,0.344828],
[6,0,520,220,58,80,-14.183449,-157.031036,0.0,1.013103,1.013103,46,74,0,0,0.344828],
[5,0,520,302,82,93,-21.275173,-103.336555,0.0,1.013103,1.013103,13,76,0,0,0.344828],
[7,0,516,406,65,81,-31.406208,-101.310349,0.0,1.013103,1.013103,58,73,0,0,0.344828],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.655172],
[4,0,255,29,254,483,12.157242,251.249664,0.0,1.013103,1.013103,127,483,0,0,0.344828]
],
[
[8,0,511,499,82,13,-27.335171,-109.340683,0.0,1.012414,1.012414,41,6,0,0,0.379310],
[6,0,520,220,58,80,-14.173793,-156.924133,0.0,1.012414,1.012414,46,74,0,0,0.379310],
[5,0,520,302,82,93,-21.260689,-103.266205,0.0,1.012414,1.012414,13,76,0,0,0.379310],
[7,0,516,406,65,81,-31.384827,-101.241371,0.0,1.012414,1.012414,58,73,0,0,0.379310],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.620690],
[4,0,255,29,254,483,12.148965,251.078613,0.0,1.012414,1.012414,127,483,0,0,0.379310]
],
[
[8,0,511,499,82,13,-27.316551,-109.266205,0.0,1.011724,1.011724,41,6,0,0,0.413793],
[6,0,520,220,58,80,-14.164137,-156.817245,0.0,1.011724,1.011724,46,74,0,0,0.413793],
[5,0,520,302,82,93,-21.246206,-103.195862,0.0,1.011724,1.011724,13,76,0,0,0.413793],
[7,0,516,406,65,81,-31.363447,-101.172409,0.0,1.011724,1.011724,58,73,0,0,0.413793],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.586207],
[4,0,255,29,254,483,12.140690,250.907578,0.0,1.011724,1.011724,127,483,0,0,0.413793]
],
[
[8,0,511,499,82,13,-27.297932,-109.191727,0.0,1.011034,1.011034,41,6,0,0,0.448276],
[6,0,520,220,58,80,-14.154482,-156.710342,0.0,1.011034,1.011034,46,74,0,0,0.448276],
[5,0,520,302,82,93,-21.231724,-103.125519,0.0,1.011034,1.011034,13,76,0,0,0.448276],
[7,0,516,406,65,81,-31.342070,-101.103447,0.0,1.011034,1.011034,58,73,0,0,0.448276],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.551724],
[4,0,255,29,254,483,12.132414,250.736557,0.0,1.011034,1.011034,127,483,0,0,0.448276]
],
[
[8,0,511,499,82,13,-27.279312,-109.117249,0.0,1.010345,1.010345,41,6,0,0,0.482759],
[6,0,520,220,58,80,-14.144827,-156.603455,0.0,1.010345,1.010345,46,74,0,0,0.482759],
[5,0,520,302,82,93,-21.217241,-103.055176,0.0,1.010345,1.010345,13,76,0,0,0.482759],
[7,0,516,406,65,81,-31.320690,-101.034485,0.0,1.010345,1.010345,58,73,0,0,0.482759],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.517241],
[4,0,255,29,254,483,12.124138,250.565521,0.0,1.010345,1.010345,127,483,0,0,0.482759]
],
[
[8,0,511,499,82,13,-27.260689,-109.042755,0.0,1.009655,1.009655,41,6,0,0,0.517241],
[6,0,520,220,58,80,-14.135171,-156.496552,0.0,1.009655,1.009655,46,74,0,0,0.517241],
[5,0,520,302,82,93,-21.202757,-102.984825,0.0,1.009655,1.009655,13,76,0,0,0.517241],
[7,0,516,406,65,81,-31.299309,-100.965515,0.0,1.009655,1.009655,58,73,0,0,0.517241],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.482759],
[4,0,255,29,254,483,12.115862,250.394470,0.0,1.009655,1.009655,127,483,0,0,0.517241]
],
[
[8,0,511,499,82,13,-27.242069,-108.968277,0.0,1.008965,1.008965,41,6,0,0,0.551724],
[6,0,520,220,58,80,-14.125516,-156.389648,0.0,1.008965,1.008965,46,74,0,0,0.551724],
[5,0,520,302,82,93,-21.188274,-102.914482,0.0,1.008965,1.008965,13,76,0,0,0.551724],
[7,0,516,406,65,81,-31.277931,-100.896545,0.0,1.008965,1.008965,58,73,0,0,0.551724],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.448276],
[4,0,255,29,254,483,12.107586,250.223450,0.0,1.008965,1.008965,127,483,0,0,0.551724]
],
[
[8,0,511,499,82,13,-27.223448,-108.893791,0.0,1.008276,1.008276,41,6,0,0,0.586207],
[6,0,520,220,58,80,-14.115863,-156.282761,0.0,1.008276,1.008276,46,74,0,0,0.586207],
[5,0,520,302,82,93,-21.173794,-102.844139,0.0,1.008276,1.008276,13,76,0,0,0.586207],
[7,0,516,406,65,81,-31.256552,-100.827583,0.0,1.008276,1.008276,58,73,0,0,0.586207],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.413793],
[4,0,255,29,254,483,12.099310,250.052414,0.0,1.008276,1.008276,127,483,0,0,0.586207]
],
[
[8,0,511,499,82,13,-27.204828,-108.819313,0.0,1.007586,1.007586,41,6,0,0,0.620690],
[6,0,520,220,58,80,-14.106208,-156.175873,0.0,1.007586,1.007586,46,74,0,0,0.620690],
[5,0,520,302,82,93,-21.159311,-102.773796,0.0,1.007586,1.007586,13,76,0,0,0.620690],
[7,0,516,406,65,81,-31.235174,-100.758621,0.0,1.007586,1.007586,58,73,0,0,0.620690],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.379310],
[4,0,255,29,254,483,12.091035,249.881393,0.0,1.007586,1.007586,127,483,0,0,0.620690]
],
[
[8,0,511,499,82,13,-27.186205,-108.744820,0.0,1.006896,1.006896,41,6,0,0,0.655172],
[6,0,520,220,58,80,-14.096552,-156.068954,0.0,1.006896,1.006896,46,74,0,0,0.655172],
[5,0,520,302,82,93,-21.144827,-102.703445,0.0,1.006896,1.006896,13,76,0,0,0.655172],
[7,0,516,406,65,81,-31.213791,-100.689651,0.0,1.006896,1.006896,58,73,0,0,0.655172],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.344828],
[4,0,255,29,254,483,12.082758,249.710327,0.0,1.006896,1.006896,127,483,0,0,0.655172]
],
[
[8,0,511,499,82,13,-27.167585,-108.670341,0.0,1.006207,1.006207,41,6,0,0,0.689655],
[6,0,520,220,58,80,-14.086897,-155.962067,0.0,1.006207,1.006207,46,74,0,0,0.689655],
[5,0,520,302,82,93,-21.130344,-102.633102,0.0,1.006207,1.006207,13,76,0,0,0.689655],
[7,0,516,406,65,81,-31.192413,-100.620689,0.0,1.006207,1.006207,58,73,0,0,0.689655],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.310345],
[4,0,255,29,254,483,12.074482,249.539307,0.0,1.006207,1.006207,127,483,0,0,0.689655]
],
[
[8,0,511,499,82,13,-27.148966,-108.595863,0.0,1.005517,1.005517,41,6,0,0,0.724138],
[6,0,520,220,58,80,-14.077241,-155.855179,0.0,1.005517,1.005517,46,74,0,0,0.724138],
[5,0,520,302,82,93,-21.115862,-102.562759,0.0,1.005517,1.005517,13,76,0,0,0.724138],
[7,0,516,406,65,81,-31.171034,-100.551727,0.0,1.005517,1.005517,58,73,0,0,0.724138],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.275862],
[4,0,255,29,254,483,12.066207,249.368271,0.0,1.005517,1.005517,127,483,0,0,0.724138]
],
[
[8,0,511,499,82,13,-27.130346,-108.521385,0.0,1.004828,1.004828,41,6,0,0,0.758621],
[6,0,520,220,58,80,-14.067586,-155.748276,0.0,1.004828,1.004828,46,74,0,0,0.758621],
[5,0,520,302,82,93,-21.101379,-102.492416,0.0,1.004828,1.004828,13,76,0,0,0.758621],
[7,0,516,406,65,81,-31.149656,-100.482765,0.0,1.004828,1.004828,58,73,0,0,0.758621],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.241379],
[4,0,255,29,254,483,12.057932,249.197250,0.0,1.004828,1.004828,127,483,0,0,0.758621]
],
[
[8,0,511,499,82,13,-27.111723,-108.446892,0.0,1.004138,1.004138,41,6,0,0,0.793103],
[6,0,520,220,58,80,-14.057930,-155.641373,0.0,1.004138,1.004138,46,74,0,0,0.793103],
[5,0,520,302,82,93,-21.086895,-102.422066,0.0,1.004138,1.004138,13,76,0,0,0.793103],
[7,0,516,406,65,81,-31.128275,-100.413788,0.0,1.004138,1.004138,58,73,0,0,0.793103],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.206897],
[4,0,255,29,254,483,12.049654,249.026199,0.0,1.004138,1.004138,127,483,0,0,0.793103]
],
[
[8,0,511,499,82,13,-27.093103,-108.372414,0.0,1.003448,1.003448,41,6,0,0,0.827586],
[6,0,520,220,58,80,-14.048275,-155.534485,0.0,1.003448,1.003448,46,74,0,0,0.827586],
[5,0,520,302,82,93,-21.072412,-102.351723,0.0,1.003448,1.003448,13,76,0,0,0.827586],
[7,0,516,406,65,81,-31.106895,-100.344826,0.0,1.003448,1.003448,58,73,0,0,0.827586],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.172414],
[4,0,255,29,254,483,12.041379,248.855164,0.0,1.003448,1.003448,127,483,0,0,0.827586]
],
[
[8,0,511,499,82,13,-27.074482,-108.297928,0.0,1.002759,1.002759,41,6,0,0,0.862069],
[6,0,520,220,58,80,-14.038622,-155.427582,0.0,1.002759,1.002759,46,74,0,0,0.862069],
[5,0,520,302,82,93,-21.057932,-102.281380,0.0,1.002759,1.002759,13,76,0,0,0.862069],
[7,0,516,406,65,81,-31.085518,-100.275864,0.0,1.002759,1.002759,58,73,0,0,0.862069],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.137931],
[4,0,255,29,254,483,12.033104,248.684143,0.0,1.002759,1.002759,127,483,0,0,0.862069]
],
[
[8,0,511,499,82,13,-27.055862,-108.223450,0.0,1.002069,1.002069,41,6,0,0,0.896552],
[6,0,520,220,58,80,-14.028967,-155.320694,0.0,1.002069,1.002069,46,74,0,0,0.896552],
[5,0,520,302,82,93,-21.043449,-102.211037,0.0,1.002069,1.002069,13,76,0,0,0.896552],
[7,0,516,406,65,81,-31.064138,-100.206902,0.0,1.002069,1.002069,58,73,0,0,0.896552],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.103448],
[4,0,255,29,254,483,12.024828,248.513107,0.0,1.002069,1.002069,127,483,0,0,0.896552]
],
[
[8,0,511,499,82,13,-27.037239,-108.148956,0.0,1.001379,1.001379,41,6,0,0,0.931035],
[6,0,520,220,58,80,-14.019310,-155.213791,0.0,1.001379,1.001379,46,74,0,0,0.931035],
[5,0,520,302,82,93,-21.028965,-102.140686,0.0,1.001379,1.001379,13,76,0,0,0.931035],
[7,0,516,406,65,81,-31.042757,-100.137924,0.0,1.001379,1.001379,58,73,0,0,0.931035],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.068965],
[4,0,255,29,254,483,12.016551,248.342056,0.0,1.001379,1.001379,127,483,0,0,0.931035]
],
[
[8,0,511,499,82,13,-27.018620,-108.074478,0.0,1.000690,1.000690,41,6,0,0,0.965517],
[6,0,520,220,58,80,-14.009655,-155.106888,0.0,1.000690,1.000690,46,74,0,0,0.965517],
[5,0,520,302,82,93,-21.014482,-102.070343,0.0,1.000690,1.000690,13,76,0,0,0.965517],
[7,0,516,406,65,81,-31.021378,-100.068962,0.0,1.000690,1.000690,58,73,0,0,0.965517],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.034483],
[4,0,255,29,254,483,12.008276,248.171021,0.0,1.000690,1.000690,127,483,0,0,0.965517]
],
[
[8,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[6,0,520,220,58,80,-14.0,-155.0,0.0,1.0,1.0,46,74],
[5,0,520,302,82,93,-21.0,-102.0,0.0,1.0,1.0,13,76],
[7,0,516,406,65,81,-31.0,-100.0,0.0,1.0,1.0,58,73],
[4,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
]
]
}
}
]

},{}],49:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-08-01.png"],
"name": "obj05_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 400,
"CanvasHeight": 500,
"MarginWidth": 208,
"MarginHeight": 258,
"parts": ["root","Obj","ura","ura_1","02","01","03","back"],
"ssa": [
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-14.0,-155.0,0.0,1.0,1.0,46,74],
[3,0,520,302,82,93,-21.0,-102.0,0.0,1.0,1.0,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.0,1.0,1.0,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-13.431087,-154.017334,-0.013963,1.0,0.997500,46,74],
[3,0,520,302,82,93,-20.799999,-101.199997,-0.006981,1.0,0.997500,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.005236,1.010000,0.995000,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-12.864388,-153.032135,-0.027925,1.0,0.995000,46,74],
[3,0,520,302,82,93,-20.600000,-100.400002,-0.013963,1.0,0.995000,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.010472,1.020000,0.990000,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-12.299911,-152.044373,-0.041888,1.0,0.992500,46,74],
[3,0,520,302,82,93,-20.400000,-99.599998,-0.020944,1.0,0.992500,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.015708,1.030000,0.985000,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-11.737681,-151.054092,-0.055851,1.0,0.990000,46,74],
[3,0,520,302,82,93,-20.200001,-98.800003,-0.027925,1.0,0.990000,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.020944,1.040000,0.980000,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-11.177711,-150.061325,-0.069813,1.0,0.987500,46,74],
[3,0,520,302,82,93,-20.0,-98.0,-0.034907,1.0,0.987500,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.026180,1.050000,0.975000,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-11.075284,-149.850266,-0.077958,1.006667,0.985000,46,74],
[3,0,520,302,82,93,-20.0,-97.933334,-0.036070,1.006667,0.985000,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.031416,1.060000,0.970000,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-10.973180,-149.639038,-0.086103,1.013333,0.982500,46,74],
[3,0,520,302,82,93,-20.0,-97.866669,-0.037234,1.013333,0.982500,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.036652,1.070000,0.965000,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-10.871400,-149.427628,-0.094248,1.020000,0.980000,46,74],
[3,0,520,302,82,93,-20.0,-97.800003,-0.038397,1.020000,0.980000,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.041888,1.080000,0.960000,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-10.769945,-149.216064,-0.102393,1.026667,0.977500,46,74],
[3,0,520,302,82,93,-20.0,-97.733330,-0.039561,1.026667,0.977500,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.047124,1.090000,0.955000,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-10.668815,-149.004333,-0.110538,1.033333,0.975000,46,74],
[3,0,520,302,82,93,-20.0,-97.666664,-0.040724,1.033333,0.975000,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.052360,1.100000,0.950000,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-10.568010,-148.792435,-0.113446,1.040000,0.972500,46,74],
[3,0,520,302,82,93,-20.0,-97.599998,-0.041888,1.040000,0.972500,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.049604,1.094737,0.952632,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-10.467530,-148.580368,-0.116355,1.046667,0.970000,46,74],
[3,0,520,302,82,93,-20.0,-97.533333,-0.043051,1.046667,0.970000,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.046848,1.089474,0.955263,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-10.367375,-148.368149,-0.119264,1.053333,0.967500,46,74],
[3,0,520,302,82,93,-20.0,-97.466667,-0.044215,1.053333,0.967500,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.044093,1.084211,0.957895,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-10.267548,-148.155762,-0.122173,1.060000,0.965000,46,74],
[3,0,520,302,82,93,-20.0,-97.400002,-0.045379,1.060000,0.965000,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.041337,1.078947,0.960526,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-10.168046,-147.943207,-0.125082,1.066667,0.962500,46,74],
[3,0,520,302,82,93,-20.0,-97.333336,-0.046542,1.066667,0.962500,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.038581,1.073684,0.963158,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-10.068871,-147.730484,-0.127991,1.073333,0.960000,46,74],
[3,0,520,302,82,93,-20.0,-97.266670,-0.047706,1.073333,0.960000,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.035825,1.068421,0.965789,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-9.970021,-147.517609,-0.130900,1.080000,0.957500,46,74],
[3,0,520,302,82,93,-20.0,-97.199997,-0.048869,1.080000,0.957500,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.033069,1.063158,0.968421,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-9.871500,-147.304565,-0.133809,1.086667,0.955000,46,74],
[3,0,520,302,82,93,-20.0,-97.133331,-0.050033,1.086667,0.955000,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.030314,1.057895,0.971053,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-9.773305,-147.091370,-0.136717,1.093333,0.952500,46,74],
[3,0,520,302,82,93,-20.0,-97.066666,-0.051196,1.093333,0.952500,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.027558,1.052632,0.973684,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-9.675437,-146.878006,-0.139626,1.100000,0.950000,46,74],
[3,0,520,302,82,93,-20.0,-97.0,-0.052360,1.100000,0.950000,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.024802,1.047368,0.976316,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-10.140894,-147.790527,-0.124112,1.088889,0.955556,46,74],
[3,0,520,302,82,93,-20.111111,-97.555557,-0.046542,1.088889,0.955556,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.022046,1.042105,0.978947,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-10.610152,-148.700607,-0.108598,1.077778,0.961111,46,74],
[3,0,520,302,82,93,-20.222221,-98.111115,-0.040724,1.077778,0.961111,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.019290,1.036842,0.981579,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-11.083198,-149.608200,-0.093084,1.066667,0.966667,46,74],
[3,0,520,302,82,93,-20.333334,-98.666664,-0.034907,1.066667,0.966667,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.016535,1.031579,0.984211,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-11.560010,-150.513306,-0.077570,1.055556,0.972222,46,74],
[3,0,520,302,82,93,-20.444445,-99.222221,-0.029089,1.055556,0.972222,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.013779,1.026316,0.986842,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-12.040575,-151.415848,-0.062056,1.044444,0.977778,46,74],
[3,0,520,302,82,93,-20.555555,-99.777779,-0.023271,1.044444,0.977778,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.011023,1.021053,0.989474,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-12.524874,-152.315826,-0.046542,1.033333,0.983333,46,74],
[3,0,520,302,82,93,-20.666666,-100.333336,-0.017453,1.033333,0.983333,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.008267,1.015790,0.992105,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-13.012890,-153.213196,-0.031028,1.022222,0.988889,46,74],
[3,0,520,302,82,93,-20.777779,-100.888885,-0.011636,1.022222,0.988889,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.005512,1.010526,0.994737,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-13.504604,-154.107925,-0.015514,1.011111,0.994444,46,74],
[3,0,520,302,82,93,-20.888889,-101.444443,-0.005818,1.011111,0.994444,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.002756,1.005263,0.997368,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-14.0,-155.0,0.0,1.0,1.0,46,74],
[3,0,520,302,82,93,-21.0,-102.0,0.0,1.0,1.0,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.0,1.0,1.0,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
]
]
}
}
]

},{}],50:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-08-01.png"],
"name": "obj06_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 400,
"CanvasHeight": 500,
"MarginWidth": 208,
"MarginHeight": 258,
"parts": ["root","Obj","omote","omote_1","ura","ura_1","02","01","03","back"],
"ssa": [
[
[8,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[6,0,520,220,58,80,-14.0,-155.0,0.0,1.0,1.0,46,74],
[5,0,520,302,82,93,-21.0,-102.0,0.0,1.0,1.0,13,76],
[7,0,516,406,65,81,-31.0,-100.0,0.0,1.0,1.0,58,73],
[4,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[8,0,511,499,82,13,-27.018620,-108.074478,0.0,1.000690,1.000690,41,6,0,0,0.965517],
[6,0,520,220,58,80,-14.009655,-155.106888,0.0,1.000690,1.000690,46,74,0,0,0.965517],
[5,0,520,302,82,93,-21.014482,-102.070343,0.0,1.000690,1.000690,13,76,0,0,0.965517],
[7,0,516,406,65,81,-31.021378,-100.068962,0.0,1.000690,1.000690,58,73,0,0,0.965517],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.034483],
[4,0,255,29,254,483,12.008276,248.171021,0.0,1.000690,1.000690,127,483,0,0,0.965517]
],
[
[8,0,511,499,82,13,-27.037239,-108.148956,0.0,1.001379,1.001379,41,6,0,0,0.931035],
[6,0,520,220,58,80,-14.019310,-155.213791,0.0,1.001379,1.001379,46,74,0,0,0.931035],
[5,0,520,302,82,93,-21.028965,-102.140686,0.0,1.001379,1.001379,13,76,0,0,0.931035],
[7,0,516,406,65,81,-31.042757,-100.137924,0.0,1.001379,1.001379,58,73,0,0,0.931035],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.068966],
[4,0,255,29,254,483,12.016551,248.342056,0.0,1.001379,1.001379,127,483,0,0,0.931035]
],
[
[8,0,511,499,82,13,-27.055862,-108.223450,0.0,1.002069,1.002069,41,6,0,0,0.896552],
[6,0,520,220,58,80,-14.028967,-155.320694,0.0,1.002069,1.002069,46,74,0,0,0.896552],
[5,0,520,302,82,93,-21.043449,-102.211037,0.0,1.002069,1.002069,13,76,0,0,0.896552],
[7,0,516,406,65,81,-31.064138,-100.206902,0.0,1.002069,1.002069,58,73,0,0,0.896552],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.103448],
[4,0,255,29,254,483,12.024828,248.513107,0.0,1.002069,1.002069,127,483,0,0,0.896552]
],
[
[8,0,511,499,82,13,-27.074482,-108.297928,0.0,1.002759,1.002759,41,6,0,0,0.862069],
[6,0,520,220,58,80,-14.038622,-155.427582,0.0,1.002759,1.002759,46,74,0,0,0.862069],
[5,0,520,302,82,93,-21.057932,-102.281380,0.0,1.002759,1.002759,13,76,0,0,0.862069],
[7,0,516,406,65,81,-31.085518,-100.275864,0.0,1.002759,1.002759,58,73,0,0,0.862069],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.137931],
[4,0,255,29,254,483,12.033104,248.684143,0.0,1.002759,1.002759,127,483,0,0,0.862069]
],
[
[8,0,511,499,82,13,-27.093103,-108.372414,0.0,1.003448,1.003448,41,6,0,0,0.827586],
[6,0,520,220,58,80,-14.048275,-155.534485,0.0,1.003448,1.003448,46,74,0,0,0.827586],
[5,0,520,302,82,93,-21.072412,-102.351723,0.0,1.003448,1.003448,13,76,0,0,0.827586],
[7,0,516,406,65,81,-31.106895,-100.344826,0.0,1.003448,1.003448,58,73,0,0,0.827586],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.172414],
[4,0,255,29,254,483,12.041379,248.855164,0.0,1.003448,1.003448,127,483,0,0,0.827586]
],
[
[8,0,511,499,82,13,-27.111723,-108.446892,0.0,1.004138,1.004138,41,6,0,0,0.793103],
[6,0,520,220,58,80,-14.057930,-155.641373,0.0,1.004138,1.004138,46,74,0,0,0.793103],
[5,0,520,302,82,93,-21.086895,-102.422066,0.0,1.004138,1.004138,13,76,0,0,0.793103],
[7,0,516,406,65,81,-31.128275,-100.413788,0.0,1.004138,1.004138,58,73,0,0,0.793103],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.206897],
[4,0,255,29,254,483,12.049654,249.026199,0.0,1.004138,1.004138,127,483,0,0,0.793103]
],
[
[8,0,511,499,82,13,-27.130346,-108.521385,0.0,1.004828,1.004828,41,6,0,0,0.758621],
[6,0,520,220,58,80,-14.067586,-155.748276,0.0,1.004828,1.004828,46,74,0,0,0.758621],
[5,0,520,302,82,93,-21.101379,-102.492416,0.0,1.004828,1.004828,13,76,0,0,0.758621],
[7,0,516,406,65,81,-31.149656,-100.482765,0.0,1.004828,1.004828,58,73,0,0,0.758621],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.241379],
[4,0,255,29,254,483,12.057932,249.197250,0.0,1.004828,1.004828,127,483,0,0,0.758621]
],
[
[8,0,511,499,82,13,-27.148966,-108.595863,0.0,1.005517,1.005517,41,6,0,0,0.724138],
[6,0,520,220,58,80,-14.077241,-155.855179,0.0,1.005517,1.005517,46,74,0,0,0.724138],
[5,0,520,302,82,93,-21.115862,-102.562759,0.0,1.005517,1.005517,13,76,0,0,0.724138],
[7,0,516,406,65,81,-31.171034,-100.551727,0.0,1.005517,1.005517,58,73,0,0,0.724138],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.275862],
[4,0,255,29,254,483,12.066207,249.368271,0.0,1.005517,1.005517,127,483,0,0,0.724138]
],
[
[8,0,511,499,82,13,-27.167585,-108.670341,0.0,1.006207,1.006207,41,6,0,0,0.689655],
[6,0,520,220,58,80,-14.086897,-155.962067,0.0,1.006207,1.006207,46,74,0,0,0.689655],
[5,0,520,302,82,93,-21.130344,-102.633102,0.0,1.006207,1.006207,13,76,0,0,0.689655],
[7,0,516,406,65,81,-31.192413,-100.620689,0.0,1.006207,1.006207,58,73,0,0,0.689655],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.310345],
[4,0,255,29,254,483,12.074482,249.539307,0.0,1.006207,1.006207,127,483,0,0,0.689655]
],
[
[8,0,511,499,82,13,-27.186205,-108.744820,0.0,1.006896,1.006896,41,6,0,0,0.655172],
[6,0,520,220,58,80,-14.096552,-156.068954,0.0,1.006896,1.006896,46,74,0,0,0.655172],
[5,0,520,302,82,93,-21.144827,-102.703445,0.0,1.006896,1.006896,13,76,0,0,0.655172],
[7,0,516,406,65,81,-31.213791,-100.689651,0.0,1.006896,1.006896,58,73,0,0,0.655172],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.344828],
[4,0,255,29,254,483,12.082758,249.710327,0.0,1.006896,1.006896,127,483,0,0,0.655172]
],
[
[8,0,511,499,82,13,-27.204828,-108.819313,0.0,1.007586,1.007586,41,6,0,0,0.620690],
[6,0,520,220,58,80,-14.106208,-156.175873,0.0,1.007586,1.007586,46,74,0,0,0.620690],
[5,0,520,302,82,93,-21.159311,-102.773796,0.0,1.007586,1.007586,13,76,0,0,0.620690],
[7,0,516,406,65,81,-31.235174,-100.758621,0.0,1.007586,1.007586,58,73,0,0,0.620690],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.379310],
[4,0,255,29,254,483,12.091035,249.881393,0.0,1.007586,1.007586,127,483,0,0,0.620690]
],
[
[8,0,511,499,82,13,-27.223448,-108.893791,0.0,1.008276,1.008276,41,6,0,0,0.586207],
[6,0,520,220,58,80,-14.115863,-156.282761,0.0,1.008276,1.008276,46,74,0,0,0.586207],
[5,0,520,302,82,93,-21.173794,-102.844139,0.0,1.008276,1.008276,13,76,0,0,0.586207],
[7,0,516,406,65,81,-31.256552,-100.827583,0.0,1.008276,1.008276,58,73,0,0,0.586207],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.413793],
[4,0,255,29,254,483,12.099310,250.052414,0.0,1.008276,1.008276,127,483,0,0,0.586207]
],
[
[8,0,511,499,82,13,-27.242069,-108.968277,0.0,1.008965,1.008965,41,6,0,0,0.551724],
[6,0,520,220,58,80,-14.125516,-156.389648,0.0,1.008965,1.008965,46,74,0,0,0.551724],
[5,0,520,302,82,93,-21.188274,-102.914482,0.0,1.008965,1.008965,13,76,0,0,0.551724],
[7,0,516,406,65,81,-31.277931,-100.896545,0.0,1.008965,1.008965,58,73,0,0,0.551724],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.448276],
[4,0,255,29,254,483,12.107586,250.223450,0.0,1.008965,1.008965,127,483,0,0,0.551724]
],
[
[8,0,511,499,82,13,-27.260689,-109.042755,0.0,1.009655,1.009655,41,6,0,0,0.517241],
[6,0,520,220,58,80,-14.135171,-156.496552,0.0,1.009655,1.009655,46,74,0,0,0.517241],
[5,0,520,302,82,93,-21.202757,-102.984825,0.0,1.009655,1.009655,13,76,0,0,0.517241],
[7,0,516,406,65,81,-31.299309,-100.965515,0.0,1.009655,1.009655,58,73,0,0,0.517241],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.482759],
[4,0,255,29,254,483,12.115862,250.394470,0.0,1.009655,1.009655,127,483,0,0,0.517241]
],
[
[8,0,511,499,82,13,-27.279312,-109.117249,0.0,1.010345,1.010345,41,6,0,0,0.482759],
[6,0,520,220,58,80,-14.144827,-156.603455,0.0,1.010345,1.010345,46,74,0,0,0.482759],
[5,0,520,302,82,93,-21.217241,-103.055176,0.0,1.010345,1.010345,13,76,0,0,0.482759],
[7,0,516,406,65,81,-31.320690,-101.034485,0.0,1.010345,1.010345,58,73,0,0,0.482759],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.517241],
[4,0,255,29,254,483,12.124138,250.565521,0.0,1.010345,1.010345,127,483,0,0,0.482759]
],
[
[8,0,511,499,82,13,-27.297932,-109.191727,0.0,1.011034,1.011034,41,6,0,0,0.448276],
[6,0,520,220,58,80,-14.154482,-156.710342,0.0,1.011034,1.011034,46,74,0,0,0.448276],
[5,0,520,302,82,93,-21.231724,-103.125519,0.0,1.011034,1.011034,13,76,0,0,0.448276],
[7,0,516,406,65,81,-31.342070,-101.103447,0.0,1.011034,1.011034,58,73,0,0,0.448276],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.551724],
[4,0,255,29,254,483,12.132414,250.736557,0.0,1.011034,1.011034,127,483,0,0,0.448276]
],
[
[8,0,511,499,82,13,-27.316551,-109.266205,0.0,1.011724,1.011724,41,6,0,0,0.413793],
[6,0,520,220,58,80,-14.164137,-156.817245,0.0,1.011724,1.011724,46,74,0,0,0.413793],
[5,0,520,302,82,93,-21.246206,-103.195862,0.0,1.011724,1.011724,13,76,0,0,0.413793],
[7,0,516,406,65,81,-31.363447,-101.172409,0.0,1.011724,1.011724,58,73,0,0,0.413793],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.586207],
[4,0,255,29,254,483,12.140690,250.907578,0.0,1.011724,1.011724,127,483,0,0,0.413793]
],
[
[8,0,511,499,82,13,-27.335171,-109.340683,0.0,1.012414,1.012414,41,6,0,0,0.379310],
[6,0,520,220,58,80,-14.173793,-156.924133,0.0,1.012414,1.012414,46,74,0,0,0.379310],
[5,0,520,302,82,93,-21.260689,-103.266205,0.0,1.012414,1.012414,13,76,0,0,0.379310],
[7,0,516,406,65,81,-31.384827,-101.241371,0.0,1.012414,1.012414,58,73,0,0,0.379310],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.620690],
[4,0,255,29,254,483,12.148965,251.078613,0.0,1.012414,1.012414,127,483,0,0,0.379310]
],
[
[8,0,511,499,82,13,-27.353794,-109.415176,0.0,1.013103,1.013103,41,6,0,0,0.344828],
[6,0,520,220,58,80,-14.183449,-157.031036,0.0,1.013103,1.013103,46,74,0,0,0.344828],
[5,0,520,302,82,93,-21.275173,-103.336555,0.0,1.013103,1.013103,13,76,0,0,0.344828],
[7,0,516,406,65,81,-31.406208,-101.310349,0.0,1.013103,1.013103,58,73,0,0,0.344828],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.655172],
[4,0,255,29,254,483,12.157242,251.249664,0.0,1.013103,1.013103,127,483,0,0,0.344828]
],
[
[8,0,511,499,82,13,-27.372414,-109.489655,0.0,1.013793,1.013793,41,6,0,0,0.310345],
[6,0,520,220,58,80,-14.193104,-157.137939,0.0,1.013793,1.013793,46,74,0,0,0.310345],
[5,0,520,302,82,93,-21.289656,-103.406898,0.0,1.013793,1.013793,13,76,0,0,0.310345],
[7,0,516,406,65,81,-31.427586,-101.379311,0.0,1.013793,1.013793,58,73,0,0,0.310345],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.689655],
[4,0,255,29,254,483,12.165518,251.420685,0.0,1.013793,1.013793,127,483,0,0,0.310345]
],
[
[8,0,511,499,82,13,-27.391033,-109.564133,0.0,1.014483,1.014483,41,6,0,0,0.275862],
[6,0,520,220,58,80,-14.202759,-157.244827,0.0,1.014483,1.014483,46,74,0,0,0.275862],
[5,0,520,302,82,93,-21.304138,-103.477242,0.0,1.014483,1.014483,13,76,0,0,0.275862],
[7,0,516,406,65,81,-31.448965,-101.448273,0.0,1.014483,1.014483,58,73,0,0,0.275862],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.724138],
[4,0,255,29,254,483,12.173793,251.591721,0.0,1.014483,1.014483,127,483,0,0,0.275862]
],
[
[8,0,511,499,82,13,-27.409655,-109.638618,0.0,1.015172,1.015172,41,6,0,0,0.241379],
[6,0,520,220,58,80,-14.212412,-157.351715,0.0,1.015172,1.015172,46,74,0,0,0.241379],
[5,0,520,302,82,93,-21.318619,-103.547585,0.0,1.015172,1.015172,13,76,0,0,0.241379],
[7,0,516,406,65,81,-31.470343,-101.517235,0.0,1.015172,1.015172,58,73,0,0,0.241379],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.758621],
[4,0,255,29,254,483,12.182068,251.762741,0.0,1.015172,1.015172,127,483,0,0,0.241379]
],
[
[8,0,511,499,82,13,-27.428276,-109.713104,0.0,1.015862,1.015862,41,6,0,0,0.206897],
[6,0,520,220,58,80,-14.222071,-157.458618,0.0,1.015862,1.015862,46,74,0,0,0.206897],
[5,0,520,302,82,93,-21.333105,-103.617935,0.0,1.015862,1.015862,13,76,0,0,0.206897],
[7,0,516,406,65,81,-31.491726,-101.586212,0.0,1.015862,1.015862,58,73,0,0,0.206897],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.793103],
[4,0,255,29,254,483,12.190346,251.933807,0.0,1.015862,1.015862,127,483,0,0,0.206897]
],
[
[8,0,511,499,82,13,-27.446898,-109.787590,0.0,1.016552,1.016552,41,6,0,0,0.172414],
[6,0,520,220,58,80,-14.231724,-157.565521,0.0,1.016552,1.016552,46,74,0,0,0.172414],
[5,0,520,302,82,93,-21.347586,-103.688278,0.0,1.016552,1.016552,13,76,0,0,0.172414],
[7,0,516,406,65,81,-31.513103,-101.655174,0.0,1.016552,1.016552,58,73,0,0,0.172414],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.827586],
[4,0,255,29,254,483,12.198621,252.104828,0.0,1.016552,1.016552,127,483,0,0,0.172414]
],
[
[8,0,511,499,82,13,-27.465517,-109.862068,0.0,1.017241,1.017241,41,6,0,0,0.137931],
[6,0,520,220,58,80,-14.241379,-157.672409,0.0,1.017241,1.017241,46,74,0,0,0.137931],
[5,0,520,302,82,93,-21.362068,-103.758621,0.0,1.017241,1.017241,13,76,0,0,0.137931],
[7,0,516,406,65,81,-31.534483,-101.724136,0.0,1.017241,1.017241,58,73,0,0,0.137931],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.862069],
[4,0,255,29,254,483,12.206896,252.275864,0.0,1.017241,1.017241,127,483,0,0,0.137931]
],
[
[8,0,511,499,82,13,-27.484137,-109.936546,0.0,1.017931,1.017931,41,6,0,0,0.103448],
[6,0,520,220,58,80,-14.251034,-157.779297,0.0,1.017931,1.017931,46,74,0,0,0.103448],
[5,0,520,302,82,93,-21.376551,-103.828964,0.0,1.017931,1.017931,13,76,0,0,0.103448],
[7,0,516,406,65,81,-31.555861,-101.793098,0.0,1.017931,1.017931,58,73,0,0,0.103448],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.896552],
[4,0,255,29,254,483,12.215172,252.446884,0.0,1.017931,1.017931,127,483,0,0,0.103448]
],
[
[8,0,511,499,82,13,-27.502760,-110.011040,0.0,1.018621,1.018621,41,6,0,0,0.068965],
[6,0,520,220,58,80,-14.260690,-157.886215,0.0,1.018621,1.018621,46,74,0,0,0.068965],
[5,0,520,302,82,93,-21.391035,-103.899315,0.0,1.018621,1.018621,13,76,0,0,0.068965],
[7,0,516,406,65,81,-31.577242,-101.862076,0.0,1.018621,1.018621,58,73,0,0,0.068965],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.931035],
[4,0,255,29,254,483,12.223449,252.617935,0.0,1.018621,1.018621,127,483,0,0,0.068965]
],
[
[8,0,511,499,82,13,-27.521379,-110.085518,0.0,1.019310,1.019310,41,6,0,0,0.034483],
[6,0,520,220,58,80,-14.270346,-157.993103,0.0,1.019310,1.019310,46,74,0,0,0.034483],
[5,0,520,302,82,93,-21.405518,-103.969658,0.0,1.019310,1.019310,13,76,0,0,0.034483],
[7,0,516,406,65,81,-31.598621,-101.931038,0.0,1.019310,1.019310,58,73,0,0,0.034483],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.965517],
[4,0,255,29,254,483,12.231724,252.788971,0.0,1.019310,1.019310,127,483,0,0,0.034483]
],
[
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483]
]
]
}
}
]

},{}],51:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-09-01.png"],
"name": "obj01_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 600,
"MarginWidth": 108,
"MarginHeight": 308,
"parts": ["root","Obj","04","02_omote","01"],
"ssa": [
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
]
]
}
}
]

},{}],52:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-09-01.png"],
"name": "obj02_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 600,
"MarginWidth": 108,
"MarginHeight": 308,
"parts": ["root","Obj","04","02_omote","01"],
"ssa": [
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
]
]
}
}
]

},{}],53:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-09-01.png"],
"name": "obj03_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 600,
"MarginWidth": 108,
"MarginHeight": 308,
"parts": ["root","Obj","04","02_omote","01"],
"ssa": [
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
]
]
}
}
]

},{}],54:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-09-01.png"],
"name": "obj04_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 600,
"MarginWidth": 108,
"MarginHeight": 308,
"parts": ["root","Obj","04_1","omote","02_omote","01_1","ura","03","02_ura","01_2"],
"ssa": [
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.965517],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.965517],
[6,0,736,903,104,121,40.772415,184.495178,0.0,1.019310,1.019310,52,60,0,0,0.034483],
[7,0,368,457,182,567,0.0,0.0,0.0,1.019310,1.019310,91,283,0,0,0.034483],
[8,0,0,457,182,567,0.0,0.0,0.0,1.019310,1.019310,91,283,0,0,0.034483]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.931035],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.931035],
[6,0,736,903,104,121,40.744827,184.370346,0.0,1.018621,1.018621,52,60,0,0,0.068966],
[7,0,368,457,182,567,0.0,0.0,0.0,1.018621,1.018621,91,283,0,0,0.068966],
[8,0,0,457,182,567,0.0,0.0,0.0,1.018621,1.018621,91,283,0,0,0.068966]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.896552],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.896552],
[6,0,736,903,104,121,40.717239,184.245514,0.0,1.017931,1.017931,52,60,0,0,0.103448],
[7,0,368,457,182,567,0.0,0.0,0.0,1.017931,1.017931,91,283,0,0,0.103448],
[8,0,0,457,182,567,0.0,0.0,0.0,1.017931,1.017931,91,283,0,0,0.103448]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.862069],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.862069],
[6,0,736,903,104,121,40.689655,184.120682,0.0,1.017241,1.017241,52,60,0,0,0.137931],
[7,0,368,457,182,567,0.0,0.0,0.0,1.017241,1.017241,91,283,0,0,0.137931],
[8,0,0,457,182,567,0.0,0.0,0.0,1.017241,1.017241,91,283,0,0,0.137931]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.827586],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.827586],
[6,0,736,903,104,121,40.662071,183.995865,0.0,1.016552,1.016552,52,60,0,0,0.172414],
[7,0,368,457,182,567,0.0,0.0,0.0,1.016552,1.016552,91,283,0,0,0.172414],
[8,0,0,457,182,567,0.0,0.0,0.0,1.016552,1.016552,91,283,0,0,0.172414]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.793103],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.793103],
[6,0,736,903,104,121,40.634483,183.871048,0.0,1.015862,1.015862,52,60,0,0,0.206897],
[7,0,368,457,182,567,0.0,0.0,0.0,1.015862,1.015862,91,283,0,0,0.206897],
[8,0,0,457,182,567,0.0,0.0,0.0,1.015862,1.015862,91,283,0,0,0.206897]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.758621],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.758621],
[6,0,736,903,104,121,40.606895,183.746201,0.0,1.015172,1.015172,52,60,0,0,0.241379],
[7,0,368,457,182,567,0.0,0.0,0.0,1.015172,1.015172,91,283,0,0,0.241379],
[8,0,0,457,182,567,0.0,0.0,0.0,1.015172,1.015172,91,283,0,0,0.241379]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.724138],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.724138],
[6,0,736,903,104,121,40.579308,183.621368,0.0,1.014483,1.014483,52,60,0,0,0.275862],
[7,0,368,457,182,567,0.0,0.0,0.0,1.014483,1.014483,91,283,0,0,0.275862],
[8,0,0,457,182,567,0.0,0.0,0.0,1.014483,1.014483,91,283,0,0,0.275862]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.689655],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.689655],
[6,0,736,903,104,121,40.551723,183.496552,0.0,1.013793,1.013793,52,60,0,0,0.310345],
[7,0,368,457,182,567,0.0,0.0,0.0,1.013793,1.013793,91,283,0,0,0.310345],
[8,0,0,457,182,567,0.0,0.0,0.0,1.013793,1.013793,91,283,0,0,0.310345]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.655172],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.655172],
[6,0,736,903,104,121,40.524139,183.371735,0.0,1.013103,1.013103,52,60,0,0,0.344828],
[7,0,368,457,182,567,0.0,0.0,0.0,1.013103,1.013103,91,283,0,0,0.344828],
[8,0,0,457,182,567,0.0,0.0,0.0,1.013103,1.013103,91,283,0,0,0.344828]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.620690],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.620690],
[6,0,736,903,104,121,40.496552,183.246887,0.0,1.012414,1.012414,52,60,0,0,0.379310],
[7,0,368,457,182,567,0.0,0.0,0.0,1.012414,1.012414,91,283,0,0,0.379310],
[8,0,0,457,182,567,0.0,0.0,0.0,1.012414,1.012414,91,283,0,0,0.379310]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.586207],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.586207],
[6,0,736,903,104,121,40.468964,183.122070,0.0,1.011724,1.011724,52,60,0,0,0.413793],
[7,0,368,457,182,567,0.0,0.0,0.0,1.011724,1.011724,91,283,0,0,0.413793],
[8,0,0,457,182,567,0.0,0.0,0.0,1.011724,1.011724,91,283,0,0,0.413793]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.551724],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.551724],
[6,0,736,903,104,121,40.441380,182.997238,0.0,1.011034,1.011034,52,60,0,0,0.448276],
[7,0,368,457,182,567,0.0,0.0,0.0,1.011034,1.011034,91,283,0,0,0.448276],
[8,0,0,457,182,567,0.0,0.0,0.0,1.011034,1.011034,91,283,0,0,0.448276]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.517241],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.517241],
[6,0,736,903,104,121,40.413795,182.872421,0.0,1.010345,1.010345,52,60,0,0,0.482759],
[7,0,368,457,182,567,0.0,0.0,0.0,1.010345,1.010345,91,283,0,0,0.482759],
[8,0,0,457,182,567,0.0,0.0,0.0,1.010345,1.010345,91,283,0,0,0.482759]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.482759],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.482759],
[6,0,736,903,104,121,40.386204,182.747574,0.0,1.009655,1.009655,52,60,0,0,0.517241],
[7,0,368,457,182,567,0.0,0.0,0.0,1.009655,1.009655,91,283,0,0,0.517241],
[8,0,0,457,182,567,0.0,0.0,0.0,1.009655,1.009655,91,283,0,0,0.517241]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.448276],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.448276],
[6,0,736,903,104,121,40.358620,182.622757,0.0,1.008965,1.008965,52,60,0,0,0.551724],
[7,0,368,457,182,567,0.0,0.0,0.0,1.008965,1.008965,91,283,0,0,0.551724],
[8,0,0,457,182,567,0.0,0.0,0.0,1.008965,1.008965,91,283,0,0,0.551724]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.413793],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.413793],
[6,0,736,903,104,121,40.331036,182.497925,0.0,1.008276,1.008276,52,60,0,0,0.586207],
[7,0,368,457,182,567,0.0,0.0,0.0,1.008276,1.008276,91,283,0,0,0.586207],
[8,0,0,457,182,567,0.0,0.0,0.0,1.008276,1.008276,91,283,0,0,0.586207]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.379310],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.379310],
[6,0,736,903,104,121,40.303452,182.373108,0.0,1.007586,1.007586,52,60,0,0,0.620690],
[7,0,368,457,182,567,0.0,0.0,0.0,1.007586,1.007586,91,283,0,0,0.620690],
[8,0,0,457,182,567,0.0,0.0,0.0,1.007586,1.007586,91,283,0,0,0.620690]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.344828],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.344828],
[6,0,736,903,104,121,40.275860,182.248260,0.0,1.006896,1.006896,52,60,0,0,0.655172],
[7,0,368,457,182,567,0.0,0.0,0.0,1.006896,1.006896,91,283,0,0,0.655172],
[8,0,0,457,182,567,0.0,0.0,0.0,1.006896,1.006896,91,283,0,0,0.655172]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.310345],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.310345],
[6,0,736,903,104,121,40.248276,182.123444,0.0,1.006207,1.006207,52,60,0,0,0.689655],
[7,0,368,457,182,567,0.0,0.0,0.0,1.006207,1.006207,91,283,0,0,0.689655],
[8,0,0,457,182,567,0.0,0.0,0.0,1.006207,1.006207,91,283,0,0,0.689655]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.275862],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.275862],
[6,0,736,903,104,121,40.220688,181.998627,0.0,1.005517,1.005517,52,60,0,0,0.724138],
[7,0,368,457,182,567,0.0,0.0,0.0,1.005517,1.005517,91,283,0,0,0.724138],
[8,0,0,457,182,567,0.0,0.0,0.0,1.005517,1.005517,91,283,0,0,0.724138]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.241379],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.241379],
[6,0,736,903,104,121,40.193104,181.873795,0.0,1.004828,1.004828,52,60,0,0,0.758621],
[7,0,368,457,182,567,0.0,0.0,0.0,1.004828,1.004828,91,283,0,0,0.758621],
[8,0,0,457,182,567,0.0,0.0,0.0,1.004828,1.004828,91,283,0,0,0.758621]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.206897],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.206897],
[6,0,736,903,104,121,40.165516,181.748962,0.0,1.004138,1.004138,52,60,0,0,0.793103],
[7,0,368,457,182,567,0.0,0.0,0.0,1.004138,1.004138,91,283,0,0,0.793103],
[8,0,0,457,182,567,0.0,0.0,0.0,1.004138,1.004138,91,283,0,0,0.793103]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.172414],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.172414],
[6,0,736,903,104,121,40.137932,181.624130,0.0,1.003448,1.003448,52,60,0,0,0.827586],
[7,0,368,457,182,567,0.0,0.0,0.0,1.003448,1.003448,91,283,0,0,0.827586],
[8,0,0,457,182,567,0.0,0.0,0.0,1.003448,1.003448,91,283,0,0,0.827586]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.137931],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.137931],
[6,0,736,903,104,121,40.110344,181.499313,0.0,1.002759,1.002759,52,60,0,0,0.862069],
[7,0,368,457,182,567,0.0,0.0,0.0,1.002759,1.002759,91,283,0,0,0.862069],
[8,0,0,457,182,567,0.0,0.0,0.0,1.002759,1.002759,91,283,0,0,0.862069]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.103448],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.103448],
[6,0,736,903,104,121,40.082760,181.374481,0.0,1.002069,1.002069,52,60,0,0,0.896552],
[7,0,368,457,182,567,0.0,0.0,0.0,1.002069,1.002069,91,283,0,0,0.896552],
[8,0,0,457,182,567,0.0,0.0,0.0,1.002069,1.002069,91,283,0,0,0.896552]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.068965],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.068965],
[6,0,736,903,104,121,40.055168,181.249649,0.0,1.001379,1.001379,52,60,0,0,0.931035],
[7,0,368,457,182,567,0.0,0.0,0.0,1.001379,1.001379,91,283,0,0,0.931035],
[8,0,0,457,182,567,0.0,0.0,0.0,1.001379,1.001379,91,283,0,0,0.931035]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.034483],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.034483],
[6,0,736,903,104,121,40.027584,181.124817,0.0,1.000690,1.000690,52,60,0,0,0.965517],
[7,0,368,457,182,567,0.0,0.0,0.0,1.000690,1.000690,91,283,0,0,0.965517],
[8,0,0,457,182,567,0.0,0.0,0.0,1.000690,1.000690,91,283,0,0,0.965517]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[6,0,736,903,104,121,40.0,181.0,0.0,1.0,1.0,52,60],
[7,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[8,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
]
]
}
}
]

},{}],55:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-09-01.png"],
"name": "obj05_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 600,
"MarginWidth": 108,
"MarginHeight": 308,
"parts": ["root","Obj","04","03","02_ura","01"],
"ssa": [
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,181.0,0.0,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,181.142853,0.001247,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,181.285721,0.002493,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,181.428574,0.003740,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,181.571426,0.004987,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,181.714279,0.006233,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,181.857147,0.007480,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,182.0,0.008727,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,182.142853,0.009973,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,182.285721,0.011220,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,182.428574,0.012467,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,182.571426,0.013713,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,182.714279,0.014960,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,182.857147,0.016207,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,183.0,0.017453,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,182.866669,0.016290,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,182.733337,0.015126,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,182.600006,0.013963,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,182.466660,0.012799,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,182.333328,0.011636,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,182.199997,0.010472,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,182.066666,0.009308,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,181.933334,0.008145,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,181.800003,0.006981,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,181.666672,0.005818,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,181.533340,0.004654,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,181.399994,0.003491,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,181.266663,0.002327,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,181.133331,0.001164,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,181.0,0.0,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
]
]
}
}
]

},{}],56:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-09-01.png"],
"name": "obj06_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 600,
"MarginWidth": 108,
"MarginHeight": 308,
"parts": ["root","Obj","04_1","omote","02_omote","01_1","ura","03","02_ura","01_2"],
"ssa": [
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[6,0,736,903,104,121,40.0,181.0,0.0,1.0,1.0,52,60],
[7,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[8,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.034483],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.034483],
[6,0,736,903,104,121,40.027584,181.124817,0.0,1.000690,1.000690,52,60,0,0,0.965517],
[7,0,368,457,182,567,0.0,0.0,0.0,1.000690,1.000690,91,283,0,0,0.965517],
[8,0,0,457,182,567,0.0,0.0,0.0,1.000690,1.000690,91,283,0,0,0.965517]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.068966],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.068966],
[6,0,736,903,104,121,40.055168,181.249649,0.0,1.001379,1.001379,52,60,0,0,0.931035],
[7,0,368,457,182,567,0.0,0.0,0.0,1.001379,1.001379,91,283,0,0,0.931035],
[8,0,0,457,182,567,0.0,0.0,0.0,1.001379,1.001379,91,283,0,0,0.931035]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.103448],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.103448],
[6,0,736,903,104,121,40.082760,181.374481,0.0,1.002069,1.002069,52,60,0,0,0.896552],
[7,0,368,457,182,567,0.0,0.0,0.0,1.002069,1.002069,91,283,0,0,0.896552],
[8,0,0,457,182,567,0.0,0.0,0.0,1.002069,1.002069,91,283,0,0,0.896552]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.137931],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.137931],
[6,0,736,903,104,121,40.110344,181.499313,0.0,1.002759,1.002759,52,60,0,0,0.862069],
[7,0,368,457,182,567,0.0,0.0,0.0,1.002759,1.002759,91,283,0,0,0.862069],
[8,0,0,457,182,567,0.0,0.0,0.0,1.002759,1.002759,91,283,0,0,0.862069]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.172414],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.172414],
[6,0,736,903,104,121,40.137932,181.624130,0.0,1.003448,1.003448,52,60,0,0,0.827586],
[7,0,368,457,182,567,0.0,0.0,0.0,1.003448,1.003448,91,283,0,0,0.827586],
[8,0,0,457,182,567,0.0,0.0,0.0,1.003448,1.003448,91,283,0,0,0.827586]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.206897],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.206897],
[6,0,736,903,104,121,40.165516,181.748962,0.0,1.004138,1.004138,52,60,0,0,0.793103],
[7,0,368,457,182,567,0.0,0.0,0.0,1.004138,1.004138,91,283,0,0,0.793103],
[8,0,0,457,182,567,0.0,0.0,0.0,1.004138,1.004138,91,283,0,0,0.793103]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.241379],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.241379],
[6,0,736,903,104,121,40.193104,181.873795,0.0,1.004828,1.004828,52,60,0,0,0.758621],
[7,0,368,457,182,567,0.0,0.0,0.0,1.004828,1.004828,91,283,0,0,0.758621],
[8,0,0,457,182,567,0.0,0.0,0.0,1.004828,1.004828,91,283,0,0,0.758621]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.275862],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.275862],
[6,0,736,903,104,121,40.220688,181.998627,0.0,1.005517,1.005517,52,60,0,0,0.724138],
[7,0,368,457,182,567,0.0,0.0,0.0,1.005517,1.005517,91,283,0,0,0.724138],
[8,0,0,457,182,567,0.0,0.0,0.0,1.005517,1.005517,91,283,0,0,0.724138]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.310345],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.310345],
[6,0,736,903,104,121,40.248276,182.123444,0.0,1.006207,1.006207,52,60,0,0,0.689655],
[7,0,368,457,182,567,0.0,0.0,0.0,1.006207,1.006207,91,283,0,0,0.689655],
[8,0,0,457,182,567,0.0,0.0,0.0,1.006207,1.006207,91,283,0,0,0.689655]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.344828],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.344828],
[6,0,736,903,104,121,40.275860,182.248260,0.0,1.006896,1.006896,52,60,0,0,0.655172],
[7,0,368,457,182,567,0.0,0.0,0.0,1.006896,1.006896,91,283,0,0,0.655172],
[8,0,0,457,182,567,0.0,0.0,0.0,1.006896,1.006896,91,283,0,0,0.655172]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.379310],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.379310],
[6,0,736,903,104,121,40.303452,182.373108,0.0,1.007586,1.007586,52,60,0,0,0.620690],
[7,0,368,457,182,567,0.0,0.0,0.0,1.007586,1.007586,91,283,0,0,0.620690],
[8,0,0,457,182,567,0.0,0.0,0.0,1.007586,1.007586,91,283,0,0,0.620690]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.413793],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.413793],
[6,0,736,903,104,121,40.331036,182.497925,0.0,1.008276,1.008276,52,60,0,0,0.586207],
[7,0,368,457,182,567,0.0,0.0,0.0,1.008276,1.008276,91,283,0,0,0.586207],
[8,0,0,457,182,567,0.0,0.0,0.0,1.008276,1.008276,91,283,0,0,0.586207]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.448276],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.448276],
[6,0,736,903,104,121,40.358620,182.622757,0.0,1.008965,1.008965,52,60,0,0,0.551724],
[7,0,368,457,182,567,0.0,0.0,0.0,1.008965,1.008965,91,283,0,0,0.551724],
[8,0,0,457,182,567,0.0,0.0,0.0,1.008965,1.008965,91,283,0,0,0.551724]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.482759],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.482759],
[6,0,736,903,104,121,40.386204,182.747574,0.0,1.009655,1.009655,52,60,0,0,0.517241],
[7,0,368,457,182,567,0.0,0.0,0.0,1.009655,1.009655,91,283,0,0,0.517241],
[8,0,0,457,182,567,0.0,0.0,0.0,1.009655,1.009655,91,283,0,0,0.517241]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.517241],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.517241],
[6,0,736,903,104,121,40.413795,182.872421,0.0,1.010345,1.010345,52,60,0,0,0.482759],
[7,0,368,457,182,567,0.0,0.0,0.0,1.010345,1.010345,91,283,0,0,0.482759],
[8,0,0,457,182,567,0.0,0.0,0.0,1.010345,1.010345,91,283,0,0,0.482759]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.551724],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.551724],
[6,0,736,903,104,121,40.441380,182.997238,0.0,1.011034,1.011034,52,60,0,0,0.448276],
[7,0,368,457,182,567,0.0,0.0,0.0,1.011034,1.011034,91,283,0,0,0.448276],
[8,0,0,457,182,567,0.0,0.0,0.0,1.011034,1.011034,91,283,0,0,0.448276]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.586207],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.586207],
[6,0,736,903,104,121,40.468964,183.122070,0.0,1.011724,1.011724,52,60,0,0,0.413793],
[7,0,368,457,182,567,0.0,0.0,0.0,1.011724,1.011724,91,283,0,0,0.413793],
[8,0,0,457,182,567,0.0,0.0,0.0,1.011724,1.011724,91,283,0,0,0.413793]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.620690],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.620690],
[6,0,736,903,104,121,40.496552,183.246887,0.0,1.012414,1.012414,52,60,0,0,0.379310],
[7,0,368,457,182,567,0.0,0.0,0.0,1.012414,1.012414,91,283,0,0,0.379310],
[8,0,0,457,182,567,0.0,0.0,0.0,1.012414,1.012414,91,283,0,0,0.379310]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.655172],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.655172],
[6,0,736,903,104,121,40.524139,183.371735,0.0,1.013103,1.013103,52,60,0,0,0.344828],
[7,0,368,457,182,567,0.0,0.0,0.0,1.013103,1.013103,91,283,0,0,0.344828],
[8,0,0,457,182,567,0.0,0.0,0.0,1.013103,1.013103,91,283,0,0,0.344828]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.689655],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.689655],
[6,0,736,903,104,121,40.551723,183.496552,0.0,1.013793,1.013793,52,60,0,0,0.310345],
[7,0,368,457,182,567,0.0,0.0,0.0,1.013793,1.013793,91,283,0,0,0.310345],
[8,0,0,457,182,567,0.0,0.0,0.0,1.013793,1.013793,91,283,0,0,0.310345]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.724138],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.724138],
[6,0,736,903,104,121,40.579308,183.621368,0.0,1.014483,1.014483,52,60,0,0,0.275862],
[7,0,368,457,182,567,0.0,0.0,0.0,1.014483,1.014483,91,283,0,0,0.275862],
[8,0,0,457,182,567,0.0,0.0,0.0,1.014483,1.014483,91,283,0,0,0.275862]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.758621],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.758621],
[6,0,736,903,104,121,40.606895,183.746201,0.0,1.015172,1.015172,52,60,0,0,0.241379],
[7,0,368,457,182,567,0.0,0.0,0.0,1.015172,1.015172,91,283,0,0,0.241379],
[8,0,0,457,182,567,0.0,0.0,0.0,1.015172,1.015172,91,283,0,0,0.241379]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.793103],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.793103],
[6,0,736,903,104,121,40.634483,183.871048,0.0,1.015862,1.015862,52,60,0,0,0.206897],
[7,0,368,457,182,567,0.0,0.0,0.0,1.015862,1.015862,91,283,0,0,0.206897],
[8,0,0,457,182,567,0.0,0.0,0.0,1.015862,1.015862,91,283,0,0,0.206897]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.827586],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.827586],
[6,0,736,903,104,121,40.662071,183.995865,0.0,1.016552,1.016552,52,60,0,0,0.172414],
[7,0,368,457,182,567,0.0,0.0,0.0,1.016552,1.016552,91,283,0,0,0.172414],
[8,0,0,457,182,567,0.0,0.0,0.0,1.016552,1.016552,91,283,0,0,0.172414]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.862069],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.862069],
[6,0,736,903,104,121,40.689655,184.120682,0.0,1.017241,1.017241,52,60,0,0,0.137931],
[7,0,368,457,182,567,0.0,0.0,0.0,1.017241,1.017241,91,283,0,0,0.137931],
[8,0,0,457,182,567,0.0,0.0,0.0,1.017241,1.017241,91,283,0,0,0.137931]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.896552],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.896552],
[6,0,736,903,104,121,40.717239,184.245514,0.0,1.017931,1.017931,52,60,0,0,0.103448],
[7,0,368,457,182,567,0.0,0.0,0.0,1.017931,1.017931,91,283,0,0,0.103448],
[8,0,0,457,182,567,0.0,0.0,0.0,1.017931,1.017931,91,283,0,0,0.103448]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.931035],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.931035],
[6,0,736,903,104,121,40.744827,184.370346,0.0,1.018621,1.018621,52,60,0,0,0.068965],
[7,0,368,457,182,567,0.0,0.0,0.0,1.018621,1.018621,91,283,0,0,0.068965],
[8,0,0,457,182,567,0.0,0.0,0.0,1.018621,1.018621,91,283,0,0,0.068965]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.965517],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.965517],
[6,0,736,903,104,121,40.772415,184.495178,0.0,1.019310,1.019310,52,60,0,0,0.034483],
[7,0,368,457,182,567,0.0,0.0,0.0,1.019310,1.019310,91,283,0,0,0.034483],
[8,0,0,457,182,567,0.0,0.0,0.0,1.019310,1.019310,91,283,0,0,0.034483]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
]
]
}
}
]

},{}],57:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-10-01.png"],
"name": "obj01_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 340,
"CanvasHeight": 740,
"MarginWidth": 178,
"MarginHeight": 378,
"parts": ["root","Obj","01_omote","02_omote","03"],
"ssa": [
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.017453,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.013713,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.009973,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.006233,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.002493,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.001247,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.004987,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.008727,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.012467,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.016207,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.019947,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.023687,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.027427,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.031167,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.034907,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.031416,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.027925,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.024435,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.020944,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.017453,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.013963,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.010472,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.006981,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.003491,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.000000,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.003491,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.006981,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.010472,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.013963,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.017453,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
]
]
}
}
]

},{}],58:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-10-01.png"],
"name": "obj02_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 340,
"CanvasHeight": 740,
"MarginWidth": 178,
"MarginHeight": 378,
"parts": ["root","Obj","01_omote","02_omote","03"],
"ssa": [
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.017453,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.013713,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.009973,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.006233,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.002493,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.001247,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.004987,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.008727,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.012467,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.016207,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.019947,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.023687,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.027427,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.031167,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.034907,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.031416,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.027925,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.024435,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.020944,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.017453,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.013963,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.010472,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.006981,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.003491,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.000000,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.003491,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.006981,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.010472,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.013963,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.017453,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
]
]
}
}
]

},{}],59:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-10-01.png"],
"name": "obj03_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 340,
"CanvasHeight": 740,
"MarginWidth": 178,
"MarginHeight": 378,
"parts": ["root","Obj","01_omote","02_omote","03"],
"ssa": [
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.017453,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.013713,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.009973,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.006233,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.002493,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.001247,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.004987,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.008727,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.012467,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.016207,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.019947,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.023687,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.027427,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.031167,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.034907,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.031416,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.027925,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.024435,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.020944,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.017453,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.013963,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.010472,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.006981,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.003491,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.000000,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.003491,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.006981,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.010472,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.013963,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.017453,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
]
]
}
}
]

},{}],60:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-10-01.png"],
"name": "obj04_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 340,
"CanvasHeight": 740,
"MarginWidth": 178,
"MarginHeight": 378,
"parts": ["root","Obj","omote","01_omote","02_omote","03_1","ura","01_ura","02_omote_1","03"],
"ssa": [
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[3,0,819,610,63,206,0.0,-30.0,0.008727,1.0,1.0,22,3],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.965517],
[3,0,819,610,63,206,0.0,-30.0,0.005610,1.0,1.0,22,3,0,0,0.965517],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.965517],
[6,0,273,372,271,652,0.0,0.0,0.0,1.019310,1.019310,135,326,0,0,0.034483],
[7,0,819,818,63,206,0.0,-20.386208,0.001870,1.022223,1.022223,22,3,0,0,0.034483],
[8,0,546,372,270,652,0.0,0.0,0.0,1.019310,1.019310,135,326,0,0,0.034483]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.931035],
[3,0,819,610,63,206,0.0,-30.0,0.002493,1.0,1.0,22,3,0,0,0.931035],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.931035],
[6,0,273,372,271,652,0.0,0.0,0.0,1.018621,1.018621,135,326,0,0,0.068966],
[7,0,819,818,63,206,0.0,-20.372414,-0.004987,1.024441,1.024441,22,3,0,0,0.068966],
[8,0,546,372,270,652,0.0,0.0,0.0,1.018621,1.018621,135,326,0,0,0.068966]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.896552],
[3,0,819,610,63,206,0.0,-30.0,-0.000623,1.0,1.0,22,3,0,0,0.896552],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.896552],
[6,0,273,372,271,652,0.0,0.0,0.0,1.017931,1.017931,135,326,0,0,0.103448],
[7,0,819,818,63,206,0.0,-20.358620,-0.011843,1.026656,1.026656,22,3,0,0,0.103448],
[8,0,546,372,270,652,0.0,0.0,0.0,1.017931,1.017931,135,326,0,0,0.103448]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.862069],
[3,0,819,610,63,206,0.0,-30.0,-0.003740,1.0,1.0,22,3,0,0,0.862069],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.862069],
[6,0,273,372,271,652,0.0,0.0,0.0,1.017241,1.017241,135,326,0,0,0.137931],
[7,0,819,818,63,206,0.0,-20.344828,-0.018700,1.028867,1.028867,22,3,0,0,0.137931],
[8,0,546,372,270,652,0.0,0.0,0.0,1.017241,1.017241,135,326,0,0,0.137931]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.827586],
[3,0,819,610,63,206,0.0,-30.0,-0.006857,1.0,1.0,22,3,0,0,0.827586],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.827586],
[6,0,273,372,271,652,0.0,0.0,0.0,1.016552,1.016552,135,326,0,0,0.172414],
[7,0,819,818,63,206,0.0,-20.331036,-0.025557,1.031074,1.031074,22,3,0,0,0.172414],
[8,0,546,372,270,652,0.0,0.0,0.0,1.016552,1.016552,135,326,0,0,0.172414]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.793103],
[3,0,819,610,63,206,0.0,-30.0,-0.009973,1.0,1.0,22,3,0,0,0.793103],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.793103],
[6,0,273,372,271,652,0.0,0.0,0.0,1.015862,1.015862,135,326,0,0,0.206897],
[7,0,819,818,63,206,0.0,-20.317242,-0.032413,1.033277,1.033277,22,3,0,0,0.206897],
[8,0,546,372,270,652,0.0,0.0,0.0,1.015862,1.015862,135,326,0,0,0.206897]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.758621],
[3,0,819,610,63,206,0.0,-30.0,-0.013090,1.0,1.0,22,3,0,0,0.758621],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.758621],
[6,0,273,372,271,652,0.0,0.0,0.0,1.015172,1.015172,135,326,0,0,0.241379],
[7,0,819,818,63,206,0.0,-20.303448,-0.039270,1.035476,1.035476,22,3,0,0,0.241379],
[8,0,546,372,270,652,0.0,0.0,0.0,1.015172,1.015172,135,326,0,0,0.241379]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.724138],
[3,0,819,610,63,206,0.0,-30.0,-0.016207,1.0,1.0,22,3,0,0,0.724138],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.724138],
[6,0,273,372,271,652,0.0,0.0,0.0,1.014483,1.014483,135,326,0,0,0.275862],
[7,0,819,818,63,206,0.0,-20.289654,-0.046127,1.031874,1.031874,22,3,0,0,0.275862],
[8,0,546,372,270,652,0.0,0.0,0.0,1.014483,1.014483,135,326,0,0,0.275862]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.689655],
[3,0,819,610,63,206,0.0,-30.0,-0.019323,1.0,1.0,22,3,0,0,0.689655],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.689655],
[6,0,273,372,271,652,0.0,0.0,0.0,1.013793,1.013793,135,326,0,0,0.310345],
[7,0,819,818,63,206,0.0,-20.275862,-0.052983,1.028276,1.028276,22,3,0,0,0.310345],
[8,0,546,372,270,652,0.0,0.0,0.0,1.013793,1.013793,135,326,0,0,0.310345]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.655172],
[3,0,819,610,63,206,0.0,-30.0,-0.022440,1.0,1.0,22,3,0,0,0.655172],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.655172],
[6,0,273,372,271,652,0.0,0.0,0.0,1.013103,1.013103,135,326,0,0,0.344828],
[7,0,819,818,63,206,0.0,-20.262070,-0.059840,1.024682,1.024682,22,3,0,0,0.344828],
[8,0,546,372,270,652,0.0,0.0,0.0,1.013103,1.013103,135,326,0,0,0.344828]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.620690],
[3,0,819,610,63,206,0.0,-30.0,-0.025557,1.0,1.0,22,3,0,0,0.620690],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.620690],
[6,0,273,372,271,652,0.0,0.0,0.0,1.012414,1.012414,135,326,0,0,0.379310],
[7,0,819,818,63,206,0.0,-20.248276,-0.066697,1.021092,1.021092,22,3,0,0,0.379310],
[8,0,546,372,270,652,0.0,0.0,0.0,1.012414,1.012414,135,326,0,0,0.379310]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.586207],
[3,0,819,610,63,206,0.0,-30.0,-0.028673,1.0,1.0,22,3,0,0,0.586207],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.586207],
[6,0,273,372,271,652,0.0,0.0,0.0,1.011724,1.011724,135,326,0,0,0.413793],
[7,0,819,818,63,206,0.0,-20.234482,-0.073553,1.017505,1.017505,22,3,0,0,0.413793],
[8,0,546,372,270,652,0.0,0.0,0.0,1.011724,1.011724,135,326,0,0,0.413793]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.551724],
[3,0,819,610,63,206,0.0,-30.0,-0.031790,1.0,1.0,22,3,0,0,0.551724],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.551724],
[6,0,273,372,271,652,0.0,0.0,0.0,1.011034,1.011034,135,326,0,0,0.448276],
[7,0,819,818,63,206,0.0,-20.220690,-0.080410,1.013923,1.013923,22,3,0,0,0.448276],
[8,0,546,372,270,652,0.0,0.0,0.0,1.011034,1.011034,135,326,0,0,0.448276]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.517241],
[3,0,819,610,63,206,0.0,-30.0,-0.034907,1.0,1.0,22,3,0,0,0.517241],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.517241],
[6,0,273,372,271,652,0.0,0.0,0.0,1.010345,1.010345,135,326,0,0,0.482759],
[7,0,819,818,63,206,0.0,-20.206898,-0.087266,1.010345,1.010345,22,3,0,0,0.482759],
[8,0,546,372,270,652,0.0,0.0,0.0,1.010345,1.010345,135,326,0,0,0.482759]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.482759],
[3,0,819,610,63,206,0.0,-30.0,-0.031998,1.0,1.0,22,3,0,0,0.482759],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.482759],
[6,0,273,372,271,652,0.0,0.0,0.0,1.009655,1.009655,135,326,0,0,0.517241],
[7,0,819,818,63,206,0.0,-20.193102,-0.080867,1.012179,1.012179,22,3,0,0,0.517241],
[8,0,546,372,270,652,0.0,0.0,0.0,1.009655,1.009655,135,326,0,0,0.517241]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.448276],
[3,0,819,610,63,206,0.0,-30.0,-0.029089,1.0,1.0,22,3,0,0,0.448276],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.448276],
[6,0,273,372,271,652,0.0,0.0,0.0,1.008965,1.008965,135,326,0,0,0.551724],
[7,0,819,818,63,206,0.0,-20.179310,-0.074467,1.014010,1.014010,22,3,0,0,0.551724],
[8,0,546,372,270,652,0.0,0.0,0.0,1.008965,1.008965,135,326,0,0,0.551724]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.413793],
[3,0,819,610,63,206,0.0,-30.0,-0.026180,1.0,1.0,22,3,0,0,0.413793],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.413793],
[6,0,273,372,271,652,0.0,0.0,0.0,1.008276,1.008276,135,326,0,0,0.586207],
[7,0,819,818,63,206,0.0,-20.165518,-0.068068,1.015838,1.015838,22,3,0,0,0.586207],
[8,0,546,372,270,652,0.0,0.0,0.0,1.008276,1.008276,135,326,0,0,0.586207]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.379310],
[3,0,819,610,63,206,0.0,-30.0,-0.023271,1.0,1.0,22,3,0,0,0.379310],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.379310],
[6,0,273,372,271,652,0.0,0.0,0.0,1.007586,1.007586,135,326,0,0,0.620690],
[7,0,819,818,63,206,0.0,-20.151726,-0.061668,1.017662,1.017662,22,3,0,0,0.620690],
[8,0,546,372,270,652,0.0,0.0,0.0,1.007586,1.007586,135,326,0,0,0.620690]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.344828],
[3,0,819,610,63,206,0.0,-30.0,-0.020362,1.0,1.0,22,3,0,0,0.344828],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.344828],
[6,0,273,372,271,652,0.0,0.0,0.0,1.006896,1.006896,135,326,0,0,0.655172],
[7,0,819,818,63,206,0.0,-20.137930,-0.055269,1.019483,1.019483,22,3,0,0,0.655172],
[8,0,546,372,270,652,0.0,0.0,0.0,1.006896,1.006896,135,326,0,0,0.655172]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.310345],
[3,0,819,610,63,206,0.0,-30.0,-0.017453,1.0,1.0,22,3,0,0,0.310345],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.310345],
[6,0,273,372,271,652,0.0,0.0,0.0,1.006207,1.006207,135,326,0,0,0.689655],
[7,0,819,818,63,206,0.0,-20.124138,-0.048869,1.021300,1.021300,22,3,0,0,0.689655],
[8,0,546,372,270,652,0.0,0.0,0.0,1.006207,1.006207,135,326,0,0,0.689655]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.275862],
[3,0,819,610,63,206,0.0,-30.0,-0.014544,1.0,1.0,22,3,0,0,0.275862],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.275862],
[6,0,273,372,271,652,0.0,0.0,0.0,1.005517,1.005517,135,326,0,0,0.724138],
[7,0,819,818,63,206,0.0,-20.110344,-0.042470,1.023114,1.023114,22,3,0,0,0.724138],
[8,0,546,372,270,652,0.0,0.0,0.0,1.005517,1.005517,135,326,0,0,0.724138]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.241379],
[3,0,819,610,63,206,0.0,-30.0,-0.011636,1.0,1.0,22,3,0,0,0.241379],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.241379],
[6,0,273,372,271,652,0.0,0.0,0.0,1.004828,1.004828,135,326,0,0,0.758621],
[7,0,819,818,63,206,0.0,-20.096552,-0.036070,1.024924,1.024924,22,3,0,0,0.758621],
[8,0,546,372,270,652,0.0,0.0,0.0,1.004828,1.004828,135,326,0,0,0.758621]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.206897],
[3,0,819,610,63,206,0.0,-30.0,-0.008727,1.0,1.0,22,3,0,0,0.206897],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.206897],
[6,0,273,372,271,652,0.0,0.0,0.0,1.004138,1.004138,135,326,0,0,0.793103],
[7,0,819,818,63,206,0.0,-20.082758,-0.029671,1.021352,1.021352,22,3,0,0,0.793103],
[8,0,546,372,270,652,0.0,0.0,0.0,1.004138,1.004138,135,326,0,0,0.793103]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.172414],
[3,0,819,610,63,206,0.0,-30.0,-0.005818,1.0,1.0,22,3,0,0,0.172414],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.172414],
[6,0,273,372,271,652,0.0,0.0,0.0,1.003448,1.003448,135,326,0,0,0.827586],
[7,0,819,818,63,206,0.0,-20.068966,-0.023271,1.017783,1.017783,22,3,0,0,0.827586],
[8,0,546,372,270,652,0.0,0.0,0.0,1.003448,1.003448,135,326,0,0,0.827586]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.137931],
[3,0,819,610,63,206,0.0,-30.0,-0.002909,1.0,1.0,22,3,0,0,0.137931],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.137931],
[6,0,273,372,271,652,0.0,0.0,0.0,1.002759,1.002759,135,326,0,0,0.862069],
[7,0,819,818,63,206,0.0,-20.055172,-0.016872,1.014219,1.014219,22,3,0,0,0.862069],
[8,0,546,372,270,652,0.0,0.0,0.0,1.002759,1.002759,135,326,0,0,0.862069]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.103448],
[3,0,819,610,63,206,0.0,-30.0,0.000000,1.0,1.0,22,3,0,0,0.103448],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.103448],
[6,0,273,372,271,652,0.0,0.0,0.0,1.002069,1.002069,135,326,0,0,0.896552],
[7,0,819,818,63,206,0.0,-20.041380,-0.010472,1.010658,1.010658,22,3,0,0,0.896552],
[8,0,546,372,270,652,0.0,0.0,0.0,1.002069,1.002069,135,326,0,0,0.896552]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.068965],
[3,0,819,610,63,206,0.0,-30.0,0.002909,1.0,1.0,22,3,0,0,0.068965],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.068965],
[6,0,273,372,271,652,0.0,0.0,0.0,1.001379,1.001379,135,326,0,0,0.931035],
[7,0,819,818,63,206,0.0,-20.027584,-0.004072,1.007101,1.007101,22,3,0,0,0.931035],
[8,0,546,372,270,652,0.0,0.0,0.0,1.001379,1.001379,135,326,0,0,0.931035]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.034483],
[3,0,819,610,63,206,0.0,-30.0,0.005818,1.0,1.0,22,3,0,0,0.034483],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.034483],
[6,0,273,372,271,652,0.0,0.0,0.0,1.000690,1.000690,135,326,0,0,0.965517],
[7,0,819,818,63,206,0.0,-20.013792,0.002327,1.003549,1.003549,22,3,0,0,0.965517],
[8,0,546,372,270,652,0.0,0.0,0.0,1.000690,1.000690,135,326,0,0,0.965517]
],
[
[6,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[7,0,819,818,63,206,0.0,-20.0,0.008727,1.0,1.0,22,3],
[8,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
]
]
}
}
]

},{}],61:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-10-01.png"],
"name": "obj05_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 340,
"CanvasHeight": 740,
"MarginWidth": 178,
"MarginHeight": 378,
"parts": ["root","Obj","01_ura","02_omote_1","03"],
"ssa": [
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,0.008727,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,0.001870,1.002857,1.002857,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.004987,1.005714,1.005714,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.011843,1.008571,1.008571,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.018700,1.011429,1.011429,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.025557,1.014286,1.014286,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.032413,1.017143,1.017143,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.039270,1.020000,1.020000,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.046127,1.017143,1.017143,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.052983,1.014286,1.014286,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.059840,1.011429,1.011429,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.066697,1.008571,1.008571,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.073553,1.005714,1.005714,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.080410,1.002857,1.002857,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.087266,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.080867,1.002500,1.002500,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.074467,1.005000,1.005000,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.068068,1.007500,1.007500,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.061668,1.010000,1.010000,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.055269,1.012500,1.012500,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.048869,1.015000,1.015000,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.042470,1.017500,1.017500,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.036070,1.020000,1.020000,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.029671,1.017143,1.017143,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.023271,1.014286,1.014286,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.016872,1.011429,1.011429,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.010472,1.008571,1.008571,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.004072,1.005714,1.005714,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,0.002327,1.002857,1.002857,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,0.008727,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
]
]
}
}
]

},{}],62:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-10-01.png"],
"name": "obj06_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 340,
"CanvasHeight": 740,
"MarginWidth": 178,
"MarginHeight": 378,
"parts": ["root","Obj","omote","01_omote","02_omote","03_1","ura","01_ura","02_omote_1","03"],
"ssa": [
[
[6,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[7,0,819,818,63,206,0.0,-20.0,0.008727,1.0,1.0,22,3],
[8,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.034483],
[3,0,819,610,63,206,0.0,-30.0,0.005610,1.0,1.0,22,3,0,0,0.034483],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.034483],
[6,0,273,372,271,652,0.0,0.0,0.0,1.000690,1.000690,135,326,0,0,0.965517],
[7,0,819,818,63,206,0.0,-20.013792,0.001870,1.003549,1.003549,22,3,0,0,0.965517],
[8,0,546,372,270,652,0.0,0.0,0.0,1.000690,1.000690,135,326,0,0,0.965517]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.068966],
[3,0,819,610,63,206,0.0,-30.0,0.002493,1.0,1.0,22,3,0,0,0.068966],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.068966],
[6,0,273,372,271,652,0.0,0.0,0.0,1.001379,1.001379,135,326,0,0,0.931035],
[7,0,819,818,63,206,0.0,-20.027584,-0.004987,1.007101,1.007101,22,3,0,0,0.931035],
[8,0,546,372,270,652,0.0,0.0,0.0,1.001379,1.001379,135,326,0,0,0.931035]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.103448],
[3,0,819,610,63,206,0.0,-30.0,-0.000623,1.0,1.0,22,3,0,0,0.103448],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.103448],
[6,0,273,372,271,652,0.0,0.0,0.0,1.002069,1.002069,135,326,0,0,0.896552],
[7,0,819,818,63,206,0.0,-20.041380,-0.011843,1.010658,1.010658,22,3,0,0,0.896552],
[8,0,546,372,270,652,0.0,0.0,0.0,1.002069,1.002069,135,326,0,0,0.896552]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.137931],
[3,0,819,610,63,206,0.0,-30.0,-0.003740,1.0,1.0,22,3,0,0,0.137931],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.137931],
[6,0,273,372,271,652,0.0,0.0,0.0,1.002759,1.002759,135,326,0,0,0.862069],
[7,0,819,818,63,206,0.0,-20.055172,-0.018700,1.014219,1.014219,22,3,0,0,0.862069],
[8,0,546,372,270,652,0.0,0.0,0.0,1.002759,1.002759,135,326,0,0,0.862069]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.172414],
[3,0,819,610,63,206,0.0,-30.0,-0.006857,1.0,1.0,22,3,0,0,0.172414],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.172414],
[6,0,273,372,271,652,0.0,0.0,0.0,1.003448,1.003448,135,326,0,0,0.827586],
[7,0,819,818,63,206,0.0,-20.068966,-0.025557,1.017783,1.017783,22,3,0,0,0.827586],
[8,0,546,372,270,652,0.0,0.0,0.0,1.003448,1.003448,135,326,0,0,0.827586]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.206897],
[3,0,819,610,63,206,0.0,-30.0,-0.009973,1.0,1.0,22,3,0,0,0.206897],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.206897],
[6,0,273,372,271,652,0.0,0.0,0.0,1.004138,1.004138,135,326,0,0,0.793103],
[7,0,819,818,63,206,0.0,-20.082758,-0.032413,1.021352,1.021352,22,3,0,0,0.793103],
[8,0,546,372,270,652,0.0,0.0,0.0,1.004138,1.004138,135,326,0,0,0.793103]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.241379],
[3,0,819,610,63,206,0.0,-30.0,-0.013090,1.0,1.0,22,3,0,0,0.241379],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.241379],
[6,0,273,372,271,652,0.0,0.0,0.0,1.004828,1.004828,135,326,0,0,0.758621],
[7,0,819,818,63,206,0.0,-20.096552,-0.039270,1.024924,1.024924,22,3,0,0,0.758621],
[8,0,546,372,270,652,0.0,0.0,0.0,1.004828,1.004828,135,326,0,0,0.758621]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.275862],
[3,0,819,610,63,206,0.0,-30.0,-0.016207,1.0,1.0,22,3,0,0,0.275862],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.275862],
[6,0,273,372,271,652,0.0,0.0,0.0,1.005517,1.005517,135,326,0,0,0.724138],
[7,0,819,818,63,206,0.0,-20.110344,-0.046127,1.022755,1.022755,22,3,0,0,0.724138],
[8,0,546,372,270,652,0.0,0.0,0.0,1.005517,1.005517,135,326,0,0,0.724138]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.310345],
[3,0,819,610,63,206,0.0,-30.0,-0.019323,1.0,1.0,22,3,0,0,0.310345],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.310345],
[6,0,273,372,271,652,0.0,0.0,0.0,1.006207,1.006207,135,326,0,0,0.689655],
[7,0,819,818,63,206,0.0,-20.124138,-0.052983,1.020581,1.020581,22,3,0,0,0.689655],
[8,0,546,372,270,652,0.0,0.0,0.0,1.006207,1.006207,135,326,0,0,0.689655]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.344828],
[3,0,819,610,63,206,0.0,-30.0,-0.022440,1.0,1.0,22,3,0,0,0.344828],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.344828],
[6,0,273,372,271,652,0.0,0.0,0.0,1.006896,1.006896,135,326,0,0,0.655172],
[7,0,819,818,63,206,0.0,-20.137930,-0.059840,1.018404,1.018404,22,3,0,0,0.655172],
[8,0,546,372,270,652,0.0,0.0,0.0,1.006896,1.006896,135,326,0,0,0.655172]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.379310],
[3,0,819,610,63,206,0.0,-30.0,-0.025557,1.0,1.0,22,3,0,0,0.379310],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.379310],
[6,0,273,372,271,652,0.0,0.0,0.0,1.007586,1.007586,135,326,0,0,0.620690],
[7,0,819,818,63,206,0.0,-20.151726,-0.066697,1.016223,1.016223,22,3,0,0,0.620690],
[8,0,546,372,270,652,0.0,0.0,0.0,1.007586,1.007586,135,326,0,0,0.620690]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.413793],
[3,0,819,610,63,206,0.0,-30.0,-0.028673,1.0,1.0,22,3,0,0,0.413793],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.413793],
[6,0,273,372,271,652,0.0,0.0,0.0,1.008276,1.008276,135,326,0,0,0.586207],
[7,0,819,818,63,206,0.0,-20.165518,-0.073553,1.014037,1.014037,22,3,0,0,0.586207],
[8,0,546,372,270,652,0.0,0.0,0.0,1.008276,1.008276,135,326,0,0,0.586207]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.448276],
[3,0,819,610,63,206,0.0,-30.0,-0.031790,1.0,1.0,22,3,0,0,0.448276],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.448276],
[6,0,273,372,271,652,0.0,0.0,0.0,1.008965,1.008965,135,326,0,0,0.551724],
[7,0,819,818,63,206,0.0,-20.179310,-0.080410,1.011848,1.011848,22,3,0,0,0.551724],
[8,0,546,372,270,652,0.0,0.0,0.0,1.008965,1.008965,135,326,0,0,0.551724]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.482759],
[3,0,819,610,63,206,0.0,-30.0,-0.034907,1.0,1.0,22,3,0,0,0.482759],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.482759],
[6,0,273,372,271,652,0.0,0.0,0.0,1.009655,1.009655,135,326,0,0,0.517241],
[7,0,819,818,63,206,0.0,-20.193102,-0.087266,1.009655,1.009655,22,3,0,0,0.517241],
[8,0,546,372,270,652,0.0,0.0,0.0,1.009655,1.009655,135,326,0,0,0.517241]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.517241],
[3,0,819,610,63,206,0.0,-30.0,-0.031998,1.0,1.0,22,3,0,0,0.517241],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.517241],
[6,0,273,372,271,652,0.0,0.0,0.0,1.010345,1.010345,135,326,0,0,0.482759],
[7,0,819,818,63,206,0.0,-20.206898,-0.080867,1.012871,1.012871,22,3,0,0,0.482759],
[8,0,546,372,270,652,0.0,0.0,0.0,1.010345,1.010345,135,326,0,0,0.482759]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.551724],
[3,0,819,610,63,206,0.0,-30.0,-0.029089,1.0,1.0,22,3,0,0,0.551724],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.551724],
[6,0,273,372,271,652,0.0,0.0,0.0,1.011034,1.011034,135,326,0,0,0.448276],
[7,0,819,818,63,206,0.0,-20.220690,-0.074467,1.016090,1.016090,22,3,0,0,0.448276],
[8,0,546,372,270,652,0.0,0.0,0.0,1.011034,1.011034,135,326,0,0,0.448276]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.586207],
[3,0,819,610,63,206,0.0,-30.0,-0.026180,1.0,1.0,22,3,0,0,0.586207],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.586207],
[6,0,273,372,271,652,0.0,0.0,0.0,1.011724,1.011724,135,326,0,0,0.413793],
[7,0,819,818,63,206,0.0,-20.234482,-0.068068,1.019312,1.019312,22,3,0,0,0.413793],
[8,0,546,372,270,652,0.0,0.0,0.0,1.011724,1.011724,135,326,0,0,0.413793]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.620690],
[3,0,819,610,63,206,0.0,-30.0,-0.023271,1.0,1.0,22,3,0,0,0.620690],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.620690],
[6,0,273,372,271,652,0.0,0.0,0.0,1.012414,1.012414,135,326,0,0,0.379310],
[7,0,819,818,63,206,0.0,-20.248276,-0.061668,1.022538,1.022538,22,3,0,0,0.379310],
[8,0,546,372,270,652,0.0,0.0,0.0,1.012414,1.012414,135,326,0,0,0.379310]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.655172],
[3,0,819,610,63,206,0.0,-30.0,-0.020362,1.0,1.0,22,3,0,0,0.655172],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.655172],
[6,0,273,372,271,652,0.0,0.0,0.0,1.013103,1.013103,135,326,0,0,0.344828],
[7,0,819,818,63,206,0.0,-20.262070,-0.055269,1.025767,1.025767,22,3,0,0,0.344828],
[8,0,546,372,270,652,0.0,0.0,0.0,1.013103,1.013103,135,326,0,0,0.344828]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.689655],
[3,0,819,610,63,206,0.0,-30.0,-0.017453,1.0,1.0,22,3,0,0,0.689655],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.689655],
[6,0,273,372,271,652,0.0,0.0,0.0,1.013793,1.013793,135,326,0,0,0.310345],
[7,0,819,818,63,206,0.0,-20.275862,-0.048869,1.029000,1.029000,22,3,0,0,0.310345],
[8,0,546,372,270,652,0.0,0.0,0.0,1.013793,1.013793,135,326,0,0,0.310345]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.724138],
[3,0,819,610,63,206,0.0,-30.0,-0.014544,1.0,1.0,22,3,0,0,0.724138],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.724138],
[6,0,273,372,271,652,0.0,0.0,0.0,1.014483,1.014483,135,326,0,0,0.275862],
[7,0,819,818,63,206,0.0,-20.289654,-0.042470,1.032236,1.032236,22,3,0,0,0.275862],
[8,0,546,372,270,652,0.0,0.0,0.0,1.014483,1.014483,135,326,0,0,0.275862]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.758621],
[3,0,819,610,63,206,0.0,-30.0,-0.011636,1.0,1.0,22,3,0,0,0.758621],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.758621],
[6,0,273,372,271,652,0.0,0.0,0.0,1.015172,1.015172,135,326,0,0,0.241379],
[7,0,819,818,63,206,0.0,-20.303448,-0.036070,1.035476,1.035476,22,3,0,0,0.241379],
[8,0,546,372,270,652,0.0,0.0,0.0,1.015172,1.015172,135,326,0,0,0.241379]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.793103],
[3,0,819,610,63,206,0.0,-30.0,-0.008727,1.0,1.0,22,3,0,0,0.793103],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.793103],
[6,0,273,372,271,652,0.0,0.0,0.0,1.015862,1.015862,135,326,0,0,0.206897],
[7,0,819,818,63,206,0.0,-20.317242,-0.029671,1.033277,1.033277,22,3,0,0,0.206897],
[8,0,546,372,270,652,0.0,0.0,0.0,1.015862,1.015862,135,326,0,0,0.206897]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.827586],
[3,0,819,610,63,206,0.0,-30.0,-0.005818,1.0,1.0,22,3,0,0,0.827586],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.827586],
[6,0,273,372,271,652,0.0,0.0,0.0,1.016552,1.016552,135,326,0,0,0.172414],
[7,0,819,818,63,206,0.0,-20.331036,-0.023271,1.031074,1.031074,22,3,0,0,0.172414],
[8,0,546,372,270,652,0.0,0.0,0.0,1.016552,1.016552,135,326,0,0,0.172414]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.862069],
[3,0,819,610,63,206,0.0,-30.0,-0.002909,1.0,1.0,22,3,0,0,0.862069],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.862069],
[6,0,273,372,271,652,0.0,0.0,0.0,1.017241,1.017241,135,326,0,0,0.137931],
[7,0,819,818,63,206,0.0,-20.344828,-0.016872,1.028867,1.028867,22,3,0,0,0.137931],
[8,0,546,372,270,652,0.0,0.0,0.0,1.017241,1.017241,135,326,0,0,0.137931]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.896552],
[3,0,819,610,63,206,0.0,-30.0,0.000000,1.0,1.0,22,3,0,0,0.896552],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.896552],
[6,0,273,372,271,652,0.0,0.0,0.0,1.017931,1.017931,135,326,0,0,0.103448],
[7,0,819,818,63,206,0.0,-20.358620,-0.010472,1.026656,1.026656,22,3,0,0,0.103448],
[8,0,546,372,270,652,0.0,0.0,0.0,1.017931,1.017931,135,326,0,0,0.103448]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.931035],
[3,0,819,610,63,206,0.0,-30.0,0.002909,1.0,1.0,22,3,0,0,0.931035],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.931035],
[6,0,273,372,271,652,0.0,0.0,0.0,1.018621,1.018621,135,326,0,0,0.068965],
[7,0,819,818,63,206,0.0,-20.372414,-0.004072,1.024441,1.024441,22,3,0,0,0.068965],
[8,0,546,372,270,652,0.0,0.0,0.0,1.018621,1.018621,135,326,0,0,0.068965]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.965517],
[3,0,819,610,63,206,0.0,-30.0,0.005818,1.0,1.0,22,3,0,0,0.965517],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.965517],
[6,0,273,372,271,652,0.0,0.0,0.0,1.019310,1.019310,135,326,0,0,0.034483],
[7,0,819,818,63,206,0.0,-20.386208,0.002327,1.022223,1.022223,22,3,0,0,0.034483],
[8,0,546,372,270,652,0.0,0.0,0.0,1.019310,1.019310,135,326,0,0,0.034483]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[3,0,819,610,63,206,0.0,-30.0,0.008727,1.0,1.0,22,3],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
]
]
}
}
]

},{}],63:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-11-01.png"],
"name": "obj01_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 1500,
"CanvasHeight": 420,
"MarginWidth": 758,
"MarginHeight": 218,
"parts": ["root","Obj","01_omote"],
"ssa": [
[
[1,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175]
],
[
[1,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175]
]
]
}
}
]

},{}],64:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-11-01.png"],
"name": "obj02_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 1500,
"CanvasHeight": 420,
"MarginWidth": 758,
"MarginHeight": 218,
"parts": ["root","Obj","01_omote"],
"ssa": [
[
[1,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175]
],
[
[1,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175]
]
]
}
}
]

},{}],65:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-11-01.png"],
"name": "obj03_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 1500,
"CanvasHeight": 420,
"MarginWidth": 758,
"MarginHeight": 218,
"parts": ["root","Obj","01_omote"],
"ssa": [
[
[1,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175]
],
[
[1,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175]
]
]
}
}
]

},{}],66:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-11-01.png"],
"name": "obj04_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 1500,
"CanvasHeight": 420,
"MarginWidth": 758,
"MarginHeight": 218,
"parts": ["root","Obj","omote","01_omote","ura","02_ura_01","01_ura"],
"ssa": [
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.965517],
[4,0,0,48,419,270,-58.100689,-100.911728,0.0,1.019310,1.019310,209,135,0,0,0.034483],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.019310,1.019310,713,175,0,0,0.034483]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.931035],
[4,0,0,48,419,270,-58.061382,-100.843452,0.0,1.018621,1.018621,209,135,0,0,0.068966],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.018621,1.018621,713,175,0,0,0.068966]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.896552],
[4,0,0,48,419,270,-58.022064,-100.775169,0.0,1.017931,1.017931,209,135,0,0,0.103448],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.017931,1.017931,713,175,0,0,0.103448]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.862069],
[4,0,0,48,419,270,-57.982758,-100.706894,0.0,1.017241,1.017241,209,135,0,0,0.137931],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.017241,1.017241,713,175,0,0,0.137931]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.827586],
[4,0,0,48,419,270,-57.943447,-100.638618,0.0,1.016552,1.016552,209,135,0,0,0.172414],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.016552,1.016552,713,175,0,0,0.172414]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.793103],
[4,0,0,48,419,270,-57.904140,-100.570351,0.0,1.015862,1.015862,209,135,0,0,0.206897],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.015862,1.015862,713,175,0,0,0.206897]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.758621],
[4,0,0,48,419,270,-57.864826,-100.502068,0.0,1.015172,1.015172,209,135,0,0,0.241379],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.015172,1.015172,713,175,0,0,0.241379]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.724138],
[4,0,0,48,419,270,-57.825516,-100.433792,0.0,1.014483,1.014483,209,135,0,0,0.275862],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.014483,1.014483,713,175,0,0,0.275862]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.689655],
[4,0,0,48,419,270,-57.786209,-100.365517,0.0,1.013793,1.013793,209,135,0,0,0.310345],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.013793,1.013793,713,175,0,0,0.310345]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.655172],
[4,0,0,48,419,270,-57.746899,-100.297241,0.0,1.013103,1.013103,209,135,0,0,0.344828],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.013103,1.013103,713,175,0,0,0.344828]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.620690],
[4,0,0,48,419,270,-57.707584,-100.228958,0.0,1.012414,1.012414,209,135,0,0,0.379310],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.012414,1.012414,713,175,0,0,0.379310]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.586207],
[4,0,0,48,419,270,-57.668274,-100.160690,0.0,1.011724,1.011724,209,135,0,0,0.413793],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.011724,1.011724,713,175,0,0,0.413793]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.551724],
[4,0,0,48,419,270,-57.628967,-100.092415,0.0,1.011034,1.011034,209,135,0,0,0.448276],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.011034,1.011034,713,175,0,0,0.448276]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.517241],
[4,0,0,48,419,270,-57.589657,-100.024139,0.0,1.010345,1.010345,209,135,0,0,0.482759],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.010345,1.010345,713,175,0,0,0.482759]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.482759],
[4,0,0,48,419,270,-57.550343,-99.955856,0.0,1.009655,1.009655,209,135,0,0,0.517241],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.009655,1.009655,713,175,0,0,0.517241]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.448276],
[4,0,0,48,419,270,-57.511032,-99.887581,0.0,1.008965,1.008965,209,135,0,0,0.551724],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.008965,1.008965,713,175,0,0,0.551724]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.413793],
[4,0,0,48,419,270,-57.471725,-99.819313,0.0,1.008276,1.008276,209,135,0,0,0.586207],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.008276,1.008276,713,175,0,0,0.586207]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.379310],
[4,0,0,48,419,270,-57.432415,-99.751038,0.0,1.007586,1.007586,209,135,0,0,0.620690],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.007586,1.007586,713,175,0,0,0.620690]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.344828],
[4,0,0,48,419,270,-57.393101,-99.682755,0.0,1.006896,1.006896,209,135,0,0,0.655172],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.006896,1.006896,713,175,0,0,0.655172]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.310345],
[4,0,0,48,419,270,-57.353790,-99.614479,0.0,1.006207,1.006207,209,135,0,0,0.689655],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.006207,1.006207,713,175,0,0,0.689655]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.275862],
[4,0,0,48,419,270,-57.314484,-99.546204,0.0,1.005517,1.005517,209,135,0,0,0.724138],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.005517,1.005517,713,175,0,0,0.724138]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.241379],
[4,0,0,48,419,270,-57.275173,-99.477936,0.0,1.004828,1.004828,209,135,0,0,0.758621],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.004828,1.004828,713,175,0,0,0.758621]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.206897],
[4,0,0,48,419,270,-57.235859,-99.409653,0.0,1.004138,1.004138,209,135,0,0,0.793103],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.004138,1.004138,713,175,0,0,0.793103]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.172414],
[4,0,0,48,419,270,-57.196548,-99.341377,0.0,1.003448,1.003448,209,135,0,0,0.827586],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.003448,1.003448,713,175,0,0,0.827586]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.137931],
[4,0,0,48,419,270,-57.157242,-99.273102,0.0,1.002759,1.002759,209,135,0,0,0.862069],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.002759,1.002759,713,175,0,0,0.862069]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.103448],
[4,0,0,48,419,270,-57.117931,-99.204834,0.0,1.002069,1.002069,209,135,0,0,0.896552],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.002069,1.002069,713,175,0,0,0.896552]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.068965],
[4,0,0,48,419,270,-57.078617,-99.136543,0.0,1.001379,1.001379,209,135,0,0,0.931035],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.001379,1.001379,713,175,0,0,0.931035]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.034483],
[4,0,0,48,419,270,-57.039310,-99.068275,0.0,1.000690,1.000690,209,135,0,0,0.965517],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.000690,1.000690,713,175,0,0,0.965517]
],
[
[4,0,0,48,419,270,-57.0,-99.0,0.0,1.0,1.0,209,135],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.0,1.0,713,175]
]
]
}
}
]

},{}],67:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-11-01.png"],
"name": "obj05_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 1500,
"CanvasHeight": 420,
"MarginWidth": 758,
"MarginHeight": 218,
"parts": ["root","Obj","02_ura_01","01_ura"],
"ssa": [
[
[1,0,0,48,419,270,-57.0,-99.0,0.0,1.0,1.0,209,135],
[2,0,0,320,1426,351,0.0,0.0,0.0,1.0,1.0,713,175]
],
[
[1,0,0,48,419,270,-57.0,-99.0,0.0,1.0,1.0,209,135],
[2,0,0,320,1426,351,0.0,0.0,0.0,1.0,1.0,713,175]
]
]
}
}
]

},{}],68:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-11-01.png"],
"name": "obj06_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 1500,
"CanvasHeight": 420,
"MarginWidth": 758,
"MarginHeight": 218,
"parts": ["root","Obj","omote","01_omote","ura","02_ura_01","01_ura"],
"ssa": [
[
[4,0,0,48,419,270,-57.0,-99.0,0.0,1.0,1.0,209,135],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.0,1.0,713,175]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.034483],
[4,0,0,48,419,270,-57.039310,-99.068275,0.0,1.000690,1.000690,209,135,0,0,0.965517],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.000690,1.000690,713,175,0,0,0.965517]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.068966],
[4,0,0,48,419,270,-57.078617,-99.136543,0.0,1.001379,1.001379,209,135,0,0,0.931035],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.001379,1.001379,713,175,0,0,0.931035]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.103448],
[4,0,0,48,419,270,-57.117931,-99.204834,0.0,1.002069,1.002069,209,135,0,0,0.896552],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.002069,1.002069,713,175,0,0,0.896552]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.137931],
[4,0,0,48,419,270,-57.157242,-99.273102,0.0,1.002759,1.002759,209,135,0,0,0.862069],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.002759,1.002759,713,175,0,0,0.862069]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.172414],
[4,0,0,48,419,270,-57.196548,-99.341377,0.0,1.003448,1.003448,209,135,0,0,0.827586],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.003448,1.003448,713,175,0,0,0.827586]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.206897],
[4,0,0,48,419,270,-57.235859,-99.409653,0.0,1.004138,1.004138,209,135,0,0,0.793103],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.004138,1.004138,713,175,0,0,0.793103]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.241379],
[4,0,0,48,419,270,-57.275173,-99.477936,0.0,1.004828,1.004828,209,135,0,0,0.758621],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.004828,1.004828,713,175,0,0,0.758621]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.275862],
[4,0,0,48,419,270,-57.314484,-99.546204,0.0,1.005517,1.005517,209,135,0,0,0.724138],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.005517,1.005517,713,175,0,0,0.724138]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.310345],
[4,0,0,48,419,270,-57.353790,-99.614479,0.0,1.006207,1.006207,209,135,0,0,0.689655],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.006207,1.006207,713,175,0,0,0.689655]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.344828],
[4,0,0,48,419,270,-57.393101,-99.682755,0.0,1.006896,1.006896,209,135,0,0,0.655172],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.006896,1.006896,713,175,0,0,0.655172]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.379310],
[4,0,0,48,419,270,-57.432415,-99.751038,0.0,1.007586,1.007586,209,135,0,0,0.620690],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.007586,1.007586,713,175,0,0,0.620690]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.413793],
[4,0,0,48,419,270,-57.471725,-99.819313,0.0,1.008276,1.008276,209,135,0,0,0.586207],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.008276,1.008276,713,175,0,0,0.586207]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.448276],
[4,0,0,48,419,270,-57.511032,-99.887581,0.0,1.008965,1.008965,209,135,0,0,0.551724],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.008965,1.008965,713,175,0,0,0.551724]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.482759],
[4,0,0,48,419,270,-57.550343,-99.955856,0.0,1.009655,1.009655,209,135,0,0,0.517241],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.009655,1.009655,713,175,0,0,0.517241]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.517241],
[4,0,0,48,419,270,-57.589657,-100.024139,0.0,1.010345,1.010345,209,135,0,0,0.482759],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.010345,1.010345,713,175,0,0,0.482759]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.551724],
[4,0,0,48,419,270,-57.628967,-100.092415,0.0,1.011034,1.011034,209,135,0,0,0.448276],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.011034,1.011034,713,175,0,0,0.448276]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.586207],
[4,0,0,48,419,270,-57.668274,-100.160690,0.0,1.011724,1.011724,209,135,0,0,0.413793],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.011724,1.011724,713,175,0,0,0.413793]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.620690],
[4,0,0,48,419,270,-57.707584,-100.228958,0.0,1.012414,1.012414,209,135,0,0,0.379310],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.012414,1.012414,713,175,0,0,0.379310]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.655172],
[4,0,0,48,419,270,-57.746899,-100.297241,0.0,1.013103,1.013103,209,135,0,0,0.344828],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.013103,1.013103,713,175,0,0,0.344828]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.689655],
[4,0,0,48,419,270,-57.786209,-100.365517,0.0,1.013793,1.013793,209,135,0,0,0.310345],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.013793,1.013793,713,175,0,0,0.310345]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.724138],
[4,0,0,48,419,270,-57.825516,-100.433792,0.0,1.014483,1.014483,209,135,0,0,0.275862],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.014483,1.014483,713,175,0,0,0.275862]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.758621],
[4,0,0,48,419,270,-57.864826,-100.502068,0.0,1.015172,1.015172,209,135,0,0,0.241379],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.015172,1.015172,713,175,0,0,0.241379]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.793103],
[4,0,0,48,419,270,-57.904140,-100.570351,0.0,1.015862,1.015862,209,135,0,0,0.206897],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.015862,1.015862,713,175,0,0,0.206897]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.827586],
[4,0,0,48,419,270,-57.943447,-100.638618,0.0,1.016552,1.016552,209,135,0,0,0.172414],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.016552,1.016552,713,175,0,0,0.172414]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.862069],
[4,0,0,48,419,270,-57.982758,-100.706894,0.0,1.017241,1.017241,209,135,0,0,0.137931],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.017241,1.017241,713,175,0,0,0.137931]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.896552],
[4,0,0,48,419,270,-58.022064,-100.775169,0.0,1.017931,1.017931,209,135,0,0,0.103448],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.017931,1.017931,713,175,0,0,0.103448]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.931035],
[4,0,0,48,419,270,-58.061382,-100.843452,0.0,1.018621,1.018621,209,135,0,0,0.068965],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.018621,1.018621,713,175,0,0,0.068965]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.965517],
[4,0,0,48,419,270,-58.100689,-100.911728,0.0,1.019310,1.019310,209,135,0,0,0.034483],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.019310,1.019310,713,175,0,0,0.034483]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175]
]
]
}
}
]

},{}],69:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-myroom-obj-02-01.png"],
"name": "obj01_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 500,
"MarginWidth": 258,
"MarginHeight": 258,
"parts": ["root","Obj","01"],
"ssa": [
[
[1,0,0,268,348,244,0.0,0.0,0.0,0.500000,0.500000,174,122]
],
[
[1,0,0,268,348,244,0.0,0.0,0.0,0.500000,0.500000,174,122]
]
]
}
}
]

},{}],70:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-myroom-obj-02-01.png"],
"name": "obj02_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 500,
"MarginWidth": 258,
"MarginHeight": 258,
"parts": ["root","Obj","03","02","01"],
"ssa": [
[
[3,0,0,268,348,244,0.0,0.0,0.0,0.500000,0.500000,174,122]
],
[
[2,0,350,268,348,244,0.0,0.0,0.0,0.505000,0.505000,174,122,0,0,0.400000],
[3,0,0,268,348,244,0.0,0.0,0.0,0.505000,0.505000,174,122,0,0,0.900000]
],
[
[2,0,350,268,348,244,0.0,0.0,0.0,0.510000,0.510000,174,122,0,0,0.466667],
[3,0,0,268,348,244,0.0,0.0,0.0,0.510000,0.510000,174,122,0,0,0.800000]
],
[
[2,0,350,268,348,244,0.0,0.0,0.0,0.515000,0.515000,174,122,0,0,0.533333],
[3,0,0,268,348,244,0.0,0.0,0.0,0.515000,0.515000,174,122,0,0,0.700000]
],
[
[2,0,350,268,348,244,0.0,0.0,0.0,0.520000,0.520000,174,122,0,0,0.600000],
[3,0,0,268,348,244,0.0,0.0,0.0,0.520000,0.520000,174,122,0,0,0.600000]
],
[
[2,0,350,268,348,244,0.0,0.0,0.0,0.525000,0.525000,174,122,0,0,0.666667],
[3,0,0,268,348,244,0.0,0.0,0.0,0.525000,0.525000,174,122,0,0,0.500000]
],
[
[2,0,350,268,348,244,0.0,0.0,0.0,0.530000,0.530000,174,122,0,0,0.733333],
[3,0,0,268,348,244,0.0,0.0,0.0,0.530000,0.530000,174,122,0,0,0.400000]
],
[
[2,0,350,268,348,244,0.0,0.0,0.0,0.535000,0.535000,174,122,0,0,0.800000],
[3,0,0,268,348,244,0.0,0.0,0.0,0.535000,0.535000,174,122,0,0,0.300000]
],
[
[2,0,350,268,348,244,0.0,0.0,0.0,0.540000,0.540000,174,122,0,0,0.866667],
[3,0,0,268,348,244,0.0,0.0,0.0,0.540000,0.540000,174,122,0,0,0.200000]
],
[
[2,0,350,268,348,244,0.0,0.0,0.0,0.545000,0.545000,174,122,0,0,0.933333],
[3,0,0,268,348,244,0.0,0.0,0.0,0.545000,0.545000,174,122,0,0,0.100000]
],
[
[2,0,350,268,348,244,0.0,0.0,0.0,0.550000,0.550000,174,122]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.545000,0.545000,174,122,0,0,0.400000],
[2,0,350,268,348,244,0.0,0.0,0.0,0.545000,0.545000,174,122,0,0,0.900000]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.540000,0.540000,174,122,0,0,0.466667],
[2,0,350,268,348,244,0.0,0.0,0.0,0.540000,0.540000,174,122,0,0,0.800000]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.535000,0.535000,174,122,0,0,0.533333],
[2,0,350,268,348,244,0.0,0.0,0.0,0.535000,0.535000,174,122,0,0,0.700000]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.530000,0.530000,174,122,0,0,0.600000],
[2,0,350,268,348,244,0.0,0.0,0.0,0.530000,0.530000,174,122,0,0,0.600000]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.525000,0.525000,174,122,0,0,0.666667],
[2,0,350,268,348,244,0.0,0.0,0.0,0.525000,0.525000,174,122,0,0,0.500000]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.520000,0.520000,174,122,0,0,0.733333],
[2,0,350,268,348,244,0.0,0.0,0.0,0.520000,0.520000,174,122,0,0,0.400000]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.515000,0.515000,174,122,0,0,0.800000],
[2,0,350,268,348,244,0.0,0.0,0.0,0.515000,0.515000,174,122,0,0,0.300000]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.510000,0.510000,174,122,0,0,0.866667],
[2,0,350,268,348,244,0.0,0.0,0.0,0.510000,0.510000,174,122,0,0,0.200000]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.505000,0.505000,174,122,0,0,0.933333],
[2,0,350,268,348,244,0.0,0.0,0.0,0.505000,0.505000,174,122,0,0,0.100000]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.500000,0.500000,174,122]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.500000,0.500000,174,122]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.500000,0.500000,174,122]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.500000,0.500000,174,122]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.500000,0.500000,174,122]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.500000,0.500000,174,122]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.500000,0.500000,174,122]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.500000,0.500000,174,122]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.500000,0.500000,174,122]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.500000,0.500000,174,122]
]
]
}
}
]

},{}],71:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-myroom-obj-02-01.png"],
"name": "obj03_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 500,
"MarginWidth": 258,
"MarginHeight": 258,
"parts": ["root","Obj","03"],
"ssa": [
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.500000,0.500000,174,122]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.500000,0.500000,174,122]
]
]
}
}
]

},{}],72:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-myroom-obj-03-01.png"],
"name": "obj01_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 500,
"MarginWidth": 258,
"MarginHeight": 258,
"parts": ["root","Obj","01","02"],
"ssa": [
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,-31.0,3.500000,2.722714,0.380000,0.380000,37,12,0,1]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,-31.0,3.500000,2.722714,0.380000,0.380000,37,12,0,1]
]
]
}
}
]

},{}],73:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-myroom-obj-03-01.png"],
"name": "obj02_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 500,
"MarginWidth": 258,
"MarginHeight": 258,
"parts": ["root","Obj","01","02"],
"ssa": [
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,84.0,11.500000,0.244346,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,84.250000,12.075000,0.232129,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,84.500000,12.650000,0.219911,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,84.750000,13.225000,0.207694,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,85.0,13.800000,0.195477,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,85.250000,14.375000,0.183260,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,85.500000,14.950000,0.171042,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,85.750000,15.525000,0.158825,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,86.0,16.100000,0.146608,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,86.250000,16.674999,0.134390,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,86.500000,17.250000,0.122173,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,86.750000,17.825001,0.109956,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,87.0,18.400000,0.097738,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,87.250000,18.975000,0.085521,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,87.500000,19.549999,0.073304,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,87.750000,20.125000,0.061087,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,88.0,20.700001,0.048869,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,88.250000,21.275000,0.036652,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,88.500000,21.850000,0.024435,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,88.750000,22.424999,0.012217,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,89.0,23.0,0.0,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,89.0,23.0,0.0,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,89.0,23.0,0.0,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,89.0,23.0,0.0,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,89.0,23.0,0.0,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,89.0,23.0,0.0,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,89.0,23.0,0.0,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,89.0,23.0,0.0,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,89.0,23.0,0.0,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,89.0,23.0,0.0,0.500000,0.500000,37,12]
]
]
}
}
]

},{}],74:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-myroom-obj-03-01.png"],
"name": "obj03_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 500,
"MarginWidth": 258,
"MarginHeight": 258,
"parts": ["root","Obj","01","02"],
"ssa": [
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,89.0,23.0,0.0,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,89.0,23.0,0.0,0.500000,0.500000,37,12]
]
]
}
}
]

},{}],75:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-myroom-obj-04-01.png"],
"name": "obj01_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 800,
"MarginWidth": 258,
"MarginHeight": 408,
"parts": ["root","Obj","01","03","02"],
"ssa": [
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,61.500000,0.0,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,61.400002,0.000582,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,61.299999,0.001164,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,61.200001,0.001745,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,61.099998,0.002327,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,61.0,0.002909,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.900002,0.003491,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.799999,0.004072,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.700001,0.004654,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.599998,0.005236,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.500000,0.005818,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.400002,0.006400,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.299999,0.006981,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.200001,0.007563,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.099998,0.008145,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.0,0.008727,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.107143,0.008103,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.214287,0.007480,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.321430,0.006857,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.428570,0.006233,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.535713,0.005610,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.642857,0.004987,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.750000,0.004363,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.857143,0.003740,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.964287,0.003117,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,61.071430,0.002493,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,61.178570,0.001870,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,61.285713,0.001247,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,61.392857,0.000623,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,61.500000,0.0,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
]
]
}
}
]

},{}],76:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-myroom-obj-04-01.png"],
"name": "obj02_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 800,
"MarginWidth": 258,
"MarginHeight": 408,
"parts": ["root","Obj","01","03","02"],
"ssa": [
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,61.500000,0.0,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,40.250000,59.250000,0.016020,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,37.500000,57.0,0.032039,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,38.700001,57.700001,0.048059,0.500000,0.500000,94,161,0,0,0.800000,0,23,4,0,12,20,-5,-2,-7],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,39.900002,58.400002,0.064079,0.500000,0.500000,94,161,0,0,0.600000,0,47,8,0,25,40,-10,-4,-14],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,41.099998,59.099998,0.080098,0.500000,0.500000,94,161,0,0,0.400000,0,71,13,1,38,60,-16,-6,-21],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,42.299999,59.799999,0.096118,0.500000,0.500000,94,161,0,0,0.200000,0,95,17,1,51,80,-21,-8,-28],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
]
]
}
}
]

},{}],77:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-myroom-obj-04-01.png"],
"name": "obj03_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 800,
"MarginWidth": 258,
"MarginHeight": 408,
"parts": ["root","Obj","01","02"],
"ssa": [
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
]
]
}
}
]

},{}],78:[function(require,module,exports){
module.exports=[
{
"images":["koishi.png"],
"name": "reaction_3rdeye_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 500,
"MarginWidth": 258,
"MarginHeight": 508,
"parts": ["root","Chara","koishi0_bottom0","koishi0_thighs_l0","koishi0_calf_l0","koishi0_foot_l0","koishi0_thighs_r0","koishi0_calf_r0","koishi0_foot_r0","koishi0_body","koishi0_arm0_r0","koishi0_arm0_l0","koishi0_head0","koishi0_hear_b0","koishi0_hear_f1","koishi0_hear_f0","koishi0_mouth0","koishi0_eye0_l0","koishi0_eye0_l1","koishi0_eye0_l2","koishi0_eye1_l0","koishi0_eye0_r0","koishi0_eye0_r1","koishi0_eye0_r2","koishi0_eye1_r0","koishi0_hat0_f0","koishi0_hat0_b0","koishi0_hat0_obj0","3rdeye0_all","3rdeye0_cord_b0","3rdeye0_cord_f0","3rdeye0_body0","3rdeye0_eye0","3rdeye0_light0","3rdeye0_eye1"],
"ssa": [
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-173.0,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-10.0,-292.0,0.0,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-300.0,0.0,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-210.0,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-270.0,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-263.0,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-209.0,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-270.0,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-263.0,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-268.0,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-261.0,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-270.0,0.0,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-300.0,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-158.0,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-168.0,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.0,-171.0,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.0,-170.0,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-306.0,0.0,1.0,1.0,133,48],
[26,0,906,146,76,96,-64.0,-294.0,0.0,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.047977,-172.491165,-0.004363,1.0,1.0,135,10],
[25,0,658,2,266,80,-5.771787,-288.995056,-0.004363,1.0,1.0,133,40],
[12,0,214,2,174,170,-22.869995,-297.466949,-0.018908,1.0,1.0,62,27],
[10,0,554,100,70,140,17.939405,-197.699768,0.283616,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.0,-0.021817,1.0,1.0,104,104],
[9,0,926,2,74,142,-36.613068,-195.889404,0.231256,1.0,1.0,40,13],
[11,0,658,84,138,126,-7.363646,-207.003967,-0.027634,1.0,1.0,60,120],
[16,0,336,202,20,26,54.271301,-265.323212,-0.027634,1.0,1.0,10,13],
[20,0,278,202,34,28,-1.900737,-259.873199,-0.027634,1.0,1.0,17,14],
[15,0,414,202,22,6,18.598797,-205.285950,-0.027634,1.0,1.0,11,3],
[17,0,1014,92,4,6,58.269775,-265.212677,-0.027634,1.0,1.0,2,3],
[21,0,1012,84,6,6,4.096972,-259.707428,-0.027634,1.0,1.0,3,3],
[18,0,650,100,4,4,52.216805,-263.379242,-0.027634,1.0,1.0,2,2],
[22,0,1002,96,10,4,-4.954853,-257.956848,-0.027634,1.0,1.0,5,2],
[13,0,798,84,106,150,-56.936226,-268.397156,-0.036361,1.0,1.0,58,34],
[14,0,390,100,162,78,6.118933,-296.665649,-0.027634,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.017282,-157.578583,-0.004363,1.0,1.0,118,15],
[30,0,512,180,40,54,100.025230,-167.063614,-0.004363,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.038261,-170.037399,-0.004363,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.033936,-169.054871,-0.004363,1.0,1.0,3,1],
[24,0,390,2,266,96,-5.710701,-302.994934,-0.004363,1.0,1.0,133,48],
[26,0,906,146,76,96,-59.762547,-291.230652,-0.004363,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.095916,-171.982132,-0.008727,1.0,1.0,135,10],
[25,0,658,2,266,80,-1.588758,-285.882355,-0.008727,1.0,1.0,133,40],
[12,0,214,2,174,170,-18.772072,-294.830109,-0.037815,1.0,1.0,62,27],
[10,0,554,100,70,140,9.668316,-190.787170,0.567232,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-130.0,-0.043633,1.0,1.0,104,104],
[9,0,926,2,74,142,-33.377998,-190.664703,0.567232,1.0,1.0,40,13],
[11,0,658,84,138,126,-5.771214,-203.973190,-0.055269,1.0,1.0,60,120],
[16,0,336,202,20,26,57.451607,-260.567139,-0.055269,1.0,1.0,10,13],
[20,0,278,202,34,28,1.150432,-256.671295,-0.055269,1.0,1.0,17,14],
[15,0,414,202,22,6,20.133846,-201.538467,-0.055269,1.0,1.0,11,3],
[17,0,1014,92,4,6,61.445499,-260.346191,-0.055269,1.0,1.0,2,3],
[21,0,1012,84,6,6,7.141271,-256.339844,-0.055269,1.0,1.0,3,3],
[18,0,650,100,4,4,55.344181,-258.680664,-0.055269,1.0,1.0,2,2],
[22,0,1002,96,10,4,-1.955468,-254.840073,-0.055269,1.0,1.0,5,2],
[13,0,798,84,106,150,-53.878139,-266.726471,-0.072722,1.0,1.0,58,34],
[14,0,390,100,162,78,10.183647,-293.228119,-0.055269,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.034222,-157.157227,-0.008727,1.0,1.0,118,15],
[30,0,512,180,40,54,100.048553,-166.127121,-0.008727,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.074501,-169.074646,-0.008727,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.065933,-168.109589,-0.008727,1.0,1.0,3,1],
[24,0,390,2,266,96,-1.466586,-299.881836,-0.008727,1.0,1.0,133,48],
[26,0,906,146,76,96,-55.569248,-288.353516,-0.008727,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.143814,-171.472885,-0.013090,1.0,1.0,135,10],
[25,0,658,2,266,80,2.546338,-282.663391,-0.013090,1.0,1.0,133,40],
[12,0,214,2,174,170,-14.708871,-292.090546,-0.056723,1.0,1.0,62,27],
[10,0,554,100,70,140,1.199852,-184.268768,0.850848,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-128.0,-0.065450,1.0,1.0,104,104],
[11,0,658,84,138,126,-4.223431,-200.909103,-0.082903,1.0,1.0,60,120],
[9,0,926,2,74,142,-30.298107,-185.331116,0.903208,1.0,1.0,40,13],
[16,0,336,202,20,26,60.538990,-255.734543,-0.082903,1.0,1.0,10,13],
[20,0,278,202,34,28,4.151667,-253.395844,-0.082903,1.0,1.0,17,14],
[15,0,414,202,22,6,21.604464,-197.759521,-0.082903,1.0,1.0,11,3],
[17,0,1014,92,4,6,64.525253,-255.403305,-0.082903,1.0,1.0,2,3],
[21,0,1012,84,6,6,10.131060,-252.898987,-0.082903,1.0,1.0,3,3],
[18,0,650,100,4,4,58.380241,-253.907028,-0.082903,1.0,1.0,2,2],
[22,0,1002,96,10,4,0.996354,-251.651138,-0.082903,1.0,1.0,5,2],
[13,0,798,84,106,150,-50.827202,-264.988342,-0.109083,1.0,1.0,58,34],
[14,0,390,100,162,78,14.191528,-289.689117,-0.082903,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.050816,-156.735962,-0.013090,1.0,1.0,118,15],
[30,0,512,180,40,54,100.069969,-165.190521,-0.013090,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.108727,-168.111725,-0.013090,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.095978,-167.164169,-0.013090,1.0,1.0,3,1],
[24,0,390,2,266,96,2.729592,-296.662201,-0.013090,1.0,1.0,133,48],
[26,0,906,146,76,96,-51.422859,-285.370056,-0.013090,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.191672,-170.963425,-0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,6.165666,-279.355560,-0.050698,1.0,1.0,133,40],
[12,0,214,2,174,170,-10.682995,-289.249512,-0.075631,1.0,1.0,62,27],
[10,0,554,100,70,140,-7.452680,-178.150742,1.134464,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-126.0,-0.087266,1.0,1.0,104,104],
[29,0,2,180,236,30,-18.067068,-156.314758,-0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,100.089485,-164.253845,-0.017453,1.0,1.0,20,27],
[11,0,658,84,138,126,-2.720981,-197.813171,-0.110538,1.0,1.0,60,120],
[9,0,926,2,74,142,-27.376574,-179.893860,1.239184,1.0,1.0,40,13],
[16,0,336,202,20,26,63.531590,-250.828232,-0.110538,1.0,1.0,10,13],
[20,0,278,202,34,28,7.101173,-250.048462,-0.110538,1.0,1.0,17,14],
[15,0,414,202,22,6,23.010029,-193.951141,-0.110538,1.0,1.0,11,3],
[17,0,1014,92,4,6,67.507179,-250.386978,-0.110538,1.0,1.0,2,3],
[21,0,1012,84,6,6,13.064555,-249.386581,-0.110538,1.0,1.0,3,3],
[18,0,650,100,4,4,61.323170,-249.061066,-0.110538,1.0,1.0,2,2],
[22,0,1002,96,10,4,3.898857,-248.391602,-0.110538,1.0,1.0,5,2],
[13,0,798,84,106,150,-47.784870,-263.183228,-0.145444,1.0,1.0,58,34],
[14,0,390,100,162,78,18.140018,-286.050476,-0.110538,1.0,1.0,81,39],
[31,0,1002,84,8,10,106.140930,-167.148666,-0.017453,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.124084,-166.218643,-0.017453,1.0,1.0,3,1],
[24,0,390,2,266,96,6.875129,-293.337585,-0.050698,1.0,1.0,133,48],
[26,0,906,146,76,96,-47.663601,-284.089508,-0.050698,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.191672,-171.463425,-0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,6.413389,-279.148224,-0.066489,1.0,1.0,133,40],
[12,0,214,2,174,170,-10.238064,-289.131439,-0.087266,1.0,1.0,62,27],
[10,0,554,100,70,140,-7.452680,-178.984085,1.134464,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-126.833336,-0.087266,1.0,1.0,104,104],
[29,0,2,180,236,30,-18.067068,-156.814758,-0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,100.089485,-164.753845,-0.017453,1.0,1.0,20,27],
[11,0,658,84,138,126,-2.808136,-197.650314,-0.116355,1.0,1.0,60,120],
[9,0,926,2,74,142,-27.376574,-180.727203,1.239184,1.0,1.0,40,13],
[16,0,336,202,20,26,63.751740,-250.279037,-0.116355,1.0,1.0,10,13],
[20,0,278,202,34,28,7.317742,-249.827576,-0.116355,1.0,1.0,17,14],
[15,0,414,202,22,6,22.899969,-193.638657,-0.116355,1.0,1.0,11,3],
[17,0,1014,92,4,6,67.724693,-249.814667,-0.116355,1.0,1.0,2,3],
[21,0,1012,84,6,6,13.277172,-249.131012,-0.116355,1.0,1.0,3,3],
[18,0,650,100,4,4,61.533077,-248.524750,-0.116355,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.105841,-248.189377,-0.116355,1.0,1.0,5,2],
[13,0,798,84,106,150,-47.325413,-263.262085,-0.145444,1.0,1.0,58,34],
[14,0,390,100,162,78,18.565849,-285.764740,-0.116355,1.0,1.0,81,39],
[31,0,1002,84,8,10,106.140930,-167.648666,-0.017453,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.124084,-166.718643,-0.017453,1.0,1.0,3,1],
[24,0,390,2,266,96,7.343545,-293.117279,-0.066489,1.0,1.0,133,48],
[26,0,906,146,76,96,-47.334415,-284.731537,-0.066489,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.191672,-171.963425,-0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,6.661002,-278.941132,-0.082280,1.0,1.0,133,40],
[12,0,214,2,174,170,-9.792881,-289.010254,-0.098902,1.0,1.0,62,27],
[10,0,554,100,70,140,-7.452680,-179.817413,1.134464,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-127.666664,-0.087266,1.0,1.0,104,104],
[29,0,2,180,236,30,-18.067068,-157.314758,-0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,100.089485,-165.253845,-0.017453,1.0,1.0,20,27],
[11,0,658,84,138,126,-2.895292,-197.487457,-0.122173,1.0,1.0,60,120],
[9,0,926,2,74,142,-27.376574,-181.560532,1.239184,1.0,1.0,40,13],
[16,0,336,202,20,26,63.969635,-249.728058,-0.122173,1.0,1.0,10,13],
[20,0,278,202,34,28,7.533968,-249.604919,-0.122173,1.0,1.0,17,14],
[15,0,414,202,22,6,22.789038,-193.326309,-0.122173,1.0,1.0,11,3],
[17,0,1014,92,4,6,67.939819,-249.240585,-0.122173,1.0,1.0,2,3],
[21,0,1012,84,6,6,13.489244,-248.873703,-0.122173,1.0,1.0,3,3],
[18,0,650,100,4,4,61.740803,-247.986710,-0.122173,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.312591,-247.985428,-0.122173,1.0,1.0,5,2],
[13,0,798,84,106,150,-46.864685,-263.336792,-0.145444,1.0,1.0,58,34],
[14,0,390,100,162,78,18.990957,-285.476044,-0.122173,1.0,1.0,81,39],
[31,0,1002,84,8,10,106.140930,-168.148666,-0.017453,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.124084,-167.218643,-0.017453,1.0,1.0,3,1],
[24,0,390,2,266,96,7.811620,-292.893768,-0.082280,1.0,1.0,133,48],
[26,0,906,146,76,96,-46.991940,-285.372467,-0.082280,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.191672,-172.463425,-0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,6.521907,-279.786621,-0.092253,1.0,1.0,133,40],
[12,0,214,2,174,170,-9.792881,-289.843597,-0.104720,1.0,1.0,62,27],
[10,0,554,100,70,140,-7.452680,-180.650742,1.134464,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-128.500000,-0.087266,1.0,1.0,104,104],
[29,0,2,180,236,30,-18.067068,-157.814758,-0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,100.089485,-165.753845,-0.017453,1.0,1.0,20,27],
[11,0,658,84,138,126,-2.895292,-198.320786,-0.122173,1.0,1.0,60,120],
[9,0,926,2,74,142,-27.376574,-182.393860,1.239184,1.0,1.0,40,13],
[16,0,336,202,20,26,63.969635,-250.561401,-0.122173,1.0,1.0,10,13],
[20,0,278,202,34,28,7.533968,-250.438263,-0.122173,1.0,1.0,17,14],
[15,0,414,202,22,6,22.789038,-194.159637,-0.122173,1.0,1.0,11,3],
[17,0,1014,92,4,6,67.939819,-250.073929,-0.122173,1.0,1.0,2,3],
[21,0,1012,84,6,6,13.489244,-249.707047,-0.122173,1.0,1.0,3,3],
[18,0,650,100,4,4,61.740803,-248.820053,-0.122173,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.312591,-248.818771,-0.122173,1.0,1.0,5,2],
[13,0,798,84,106,150,-46.699257,-264.149841,-0.139626,1.0,1.0,58,34],
[14,0,390,100,162,78,18.990957,-286.309387,-0.122173,1.0,1.0,81,39],
[31,0,1002,84,8,10,106.140930,-168.648666,-0.017453,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.124084,-167.718643,-0.017453,1.0,1.0,3,1],
[24,0,390,2,266,96,7.811620,-293.727081,-0.092253,1.0,1.0,133,48],
[26,0,906,146,76,96,-47.064224,-286.752716,-0.092253,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.191672,-172.963425,-0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,6.382941,-280.633514,-0.102226,1.0,1.0,133,40],
[12,0,214,2,174,170,-9.792881,-290.676910,-0.110538,1.0,1.0,62,27],
[10,0,554,100,70,140,-7.452680,-181.484070,1.134464,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-129.333328,-0.087266,1.0,1.0,104,104],
[29,0,2,180,236,30,-18.067068,-158.314758,-0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,100.089485,-166.253845,-0.017453,1.0,1.0,20,27],
[11,0,658,84,138,126,-2.895292,-199.154114,-0.122173,1.0,1.0,60,120],
[9,0,926,2,74,142,-27.376574,-183.227188,1.239184,1.0,1.0,40,13],
[16,0,336,202,20,26,63.969635,-251.394714,-0.122173,1.0,1.0,10,13],
[20,0,278,202,34,28,7.533968,-251.271576,-0.122173,1.0,1.0,17,14],
[15,0,414,202,22,6,22.789038,-194.992966,-0.122173,1.0,1.0,11,3],
[17,0,1014,92,4,6,67.939819,-250.907242,-0.122173,1.0,1.0,2,3],
[21,0,1012,84,6,6,13.489244,-250.540359,-0.122173,1.0,1.0,3,3],
[18,0,650,100,4,4,61.740803,-249.653366,-0.122173,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.312591,-249.652084,-0.122173,1.0,1.0,5,2],
[13,0,798,84,106,150,-46.533829,-264.962830,-0.133809,1.0,1.0,58,34],
[14,0,390,100,162,78,18.990957,-287.142700,-0.122173,1.0,1.0,81,39],
[31,0,1002,84,8,10,106.140930,-169.148666,-0.017453,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.124084,-168.218643,-0.017453,1.0,1.0,3,1],
[24,0,390,2,266,96,7.811620,-294.560425,-0.102226,1.0,1.0,133,48],
[26,0,906,146,76,96,-47.131050,-288.133698,-0.102226,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.191672,-173.463425,-0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,6.244117,-281.481812,-0.112200,1.0,1.0,133,40],
[12,0,214,2,174,170,-9.792881,-291.510254,-0.116355,1.0,1.0,62,27],
[10,0,554,100,70,140,-7.452680,-182.317413,1.134464,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-130.166672,-0.087266,1.0,1.0,104,104],
[29,0,2,180,236,30,-18.067068,-158.814758,-0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,100.089485,-166.753845,-0.017453,1.0,1.0,20,27],
[11,0,658,84,138,126,-2.895292,-199.987457,-0.122173,1.0,1.0,60,120],
[9,0,926,2,74,142,-27.376574,-184.060532,1.239184,1.0,1.0,40,13],
[16,0,336,202,20,26,63.969635,-252.228058,-0.122173,1.0,1.0,10,13],
[20,0,278,202,34,28,7.533968,-252.104919,-0.122173,1.0,1.0,17,14],
[15,0,414,202,22,6,22.789038,-195.826309,-0.122173,1.0,1.0,11,3],
[17,0,1014,92,4,6,67.939819,-251.740585,-0.122173,1.0,1.0,2,3],
[21,0,1012,84,6,6,13.489244,-251.373703,-0.122173,1.0,1.0,3,3],
[18,0,650,100,4,4,61.740803,-250.486710,-0.122173,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.312591,-250.485428,-0.122173,1.0,1.0,5,2],
[13,0,798,84,106,150,-46.368408,-265.775879,-0.127991,1.0,1.0,58,34],
[14,0,390,100,162,78,18.990957,-287.976044,-0.122173,1.0,1.0,81,39],
[31,0,1002,84,8,10,106.140930,-169.648666,-0.017453,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.124084,-168.718643,-0.017453,1.0,1.0,3,1],
[24,0,390,2,266,96,7.811620,-295.393768,-0.112200,1.0,1.0,133,48],
[26,0,906,146,76,96,-47.192413,-289.515289,-0.112200,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.191672,-173.963425,-0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,6.105449,-282.331421,-0.122173,1.0,1.0,133,40],
[12,0,214,2,174,170,-9.792881,-292.343597,-0.122173,1.0,1.0,62,27],
[10,0,554,100,70,140,-7.452680,-183.150742,1.134464,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-131.0,-0.087266,1.0,1.0,104,104],
[29,0,2,180,236,30,-18.067068,-159.314758,-0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,100.089485,-167.253845,-0.017453,1.0,1.0,20,27],
[11,0,658,84,138,126,-2.895292,-200.820786,-0.122173,1.0,1.0,60,120],
[9,0,926,2,74,142,-27.376574,-184.893860,1.239184,1.0,1.0,40,13],
[16,0,336,202,20,26,63.969635,-253.061401,-0.122173,1.0,1.0,10,13],
[20,0,278,202,34,28,7.533968,-252.938263,-0.122173,1.0,1.0,17,14],
[15,0,414,202,22,6,22.789038,-196.659637,-0.122173,1.0,1.0,11,3],
[17,0,1014,92,4,6,67.939819,-252.573929,-0.122173,1.0,1.0,2,3],
[21,0,1012,84,6,6,13.489244,-252.207047,-0.122173,1.0,1.0,3,3],
[18,0,650,100,4,4,61.740803,-251.320053,-0.122173,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.312591,-251.318771,-0.122173,1.0,1.0,5,2],
[13,0,798,84,106,150,-46.202988,-266.588898,-0.122173,1.0,1.0,58,34],
[14,0,390,100,162,78,18.990957,-288.809387,-0.122173,1.0,1.0,81,39],
[31,0,1002,84,8,10,106.140930,-170.148666,-0.017453,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.124084,-169.218643,-0.017453,1.0,1.0,3,1],
[24,0,390,2,266,96,7.811620,-296.227081,-0.122173,1.0,1.0,133,48],
[26,0,906,146,76,96,-47.248306,-290.897461,-0.122173,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.191672,-173.963425,-0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,6.105449,-282.331421,-0.122173,1.0,1.0,133,40],
[12,0,214,2,174,170,-9.792881,-292.343597,-0.122173,1.0,1.0,62,27],
[10,0,554,100,70,140,-7.452680,-183.150742,1.134464,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-131.0,-0.087266,1.0,1.0,104,104],
[29,0,2,180,236,30,-18.067068,-159.314758,-0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,100.089485,-167.253845,-0.017453,1.0,1.0,20,27],
[11,0,658,84,138,126,-2.895292,-200.820786,-0.122173,1.0,1.0,60,120],
[9,0,926,2,74,142,-27.376574,-184.893860,1.239184,1.0,1.0,40,13],
[16,0,336,202,20,26,63.969635,-253.061401,-0.122173,1.0,1.0,10,13],
[20,0,278,202,34,28,7.533968,-252.938263,-0.122173,1.0,1.0,17,14],
[15,0,414,202,22,6,22.789038,-196.659637,-0.122173,1.0,1.0,11,3],
[17,0,1014,92,4,6,67.939819,-252.573929,-0.122173,1.0,1.0,2,3],
[21,0,1012,84,6,6,13.489244,-252.207047,-0.122173,1.0,1.0,3,3],
[18,0,650,100,4,4,61.740803,-251.320053,-0.122173,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.312591,-251.318771,-0.122173,1.0,1.0,5,2],
[13,0,798,84,106,150,-46.202988,-266.588898,-0.122173,1.0,1.0,58,34],
[14,0,390,100,162,78,18.990957,-288.809387,-0.122173,1.0,1.0,81,39],
[31,0,1002,84,8,10,106.140930,-170.148666,-0.017453,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.124084,-169.218643,-0.017453,1.0,1.0,3,1],
[24,0,390,2,266,96,7.811620,-296.227081,-0.122173,1.0,1.0,133,48],
[26,0,906,146,76,96,-47.248306,-290.897461,-0.122173,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.191672,-173.963425,-0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,6.105449,-282.331421,-0.122173,1.0,1.0,133,40],
[12,0,214,2,174,170,-9.792881,-292.343597,-0.122173,1.0,1.0,62,27],
[10,0,554,100,70,140,-7.452680,-183.150742,1.134464,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-131.0,-0.087266,1.0,1.0,104,104],
[29,0,2,180,236,30,-18.067068,-159.314758,-0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,100.089485,-167.253845,-0.017453,1.0,1.0,20,27],
[11,0,658,84,138,126,-2.895292,-200.820786,-0.122173,1.0,1.0,60,120],
[9,0,926,2,74,142,-27.376574,-184.893860,1.239184,1.0,1.0,40,13],
[16,0,336,202,20,26,63.969635,-253.061401,-0.122173,1.0,1.0,10,13],
[20,0,278,202,34,28,7.533968,-252.938263,-0.122173,1.0,1.0,17,14],
[15,0,414,202,22,6,22.789038,-196.659637,-0.122173,1.0,1.0,11,3],
[17,0,1014,92,4,6,67.939819,-252.573929,-0.122173,1.0,1.0,2,3],
[21,0,1012,84,6,6,13.489244,-252.207047,-0.122173,1.0,1.0,3,3],
[18,0,650,100,4,4,61.740803,-251.320053,-0.122173,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.312591,-251.318771,-0.122173,1.0,1.0,5,2],
[13,0,798,84,106,150,-46.202988,-266.588898,-0.122173,1.0,1.0,58,34],
[14,0,390,100,162,78,18.990957,-288.809387,-0.122173,1.0,1.0,81,39],
[31,0,1002,84,8,10,106.140930,-170.148666,-0.017453,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.124084,-169.218643,-0.017453,1.0,1.0,3,1],
[24,0,390,2,266,96,7.811620,-296.227081,-0.122173,1.0,1.0,133,48],
[26,0,906,146,76,96,-47.248306,-290.897461,-0.122173,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.191672,-173.963425,-0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,6.105449,-282.331421,-0.122173,1.0,1.0,133,40],
[12,0,214,2,174,170,-9.792881,-292.343597,-0.122173,1.0,1.0,62,27],
[10,0,554,100,70,140,-7.452680,-183.150742,1.134464,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-131.0,-0.087266,1.0,1.0,104,104],
[29,0,2,180,236,30,-18.067068,-159.314758,-0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,100.089485,-167.253845,-0.017453,1.0,1.0,20,27],
[11,0,658,84,138,126,-2.895292,-200.820786,-0.122173,1.0,1.0,60,120],
[9,0,926,2,74,142,-27.376574,-184.893860,1.239184,1.0,1.0,40,13],
[16,0,336,202,20,26,63.969635,-253.061401,-0.122173,1.0,1.0,10,13],
[20,0,278,202,34,28,7.533968,-252.938263,-0.122173,1.0,1.0,17,14],
[15,0,414,202,22,6,22.789038,-196.659637,-0.122173,1.0,1.0,11,3],
[17,0,1014,92,4,6,67.939819,-252.573929,-0.122173,1.0,1.0,2,3],
[21,0,1012,84,6,6,13.489244,-252.207047,-0.122173,1.0,1.0,3,3],
[18,0,650,100,4,4,61.740803,-251.320053,-0.122173,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.312591,-251.318771,-0.122173,1.0,1.0,5,2],
[13,0,798,84,106,150,-46.202988,-266.588898,-0.122173,1.0,1.0,58,34],
[14,0,390,100,162,78,18.990957,-288.809387,-0.122173,1.0,1.0,81,39],
[31,0,1002,84,8,10,106.140930,-170.148666,-0.017453,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.124084,-169.218643,-0.017453,1.0,1.0,3,1],
[24,0,390,2,266,96,7.811620,-296.227081,-0.122173,1.0,1.0,133,48],
[26,0,906,146,76,96,-47.248306,-290.897461,-0.122173,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.191672,-173.963425,-0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,6.105449,-282.331421,-0.122173,1.0,1.0,133,40],
[12,0,214,2,174,170,-9.792881,-292.343597,-0.122173,1.0,1.0,62,27],
[10,0,554,100,70,140,-7.452680,-183.150742,1.134464,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-131.0,-0.087266,1.0,1.0,104,104],
[29,0,2,180,236,30,-18.067068,-159.314758,-0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,100.089485,-167.253845,-0.017453,1.0,1.0,20,27],
[11,0,658,84,138,126,-2.895292,-200.820786,-0.122173,1.0,1.0,60,120],
[9,0,926,2,74,142,-27.376574,-184.893860,1.239184,1.0,1.0,40,13],
[16,0,336,202,20,26,63.969635,-253.061401,-0.122173,1.0,1.0,10,13],
[20,0,278,202,34,28,7.533968,-252.938263,-0.122173,1.0,1.0,17,14],
[15,0,414,202,22,6,22.789038,-196.659637,-0.122173,1.0,1.0,11,3],
[17,0,1014,92,4,6,67.939819,-252.573929,-0.122173,1.0,1.0,2,3],
[21,0,1012,84,6,6,13.489244,-252.207047,-0.122173,1.0,1.0,3,3],
[18,0,650,100,4,4,61.740803,-251.320053,-0.122173,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.312591,-251.318771,-0.122173,1.0,1.0,5,2],
[13,0,798,84,106,150,-46.202988,-266.588898,-0.122173,1.0,1.0,58,34],
[14,0,390,100,162,78,18.990957,-288.809387,-0.122173,1.0,1.0,81,39],
[31,0,1002,84,8,10,106.140930,-170.148666,-0.017453,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.124084,-169.218643,-0.017453,1.0,1.0,3,1],
[24,0,390,2,266,96,7.811620,-296.227081,-0.122173,1.0,1.0,133,48],
[26,0,906,146,76,96,-47.248306,-290.897461,-0.122173,1.0,1.0,48,90]
]
]
}
}
]

},{}],79:[function(require,module,exports){
module.exports=[
{
"images":["koishi.png"],
"name": "reaction_look_bottom_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 500,
"MarginWidth": 258,
"MarginHeight": 508,
"parts": ["root","Chara","koishi0_bottom0","koishi0_thighs_l0","koishi0_calf_l0","koishi0_foot_l0","koishi0_thighs_r0","koishi0_calf_r0","koishi0_foot_r0","koishi0_body","koishi0_arm0_r0","koishi0_arm0_l0","koishi0_head0","koishi0_hear_b0","koishi0_hear_f1","koishi0_hear_f0","koishi0_mouth0","koishi0_eye0_l0","koishi0_eye0_l1","koishi0_eye0_l2","koishi0_eye1_l0","koishi0_eye0_r0","koishi0_eye0_r1","koishi0_eye0_r2","koishi0_eye1_r0","koishi0_hat0_f0","koishi0_hat0_b0","koishi0_hat0_obj0","3rdeye0_all","3rdeye0_cord_b0","3rdeye0_cord_f0","3rdeye0_body0","3rdeye0_eye0","3rdeye0_light0","3rdeye0_eye1"],
"ssa": [
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-173.0,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-10.0,-292.0,0.0,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-300.0,0.0,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-210.0,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-270.0,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-263.0,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-209.0,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-270.0,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-263.0,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-268.0,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-261.0,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-270.0,0.0,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-300.0,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-158.0,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-168.0,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.0,-171.0,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.0,-170.0,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-306.0,0.0,1.0,1.0,133,48],
[26,0,906,146,76,96,-64.0,-294.0,0.0,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.095916,-172.982132,-0.008727,1.0,1.0,135,10],
[25,0,658,2,266,80,-6.064755,-291.486816,-0.023271,1.0,1.0,133,40],
[12,0,214,2,174,170,-22.672369,-300.021973,-0.027634,1.0,1.0,62,27],
[10,0,554,100,70,140,26.412483,-204.800995,0.011636,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.005818,1.0,1.0,104,104],
[9,0,926,2,74,142,-39.609673,-201.185028,-0.136717,1.0,1.0,40,13],
[11,0,658,84,138,126,-7.810757,-209.500183,-0.031998,1.0,1.0,60,120],
[16,0,336,202,20,26,54.078064,-267.549927,-0.031998,1.0,1.0,10,13],
[20,0,278,202,34,28,-2.117216,-262.345093,-0.031998,1.0,1.0,17,14],
[15,0,414,202,22,6,16.378841,-207.225143,-0.031998,1.0,1.0,11,3],
[17,0,1014,92,4,6,57.270412,-265.696838,-0.031998,1.0,1.0,2,3],
[21,0,1012,84,6,6,3.581853,-260.661896,-0.031998,1.0,1.0,3,3],
[18,0,650,100,4,4,52.015102,-265.614929,-0.031998,1.0,1.0,2,2],
[22,0,1002,96,10,4,-5.179665,-260.442108,-0.031998,1.0,1.0,5,2],
[13,0,798,84,106,150,-57.114986,-271.109070,-0.040724,1.0,1.0,58,34],
[14,0,390,100,162,78,6.062914,-299.102203,-0.031998,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.034222,-158.157227,-0.008727,1.0,1.0,118,15],
[30,0,512,180,40,54,100.045639,-166.793793,-0.037815,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.116959,-168.565521,-0.037815,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.119820,-168.716751,-0.037815,1.0,1.0,3,1],
[24,0,390,2,266,96,-5.738990,-305.483032,-0.023271,1.0,1.0,133,48],
[26,0,906,146,76,96,-60.003597,-294.742798,-0.009308,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.191672,-172.963425,-0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,-2.137330,-290.871704,-0.046542,1.0,1.0,133,40],
[12,0,214,2,174,170,-18.335911,-299.924011,-0.055269,1.0,1.0,62,27],
[10,0,554,100,70,140,26.823803,-204.599594,0.023271,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.011636,1.0,1.0,104,104],
[9,0,926,2,74,142,-39.218269,-201.367798,-0.168715,1.0,1.0,40,13],
[11,0,658,84,138,126,-6.627389,-208.989105,-0.063995,1.0,1.0,60,120],
[16,0,336,202,20,26,57.086895,-265.029175,-0.063995,1.0,1.0,10,13],
[20,0,278,202,34,28,0.753865,-261.624817,-0.063995,1.0,1.0,17,14],
[15,0,414,202,22,6,15.698649,-205.554291,-0.063995,1.0,1.0,11,3],
[17,0,1014,92,4,6,59.357948,-261.376465,-0.063995,1.0,1.0,2,3],
[21,0,1012,84,6,6,6.050751,-258.279236,-0.063995,1.0,1.0,3,3],
[18,0,650,100,4,4,54.963085,-263.161163,-0.063995,1.0,1.0,2,2],
[22,0,1002,96,10,4,-2.367898,-259.820770,-0.063995,1.0,1.0,5,2],
[13,0,798,84,106,150,-54.184864,-272.159790,-0.081449,1.0,1.0,58,34],
[14,0,390,100,162,78,10.105750,-298.101410,-0.063995,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.067068,-158.314758,-0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,100.077850,-165.587280,-0.075631,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.136261,-166.131073,-0.075631,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.223251,-167.430450,-0.075631,1.0,1.0,3,1],
[24,0,390,2,266,96,-1.485976,-304.856537,-0.046542,1.0,1.0,133,48],
[26,0,906,146,76,96,-55.985806,-295.381897,-0.018617,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.287261,-172.943878,-0.026180,1.0,1.0,135,10],
[25,0,658,2,266,80,1.779219,-290.154785,-0.069813,1.0,1.0,133,40],
[12,0,214,2,174,170,-13.994453,-299.705811,-0.082903,1.0,1.0,62,27],
[10,0,554,100,70,140,27.233944,-204.395813,0.034907,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.017453,1.0,1.0,104,104],
[9,0,926,2,74,142,-38.825813,-201.548279,-0.200713,1.0,1.0,40,13],
[11,0,658,84,138,126,-5.449986,-208.466827,-0.095993,1.0,1.0,60,120],
[16,0,336,202,20,26,60.024532,-262.439850,-0.095993,1.0,1.0,10,13],
[20,0,278,202,34,28,3.611423,-260.839447,-0.095993,1.0,1.0,17,14],
[15,0,414,202,22,6,14.964869,-203.989532,-0.095993,1.0,1.0,11,3],
[17,0,1014,92,4,6,61.263287,-257.046295,-0.095993,1.0,1.0,2,3],
[21,0,1012,84,6,6,8.405948,-255.856979,-0.095993,1.0,1.0,3,3],
[18,0,650,100,4,4,57.842049,-260.640747,-0.095993,1.0,1.0,2,2],
[22,0,1002,96,10,4,0.433543,-259.136200,-0.095993,1.0,1.0,5,2],
[13,0,798,84,106,150,-51.210995,-273.150635,-0.122173,1.0,1.0,58,34],
[14,0,390,100,162,78,14.125489,-296.998169,-0.095993,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.098539,-158.472549,-0.026180,1.0,1.0,118,15],
[30,0,512,180,40,54,100.096619,-164.380585,-0.113446,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.058052,-163.701370,-0.113446,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.310165,-166.141327,-0.113446,1.0,1.0,3,1],
[24,0,390,2,266,96,2.755810,-304.120697,-0.069813,1.0,1.0,133,48],
[26,0,906,146,76,96,-51.949726,-295.916779,-0.027925,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,5.681841,-289.336426,-0.093084,1.0,1.0,133,40],
[12,0,214,2,174,170,-9.651836,-299.367157,-0.110538,1.0,1.0,62,27],
[10,0,554,100,70,140,27.642891,-204.189636,0.046542,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.023271,1.0,1.0,104,104],
[9,0,926,2,74,142,-38.432316,-201.726471,-0.232711,1.0,1.0,40,13],
[11,0,658,84,138,126,-4.278639,-207.933426,-0.127991,1.0,1.0,60,120],
[16,0,336,202,20,26,62.889076,-259.784149,-0.127991,1.0,1.0,10,13],
[20,0,278,202,34,28,6.453650,-259.989349,-0.127991,1.0,1.0,17,14],
[15,0,414,202,22,6,14.183023,-202.532776,-0.127991,1.0,1.0,11,3],
[17,0,1014,92,4,6,62.987404,-252.713760,-0.127991,1.0,1.0,2,3],
[21,0,1012,84,6,6,10.646902,-253.400223,-0.127991,1.0,1.0,3,3],
[18,0,650,100,4,4,60.650154,-258.055786,-0.127991,1.0,1.0,2,2],
[22,0,1002,96,10,4,3.222905,-258.388641,-0.127991,1.0,1.0,5,2],
[13,0,798,84,106,150,-48.194801,-274.080017,-0.162897,1.0,1.0,58,34],
[14,0,390,100,162,78,18.119133,-295.793213,-0.127991,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,100.101944,-163.173874,-0.151262,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.882751,-161.281174,-0.151262,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.380478,-164.849670,-0.151262,1.0,1.0,3,1],
[24,0,390,2,266,96,6.983139,-303.275818,-0.093084,1.0,1.0,133,48],
[26,0,906,146,76,96,-47.898483,-296.347046,-0.037234,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.477910,-172.902298,-0.043633,1.0,1.0,135,10],
[25,0,658,2,266,80,6.536694,-289.259125,-0.102393,1.0,1.0,133,40],
[12,0,214,2,174,170,-8.854922,-299.396210,-0.119264,1.0,1.0,62,27],
[10,0,554,100,70,140,28.050632,-203.981079,0.058178,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.029089,1.0,1.0,104,104],
[9,0,926,2,74,142,-38.037788,-201.902374,-0.264708,1.0,1.0,40,13],
[11,0,658,84,138,126,-3.848577,-207.910522,-0.133809,1.0,1.0,60,120],
[16,0,336,202,20,26,63.619663,-259.369598,-0.133809,1.0,1.0,10,13],
[20,0,278,202,34,28,7.186378,-259.903107,-0.133809,1.0,1.0,17,14],
[15,0,414,202,22,6,14.581352,-202.402557,-0.133809,1.0,1.0,11,3],
[17,0,1014,92,4,6,63.676857,-252.298767,-0.133809,1.0,1.0,2,3],
[21,0,1012,84,6,6,11.341225,-253.289688,-0.133809,1.0,1.0,3,3],
[18,0,650,100,4,4,61.370724,-257.654297,-0.133809,1.0,1.0,2,2],
[22,0,1002,96,10,4,3.946376,-258.321228,-0.133809,1.0,1.0,5,2],
[13,0,798,84,106,150,-47.213989,-274.289246,-0.162897,1.0,1.0,58,34],
[14,0,390,100,162,78,19.059961,-295.638489,-0.133809,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.157345,-158.788956,-0.043633,1.0,1.0,118,15],
[30,0,512,180,40,54,100.093842,-161.967270,-0.189077,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.798958,-159.857376,-0.189077,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.434105,-163.555725,-0.189077,1.0,1.0,3,1],
[24,0,390,2,266,96,7.967687,-303.185791,-0.102393,1.0,1.0,133,48],
[26,0,906,146,76,96,-46.976051,-296.768188,-0.032579,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.572955,-172.880249,-0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,7.391129,-289.177277,-0.111701,1.0,1.0,133,40],
[12,0,214,2,174,170,-8.057724,-299.421600,-0.127991,1.0,1.0,62,27],
[10,0,554,100,70,140,28.457153,-203.770172,0.069813,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-37.642242,-202.075958,-0.296706,1.0,1.0,40,13],
[11,0,658,84,138,126,-3.418655,-207.885132,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,64.347816,-258.950836,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,7.918591,-259.812653,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,14.978918,-202.270035,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,64.363876,-251.879791,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,12.034893,-253.175171,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,62.088936,-257.248657,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.669441,-258.249634,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-46.232121,-274.491821,-0.162897,1.0,1.0,58,34],
[14,0,390,100,162,78,19.999872,-295.478363,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.184675,-158.947525,-0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,100.072296,-160.760925,-0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.693565,-158.436844,-0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.470940,-162.259766,-0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,8.951694,-303.090027,-0.111701,1.0,1.0,133,48],
[26,0,906,146,76,96,-46.049400,-297.184143,-0.055851,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.572955,-172.880249,-0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,7.342575,-289.182800,-0.115192,1.0,1.0,133,40],
[12,0,214,2,174,170,-8.222768,-299.444794,-0.130900,1.0,1.0,62,27],
[10,0,554,100,70,140,28.457153,-203.770172,0.087266,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-37.642242,-202.075958,-0.322886,1.0,1.0,40,13],
[11,0,658,84,138,126,-3.418655,-207.885132,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,64.347816,-258.950836,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,7.918591,-259.812653,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,14.978918,-202.270035,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,64.363876,-251.879791,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,12.034893,-253.175171,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,62.088936,-257.248657,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.669441,-258.249634,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-46.067074,-274.468628,-0.157080,1.0,1.0,58,34],
[14,0,390,100,162,78,19.999872,-295.478363,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.184675,-158.947525,-0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,100.072296,-160.760925,-0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.693565,-158.436844,-0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.470940,-162.259766,-0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,8.951694,-303.090027,-0.115192,1.0,1.0,133,48],
[26,0,906,146,76,96,-46.069679,-297.376160,-0.073304,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.572955,-172.880249,-0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,7.294039,-289.188507,-0.118682,1.0,1.0,133,40],
[12,0,214,2,174,170,-8.387812,-299.467987,-0.133809,1.0,1.0,62,27],
[10,0,554,100,70,140,28.457153,-203.770172,0.104720,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-37.642242,-202.075958,-0.349066,1.0,1.0,40,13],
[11,0,658,84,138,126,-3.418655,-207.885132,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,64.347816,-258.950836,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,7.918591,-259.812653,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,14.978918,-202.270035,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,64.363876,-251.879791,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,12.034893,-253.175171,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,62.088936,-257.248657,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.669441,-258.249634,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-45.902027,-274.445435,-0.151262,1.0,1.0,58,34],
[14,0,390,100,162,78,19.999872,-295.478363,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.184675,-158.947525,-0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,100.072296,-160.760925,-0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.693565,-158.436844,-0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.470940,-162.259766,-0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,8.951694,-303.090027,-0.118682,1.0,1.0,133,48],
[26,0,906,146,76,96,-46.089291,-297.568268,-0.090757,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.572955,-172.880249,-0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,7.245523,-289.194366,-0.122173,1.0,1.0,133,40],
[12,0,214,2,174,170,-8.552857,-299.491180,-0.136717,1.0,1.0,62,27],
[10,0,554,100,70,140,28.457153,-203.770172,0.122173,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-37.642242,-202.075958,-0.375246,1.0,1.0,40,13],
[11,0,658,84,138,126,-3.418655,-207.885132,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,64.347816,-258.950836,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,7.918591,-259.812653,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,14.978918,-202.270035,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,64.363876,-251.879791,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,12.034893,-253.175171,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,62.088936,-257.248657,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.669441,-258.249634,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-45.736988,-274.422241,-0.145444,1.0,1.0,58,34],
[14,0,390,100,162,78,19.999872,-295.478363,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.184675,-158.947525,-0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,100.072296,-160.760925,-0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.693565,-158.436844,-0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.470940,-162.259766,-0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,8.951694,-303.090027,-0.122173,1.0,1.0,133,48],
[26,0,906,146,76,96,-46.108231,-297.760406,-0.108210,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.572955,-172.880249,-0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,7.197029,-289.200409,-0.125664,1.0,1.0,133,40],
[12,0,214,2,174,170,-8.717901,-299.514374,-0.139626,1.0,1.0,62,27],
[10,0,554,100,70,140,28.457153,-203.770172,0.139626,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-37.642242,-202.075958,-0.401426,1.0,1.0,40,13],
[11,0,658,84,138,126,-3.418655,-207.885132,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,64.347816,-258.950836,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,7.918591,-259.812653,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,14.978918,-202.270035,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,64.363876,-251.879791,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,12.034893,-253.175171,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,62.088936,-257.248657,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.669441,-258.249634,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-45.571941,-274.399048,-0.139626,1.0,1.0,58,34],
[14,0,390,100,162,78,19.999872,-295.478363,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.184675,-158.947525,-0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,100.072296,-160.760925,-0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.693565,-158.436844,-0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.470940,-162.259766,-0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,8.951694,-303.090027,-0.125664,1.0,1.0,133,48],
[26,0,906,146,76,96,-46.126499,-297.952637,-0.125664,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.572955,-172.880249,-0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,7.148556,-289.206635,-0.129154,1.0,1.0,133,40],
[12,0,214,2,174,170,-8.717901,-299.514374,-0.139626,1.0,1.0,62,27],
[10,0,554,100,70,140,28.457153,-203.770172,0.139626,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-37.642242,-202.075958,-0.401426,1.0,1.0,40,13],
[11,0,658,84,138,126,-3.418655,-207.885132,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,64.347816,-258.950836,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,7.918591,-259.812653,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,14.978918,-202.270035,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,64.363876,-251.879791,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,12.034893,-253.175171,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,62.088936,-257.248657,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.669441,-258.249634,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-45.571941,-274.399048,-0.139626,1.0,1.0,58,34],
[14,0,390,100,162,78,19.999872,-295.478363,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.184675,-158.947525,-0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,100.072296,-160.760925,-0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.693565,-158.436844,-0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.470940,-162.259766,-0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,8.951694,-303.090027,-0.129154,1.0,1.0,133,48],
[26,0,906,146,76,96,-46.144096,-298.144928,-0.129154,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.572955,-172.880249,-0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,7.100105,-289.213013,-0.132645,1.0,1.0,133,40],
[12,0,214,2,174,170,-8.717901,-299.514374,-0.139626,1.0,1.0,62,27],
[10,0,554,100,70,140,28.457153,-203.770172,0.139626,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-37.642242,-202.075958,-0.401426,1.0,1.0,40,13],
[11,0,658,84,138,126,-3.418655,-207.885132,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,64.347816,-258.950836,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,7.918591,-259.812653,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,14.978918,-202.270035,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,64.363876,-251.879791,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,12.034893,-253.175171,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,62.088936,-257.248657,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.669441,-258.249634,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-45.571941,-274.399048,-0.139626,1.0,1.0,58,34],
[14,0,390,100,162,78,19.999872,-295.478363,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.184675,-158.947525,-0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,100.072296,-160.760925,-0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.693565,-158.436844,-0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.470940,-162.259766,-0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,8.951694,-303.090027,-0.132645,1.0,1.0,133,48],
[26,0,906,146,76,96,-46.161022,-298.337280,-0.132645,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.572955,-172.880249,-0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,7.051677,-289.219543,-0.136136,1.0,1.0,133,40],
[12,0,214,2,174,170,-8.717901,-299.514374,-0.139626,1.0,1.0,62,27],
[10,0,554,100,70,140,28.457153,-203.770172,0.139626,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-37.642242,-202.075958,-0.401426,1.0,1.0,40,13],
[11,0,658,84,138,126,-3.418655,-207.885132,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,64.347816,-258.950836,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,7.918591,-259.812653,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,14.978918,-202.270035,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,64.363876,-251.879791,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,12.034893,-253.175171,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,62.088936,-257.248657,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.669441,-258.249634,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-45.571941,-274.399048,-0.139626,1.0,1.0,58,34],
[14,0,390,100,162,78,19.999872,-295.478363,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.184675,-158.947525,-0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,100.072296,-160.760925,-0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.693565,-158.436844,-0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.470940,-162.259766,-0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,8.951694,-303.090027,-0.136136,1.0,1.0,133,48],
[26,0,906,146,76,96,-46.177277,-298.529694,-0.136136,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.572955,-172.880249,-0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,7.003271,-289.226288,-0.139626,1.0,1.0,133,40],
[12,0,214,2,174,170,-8.717901,-299.514374,-0.139626,1.0,1.0,62,27],
[10,0,554,100,70,140,28.457153,-203.770172,0.139626,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-37.642242,-202.075958,-0.401426,1.0,1.0,40,13],
[11,0,658,84,138,126,-3.418655,-207.885132,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,64.347816,-258.950836,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,7.918591,-259.812653,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,14.978918,-202.270035,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,64.363876,-251.879791,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,12.034893,-253.175171,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,62.088936,-257.248657,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.669441,-258.249634,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-45.571941,-274.399048,-0.139626,1.0,1.0,58,34],
[14,0,390,100,162,78,19.999872,-295.478363,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.184675,-158.947525,-0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,100.072296,-160.760925,-0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.693565,-158.436844,-0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.470940,-162.259766,-0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,8.951694,-303.090027,-0.139626,1.0,1.0,133,48],
[26,0,906,146,76,96,-46.192860,-298.722168,-0.139626,1.0,1.0,48,90]
]
]
}
}
]

},{}],80:[function(require,module,exports){
module.exports=[
{
"images":["koishi.png"],
"name": "reaction_look_front_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 500,
"MarginWidth": 258,
"MarginHeight": 508,
"parts": ["root","Chara","koishi0_bottom0","koishi0_thighs_l0","koishi0_calf_l0","koishi0_foot_l0","koishi0_thighs_r0","koishi0_calf_r0","koishi0_foot_r0","koishi0_body","koishi0_arm0_r0","koishi0_arm0_l0","koishi0_head0","koishi0_hear_b0","koishi0_hear_f1","koishi0_hear_f0","koishi0_mouth0","koishi0_eye0_l0","koishi0_eye0_l1","koishi0_eye0_l2","koishi0_eye1_l0","koishi0_eye0_r0","koishi0_eye0_r1","koishi0_eye0_r2","koishi0_eye1_r0","koishi0_hat0_f0","koishi0_hat0_b0","koishi0_hat0_obj0","3rdeye0_all","3rdeye0_cord_b0","3rdeye0_cord_f0","3rdeye0_body0","3rdeye0_eye0","3rdeye0_light0","3rdeye0_eye1"],
"ssa": [
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-173.0,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-10.0,-292.0,0.0,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-300.0,0.0,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-210.0,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-270.0,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-263.0,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-209.0,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-270.0,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-263.0,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-268.0,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-261.0,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-270.0,0.0,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-300.0,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-158.0,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-168.0,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.0,-171.0,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.0,-170.0,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-306.0,0.0,1.0,1.0,133,48],
[26,0,906,146,76,96,-64.0,-294.0,0.0,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,3.063961,-172.988174,-0.005818,1.0,1.0,135,10],
[25,0,658,2,266,80,-6.884779,-291.988953,0.008727,1.0,1.0,133,40],
[12,0,214,2,174,170,-23.756950,-299.988434,0.004363,1.0,1.0,62,27],
[10,0,554,100,70,140,27.900610,-204.395813,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-7.333333,-134.0,-0.017453,1.0,1.0,104,104],
[9,0,926,2,74,142,-38.159149,-201.548279,-0.148353,1.0,1.0,40,13],
[11,0,658,84,138,126,-6.006950,-209.988434,-0.000000,1.0,1.0,60,120],
[16,0,336,202,20,26,53.993050,-269.988434,-0.000000,1.0,1.0,10,13],
[20,0,278,202,34,28,-2.006950,-262.988434,-0.000000,1.0,1.0,17,14],
[15,0,414,202,22,6,18.243050,-208.488434,-0.000000,1.0,1.0,11,3],
[17,0,1014,92,4,6,58.243050,-269.988434,-0.000000,1.0,1.0,2,3],
[21,0,1012,84,6,6,4.493050,-262.988434,-0.000000,1.0,1.0,3,3],
[18,0,650,100,4,4,51.993050,-267.988434,-0.000000,1.0,1.0,2,2],
[22,0,1002,96,10,4,-5.006950,-260.988434,-0.000000,1.0,1.0,5,2],
[13,0,798,84,106,150,-57.256950,-269.988434,-0.008727,1.0,1.0,58,34],
[14,0,390,100,162,78,4.993050,-299.988434,-0.000000,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.022966,-158.104782,-0.005818,1.0,1.0,118,15],
[30,0,512,180,40,54,101.699867,-167.414246,-0.017453,1.0,1.0,20,27],
[31,0,1002,84,8,10,108.251236,-170.300354,-0.017453,1.0,1.0,4,5],
[32,0,1014,100,6,2,103.734467,-169.379044,-0.017453,1.0,1.0,3,1],
[24,0,390,2,266,96,-7.006950,-305.988434,0.008727,1.0,1.0,133,48],
[26,0,906,146,76,96,-60.900177,-293.517670,0.022689,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,4.127852,-172.975983,-0.011636,1.0,1.0,135,10],
[25,0,658,2,266,80,-3.770579,-291.920929,0.017453,1.0,1.0,133,40],
[12,0,214,2,174,170,-20.514914,-299.918793,0.008727,1.0,1.0,62,27],
[10,0,554,100,70,140,29.790487,-203.770172,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-6.666667,-134.0,-0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-36.308907,-202.075958,-0.191986,1.0,1.0,40,13],
[11,0,658,84,138,126,-3.014914,-209.918793,-0.000000,1.0,1.0,60,120],
[16,0,336,202,20,26,56.985085,-269.918793,-0.000000,1.0,1.0,10,13],
[20,0,278,202,34,28,0.985086,-262.918793,-0.000000,1.0,1.0,17,14],
[15,0,414,202,22,6,19.485086,-207.918793,-0.000000,1.0,1.0,11,3],
[17,0,1014,92,4,6,61.485085,-269.918793,-0.000000,1.0,1.0,2,3],
[21,0,1012,84,6,6,7.985086,-262.918793,-0.000000,1.0,1.0,3,3],
[18,0,650,100,4,4,54.985085,-267.918793,-0.000000,1.0,1.0,2,2],
[22,0,1002,96,10,4,-2.014914,-260.918793,-0.000000,1.0,1.0,5,2],
[13,0,798,84,106,150,-54.514915,-269.918793,-0.017453,1.0,1.0,58,34],
[14,0,390,100,162,78,7.985086,-299.918793,-0.000000,1.0,1.0,81,39],
[29,0,2,180,236,30,-16.045322,-158.209702,-0.011636,1.0,1.0,118,15],
[30,0,512,180,40,54,103.396286,-166.820557,-0.034907,1.0,1.0,20,27],
[31,0,1002,84,8,10,110.496719,-169.574432,-0.034907,1.0,1.0,4,5],
[32,0,1014,100,6,2,105.464867,-168.749542,-0.034907,1.0,1.0,3,1],
[24,0,390,2,266,96,-4.014913,-305.918793,0.017453,1.0,1.0,133,48],
[26,0,906,146,76,96,-57.797256,-292.978180,0.045379,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,5.191672,-172.963425,-0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,-0.658731,-291.795959,0.026180,1.0,1.0,133,40],
[12,0,214,2,174,170,-17.275208,-299.791168,0.013090,1.0,1.0,62,27],
[10,0,554,100,70,140,31.669258,-203.123276,0.000000,1.0,1.0,20,13],
[8,0,2,2,210,176,-6.0,-134.0,-0.052360,1.0,1.0,104,104],
[9,0,926,2,74,142,-34.449638,-202.582932,-0.235619,1.0,1.0,40,13],
[11,0,658,84,138,126,-0.025208,-209.791168,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,59.974792,-269.791168,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,3.974792,-262.791168,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,20.724792,-207.291168,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,64.724792,-269.791168,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,11.474792,-262.791168,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,57.974792,-267.791168,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,0.974792,-260.791168,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-51.775208,-269.791168,-0.026180,1.0,1.0,58,34],
[14,0,390,100,162,78,10.974792,-299.791168,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-15.067068,-158.314758,-0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,105.089180,-166.218933,-0.052360,1.0,1.0,20,27],
[31,0,1002,84,8,10,112.735909,-168.822296,-0.052360,1.0,1.0,4,5],
[32,0,1014,100,6,2,107.191109,-168.111526,-0.052360,1.0,1.0,3,1],
[24,0,390,2,266,96,-1.025208,-305.791168,0.026180,1.0,1.0,133,48],
[26,0,906,146,76,96,-54.692581,-292.381714,0.068068,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,6.255417,-172.950485,-0.023271,1.0,1.0,135,10],
[25,0,658,2,266,80,2.449445,-291.614105,0.034907,1.0,1.0,133,40],
[12,0,214,2,174,170,-14.039148,-299.605591,0.017453,1.0,1.0,62,27],
[10,0,554,100,70,140,33.536556,-202.455322,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-5.333333,-134.0,-0.069813,1.0,1.0,104,104],
[9,0,926,2,74,142,-32.581699,-203.069000,-0.279253,1.0,1.0,40,13],
[11,0,658,84,138,126,2.960852,-209.605591,-0.000000,1.0,1.0,60,120],
[16,0,336,202,20,26,62.960854,-269.605591,-0.000000,1.0,1.0,10,13],
[20,0,278,202,34,28,6.960852,-262.605591,-0.000000,1.0,1.0,17,14],
[15,0,414,202,22,6,21.960852,-206.605591,-0.000000,1.0,1.0,11,3],
[17,0,1014,92,4,6,67.960854,-269.605591,-0.000000,1.0,1.0,2,3],
[21,0,1012,84,6,6,14.960852,-262.605591,-0.000000,1.0,1.0,3,3],
[18,0,650,100,4,4,60.960854,-267.605591,-0.000000,1.0,1.0,2,2],
[22,0,1002,96,10,4,3.960852,-260.605591,-0.000000,1.0,1.0,5,2],
[13,0,798,84,106,150,-49.039146,-269.605591,-0.034907,1.0,1.0,58,34],
[14,0,390,100,162,78,13.960853,-299.605591,-0.000000,1.0,1.0,81,39],
[29,0,2,180,236,30,-14.088202,-158.419922,-0.023271,1.0,1.0,118,15],
[30,0,512,180,40,54,106.778481,-165.609436,-0.069813,1.0,1.0,20,27],
[31,0,1002,84,8,10,114.968262,-168.044083,-0.069813,1.0,1.0,4,5],
[32,0,1014,100,6,2,108.913124,-167.465057,-0.069813,1.0,1.0,3,1],
[24,0,390,2,266,96,1.960852,-305.605591,0.034907,1.0,1.0,133,48],
[26,0,906,146,76,96,-51.587456,-291.728333,0.090757,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,7.319086,-172.937180,-0.029089,1.0,1.0,135,10],
[25,0,658,2,266,80,5.816806,-291.453552,0.013963,1.0,1.0,133,40],
[12,0,214,2,174,170,-10.647582,-299.735229,-0.002909,1.0,1.0,62,27],
[10,0,554,100,70,140,35.392010,-201.766525,0.000000,1.0,1.0,20,13],
[8,0,2,2,210,176,-4.666667,-134.0,-0.087266,1.0,1.0,104,104],
[9,0,926,2,74,142,-30.705463,-203.534027,-0.322886,1.0,1.0,40,13],
[11,0,658,84,138,126,4.945753,-209.449341,-0.017453,1.0,1.0,60,120],
[16,0,336,202,20,26,65.983757,-268.393066,-0.017453,1.0,1.0,10,13],
[20,0,278,202,34,28,9.870121,-262.371460,-0.017453,1.0,1.0,17,14],
[15,0,414,202,22,6,23.890503,-206.118195,-0.017453,1.0,1.0,11,3],
[17,0,1014,92,4,6,70.982994,-268.305817,-0.017453,1.0,1.0,2,3],
[21,0,1012,84,6,6,17.868902,-262.231842,-0.017453,1.0,1.0,3,3],
[18,0,650,100,4,4,63.949158,-266.428284,-0.017453,1.0,1.0,2,2],
[22,0,1002,96,10,4,6.835673,-260.424133,-0.017453,1.0,1.0,5,2],
[13,0,798,84,106,150,-45.832542,-270.344818,-0.046542,1.0,1.0,58,34],
[14,0,390,100,162,78,17.514793,-299.243652,-0.017453,1.0,1.0,81,39],
[29,0,2,180,236,30,-13.108725,-158.525223,-0.029089,1.0,1.0,118,15],
[30,0,512,180,40,54,108.464127,-164.992035,-0.087266,1.0,1.0,20,27],
[31,0,1002,84,8,10,116.695152,-167.283371,-0.087266,1.0,1.0,4,5],
[32,0,1014,100,6,2,110.630829,-166.810120,-0.087266,1.0,1.0,3,1],
[24,0,390,2,266,96,5.621336,-305.452179,0.013963,1.0,1.0,133,48],
[26,0,906,146,76,96,-48.205856,-292.699402,0.083776,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,9.180953,-291.246826,-0.006981,1.0,1.0,133,40],
[12,0,214,2,174,170,-7.254091,-299.820190,-0.023271,1.0,1.0,62,27],
[10,0,554,100,70,140,37.235264,-201.057083,0.000000,1.0,1.0,20,13],
[8,0,2,2,210,176,-4.0,-134.0,-0.104720,1.0,1.0,104,104],
[9,0,926,2,74,142,-28.821293,-203.977875,-0.366519,1.0,1.0,40,13],
[11,0,658,84,138,126,6.927729,-209.270081,-0.034907,1.0,1.0,60,120],
[16,0,336,202,20,26,68.985146,-267.139557,-0.034907,1.0,1.0,10,13],
[20,0,278,202,34,28,12.774965,-262.098206,-0.034907,1.0,1.0,17,14],
[15,0,414,202,22,6,25.811457,-205.608810,-0.034907,1.0,1.0,11,3],
[17,0,1014,92,4,6,73.982101,-266.965057,-0.034907,1.0,1.0,2,3],
[21,0,1012,84,6,6,20.770092,-261.819000,-0.034907,1.0,1.0,3,3],
[18,0,650,100,4,4,66.916565,-265.210571,-0.034907,1.0,1.0,2,2],
[22,0,1002,96,10,4,9.706994,-260.204132,-0.034907,1.0,1.0,5,2],
[13,0,798,84,106,150,-42.613495,-271.036682,-0.058178,1.0,1.0,58,34],
[14,0,390,100,162,78,21.061983,-298.831360,-0.034907,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,110.146042,-164.366791,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,118.415802,-166.514130,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,112.344139,-166.146774,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,9.278690,-305.246490,-0.006981,1.0,1.0,133,48],
[26,0,906,146,76,96,-44.803768,-293.623779,0.048869,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,9.132085,-291.247253,-0.010472,1.0,1.0,133,40],
[12,0,214,2,174,170,-7.420656,-299.825989,-0.026180,1.0,1.0,62,27],
[10,0,554,100,70,140,37.235264,-201.057083,0.017453,1.0,1.0,20,13],
[8,0,2,2,210,176,-4.0,-134.0,-0.104720,1.0,1.0,104,104],
[9,0,926,2,74,142,-28.821293,-203.977875,-0.392699,1.0,1.0,40,13],
[11,0,658,84,138,126,6.927729,-209.270081,-0.034907,1.0,1.0,60,120],
[16,0,336,202,20,26,68.985146,-267.139557,-0.034907,1.0,1.0,10,13],
[20,0,278,202,34,28,12.774965,-262.098206,-0.034907,1.0,1.0,17,14],
[15,0,414,202,22,6,25.811457,-205.608810,-0.034907,1.0,1.0,11,3],
[17,0,1014,92,4,6,73.982101,-266.965057,-0.034907,1.0,1.0,2,3],
[21,0,1012,84,6,6,20.770092,-261.819000,-0.034907,1.0,1.0,3,3],
[18,0,650,100,4,4,66.916565,-265.210571,-0.034907,1.0,1.0,2,2],
[22,0,1002,96,10,4,9.706994,-260.204132,-0.034907,1.0,1.0,5,2],
[13,0,798,84,106,150,-42.446930,-271.030853,-0.052360,1.0,1.0,58,34],
[14,0,390,100,162,78,21.061983,-298.831360,-0.034907,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,110.146042,-164.366791,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,118.415802,-166.514130,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,112.344139,-166.146774,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,9.278690,-305.246490,-0.010472,1.0,1.0,133,48],
[26,0,906,146,76,96,-44.844009,-293.812622,0.031416,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,9.083220,-291.247864,-0.013963,1.0,1.0,133,40],
[12,0,214,2,174,170,-7.587220,-299.831818,-0.029089,1.0,1.0,62,27],
[10,0,554,100,70,140,37.235264,-201.057083,0.034907,1.0,1.0,20,13],
[8,0,2,2,210,176,-4.0,-134.0,-0.104720,1.0,1.0,104,104],
[9,0,926,2,74,142,-28.821293,-203.977875,-0.418879,1.0,1.0,40,13],
[11,0,658,84,138,126,6.927729,-209.270081,-0.034907,1.0,1.0,60,120],
[16,0,336,202,20,26,68.985146,-267.139557,-0.034907,1.0,1.0,10,13],
[20,0,278,202,34,28,12.774965,-262.098206,-0.034907,1.0,1.0,17,14],
[15,0,414,202,22,6,25.811457,-205.608810,-0.034907,1.0,1.0,11,3],
[17,0,1014,92,4,6,73.982101,-266.965057,-0.034907,1.0,1.0,2,3],
[21,0,1012,84,6,6,20.770092,-261.819000,-0.034907,1.0,1.0,3,3],
[18,0,650,100,4,4,66.916565,-265.210571,-0.034907,1.0,1.0,2,2],
[22,0,1002,96,10,4,9.706994,-260.204132,-0.034907,1.0,1.0,5,2],
[13,0,798,84,106,150,-42.280365,-271.025024,-0.046542,1.0,1.0,58,34],
[14,0,390,100,162,78,21.061983,-298.831360,-0.034907,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,110.146042,-164.366791,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,118.415802,-166.514130,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,112.344139,-166.146774,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,9.278690,-305.246490,-0.013963,1.0,1.0,133,48],
[26,0,906,146,76,96,-44.883591,-294.001617,0.013963,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,9.034357,-291.248627,-0.017453,1.0,1.0,133,40],
[12,0,214,2,174,170,-7.753787,-299.837646,-0.031998,1.0,1.0,62,27],
[10,0,554,100,70,140,37.235264,-201.057083,0.052360,1.0,1.0,20,13],
[8,0,2,2,210,176,-4.0,-134.0,-0.104720,1.0,1.0,104,104],
[9,0,926,2,74,142,-28.821293,-203.977875,-0.445059,1.0,1.0,40,13],
[11,0,658,84,138,126,6.927729,-209.270081,-0.034907,1.0,1.0,60,120],
[16,0,336,202,20,26,68.985146,-267.139557,-0.034907,1.0,1.0,10,13],
[20,0,278,202,34,28,12.774965,-262.098206,-0.034907,1.0,1.0,17,14],
[15,0,414,202,22,6,25.811457,-205.608810,-0.034907,1.0,1.0,11,3],
[17,0,1014,92,4,6,73.982101,-266.965057,-0.034907,1.0,1.0,2,3],
[21,0,1012,84,6,6,20.770092,-261.819000,-0.034907,1.0,1.0,3,3],
[18,0,650,100,4,4,66.916565,-265.210571,-0.034907,1.0,1.0,2,2],
[22,0,1002,96,10,4,9.706994,-260.204132,-0.034907,1.0,1.0,5,2],
[13,0,798,84,106,150,-42.113800,-271.019226,-0.040724,1.0,1.0,58,34],
[14,0,390,100,162,78,21.061983,-298.831360,-0.034907,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,110.146042,-164.366791,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,118.415802,-166.514130,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,112.344139,-166.146774,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,9.278690,-305.246490,-0.017453,1.0,1.0,133,48],
[26,0,906,146,76,96,-44.922516,-294.190735,-0.003491,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,8.985497,-291.249573,-0.020944,1.0,1.0,133,40],
[12,0,214,2,174,170,-7.920351,-299.843445,-0.034907,1.0,1.0,62,27],
[10,0,554,100,70,140,37.235264,-201.057083,0.069813,1.0,1.0,20,13],
[8,0,2,2,210,176,-4.0,-134.0,-0.104720,1.0,1.0,104,104],
[9,0,926,2,74,142,-28.821293,-203.977875,-0.471239,1.0,1.0,40,13],
[11,0,658,84,138,126,6.927729,-209.270081,-0.034907,1.0,1.0,60,120],
[16,0,336,202,20,26,68.985146,-267.139557,-0.034907,1.0,1.0,10,13],
[20,0,278,202,34,28,12.774965,-262.098206,-0.034907,1.0,1.0,17,14],
[15,0,414,202,22,6,25.811457,-205.608810,-0.034907,1.0,1.0,11,3],
[17,0,1014,92,4,6,73.982101,-266.965057,-0.034907,1.0,1.0,2,3],
[21,0,1012,84,6,6,20.770092,-261.819000,-0.034907,1.0,1.0,3,3],
[18,0,650,100,4,4,66.916565,-265.210571,-0.034907,1.0,1.0,2,2],
[22,0,1002,96,10,4,9.706994,-260.204132,-0.034907,1.0,1.0,5,2],
[13,0,798,84,106,150,-41.947235,-271.013397,-0.034907,1.0,1.0,58,34],
[14,0,390,100,162,78,21.061983,-298.831360,-0.034907,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,110.146042,-164.366791,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,118.415802,-166.514130,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,112.344139,-166.146774,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,9.278690,-305.246490,-0.020944,1.0,1.0,133,48],
[26,0,906,146,76,96,-44.960777,-294.380005,-0.020944,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,8.936640,-291.250671,-0.024435,1.0,1.0,133,40],
[12,0,214,2,174,170,-7.920351,-299.843445,-0.034907,1.0,1.0,62,27],
[10,0,554,100,70,140,37.235264,-201.057083,0.069813,1.0,1.0,20,13],
[8,0,2,2,210,176,-4.0,-134.0,-0.104720,1.0,1.0,104,104],
[9,0,926,2,74,142,-28.821293,-203.977875,-0.471239,1.0,1.0,40,13],
[11,0,658,84,138,126,6.927729,-209.270081,-0.034907,1.0,1.0,60,120],
[16,0,336,202,20,26,68.985146,-267.139557,-0.034907,1.0,1.0,10,13],
[20,0,278,202,34,28,12.774965,-262.098206,-0.034907,1.0,1.0,17,14],
[15,0,414,202,22,6,25.811457,-205.608810,-0.034907,1.0,1.0,11,3],
[17,0,1014,92,4,6,73.982101,-266.965057,-0.034907,1.0,1.0,2,3],
[21,0,1012,84,6,6,20.770092,-261.819000,-0.034907,1.0,1.0,3,3],
[18,0,650,100,4,4,66.916565,-265.210571,-0.034907,1.0,1.0,2,2],
[22,0,1002,96,10,4,9.706994,-260.204132,-0.034907,1.0,1.0,5,2],
[13,0,798,84,106,150,-41.947235,-271.013397,-0.034907,1.0,1.0,58,34],
[14,0,390,100,162,78,21.061983,-298.831360,-0.034907,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,110.146042,-164.366791,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,118.415802,-166.514130,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,112.344139,-166.146774,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,9.278690,-305.246490,-0.024435,1.0,1.0,133,48],
[26,0,906,146,76,96,-44.998375,-294.569397,-0.024435,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,8.887787,-291.251953,-0.027925,1.0,1.0,133,40],
[12,0,214,2,174,170,-7.920351,-299.843445,-0.034907,1.0,1.0,62,27],
[10,0,554,100,70,140,37.235264,-201.057083,0.069813,1.0,1.0,20,13],
[8,0,2,2,210,176,-4.0,-134.0,-0.104720,1.0,1.0,104,104],
[9,0,926,2,74,142,-28.821293,-203.977875,-0.471239,1.0,1.0,40,13],
[11,0,658,84,138,126,6.927729,-209.270081,-0.034907,1.0,1.0,60,120],
[16,0,336,202,20,26,68.985146,-267.139557,-0.034907,1.0,1.0,10,13],
[20,0,278,202,34,28,12.774965,-262.098206,-0.034907,1.0,1.0,17,14],
[15,0,414,202,22,6,25.811457,-205.608810,-0.034907,1.0,1.0,11,3],
[17,0,1014,92,4,6,73.982101,-266.965057,-0.034907,1.0,1.0,2,3],
[21,0,1012,84,6,6,20.770092,-261.819000,-0.034907,1.0,1.0,3,3],
[18,0,650,100,4,4,66.916565,-265.210571,-0.034907,1.0,1.0,2,2],
[22,0,1002,96,10,4,9.706994,-260.204132,-0.034907,1.0,1.0,5,2],
[13,0,798,84,106,150,-41.947235,-271.013397,-0.034907,1.0,1.0,58,34],
[14,0,390,100,162,78,21.061983,-298.831360,-0.034907,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,110.146042,-164.366791,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,118.415802,-166.514130,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,112.344139,-166.146774,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,9.278690,-305.246490,-0.027925,1.0,1.0,133,48],
[26,0,906,146,76,96,-45.035316,-294.758942,-0.027925,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,8.838940,-291.253387,-0.031416,1.0,1.0,133,40],
[12,0,214,2,174,170,-7.920351,-299.843445,-0.034907,1.0,1.0,62,27],
[10,0,554,100,70,140,37.235264,-201.057083,0.069813,1.0,1.0,20,13],
[8,0,2,2,210,176,-4.0,-134.0,-0.104720,1.0,1.0,104,104],
[9,0,926,2,74,142,-28.821293,-203.977875,-0.471239,1.0,1.0,40,13],
[11,0,658,84,138,126,6.927729,-209.270081,-0.034907,1.0,1.0,60,120],
[16,0,336,202,20,26,68.985146,-267.139557,-0.034907,1.0,1.0,10,13],
[20,0,278,202,34,28,12.774965,-262.098206,-0.034907,1.0,1.0,17,14],
[15,0,414,202,22,6,25.811457,-205.608810,-0.034907,1.0,1.0,11,3],
[17,0,1014,92,4,6,73.982101,-266.965057,-0.034907,1.0,1.0,2,3],
[21,0,1012,84,6,6,20.770092,-261.819000,-0.034907,1.0,1.0,3,3],
[18,0,650,100,4,4,66.916565,-265.210571,-0.034907,1.0,1.0,2,2],
[22,0,1002,96,10,4,9.706994,-260.204132,-0.034907,1.0,1.0,5,2],
[13,0,798,84,106,150,-41.947235,-271.013397,-0.034907,1.0,1.0,58,34],
[14,0,390,100,162,78,21.061983,-298.831360,-0.034907,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,110.146042,-164.366791,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,118.415802,-166.514130,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,112.344139,-166.146774,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,9.278690,-305.246490,-0.031416,1.0,1.0,133,48],
[26,0,906,146,76,96,-45.071594,-294.948608,-0.031416,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,8.790097,-291.255005,-0.034907,1.0,1.0,133,40],
[12,0,214,2,174,170,-7.920351,-299.843445,-0.034907,1.0,1.0,62,27],
[10,0,554,100,70,140,37.235264,-201.057083,0.069813,1.0,1.0,20,13],
[8,0,2,2,210,176,-4.0,-134.0,-0.104720,1.0,1.0,104,104],
[9,0,926,2,74,142,-28.821293,-203.977875,-0.471239,1.0,1.0,40,13],
[11,0,658,84,138,126,6.927729,-209.270081,-0.034907,1.0,1.0,60,120],
[16,0,336,202,20,26,68.985146,-267.139557,-0.034907,1.0,1.0,10,13],
[20,0,278,202,34,28,12.774965,-262.098206,-0.034907,1.0,1.0,17,14],
[15,0,414,202,22,6,25.811457,-205.608810,-0.034907,1.0,1.0,11,3],
[17,0,1014,92,4,6,73.982101,-266.965057,-0.034907,1.0,1.0,2,3],
[21,0,1012,84,6,6,20.770092,-261.819000,-0.034907,1.0,1.0,3,3],
[18,0,650,100,4,4,66.916565,-265.210571,-0.034907,1.0,1.0,2,2],
[22,0,1002,96,10,4,9.706994,-260.204132,-0.034907,1.0,1.0,5,2],
[13,0,798,84,106,150,-41.947235,-271.013397,-0.034907,1.0,1.0,58,34],
[14,0,390,100,162,78,21.061983,-298.831360,-0.034907,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,110.146042,-164.366791,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,118.415802,-166.514130,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,112.344139,-166.146774,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,9.278690,-305.246490,-0.034907,1.0,1.0,133,48],
[26,0,906,146,76,96,-45.107208,-295.138367,-0.034907,1.0,1.0,48,90]
]
]
}
}
]

},{}],81:[function(require,module,exports){
module.exports=[
{
"images":["koishi.png"],
"name": "reaction_look_top_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 500,
"MarginWidth": 258,
"MarginHeight": 508,
"parts": ["root","Chara","koishi0_bottom0","koishi0_thighs_l0","koishi0_calf_l0","koishi0_foot_l0","koishi0_thighs_r0","koishi0_calf_r0","koishi0_foot_r0","koishi0_body","koishi0_arm0_r0","koishi0_arm0_l0","koishi0_head0","koishi0_hear_b0","koishi0_hear_f1","koishi0_hear_f0","koishi0_mouth0","koishi0_eye0_l0","koishi0_eye0_l1","koishi0_eye0_l2","koishi0_eye1_l0","koishi0_eye0_r0","koishi0_eye0_r1","koishi0_eye0_r2","koishi0_eye1_r0","koishi0_hat0_f0","koishi0_hat0_b0","koishi0_hat0_obj0","3rdeye0_all","3rdeye0_cord_b0","3rdeye0_cord_f0","3rdeye0_body0","3rdeye0_eye0","3rdeye0_light0","3rdeye0_eye1"],
"ssa": [
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-173.0,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-10.0,-292.0,0.0,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-300.0,0.0,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-210.0,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-270.0,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-263.0,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-209.0,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-270.0,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-263.0,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-268.0,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-261.0,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-270.0,0.0,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-300.0,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-158.0,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-168.0,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.0,-171.0,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.0,-170.0,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-306.0,0.0,1.0,1.0,133,48],
[26,0,906,146,76,96,-64.0,-294.0,0.0,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.903932,-173.017029,0.008727,1.0,1.0,135,10],
[25,0,658,2,266,80,-12.942891,-291.923340,0.040724,1.0,1.0,133,40],
[12,0,214,2,174,170,-30.062347,-299.378967,0.036361,1.0,1.0,62,27],
[10,0,554,100,70,140,25.586365,-205.196594,0.023271,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.005818,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.389248,-200.812698,-0.125082,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.442131,-209.992889,0.031998,1.0,1.0,60,120],
[16,0,336,202,20,26,48.607620,-271.881714,0.031998,1.0,1.0,10,13],
[20,0,278,202,34,28,-7.139768,-263.093719,0.031998,1.0,1.0,17,14],
[15,0,414,202,22,6,14.843445,-209.269470,0.031998,1.0,1.0,11,3],
[17,0,1014,92,4,6,51.316223,-273.219055,0.031998,1.0,1.0,2,3],
[21,0,1012,84,6,6,-1.940444,-264.760925,0.031998,1.0,1.0,3,3],
[18,0,650,100,4,4,46.672630,-269.818756,0.031998,1.0,1.0,2,2],
[22,0,1002,96,10,4,-10.074247,-260.998779,0.031998,1.0,1.0,5,2],
[13,0,798,84,106,150,-62.585430,-268.322571,0.023271,1.0,1.0,58,34],
[14,0,390,100,162,78,-1.327064,-300.298737,0.031998,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.964409,-157.843079,0.008727,1.0,1.0,118,15],
[30,0,512,180,40,54,99.940926,-169.205750,0.037815,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.285767,-173.410828,0.037815,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.863884,-171.279938,0.037815,1.0,1.0,3,1],
[24,0,390,2,266,96,-13.512875,-305.911743,0.040724,1.0,1.0,133,48],
[26,0,906,146,76,96,-66.979546,-291.723175,0.054687,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.807719,-173.033234,0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,-15.882511,-291.769165,0.081449,1.0,1.0,133,40],
[12,0,214,2,174,170,-33.104046,-298.679840,0.072722,1.0,1.0,62,27],
[10,0,554,100,70,140,25.171593,-205.390793,0.046542,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.011636,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.777397,-200.623138,-0.145444,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.884212,-209.983215,0.063995,1.0,1.0,60,120],
[16,0,336,202,20,26,46.155865,-273.697510,0.063995,1.0,1.0,10,13],
[20,0,278,202,34,28,-9.281842,-263.130524,0.063995,1.0,1.0,17,14],
[15,0,414,202,22,6,12.697634,-209.426224,0.063995,1.0,1.0,11,3],
[17,0,1014,92,4,6,47.492916,-276.288330,0.063995,1.0,1.0,2,3],
[21,0,1012,84,6,6,-4.982909,-266.412170,0.063995,1.0,1.0,3,3],
[18,0,650,100,4,4,44.287861,-271.573700,0.063995,1.0,1.0,2,2],
[22,0,1002,96,10,4,-12.147798,-260.942749,0.063995,1.0,1.0,5,2],
[13,0,798,84,106,150,-65.115891,-266.566895,0.046542,1.0,1.0,58,34],
[14,0,390,100,162,78,-4.662385,-300.502441,0.063995,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.927448,-157.686462,0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,99.868423,-170.410889,0.075631,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.476334,-175.774384,0.075631,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.711586,-172.556290,0.075631,1.0,1.0,3,1],
[24,0,390,2,266,96,-17.021532,-305.722748,0.081449,1.0,1.0,133,48],
[26,0,906,146,76,96,-69.866211,-289.369171,0.109374,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.711368,-173.048584,0.026180,1.0,1.0,135,10],
[25,0,658,2,266,80,-18.816648,-291.537506,0.122173,1.0,1.0,133,40],
[12,0,214,2,174,170,-36.122932,-297.903290,0.109083,1.0,1.0,62,27],
[10,0,554,100,70,140,24.755699,-205.582565,0.069813,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.017453,1.0,1.0,104,104],
[9,0,926,2,74,142,-41.164436,-200.431320,-0.165806,1.0,1.0,40,13],
[11,0,658,84,138,126,-10.326231,-209.970978,0.095993,1.0,1.0,60,120],
[16,0,336,202,20,26,43.646797,-275.445496,0.095993,1.0,1.0,10,13],
[20,0,278,202,34,28,-11.424471,-263.110352,0.095993,1.0,1.0,17,14],
[15,0,414,202,22,6,10.567854,-209.471283,0.095993,1.0,1.0,11,3],
[17,0,1014,92,4,6,43.536224,-279.202179,0.095993,1.0,1.0,2,3],
[21,0,1012,84,6,6,-8.123041,-267.949066,0.095993,1.0,1.0,3,3],
[18,0,650,100,4,4,41.847694,-273.263000,0.095993,1.0,1.0,2,2],
[22,0,1002,96,10,4,-14.218967,-260.832031,0.095993,1.0,1.0,5,2],
[13,0,798,84,106,150,-67.588730,-264.734741,0.069813,1.0,1.0,58,34],
[14,0,390,100,162,78,-8.002991,-300.610931,0.095993,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.889124,-157.530182,0.026180,1.0,1.0,118,15],
[30,0,512,180,40,54,99.782494,-171.615295,0.113446,1.0,1.0,20,27],
[31,0,1002,84,8,10,103.574348,-178.086136,0.113446,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.543228,-173.828842,0.113446,1.0,1.0,3,1],
[24,0,390,2,266,96,-20.522820,-305.433167,0.122173,1.0,1.0,133,48],
[26,0,906,146,76,96,-72.657883,-286.941681,0.164061,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.614887,-173.063095,0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,-21.743097,-291.228607,0.162897,1.0,1.0,133,40],
[12,0,214,2,174,170,-39.116863,-297.050079,0.145444,1.0,1.0,62,27],
[10,0,554,100,70,140,24.338699,-205.771912,0.093084,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.023271,1.0,1.0,104,104],
[9,0,926,2,74,142,-41.550354,-200.237244,-0.186168,1.0,1.0,40,13],
[11,0,658,84,138,126,-10.768170,-209.956146,0.127991,1.0,1.0,60,120],
[16,0,336,202,20,26,41.082554,-277.123871,0.127991,1.0,1.0,10,13],
[20,0,278,202,34,28,-13.565896,-263.033203,0.127991,1.0,1.0,17,14],
[15,0,414,202,22,6,8.459342,-209.405884,0.127991,1.0,1.0,11,3],
[17,0,1014,92,4,6,39.452526,-281.955322,0.127991,1.0,1.0,2,3],
[21,0,1012,84,6,6,-11.356285,-269.367065,0.127991,1.0,1.0,3,3],
[18,0,650,100,4,4,39.354195,-274.884949,0.127991,1.0,1.0,2,2],
[22,0,1002,96,10,4,-16.286074,-260.666626,0.127991,1.0,1.0,5,2],
[13,0,798,84,106,150,-70.001328,-262.828003,0.093084,1.0,1.0,58,34],
[14,0,390,100,162,78,-11.345895,-300.624023,0.127991,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.849438,-157.374252,0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,99.683151,-172.818817,0.151262,1.0,1.0,20,27],
[31,0,1002,84,8,10,102.582680,-180.341629,0.151262,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.358940,-175.097351,0.151262,1.0,1.0,3,1],
[24,0,390,2,266,96,-24.013588,-305.043274,0.162897,1.0,1.0,133,48],
[26,0,906,146,76,96,-75.352577,-284.444519,0.218748,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.518283,-173.076767,0.043633,1.0,1.0,135,10],
[25,0,658,2,266,80,-22.705769,-291.137878,0.165225,1.0,1.0,133,40],
[12,0,214,2,174,170,-40.230095,-296.844055,0.148353,1.0,1.0,62,27],
[10,0,554,100,70,140,23.920601,-205.958847,0.116355,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.029089,1.0,1.0,104,104],
[9,0,926,2,74,142,-41.935139,-200.040955,-0.206531,1.0,1.0,40,13],
[11,0,658,84,138,126,-11.210015,-209.938766,0.133809,1.0,1.0,60,120],
[16,0,336,202,20,26,40.249065,-277.407013,0.133809,1.0,1.0,10,13],
[20,0,278,202,34,28,-14.316483,-262.998627,0.133809,1.0,1.0,17,14],
[15,0,414,202,22,6,8.020371,-209.500366,0.133809,1.0,1.0,11,3],
[17,0,1014,92,4,6,38.590958,-282.228912,0.133809,1.0,1.0,2,3],
[21,0,1012,84,6,6,-12.143757,-269.345215,0.133809,1.0,1.0,3,3],
[18,0,650,100,4,4,38.533764,-275.158081,0.133809,1.0,1.0,2,2],
[22,0,1002,96,10,4,-17.022846,-260.616272,0.133809,1.0,1.0,5,2],
[13,0,798,84,106,150,-70.584587,-262.487366,0.104720,1.0,1.0,58,34],
[14,0,390,100,162,78,-12.315212,-300.601746,0.133809,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.808390,-157.218658,0.043633,1.0,1.0,118,15],
[30,0,512,180,40,54,99.570404,-174.021301,0.189077,1.0,1.0,20,27],
[31,0,1002,84,8,10,102.183449,-181.648361,0.189077,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.158852,-176.361557,0.189077,1.0,1.0,3,1],
[24,0,390,2,266,96,-25.008402,-304.947205,0.165225,1.0,1.0,133,48],
[26,0,906,146,76,96,-76.299316,-284.229034,0.235038,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.421564,-173.089600,0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,-23.667875,-291.041382,0.167552,1.0,1.0,133,40],
[12,0,214,2,174,170,-41.341980,-296.630585,0.151262,1.0,1.0,62,27],
[10,0,554,100,70,140,23.501425,-206.143341,0.139626,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-42.318771,-199.842407,-0.226893,1.0,1.0,40,13],
[11,0,658,84,138,126,-11.651752,-209.918793,0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,39.413944,-277.685272,0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,-15.066854,-262.959686,0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,7.580860,-209.592270,0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,37.727810,-282.497437,0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,-12.931089,-269.318817,0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,37.711754,-275.426392,0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,-17.759312,-260.561646,0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-71.165985,-262.144257,0.116355,1.0,1.0,58,34],
[14,0,390,100,162,78,-13.284383,-300.573822,0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.765987,-157.063431,0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,99.444267,-175.222626,0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,101.767090,-182.943024,0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.943108,-177.621262,0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,-26.002638,-304.845337,0.167552,1.0,1.0,133,48],
[26,0,906,146,76,96,-77.245201,-284.007874,0.223402,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.421564,-173.089600,0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,-23.716074,-291.033325,0.164061,1.0,1.0,133,40],
[12,0,214,2,174,170,-41.507023,-296.607391,0.148353,1.0,1.0,62,27],
[10,0,554,100,70,140,23.501425,-206.143341,0.157080,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-42.318771,-199.842407,-0.253073,1.0,1.0,40,13],
[11,0,658,84,138,126,-11.651752,-209.918793,0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,39.413944,-277.685272,0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,-15.066854,-262.959686,0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,7.580860,-209.592270,0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,37.727810,-282.497437,0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,-12.931089,-269.318817,0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,37.711754,-275.426392,0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,-17.759312,-260.561646,0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-71.000946,-262.167450,0.122173,1.0,1.0,58,34],
[14,0,390,100,162,78,-13.284383,-300.573822,0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.765987,-157.063431,0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,99.444267,-175.222626,0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,101.767090,-182.943024,0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.943108,-177.621262,0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,-26.002638,-304.845337,0.164061,1.0,1.0,133,48],
[26,0,906,146,76,96,-77.317619,-284.186859,0.205949,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.421564,-173.089600,0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,-23.764301,-291.025421,0.160570,1.0,1.0,133,40],
[12,0,214,2,174,170,-41.672066,-296.584198,0.145444,1.0,1.0,62,27],
[10,0,554,100,70,140,23.501425,-206.143341,0.174533,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-42.318771,-199.842407,-0.279253,1.0,1.0,40,13],
[11,0,658,84,138,126,-11.651752,-209.918793,0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,39.413944,-277.685272,0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,-15.066854,-262.959686,0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,7.580860,-209.592270,0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,37.727810,-282.497437,0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,-12.931089,-269.318817,0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,37.711754,-275.426392,0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,-17.759312,-260.561646,0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-70.835899,-262.190674,0.127991,1.0,1.0,58,34],
[14,0,390,100,162,78,-13.284383,-300.573822,0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.765987,-157.063431,0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,99.444267,-175.222626,0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,101.767090,-182.943024,0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.943108,-177.621262,0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,-26.002638,-304.845337,0.160570,1.0,1.0,133,48],
[26,0,906,146,76,96,-77.389420,-284.366119,0.188496,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.421564,-173.089600,0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,-23.812555,-291.017700,0.157080,1.0,1.0,133,40],
[12,0,214,2,174,170,-41.837112,-296.561005,0.142535,1.0,1.0,62,27],
[10,0,554,100,70,140,23.501425,-206.143341,0.191986,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-42.318771,-199.842407,-0.305433,1.0,1.0,40,13],
[11,0,658,84,138,126,-11.651752,-209.918793,0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,39.413944,-277.685272,0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,-15.066854,-262.959686,0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,7.580860,-209.592270,0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,37.727810,-282.497437,0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,-12.931089,-269.318817,0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,37.711754,-275.426392,0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,-17.759312,-260.561646,0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-70.670853,-262.213867,0.133809,1.0,1.0,58,34],
[14,0,390,100,162,78,-13.284383,-300.573822,0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.765987,-157.063431,0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,99.444267,-175.222626,0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,101.767090,-182.943024,0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.943108,-177.621262,0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,-26.002638,-304.845337,0.157080,1.0,1.0,133,48],
[26,0,906,146,76,96,-77.460594,-284.545624,0.171042,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.421564,-173.089600,0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,-23.860836,-291.010132,0.153589,1.0,1.0,133,40],
[12,0,214,2,174,170,-42.002159,-296.537811,0.139626,1.0,1.0,62,27],
[10,0,554,100,70,140,23.501425,-206.143341,0.209440,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-42.318771,-199.842407,-0.331613,1.0,1.0,40,13],
[11,0,658,84,138,126,-11.651752,-209.918793,0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,39.413944,-277.685272,0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,-15.066854,-262.959686,0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,7.580860,-209.592270,0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,37.727810,-282.497437,0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,-12.931089,-269.318817,0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,37.711754,-275.426392,0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,-17.759312,-260.561646,0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-70.505814,-262.237061,0.139626,1.0,1.0,58,34],
[14,0,390,100,162,78,-13.284383,-300.573822,0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.765987,-157.063431,0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,99.444267,-175.222626,0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,101.767090,-182.943024,0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.943108,-177.621262,0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,-26.002638,-304.845337,0.153589,1.0,1.0,133,48],
[26,0,906,146,76,96,-77.531143,-284.725372,0.153589,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.421564,-173.089600,0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,-23.909143,-291.002747,0.150098,1.0,1.0,133,40],
[12,0,214,2,174,170,-42.002159,-296.537811,0.139626,1.0,1.0,62,27],
[10,0,554,100,70,140,23.501425,-206.143341,0.209440,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-42.318771,-199.842407,-0.331613,1.0,1.0,40,13],
[11,0,658,84,138,126,-11.651752,-209.918793,0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,39.413944,-277.685272,0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,-15.066854,-262.959686,0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,7.580860,-209.592270,0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,37.727810,-282.497437,0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,-12.931089,-269.318817,0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,37.711754,-275.426392,0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,-17.759312,-260.561646,0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-70.505814,-262.237061,0.139626,1.0,1.0,58,34],
[14,0,390,100,162,78,-13.284383,-300.573822,0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.765987,-157.063431,0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,99.444267,-175.222626,0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,101.767090,-182.943024,0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.943108,-177.621262,0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,-26.002638,-304.845337,0.150098,1.0,1.0,133,48],
[26,0,906,146,76,96,-77.601059,-284.905365,0.150098,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.421564,-173.089600,0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,-23.957476,-290.995514,0.146608,1.0,1.0,133,40],
[12,0,214,2,174,170,-42.002159,-296.537811,0.139626,1.0,1.0,62,27],
[10,0,554,100,70,140,23.501425,-206.143341,0.209440,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-42.318771,-199.842407,-0.331613,1.0,1.0,40,13],
[11,0,658,84,138,126,-11.651752,-209.918793,0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,39.413944,-277.685272,0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,-15.066854,-262.959686,0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,7.580860,-209.592270,0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,37.727810,-282.497437,0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,-12.931089,-269.318817,0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,37.711754,-275.426392,0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,-17.759312,-260.561646,0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-70.505814,-262.237061,0.139626,1.0,1.0,58,34],
[14,0,390,100,162,78,-13.284383,-300.573822,0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.765987,-157.063431,0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,99.444267,-175.222626,0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,101.767090,-182.943024,0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.943108,-177.621262,0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,-26.002638,-304.845337,0.146608,1.0,1.0,133,48],
[26,0,906,146,76,96,-77.670349,-285.085571,0.146608,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.421564,-173.089600,0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,-24.005833,-290.988464,0.143117,1.0,1.0,133,40],
[12,0,214,2,174,170,-42.002159,-296.537811,0.139626,1.0,1.0,62,27],
[10,0,554,100,70,140,23.501425,-206.143341,0.209440,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-42.318771,-199.842407,-0.331613,1.0,1.0,40,13],
[11,0,658,84,138,126,-11.651752,-209.918793,0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,39.413944,-277.685272,0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,-15.066854,-262.959686,0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,7.580860,-209.592270,0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,37.727810,-282.497437,0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,-12.931089,-269.318817,0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,37.711754,-275.426392,0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,-17.759312,-260.561646,0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-70.505814,-262.237061,0.139626,1.0,1.0,58,34],
[14,0,390,100,162,78,-13.284383,-300.573822,0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.765987,-157.063431,0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,99.444267,-175.222626,0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,101.767090,-182.943024,0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.943108,-177.621262,0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,-26.002638,-304.845337,0.143117,1.0,1.0,133,48],
[26,0,906,146,76,96,-77.739006,-285.266052,0.143117,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.421564,-173.089600,0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,-24.054214,-290.981598,0.139626,1.0,1.0,133,40],
[12,0,214,2,174,170,-42.002159,-296.537811,0.139626,1.0,1.0,62,27],
[10,0,554,100,70,140,23.501425,-206.143341,0.209440,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-42.318771,-199.842407,-0.331613,1.0,1.0,40,13],
[11,0,658,84,138,126,-11.651752,-209.918793,0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,39.413944,-277.685272,0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,-15.066854,-262.959686,0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,7.580860,-209.592270,0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,37.727810,-282.497437,0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,-12.931089,-269.318817,0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,37.711754,-275.426392,0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,-17.759312,-260.561646,0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-70.505814,-262.237061,0.139626,1.0,1.0,58,34],
[14,0,390,100,162,78,-13.284383,-300.573822,0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.765987,-157.063431,0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,99.444267,-175.222626,0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,101.767090,-182.943024,0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.943108,-177.621262,0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,-26.002638,-304.845337,0.139626,1.0,1.0,133,48],
[26,0,906,146,76,96,-77.807037,-285.446777,0.139626,1.0,1.0,48,90]
]
]
}
}
]

},{}],82:[function(require,module,exports){
module.exports=[
{
"images":["koishi.png"],
"name": "reaction_touch_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 500,
"MarginWidth": 258,
"MarginHeight": 508,
"parts": ["root","Chara","koishi0_bottom0","koishi0_thighs_l0","koishi0_calf_l0","koishi0_foot_l0","koishi0_thighs_r0","koishi0_calf_r0","koishi0_foot_r0","koishi0_body","koishi0_arm0_r0","koishi0_arm0_l0","koishi0_head0","koishi0_hear_b0","koishi0_hear_f1","koishi0_hear_f0","koishi0_mouth0","koishi0_eye0_l0","koishi0_eye0_l1","koishi0_eye0_l2","koishi0_eye1_l0","koishi0_eye0_r0","koishi0_eye0_r1","koishi0_eye0_r2","koishi0_eye1_r0","koishi0_hat0_f0","koishi0_hat0_b0","koishi0_hat0_obj0","3rdeye0_all","3rdeye0_cord_b0","3rdeye0_cord_f0","3rdeye0_body0","3rdeye0_eye0","3rdeye0_light0","3rdeye0_eye1"],
"ssa": [
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-173.0,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-10.0,-292.0,0.0,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-300.0,0.0,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-210.0,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-270.0,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-263.0,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-209.0,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-270.0,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-263.0,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-268.0,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-261.0,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-270.0,0.0,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-300.0,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-158.0,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-168.0,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.0,-171.0,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.0,-170.0,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-306.0,0.0,1.0,1.0,133,48],
[26,0,906,146,76,96,-64.0,-294.0,0.0,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,3.063961,-172.988174,-0.005818,1.0,1.0,135,10],
[25,0,658,2,266,80,-5.608215,-291.986237,-0.020362,1.0,1.0,133,40],
[12,0,214,2,174,170,-22.240585,-300.473022,-0.024725,1.0,1.0,62,27],
[10,0,554,100,70,140,26.823803,-204.599594,0.005818,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.011636,1.0,1.0,104,104],
[9,0,926,2,74,142,-33.750641,-198.553986,0.193441,1.0,1.0,40,13],
[11,0,658,84,138,126,-7.115720,-209.994858,-0.029089,1.0,1.0,60,120],
[16,0,336,202,20,26,54.603981,-268.224396,-0.029089,1.0,1.0,10,13],
[20,0,278,202,34,28,-1.575922,-262.856110,-0.029089,1.0,1.0,17,14],
[15,0,414,202,22,6,17.080395,-207.790192,-0.029089,1.0,1.0,11,3],
[17,0,1014,92,4,6,58.823097,-267.101196,-0.029089,1.0,1.0,2,3],
[21,0,1012,84,6,6,4.906786,-262.167267,-0.029089,1.0,1.0,3,3],
[18,0,650,100,4,4,52.546658,-266.283417,-0.029089,1.0,1.0,2,2],
[22,0,1002,96,10,4,-4.632822,-260.944214,-0.029089,1.0,1.0,5,2],
[13,0,798,84,106,150,-56.598953,-271.460083,-0.037815,1.0,1.0,58,34],
[14,0,390,100,162,78,6.497252,-299.636841,-0.029089,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.022966,-158.104782,-0.005818,1.0,1.0,118,15],
[30,0,512,180,40,54,101.033211,-167.418121,-0.017453,1.0,1.0,20,27],
[31,0,1002,84,8,10,107.325890,-169.808670,-0.017453,1.0,1.0,4,5],
[32,0,1014,100,6,2,103.067810,-169.382919,-0.017453,1.0,1.0,3,1],
[24,0,390,2,266,96,-5.323164,-305.983337,-0.020362,1.0,1.0,133,48],
[26,0,906,146,76,96,-59.556297,-295.085297,-0.006400,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,4.127852,-172.975983,-0.011636,1.0,1.0,135,10],
[25,0,658,2,266,80,-1.218218,-291.863464,-0.040724,1.0,1.0,133,40],
[12,0,214,2,174,170,-17.469189,-300.821411,-0.049451,1.0,1.0,62,27],
[10,0,554,100,70,140,27.642891,-204.189636,0.011636,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.023271,1.0,1.0,104,104],
[9,0,926,2,74,142,-27.563272,-195.972000,0.491601,1.0,1.0,40,13],
[11,0,658,84,138,126,-5.231830,-209.956146,-0.058178,1.0,1.0,60,120],
[16,0,336,202,20,26,58.155350,-266.365936,-0.058178,1.0,1.0,10,13],
[20,0,278,202,34,28,1.843079,-262.633911,-0.058178,1.0,1.0,17,14],
[15,0,414,202,22,6,17.113815,-206.651276,-0.058178,1.0,1.0,11,3],
[17,0,1014,92,4,6,62.531448,-264.107666,-0.058178,1.0,1.0,2,3],
[21,0,1012,84,6,6,8.773091,-261.228577,-0.058178,1.0,1.0,3,3],
[18,0,650,100,4,4,56.042442,-264.485596,-0.058178,1.0,1.0,2,2],
[22,0,1002,96,10,4,-1.268135,-260.811737,-0.058178,1.0,1.0,5,2],
[13,0,798,84,106,150,-53.156010,-272.849091,-0.075631,1.0,1.0,58,34],
[14,0,390,100,162,78,10.982594,-299.164276,-0.058178,1.0,1.0,81,39],
[29,0,2,180,236,30,-16.045322,-158.209702,-0.011636,1.0,1.0,118,15],
[30,0,512,180,40,54,102.063042,-166.836060,-0.034907,1.0,1.0,20,27],
[31,0,1002,84,8,10,108.628883,-168.608002,-0.034907,1.0,1.0,4,5],
[32,0,1014,100,6,2,104.131622,-168.765045,-0.034907,1.0,1.0,3,1],
[24,0,390,2,266,96,-0.648234,-305.851868,-0.040724,1.0,1.0,133,48],
[26,0,906,146,76,96,-55.092018,-296.060333,-0.012799,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,5.191672,-172.963425,-0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,3.167220,-291.631897,-0.061087,1.0,1.0,133,40],
[12,0,214,2,174,170,-12.689198,-301.044861,-0.074176,1.0,1.0,62,27],
[10,0,554,100,70,140,28.457153,-203.770172,0.017453,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-21.440212,-193.255157,0.789761,1.0,1.0,40,13],
[11,0,658,84,138,126,-3.348856,-209.883911,-0.087266,1.0,1.0,60,120],
[16,0,336,202,20,26,61.652172,-264.426239,-0.087266,1.0,1.0,10,13],
[20,0,278,202,34,28,5.255177,-262.333618,-0.087266,1.0,1.0,17,14],
[15,0,414,202,22,6,17.104294,-205.584946,-0.087266,1.0,1.0,11,3],
[17,0,1014,92,4,6,66.122627,-261.023651,-0.087266,1.0,1.0,2,3],
[21,0,1012,84,6,6,12.595903,-260.185669,-0.087266,1.0,1.0,3,3],
[18,0,650,100,4,4,59.485470,-262.608154,-0.087266,1.0,1.0,2,2],
[22,0,1002,96,10,4,2.092281,-260.602692,-0.087266,1.0,1.0,5,2],
[13,0,798,84,106,150,-49.672588,-274.165894,-0.113446,1.0,1.0,58,34],
[14,0,390,100,162,78,15.453302,-298.582703,-0.087266,1.0,1.0,81,39],
[29,0,2,180,236,30,-15.067068,-158.314758,-0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,103.089485,-166.253845,-0.052360,1.0,1.0,20,27],
[31,0,1002,84,8,10,109.908737,-167.398529,-0.052360,1.0,1.0,4,5],
[32,0,1014,100,6,2,105.191414,-168.146439,-0.052360,1.0,1.0,3,1],
[24,0,390,2,266,96,4.021900,-305.605774,-0.061087,1.0,1.0,133,48],
[26,0,906,146,76,96,-50.609962,-296.924774,-0.019199,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,6.255417,-172.950485,-0.023271,1.0,1.0,135,10],
[25,0,658,2,266,80,7.545335,-291.291504,-0.081449,1.0,1.0,133,40],
[12,0,214,2,174,170,-7.904015,-301.143158,-0.098902,1.0,1.0,62,27],
[10,0,554,100,70,140,29.266479,-203.341248,0.023271,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.046542,1.0,1.0,104,104],
[9,0,926,2,74,142,-15.383753,-190.404602,1.087922,1.0,1.0,40,13],
[11,0,658,84,138,126,-1.467325,-209.778122,-0.116355,1.0,1.0,60,120],
[16,0,336,202,20,26,65.092552,-262.406860,-0.116355,1.0,1.0,10,13],
[20,0,278,202,34,28,8.658554,-261.955383,-0.116355,1.0,1.0,17,14],
[15,0,414,202,22,6,17.055925,-204.592636,-0.116355,1.0,1.0,11,3],
[17,0,1014,92,4,6,69.594376,-257.853455,-0.116355,1.0,1.0,2,3],
[21,0,1012,84,6,6,16.372274,-259.040161,-0.116355,1.0,1.0,3,3],
[18,0,650,100,4,4,62.873890,-260.652557,-0.116355,1.0,1.0,2,2],
[22,0,1002,96,10,4,5.446653,-260.317200,-0.116355,1.0,1.0,5,2],
[13,0,798,84,106,150,-46.150143,-275.409241,-0.151262,1.0,1.0,58,34],
[14,0,390,100,162,78,19.906660,-297.892548,-0.116355,1.0,1.0,81,39],
[29,0,2,180,236,30,-14.088202,-158.419922,-0.023271,1.0,1.0,118,15],
[30,0,512,180,40,54,104.112541,-165.671478,-0.069813,1.0,1.0,20,27],
[31,0,1002,84,8,10,111.165245,-166.180740,-0.069813,1.0,1.0,4,5],
[32,0,1014,100,6,2,106.247185,-167.527100,-0.069813,1.0,1.0,3,1],
[24,0,390,2,266,96,8.684357,-305.245087,-0.081449,1.0,1.0,133,48],
[26,0,906,146,76,96,-46.112930,-297.678223,-0.025598,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,7.319086,-172.937180,-0.029089,1.0,1.0,135,10],
[25,0,658,2,266,80,9.325761,-291.104614,-0.096575,1.0,1.0,133,40],
[12,0,214,2,174,170,-6.124569,-301.152008,-0.113446,1.0,1.0,62,27],
[10,0,554,100,70,140,30.070759,-202.902954,0.029089,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.058178,1.0,1.0,104,104],
[9,0,926,2,74,142,-14.726971,-190.486710,1.053015,1.0,1.0,40,13],
[11,0,658,84,138,126,-0.586069,-209.696991,-0.127991,1.0,1.0,60,120],
[16,0,336,202,20,26,66.581650,-261.547729,-0.127991,1.0,1.0,10,13],
[20,0,278,202,34,28,10.146219,-261.752899,-0.127991,1.0,1.0,17,14],
[15,0,414,202,22,6,17.875593,-204.296341,-0.127991,1.0,1.0,11,3],
[17,0,1014,92,4,6,71.030182,-256.942230,-0.127991,1.0,1.0,2,3],
[21,0,1012,84,6,6,17.825499,-258.748138,-0.127991,1.0,1.0,3,3],
[18,0,650,100,4,4,64.342728,-259.819366,-0.127991,1.0,1.0,2,2],
[22,0,1002,96,10,4,6.915475,-260.152191,-0.127991,1.0,1.0,5,2],
[13,0,798,84,106,150,-44.336922,-275.822296,-0.157080,1.0,1.0,58,34],
[14,0,390,100,162,78,21.811703,-297.556763,-0.127991,1.0,1.0,81,39],
[29,0,2,180,236,30,-13.108725,-158.525223,-0.029089,1.0,1.0,118,15],
[30,0,512,180,40,54,105.132202,-165.088989,-0.087266,1.0,1.0,20,27],
[31,0,1002,84,8,10,112.192719,-165.475098,-0.087266,1.0,1.0,4,5],
[32,0,1014,100,6,2,107.298904,-166.907074,-0.087266,1.0,1.0,3,1],
[24,0,390,2,266,96,10.675709,-305.039368,-0.096575,1.0,1.0,133,48],
[26,0,906,146,76,96,-44.229763,-298.302216,-0.026762,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,11.103969,-290.897736,-0.111701,1.0,1.0,133,40],
[12,0,214,2,174,170,-4.344884,-301.142059,-0.127991,1.0,1.0,62,27],
[10,0,554,100,70,140,30.869888,-202.455322,0.034907,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.069813,1.0,1.0,104,104],
[9,0,926,2,74,142,-14.069279,-190.561157,1.018109,1.0,1.0,40,13],
[11,0,658,84,138,126,0.294184,-209.605591,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,68.060654,-260.671295,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,11.631431,-261.533112,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,18.691757,-203.990494,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,72.455299,-256.014343,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,19.275229,-258.439178,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,65.801773,-258.969116,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,8.382280,-259.970093,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-42.519279,-276.212280,-0.162897,1.0,1.0,58,34],
[14,0,390,100,162,78,23.712711,-297.198822,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,106.148483,-164.506393,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,113.214668,-164.769211,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,108.346581,-166.286377,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,12.664534,-304.810486,-0.111701,1.0,1.0,133,48],
[26,0,906,146,76,96,-42.336563,-298.904602,-0.055851,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,11.055413,-290.903259,-0.115192,1.0,1.0,133,40],
[12,0,214,2,174,170,-4.509929,-301.165253,-0.130900,1.0,1.0,62,27],
[10,0,554,100,70,140,30.869888,-202.455322,0.052360,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.069813,1.0,1.0,104,104],
[9,0,926,2,74,142,-14.069279,-190.561157,0.994838,1.0,1.0,40,13],
[11,0,658,84,138,126,0.294184,-209.605591,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,68.060654,-260.671295,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,11.631431,-261.533112,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,18.691757,-203.990494,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,72.455299,-256.014343,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,19.275229,-258.439178,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,65.801773,-258.969116,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,8.382280,-259.970093,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-42.354233,-276.189087,-0.157080,1.0,1.0,58,34],
[14,0,390,100,162,78,23.712711,-297.198822,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,106.148483,-164.506393,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,113.214668,-164.769211,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,108.346581,-166.286377,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,12.664534,-304.810486,-0.115192,1.0,1.0,133,48],
[26,0,906,146,76,96,-42.356842,-299.096619,-0.073304,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,11.006878,-290.908966,-0.118682,1.0,1.0,133,40],
[12,0,214,2,174,170,-4.674973,-301.188446,-0.133809,1.0,1.0,62,27],
[10,0,554,100,70,140,30.869888,-202.455322,0.069813,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.069813,1.0,1.0,104,104],
[9,0,926,2,74,142,-14.069279,-190.561157,0.971567,1.0,1.0,40,13],
[11,0,658,84,138,126,0.294184,-209.605591,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,68.060654,-260.671295,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,11.631431,-261.533112,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,18.691757,-203.990494,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,72.455299,-256.014343,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,19.275229,-258.439178,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,65.801773,-258.969116,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,8.382280,-259.970093,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-42.189186,-276.165894,-0.151262,1.0,1.0,58,34],
[14,0,390,100,162,78,23.712711,-297.198822,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,106.148483,-164.506393,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,113.214668,-164.769211,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,108.346581,-166.286377,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,12.664534,-304.810486,-0.118682,1.0,1.0,133,48],
[26,0,906,146,76,96,-42.376450,-299.288727,-0.090757,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,10.958363,-290.914825,-0.122173,1.0,1.0,133,40],
[12,0,214,2,174,170,-4.840018,-301.211639,-0.136717,1.0,1.0,62,27],
[10,0,554,100,70,140,30.869888,-202.455322,0.087266,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.069813,1.0,1.0,104,104],
[9,0,926,2,74,142,-14.069279,-190.561157,0.948296,1.0,1.0,40,13],
[11,0,658,84,138,126,0.294184,-209.605591,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,68.060654,-260.671295,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,11.631431,-261.533112,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,18.691757,-203.990494,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,72.455299,-256.014343,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,19.275229,-258.439178,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,65.801773,-258.969116,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,8.382280,-259.970093,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-42.024147,-276.142700,-0.145444,1.0,1.0,58,34],
[14,0,390,100,162,78,23.712711,-297.198822,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,106.148483,-164.506393,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,113.214668,-164.769211,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,108.346581,-166.286377,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,12.664534,-304.810486,-0.122173,1.0,1.0,133,48],
[26,0,906,146,76,96,-42.395393,-299.480865,-0.108210,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,10.909868,-290.920868,-0.125664,1.0,1.0,133,40],
[12,0,214,2,174,170,-5.005063,-301.234833,-0.139626,1.0,1.0,62,27],
[10,0,554,100,70,140,30.869888,-202.455322,0.104720,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.069813,1.0,1.0,104,104],
[9,0,926,2,74,142,-14.069279,-190.561157,0.925025,1.0,1.0,40,13],
[11,0,658,84,138,126,0.294184,-209.605591,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,68.060654,-260.671295,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,11.631431,-261.533112,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,18.691757,-203.990494,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,72.455299,-256.014343,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,19.275229,-258.439178,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,65.801773,-258.969116,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,8.382280,-259.970093,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-41.859100,-276.119507,-0.139626,1.0,1.0,58,34],
[14,0,390,100,162,78,23.712711,-297.198822,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,106.148483,-164.506393,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,113.214668,-164.769211,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,108.346581,-166.286377,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,12.664534,-304.810486,-0.125664,1.0,1.0,133,48],
[26,0,906,146,76,96,-42.413658,-299.673096,-0.125664,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,10.861395,-290.927094,-0.129154,1.0,1.0,133,40],
[12,0,214,2,174,170,-5.005063,-301.234833,-0.139626,1.0,1.0,62,27],
[10,0,554,100,70,140,30.869888,-202.455322,0.104720,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.069813,1.0,1.0,104,104],
[9,0,926,2,74,142,-14.069279,-190.561157,0.925025,1.0,1.0,40,13],
[11,0,658,84,138,126,0.294184,-209.605591,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,68.060654,-260.671295,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,11.631431,-261.533112,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,18.691757,-203.990494,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,72.455299,-256.014343,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,19.275229,-258.439178,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,65.801773,-258.969116,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,8.382280,-259.970093,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-41.859100,-276.119507,-0.139626,1.0,1.0,58,34],
[14,0,390,100,162,78,23.712711,-297.198822,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,106.148483,-164.506393,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,113.214668,-164.769211,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,108.346581,-166.286377,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,12.664534,-304.810486,-0.129154,1.0,1.0,133,48],
[26,0,906,146,76,96,-42.431259,-299.865387,-0.129154,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,10.812944,-290.933472,-0.132645,1.0,1.0,133,40],
[12,0,214,2,174,170,-5.005063,-301.234833,-0.139626,1.0,1.0,62,27],
[10,0,554,100,70,140,30.869888,-202.455322,0.104720,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.069813,1.0,1.0,104,104],
[9,0,926,2,74,142,-14.069279,-190.561157,0.925025,1.0,1.0,40,13],
[11,0,658,84,138,126,0.294184,-209.605591,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,68.060654,-260.671295,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,11.631431,-261.533112,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,18.691757,-203.990494,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,72.455299,-256.014343,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,19.275229,-258.439178,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,65.801773,-258.969116,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,8.382280,-259.970093,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-41.859100,-276.119507,-0.139626,1.0,1.0,58,34],
[14,0,390,100,162,78,23.712711,-297.198822,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,106.148483,-164.506393,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,113.214668,-164.769211,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,108.346581,-166.286377,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,12.664534,-304.810486,-0.132645,1.0,1.0,133,48],
[26,0,906,146,76,96,-42.448181,-300.057739,-0.132645,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,10.764516,-290.940002,-0.136136,1.0,1.0,133,40],
[12,0,214,2,174,170,-5.005063,-301.234833,-0.139626,1.0,1.0,62,27],
[10,0,554,100,70,140,30.869888,-202.455322,0.104720,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.069813,1.0,1.0,104,104],
[9,0,926,2,74,142,-14.069279,-190.561157,0.925025,1.0,1.0,40,13],
[11,0,658,84,138,126,0.294184,-209.605591,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,68.060654,-260.671295,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,11.631431,-261.533112,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,18.691757,-203.990494,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,72.455299,-256.014343,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,19.275229,-258.439178,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,65.801773,-258.969116,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,8.382280,-259.970093,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-41.859100,-276.119507,-0.139626,1.0,1.0,58,34],
[14,0,390,100,162,78,23.712711,-297.198822,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,106.148483,-164.506393,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,113.214668,-164.769211,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,108.346581,-166.286377,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,12.664534,-304.810486,-0.136136,1.0,1.0,133,48],
[26,0,906,146,76,96,-42.464439,-300.250153,-0.136136,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,10.716110,-290.946747,-0.139626,1.0,1.0,133,40],
[12,0,214,2,174,170,-5.005063,-301.234833,-0.139626,1.0,1.0,62,27],
[10,0,554,100,70,140,30.869888,-202.455322,0.104720,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.069813,1.0,1.0,104,104],
[9,0,926,2,74,142,-14.069279,-190.561157,0.925025,1.0,1.0,40,13],
[11,0,658,84,138,126,0.294184,-209.605591,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,68.060654,-260.671295,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,11.631431,-261.533112,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,18.691757,-203.990494,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,72.455299,-256.014343,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,19.275229,-258.439178,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,65.801773,-258.969116,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,8.382280,-259.970093,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-41.859100,-276.119507,-0.139626,1.0,1.0,58,34],
[14,0,390,100,162,78,23.712711,-297.198822,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,106.148483,-164.506393,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,113.214668,-164.769211,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,108.346581,-166.286377,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,12.664534,-304.810486,-0.139626,1.0,1.0,133,48],
[26,0,906,146,76,96,-42.480019,-300.442627,-0.139626,1.0,1.0,48,90]
]
]
}
}
]

},{}],83:[function(require,module,exports){
module.exports=[
{
"images":["koishi.png"],
"name": "reaction_yes_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 500,
"MarginWidth": 258,
"MarginHeight": 508,
"parts": ["root","Chara","koishi0_bottom0","koishi0_thighs_l0","koishi0_calf_l0","koishi0_foot_l0","koishi0_thighs_r0","koishi0_calf_r0","koishi0_foot_r0","koishi0_body","koishi0_arm0_r0","koishi0_arm0_l0","koishi0_head0","koishi0_hear_b0","koishi0_hear_f1","koishi0_hear_f0","koishi0_mouth0","koishi0_eye0_l0","koishi0_eye0_l1","koishi0_eye0_l2","koishi0_eye1_l0","koishi0_eye0_r0","koishi0_eye0_r1","koishi0_eye0_r2","koishi0_eye1_r0","koishi0_hat0_f0","koishi0_hat0_b0","koishi0_hat0_obj0","3rdeye0_all","3rdeye0_cord_b0","3rdeye0_cord_f0","3rdeye0_body0","3rdeye0_eye0","3rdeye0_light0","3rdeye0_eye1"],
"ssa": [
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-173.0,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-10.0,-292.0,0.0,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-300.0,0.0,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-210.0,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-270.0,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-263.0,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-209.0,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-270.0,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-263.0,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-268.0,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-261.0,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-270.0,0.0,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-300.0,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-158.0,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-168.0,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.0,-171.0,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.0,-170.0,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-306.0,0.0,1.0,1.0,133,48],
[26,0,906,146,76,96,-64.0,-294.0,0.0,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-172.333328,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-8.568749,-291.338318,-0.017453,1.0,1.0,133,40],
[12,0,214,2,174,170,-25.426542,-299.633789,-0.017453,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-209.333344,-0.017453,1.0,1.0,60,120],
[16,0,336,202,20,26,52.038006,-268.277069,-0.017453,1.0,1.0,10,13],
[20,0,278,202,34,28,-4.075632,-262.255463,-0.017453,1.0,1.0,17,14],
[15,0,414,202,22,6,16.978588,-207.879730,-0.017453,1.0,1.0,11,3],
[17,0,1014,92,4,6,56.037395,-268.207245,-0.017453,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.923455,-262.150757,-0.017453,1.0,1.0,3,3],
[18,0,650,100,4,4,50.003407,-266.312286,-0.017453,1.0,1.0,2,2],
[22,0,1002,96,10,4,-7.110080,-260.308136,-0.017453,1.0,1.0,5,2],
[19,0,314,202,20,26,54.002796,-266.242462,-0.017453,1.0,1.0,10,13],
[23,0,240,202,36,28,-1.110993,-260.203400,-0.017453,1.0,1.0,18,14],
[13,0,798,84,106,150,-58.945087,-270.214294,-0.017453,1.0,1.0,58,34],
[14,0,390,100,162,78,3.569041,-299.127655,-0.017453,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-157.333328,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-167.0,-0.023271,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.068184,-169.859573,-0.023271,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.045998,-168.952927,-0.023271,1.0,1.0,3,1],
[24,0,390,2,266,96,-8.324416,-305.336182,-0.017453,1.0,1.0,133,48],
[26,0,906,146,76,96,-62.525623,-294.280426,-0.017453,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-171.666672,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-7.137632,-290.651581,-0.034907,1.0,1.0,133,40],
[12,0,214,2,174,170,-23.848080,-299.240021,-0.034907,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-208.666656,-0.034907,1.0,1.0,60,120],
[16,0,336,202,20,26,53.057419,-266.536133,-0.034907,1.0,1.0,10,13],
[20,0,278,202,34,28,-3.152763,-261.494781,-0.034907,1.0,1.0,17,14],
[15,0,414,202,22,6,16.949263,-206.759872,-0.034907,1.0,1.0,11,3],
[17,0,1014,92,4,6,57.054981,-266.396545,-0.034907,1.0,1.0,2,3],
[21,0,1012,84,6,6,2.843582,-261.285370,-0.034907,1.0,1.0,3,3],
[18,0,650,100,4,4,50.988838,-264.607147,-0.034907,1.0,1.0,2,2],
[22,0,1002,96,10,4,-6.220735,-259.600708,-0.034907,1.0,1.0,5,2],
[19,0,314,202,20,26,54.986401,-264.467560,-0.034907,1.0,1.0,10,13],
[23,0,240,202,36,28,-0.224390,-259.391296,-0.034907,1.0,1.0,18,14],
[13,0,798,84,106,150,-57.874962,-270.409973,-0.034907,1.0,1.0,58,34],
[14,0,390,100,162,78,5.134254,-298.227936,-0.034907,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-156.666672,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-166.0,-0.046542,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.133080,-168.717606,-0.046542,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.090881,-167.904785,-0.046542,1.0,1.0,3,1],
[24,0,390,2,266,96,-6.649039,-304.643066,-0.034907,1.0,1.0,133,48],
[26,0,906,146,76,96,-61.034939,-294.534943,-0.034907,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-171.0,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-5.707081,-289.939972,-0.052360,1.0,1.0,133,40],
[12,0,214,2,174,170,-22.265095,-298.818695,-0.052360,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-208.0,-0.052360,1.0,1.0,60,120],
[16,0,336,202,20,26,54.057930,-264.777618,-0.052360,1.0,1.0,10,13],
[20,0,278,202,34,28,-2.231676,-260.718018,-0.052360,1.0,1.0,17,14],
[15,0,414,202,22,6,16.912031,-205.640640,-0.052360,1.0,1.0,11,3],
[17,0,1014,92,4,6,58.052448,-264.568268,-0.052360,1.0,1.0,2,3],
[21,0,1012,84,6,6,3.760101,-260.403992,-0.052360,1.0,1.0,3,3],
[18,0,650,100,4,4,51.955997,-262.885040,-0.052360,1.0,1.0,2,2],
[22,0,1002,96,10,4,-5.332236,-258.877777,-0.052360,1.0,1.0,5,2],
[19,0,314,202,20,26,55.950516,-262.675690,-0.052360,1.0,1.0,10,13],
[23,0,240,202,36,28,0.659541,-258.563751,-0.052360,1.0,1.0,18,14],
[13,0,798,84,106,150,-56.789948,-270.586914,-0.052360,1.0,1.0,58,34],
[14,0,390,100,162,78,6.695161,-297.300964,-0.052360,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-156.0,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-165.0,-0.069813,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.194656,-167.574158,-0.069813,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.134644,-166.855621,-0.069813,1.0,1.0,3,1],
[24,0,390,2,266,96,-4.974378,-303.920776,-0.052360,1.0,1.0,133,48],
[26,0,906,146,76,96,-59.528404,-294.763367,-0.052360,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-171.666672,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-7.137632,-290.651581,-0.034907,1.0,1.0,133,40],
[12,0,214,2,174,170,-23.848080,-299.240021,-0.034907,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-208.666656,-0.034907,1.0,1.0,60,120],
[16,0,336,202,20,26,53.057419,-266.536133,-0.034907,1.0,1.0,10,13],
[20,0,278,202,34,28,-3.152763,-261.494781,-0.034907,1.0,1.0,17,14],
[15,0,414,202,22,6,16.949263,-206.759872,-0.034907,1.0,1.0,11,3],
[17,0,1014,92,4,6,57.054981,-266.396545,-0.034907,1.0,1.0,2,3],
[21,0,1012,84,6,6,2.843582,-261.285370,-0.034907,1.0,1.0,3,3],
[18,0,650,100,4,4,50.988838,-264.607147,-0.034907,1.0,1.0,2,2],
[22,0,1002,96,10,4,-6.220735,-259.600708,-0.034907,1.0,1.0,5,2],
[19,0,314,202,20,26,54.986401,-264.467560,-0.034907,1.0,1.0,10,13],
[23,0,240,202,36,28,-0.224390,-259.391296,-0.034907,1.0,1.0,18,14],
[13,0,798,84,106,150,-57.874962,-270.409973,-0.034907,1.0,1.0,58,34],
[14,0,390,100,162,78,5.134254,-298.227936,-0.034907,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-156.666672,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-166.0,-0.046542,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.133080,-168.717606,-0.046542,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.090881,-167.904785,-0.046542,1.0,1.0,3,1],
[24,0,390,2,266,96,-6.649039,-304.643066,-0.034907,1.0,1.0,133,48],
[26,0,906,146,76,96,-61.034939,-294.534943,-0.034907,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-172.333328,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-8.568750,-291.338318,-0.017453,1.0,1.0,133,40],
[12,0,214,2,174,170,-25.426542,-299.633789,-0.017453,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-209.333344,-0.017453,1.0,1.0,60,120],
[16,0,336,202,20,26,52.038006,-268.277069,-0.017453,1.0,1.0,10,13],
[20,0,278,202,34,28,-4.075632,-262.255463,-0.017453,1.0,1.0,17,14],
[15,0,414,202,22,6,16.978588,-207.879730,-0.017453,1.0,1.0,11,3],
[17,0,1014,92,4,6,56.037395,-268.207245,-0.017453,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.923455,-262.150757,-0.017453,1.0,1.0,3,3],
[18,0,650,100,4,4,50.003407,-266.312286,-0.017453,1.0,1.0,2,2],
[22,0,1002,96,10,4,-7.110080,-260.308136,-0.017453,1.0,1.0,5,2],
[19,0,314,202,20,26,54.002796,-266.242462,-0.017453,1.0,1.0,10,13],
[23,0,240,202,36,28,-1.110993,-260.203400,-0.017453,1.0,1.0,18,14],
[13,0,798,84,106,150,-58.945087,-270.214294,-0.017453,1.0,1.0,58,34],
[14,0,390,100,162,78,3.569041,-299.127655,-0.017453,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-157.333328,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-167.0,-0.023271,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.068184,-169.859573,-0.023271,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.045998,-168.952927,-0.023271,1.0,1.0,3,1],
[24,0,390,2,266,96,-8.324417,-305.336182,-0.017453,1.0,1.0,133,48],
[26,0,906,146,76,96,-62.525623,-294.280426,-0.017453,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-173.0,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-10.0,-292.0,0.0,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-300.0,0.0,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-210.0,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-270.0,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-263.0,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-209.0,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-270.0,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-263.0,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-268.0,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-261.0,0.0,1.0,1.0,5,2],
[19,0,314,202,20,26,53.0,-268.0,0.0,1.0,1.0,10,13],
[23,0,240,202,36,28,-2.0,-261.0,0.0,1.0,1.0,18,14],
[13,0,798,84,106,150,-60.0,-270.0,0.0,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-300.0,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-158.0,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-168.0,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.0,-171.0,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.0,-170.0,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-306.0,0.0,1.0,1.0,133,48],
[26,0,906,146,76,96,-64.0,-294.0,0.0,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-172.333328,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-8.568749,-291.338318,-0.017453,1.0,1.0,133,40],
[12,0,214,2,174,170,-25.426542,-299.633789,-0.017453,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-209.333344,-0.017453,1.0,1.0,60,120],
[16,0,336,202,20,26,52.038006,-268.277069,-0.017453,1.0,1.0,10,13],
[20,0,278,202,34,28,-4.075632,-262.255463,-0.017453,1.0,1.0,17,14],
[15,0,414,202,22,6,16.978588,-207.879730,-0.017453,1.0,1.0,11,3],
[17,0,1014,92,4,6,56.037395,-268.207245,-0.017453,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.923455,-262.150757,-0.017453,1.0,1.0,3,3],
[18,0,650,100,4,4,50.003407,-266.312286,-0.017453,1.0,1.0,2,2],
[22,0,1002,96,10,4,-7.110080,-260.308136,-0.017453,1.0,1.0,5,2],
[19,0,314,202,20,26,54.002796,-266.242462,-0.017453,1.0,1.0,10,13],
[23,0,240,202,36,28,-1.110993,-260.203400,-0.017453,1.0,1.0,18,14],
[13,0,798,84,106,150,-58.945087,-270.214294,-0.017453,1.0,1.0,58,34],
[14,0,390,100,162,78,3.569041,-299.127655,-0.017453,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-157.333328,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-167.0,-0.023271,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.068184,-169.859573,-0.023271,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.045998,-168.952927,-0.023271,1.0,1.0,3,1],
[24,0,390,2,266,96,-8.324416,-305.336182,-0.017453,1.0,1.0,133,48],
[26,0,906,146,76,96,-62.525623,-294.280426,-0.017453,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-171.666672,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-7.137632,-290.651581,-0.034907,1.0,1.0,133,40],
[12,0,214,2,174,170,-23.848080,-299.240021,-0.034907,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-208.666656,-0.034907,1.0,1.0,60,120],
[16,0,336,202,20,26,53.057419,-266.536133,-0.034907,1.0,1.0,10,13],
[20,0,278,202,34,28,-3.152763,-261.494781,-0.034907,1.0,1.0,17,14],
[15,0,414,202,22,6,16.949263,-206.759872,-0.034907,1.0,1.0,11,3],
[17,0,1014,92,4,6,57.054981,-266.396545,-0.034907,1.0,1.0,2,3],
[21,0,1012,84,6,6,2.843582,-261.285370,-0.034907,1.0,1.0,3,3],
[18,0,650,100,4,4,50.988838,-264.607147,-0.034907,1.0,1.0,2,2],
[22,0,1002,96,10,4,-6.220735,-259.600708,-0.034907,1.0,1.0,5,2],
[19,0,314,202,20,26,54.986401,-264.467560,-0.034907,1.0,1.0,10,13],
[23,0,240,202,36,28,-0.224390,-259.391296,-0.034907,1.0,1.0,18,14],
[13,0,798,84,106,150,-57.874962,-270.409973,-0.034907,1.0,1.0,58,34],
[14,0,390,100,162,78,5.134254,-298.227936,-0.034907,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-156.666672,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-166.0,-0.046542,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.133080,-168.717606,-0.046542,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.090881,-167.904785,-0.046542,1.0,1.0,3,1],
[24,0,390,2,266,96,-6.649039,-304.643066,-0.034907,1.0,1.0,133,48],
[26,0,906,146,76,96,-61.034939,-294.534943,-0.034907,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-171.0,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-5.707081,-289.939972,-0.052360,1.0,1.0,133,40],
[12,0,214,2,174,170,-22.265095,-298.818695,-0.052360,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-208.0,-0.052360,1.0,1.0,60,120],
[16,0,336,202,20,26,54.057930,-264.777618,-0.052360,1.0,1.0,10,13],
[20,0,278,202,34,28,-2.231676,-260.718018,-0.052360,1.0,1.0,17,14],
[15,0,414,202,22,6,16.912031,-205.640640,-0.052360,1.0,1.0,11,3],
[17,0,1014,92,4,6,58.052448,-264.568268,-0.052360,1.0,1.0,2,3],
[21,0,1012,84,6,6,3.760101,-260.403992,-0.052360,1.0,1.0,3,3],
[18,0,650,100,4,4,51.955997,-262.885040,-0.052360,1.0,1.0,2,2],
[22,0,1002,96,10,4,-5.332236,-258.877777,-0.052360,1.0,1.0,5,2],
[13,0,798,84,106,150,-56.789948,-270.586914,-0.052360,1.0,1.0,58,34],
[14,0,390,100,162,78,6.695161,-297.300964,-0.052360,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-156.0,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-165.0,-0.069813,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.194656,-167.574158,-0.069813,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.134644,-166.855621,-0.069813,1.0,1.0,3,1],
[24,0,390,2,266,96,-4.974378,-303.920776,-0.052360,1.0,1.0,133,48],
[26,0,906,146,76,96,-59.528404,-294.763367,-0.052360,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-171.399994,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-6.565319,-290.369934,-0.041888,1.0,1.0,133,40],
[12,0,214,2,174,170,-23.215403,-299.074829,-0.041888,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-208.399994,-0.041888,1.0,1.0,60,120],
[16,0,336,202,20,26,53.459908,-265.834839,-0.041888,1.0,1.0,10,13],
[20,0,278,202,34,28,-2.784099,-261.186005,-0.041888,1.0,1.0,17,14],
[15,0,414,202,22,6,16.935318,-206.312103,-0.041888,1.0,1.0,11,3],
[17,0,1014,92,4,6,57.456398,-265.667328,-0.041888,1.0,1.0,2,3],
[21,0,1012,84,6,6,3.210638,-260.934753,-0.041888,1.0,1.0,3,3],
[18,0,650,100,4,4,51.377911,-263.920349,-0.041888,1.0,1.0,2,2],
[22,0,1002,96,10,4,-5.865219,-259.313385,-0.041888,1.0,1.0,5,2],
[13,0,798,84,106,150,-57.442726,-270.483032,-0.041888,1.0,1.0,58,34],
[14,0,390,100,162,78,5.759160,-297.860413,-0.041888,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-156.399994,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-165.599991,-0.055851,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.158112,-168.260391,-0.055851,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.108528,-167.485229,-0.055851,1.0,1.0,3,1],
[24,0,390,2,266,96,-5.979060,-304.357666,-0.041888,1.0,1.0,133,48],
[26,0,906,146,76,96,-60.434200,-294.629486,-0.041888,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-171.800003,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-7.423824,-290.790955,-0.031416,1.0,1.0,133,40],
[12,0,214,2,174,170,-24.164150,-299.320984,-0.031416,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-208.800003,-0.031416,1.0,1.0,60,120],
[16,0,336,202,20,26,52.855038,-266.885742,-0.031416,1.0,1.0,10,13],
[20,0,278,202,34,28,-3.337204,-261.648193,-0.031416,1.0,1.0,17,14],
[15,0,414,202,22,6,16.955759,-206.983810,-0.031416,1.0,1.0,11,3],
[17,0,1014,92,4,6,56.853065,-266.760101,-0.031416,1.0,1.0,2,3],
[21,0,1012,84,6,6,2.659836,-261.459717,-0.031416,1.0,1.0,3,3],
[18,0,650,100,4,4,50.793201,-264.949554,-0.031416,1.0,1.0,2,2],
[22,0,1002,96,10,4,-6.398545,-259.743408,-0.031416,1.0,1.0,5,2],
[13,0,798,84,106,150,-58.090187,-270.372345,-0.031416,1.0,1.0,58,34],
[14,0,390,100,162,78,4.821541,-298.410065,-0.031416,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-156.800003,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-166.199997,-0.041888,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.120361,-168.946106,-0.041888,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.082001,-168.114487,-0.041888,1.0,1.0,3,1],
[24,0,390,2,266,96,-6.984074,-304.784058,-0.031416,1.0,1.0,133,48],
[26,0,906,146,76,96,-61.334358,-294.486145,-0.031416,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-172.199997,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-8.282502,-291.202972,-0.020944,1.0,1.0,133,40],
[12,0,214,2,174,170,-25.111235,-299.557220,-0.020944,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-209.199997,-0.020944,1.0,1.0,60,120],
[16,0,336,202,20,26,52.243385,-267.930298,-0.020944,1.0,1.0,10,13],
[20,0,278,202,34,28,-3.890929,-262.104614,-0.020944,1.0,1.0,17,14],
[15,0,414,202,22,6,16.973356,-207.655716,-0.020944,1.0,1.0,11,3],
[17,0,1014,92,4,6,56.242508,-267.846527,-0.020944,1.0,1.0,2,3],
[21,0,1012,84,6,6,2.107755,-261.978973,-0.020944,1.0,1.0,3,3],
[18,0,650,100,4,4,50.201939,-265.972626,-0.020944,1.0,1.0,2,2],
[22,0,1002,96,10,4,-6.932156,-260.167877,-0.020944,1.0,1.0,5,2],
[13,0,798,84,106,150,-58.732269,-270.254913,-0.020944,1.0,1.0,58,34],
[14,0,390,100,162,78,3.882405,-298.949890,-0.020944,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-157.199997,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-166.800003,-0.027925,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.081429,-169.631302,-0.027925,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.055061,-168.743378,-0.027925,1.0,1.0,3,1],
[24,0,390,2,266,96,-7.989308,-305.199890,-0.020944,1.0,1.0,133,48],
[26,0,906,146,76,96,-62.228775,-294.333405,-0.020944,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-172.600006,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.141258,-291.605988,-0.010472,1.0,1.0,133,40],
[12,0,214,2,174,170,-26.056553,-299.783569,-0.010472,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-209.600006,-0.010472,1.0,1.0,60,120],
[16,0,336,202,20,26,51.625019,-268.968414,-0.010472,1.0,1.0,10,13],
[20,0,278,202,34,28,-4.445215,-262.555206,-0.010472,1.0,1.0,17,14],
[15,0,414,202,22,6,16.988102,-208.327789,-0.010472,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.624802,-268.926514,-0.010472,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.554456,-262.492371,-0.010472,1.0,1.0,3,3],
[18,0,650,100,4,4,49.604187,-266.989471,-0.010472,1.0,1.0,2,2],
[22,0,1002,96,10,4,-7.465994,-260.586731,-0.010472,1.0,1.0,5,2],
[13,0,798,84,106,150,-59.368896,-270.130768,-0.010472,1.0,1.0,58,34],
[14,0,390,100,162,78,2.941857,-299.479889,-0.010472,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-157.600006,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-167.400009,-0.013963,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.041306,-170.315948,-0.013963,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.027733,-169.371887,-0.013963,1.0,1.0,3,1],
[24,0,390,2,266,96,-8.994654,-305.605225,-0.010472,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.117355,-294.171356,-0.010472,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-173.0,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-10.0,-292.0,0.0,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-300.0,0.0,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-210.0,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-270.0,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-263.0,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-209.0,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-270.0,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-263.0,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-268.0,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-261.0,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-270.0,0.0,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-300.0,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-158.0,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-168.0,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.0,-171.0,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.0,-170.0,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-306.0,0.0,1.0,1.0,133,48],
[26,0,906,146,76,96,-64.0,-294.0,0.0,1.0,1.0,48,90]
]
]
}
}
]

},{}],84:[function(require,module,exports){
module.exports=[
{
"images":["koishi.png"],
"name": "wait_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 500,
"MarginWidth": 258,
"MarginHeight": 508,
"parts": ["root","Chara","koishi0_bottom0","koishi0_thighs_l0","koishi0_calf_l0","koishi0_foot_l0","koishi0_thighs_r0","koishi0_calf_r0","koishi0_foot_r0","koishi0_body","koishi0_arm0_r0","koishi0_arm0_l0","koishi0_head0","koishi0_hear_b0","koishi0_hear_f1","koishi0_hear_f0","koishi0_mouth0","koishi0_eye0_l0","koishi0_eye0_l1","koishi0_eye0_l2","koishi0_eye1_l0","koishi0_eye0_r0","koishi0_eye0_r1","koishi0_eye0_r2","koishi0_eye1_r0","koishi0_hat0_f0","koishi0_hat0_b0","koishi0_hat0_obj0","3rdeye0_all","3rdeye0_cord_b0","3rdeye0_cord_f0","3rdeye0_body0","3rdeye0_eye0","3rdeye0_light0","3rdeye0_eye1"],
"ssa": [
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-173.0,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-10.0,-292.0,0.0,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-300.0,0.0,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-210.0,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-270.0,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-263.0,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-209.0,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-270.0,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-263.0,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-268.0,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-261.0,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-270.0,0.0,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-300.0,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-158.0,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-168.0,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.0,-171.0,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.0,-170.0,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-306.0,0.0,1.0,1.0,133,48],
[26,0,906,146,76,96,-64.0,-294.0,0.0,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.909091,-172.909088,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.988364,-291.817810,0.000831,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-299.817810,0.000831,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.904755,0.001662,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.904755,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.904755,-0.106382,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-209.817795,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-269.817810,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-262.817810,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-208.817795,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-269.817810,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-262.817810,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-267.817810,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-260.817810,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-269.817810,-0.001662,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-299.817810,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.090910,-157.909088,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.909088,-167.909088,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.909088,-170.909088,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.909088,-169.909088,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-305.817810,0.000831,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.990009,-293.772949,0.002926,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.818182,-172.818176,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.976729,-291.635651,0.001662,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-299.635620,0.001662,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.809525,0.003324,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.809525,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.809525,-0.108044,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-209.635620,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-269.635620,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-262.635620,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-208.635620,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-269.635620,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-262.635620,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-267.635620,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-260.635620,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-269.635620,-0.003324,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-299.635620,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.181818,-157.818176,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.818184,-167.818176,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.818184,-170.818176,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.818184,-169.818176,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-305.635620,0.001662,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.979980,-293.545868,0.005851,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.727273,-172.727280,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.965094,-291.453430,0.002493,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-299.453400,0.002493,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.714279,0.004987,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.714279,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.714279,-0.109706,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-209.453400,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-269.453400,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-262.453400,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-208.453400,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-269.453400,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-262.453400,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-267.453400,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-260.453400,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-269.453400,-0.004987,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-299.453400,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.272728,-157.727280,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.727272,-167.727280,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.727272,-170.727280,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.727272,-169.727280,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-305.453400,0.002493,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.969913,-293.318787,0.008777,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.636364,-172.636368,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.953458,-291.271332,0.003324,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-299.271240,0.003324,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.619049,0.006649,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.619049,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.619049,-0.111369,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-209.271225,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-269.271240,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-262.271240,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-208.271225,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-269.271240,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-262.271240,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-267.271240,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-260.271240,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-269.271240,-0.006649,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-299.271240,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.363636,-157.636368,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.636360,-167.636368,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.636360,-170.636368,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.636360,-169.636368,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-305.271240,0.003324,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.959808,-293.091797,0.011702,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.545455,-172.545456,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.941822,-291.089142,0.004156,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-299.089020,0.004156,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.523804,0.008311,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.523804,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.523804,-0.113031,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-209.089020,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-269.089020,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-262.089020,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-208.089020,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-269.089020,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-262.089020,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-267.089020,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-260.089020,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-269.089020,-0.008311,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-299.089020,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.454546,-157.545456,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.545456,-167.545456,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.545456,-170.545456,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.545456,-169.545456,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-305.089020,0.004156,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.949669,-292.864716,0.014628,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.454545,-172.454544,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.930187,-290.907013,0.004987,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-298.906830,0.004987,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.428574,0.009973,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.428574,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.428574,-0.114693,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-208.906830,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-268.906830,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-261.906830,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-207.906830,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-268.906830,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-261.906830,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-266.906830,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-259.906830,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-268.906830,-0.009973,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-298.906830,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.545454,-157.454544,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.454544,-167.454544,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.454544,-170.454544,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.454544,-169.454544,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-304.906830,0.004987,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.939487,-292.637695,0.017553,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.363636,-172.363632,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.918551,-290.724884,0.005818,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-298.724640,0.005818,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.333328,0.011636,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.333328,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.333328,-0.116355,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-208.724640,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-268.724640,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-261.724640,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-207.724640,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-268.724640,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-261.724640,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-266.724640,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-259.724640,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-268.724640,-0.011636,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-298.724640,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.636364,-157.363632,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.363640,-167.363632,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.363640,-170.363632,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.363640,-169.363632,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-304.724640,0.005818,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.929272,-292.410675,0.020479,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.272727,-172.272720,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.906917,-290.542755,0.006649,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-298.542450,0.006649,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.238098,0.013298,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.238098,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.238098,-0.118018,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-208.542450,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-268.542450,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-261.542450,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-207.542450,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-268.542450,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-261.542450,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-266.542450,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-259.542450,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-268.542450,-0.013298,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-298.542450,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.727272,-157.272720,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.272728,-167.272720,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.272728,-170.272720,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.272728,-169.272720,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-304.542450,0.006649,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.919022,-292.183685,0.023404,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.181818,-172.181824,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.895281,-290.360626,0.007480,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-298.360229,0.007480,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.142853,0.014960,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.142853,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.142853,-0.119680,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-208.360245,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-268.360229,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-261.360229,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-207.360245,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-268.360229,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-261.360229,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-266.360229,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-259.360229,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-268.360229,-0.014960,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-298.360229,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.818182,-157.181824,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.181816,-167.181824,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.181816,-170.181824,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.181816,-169.181824,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-304.360229,0.007480,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.908730,-291.956665,0.026330,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.090909,-172.090912,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.883646,-290.178528,0.008311,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-298.178040,0.008311,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.047623,0.016622,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.047623,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.047623,-0.121342,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-208.178055,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-268.178040,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-261.178040,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-207.178055,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-268.178040,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-261.178040,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-266.178040,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-259.178040,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-268.178040,-0.016622,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-298.178040,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.909090,-157.090912,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.090912,-167.090912,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.090912,-170.090912,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.090912,-169.090912,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-304.178040,0.008311,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.898403,-291.729675,0.029255,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.0,-172.0,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.872011,-289.996429,0.009142,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-297.995850,0.009142,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.952377,0.018284,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.952377,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.952377,-0.123004,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-207.995850,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-267.995850,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-260.995850,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-206.995850,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-267.995850,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-260.995850,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-265.995850,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-258.995850,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-267.995850,-0.018284,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-297.995850,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.0,-157.0,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.0,-167.0,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.0,-170.0,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.0,-169.0,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-303.995850,0.009142,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.888039,-291.502686,0.032181,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.909091,-171.909088,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.860376,-289.814362,0.009973,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-297.813660,0.009973,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.857147,0.019947,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.857147,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.857147,-0.124666,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-207.813660,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-267.813660,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-260.813660,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-206.813660,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-267.813660,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-260.813660,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-265.813660,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-258.813660,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-267.813660,-0.019947,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-297.813660,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.090910,-156.909088,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.909088,-166.909088,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.909088,-169.909088,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.909088,-168.909088,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-303.813660,0.009973,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.877636,-291.275696,0.035106,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.818182,-171.818176,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.848742,-289.632294,0.010804,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-297.631470,0.010804,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.761902,0.021609,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.761902,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.761902,-0.126329,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-207.631470,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-267.631470,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-260.631470,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-206.631470,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-267.631470,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-260.631470,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-265.631470,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-258.631470,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-267.631470,-0.021609,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-297.631470,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.181818,-156.818176,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.818184,-166.818176,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.818184,-169.818176,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.818184,-168.818176,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-303.631470,0.010804,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.867199,-291.048737,0.038032,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.727273,-171.727280,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.837107,-289.450226,0.011636,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-297.449280,0.011636,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.666672,0.023271,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.666672,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.666672,-0.127991,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-207.449280,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-267.449280,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-260.449280,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-206.449280,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-267.449280,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-260.449280,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-265.449280,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-258.449280,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-267.449280,-0.023271,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-297.449280,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.272728,-156.727280,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.727272,-166.727280,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.727272,-169.727280,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.727272,-168.727280,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-303.449280,0.011636,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.856720,-290.821777,0.040957,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.636364,-171.636368,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.825472,-289.268188,0.012467,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-297.267090,0.012467,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.571426,0.024933,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.571426,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.571426,-0.129653,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-207.267090,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-267.267090,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-260.267090,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-206.267090,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-267.267090,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-260.267090,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-265.267090,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-258.267090,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-267.267090,-0.024933,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-297.267090,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.363636,-156.636368,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.636360,-166.636368,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.636360,-169.636368,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.636360,-168.636368,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-303.267090,0.012467,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.846207,-290.594849,0.043883,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.545455,-171.545456,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.813837,-289.086151,0.013298,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-297.084900,0.013298,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.476196,0.026595,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.476196,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.476196,-0.131315,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-207.084900,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-267.084900,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-260.084900,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-206.084900,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-267.084900,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-260.084900,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-265.084900,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-258.084900,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-267.084900,-0.026595,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-297.084900,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.454546,-156.545456,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.545456,-166.545456,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.545456,-169.545456,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.545456,-168.545456,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-303.084900,0.013298,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.835659,-290.367889,0.046808,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.454545,-171.454544,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.802202,-288.904083,0.014129,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-296.902679,0.014129,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.380951,0.028258,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.380951,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.380951,-0.132977,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-206.902679,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-266.902679,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-259.902679,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-205.902679,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-266.902679,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-259.902679,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-264.902679,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-257.902679,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-266.902679,-0.028258,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-296.902679,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.545454,-156.454544,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.454544,-166.454544,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.454544,-169.454544,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.454544,-168.454544,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-302.902679,0.014129,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.825069,-290.140930,0.049734,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.363636,-171.363632,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.790568,-288.722076,0.014960,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-296.720520,0.014960,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.285721,0.029920,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.285721,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.285721,-0.134640,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-206.720505,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-266.720520,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-259.720520,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-205.720505,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-266.720520,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-259.720520,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-264.720520,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-257.720520,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-266.720520,-0.029920,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-296.720520,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.636364,-156.363632,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.363640,-166.363632,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.363640,-169.363632,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.363640,-168.363632,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-302.720520,0.014960,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.814445,-289.914063,0.052659,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.272727,-171.272720,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.778934,-288.540039,0.015791,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-296.538300,0.015791,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.190475,0.031582,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.190475,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.190475,-0.136302,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-206.538300,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-266.538300,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-259.538300,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-205.538300,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-266.538300,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-259.538300,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-264.538300,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-257.538300,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-266.538300,-0.031582,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-296.538300,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.727272,-156.272720,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.272728,-166.272720,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.272728,-169.272720,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.272728,-168.272720,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-302.538300,0.015791,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.803783,-289.687103,0.055585,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.181818,-171.181824,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.767301,-288.358032,0.016622,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-296.356110,0.016622,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.095245,0.033244,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.095245,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.095245,-0.137964,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-206.356110,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-266.356110,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-259.356110,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-205.356110,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-266.356110,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-259.356110,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-264.356110,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-257.356110,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-266.356110,-0.033244,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-296.356110,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.818182,-156.181824,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.181816,-166.181824,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.181816,-169.181824,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.181816,-168.181824,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-302.356110,0.016622,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.793083,-289.460205,0.058510,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.090909,-171.090912,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.755667,-288.176056,0.017453,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-296.173920,0.017453,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.0,0.034907,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.0,-0.139626,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-206.173920,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-266.173920,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-259.173920,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-205.173920,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-266.173920,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-259.173920,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-264.173920,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-257.173920,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-266.173920,-0.034907,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-296.173920,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.909090,-156.090912,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.090912,-166.090912,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.090912,-169.090912,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.090912,-168.090912,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-302.173920,0.017453,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.782345,-289.233307,0.061436,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.0,-171.0,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.766289,-288.175873,0.016694,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-296.173920,0.016694,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.086960,0.033389,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.086960,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.086960,-0.138109,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-206.173920,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-266.173920,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-259.173920,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-205.173920,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-266.173920,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-259.173920,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-264.173920,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-257.173920,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-266.173920,-0.033389,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-296.173920,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-20.0,-156.0,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.0,-166.0,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.0,-169.0,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.0,-168.0,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-302.173920,0.016694,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.792152,-289.274139,0.062771,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.090909,-171.090912,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.776911,-288.175690,0.015936,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-296.173920,0.015936,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.173920,0.031871,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.173920,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.173920,-0.136591,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-206.173920,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-266.173920,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-259.173920,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-205.173920,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-266.173920,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-259.173920,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-264.173920,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-257.173920,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-266.173920,-0.031871,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-296.173920,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.909090,-156.090912,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.090912,-166.090912,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.090912,-169.090912,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.090912,-168.090912,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-302.173920,0.015936,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.801926,-289.314941,0.064107,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.181818,-171.181824,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.787534,-288.357727,0.015177,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-296.356110,0.015177,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.260864,0.030354,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.260864,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.260864,-0.135073,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-206.356110,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-266.356110,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-259.356110,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-205.356110,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-266.356110,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-259.356110,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-264.356110,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-257.356110,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-266.356110,-0.030354,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-296.356110,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.818182,-156.181824,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.181816,-166.181824,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.181816,-169.181824,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.181816,-168.181824,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-302.356110,0.015177,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.811668,-289.537964,0.065442,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.272727,-171.272720,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.798156,-288.539764,0.014418,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-296.538300,0.014418,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.347824,0.028836,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.347824,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.347824,-0.133556,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-206.538300,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-266.538300,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-259.538300,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-205.538300,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-266.538300,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-259.538300,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-264.538300,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-257.538300,0.0,1.0,1.0,5,2],
[19,0,314,202,20,26,53.0,-264.538300,0.0,1.0,1.0,10,13],
[23,0,240,202,36,28,-2.0,-257.538300,0.0,1.0,1.0,18,14],
[13,0,798,84,106,150,-60.0,-266.538300,-0.028836,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-296.538300,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.727272,-156.272720,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.272728,-166.272720,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.272728,-169.272720,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.272728,-168.272720,0.0,1.0,1.0,3,1],
[33,0,1002,64,18,18,102.272728,-169.272720,0.0,1.0,1.0,9,9],
[24,0,390,2,266,96,-10.0,-302.538300,0.014418,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.821377,-289.761017,0.066778,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.363636,-171.363632,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.808779,-288.721802,0.013659,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-296.720490,0.013659,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.434784,0.027318,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.434784,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.434784,-0.132038,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-206.720490,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-266.720490,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-259.720490,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-205.720490,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-266.720490,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-259.720490,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-264.720490,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-257.720490,0.0,1.0,1.0,5,2],
[19,0,314,202,20,26,53.0,-264.720490,0.0,1.0,1.0,10,13],
[23,0,240,202,36,28,-2.0,-257.720490,0.0,1.0,1.0,18,14],
[13,0,798,84,106,150,-60.0,-266.720490,-0.027318,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-296.720490,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.636364,-156.363632,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.363640,-166.363632,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.363640,-169.363632,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.363640,-168.363632,0.0,1.0,1.0,3,1],
[33,0,1002,64,18,18,102.363640,-169.363632,0.0,1.0,1.0,9,9],
[24,0,390,2,266,96,-10.0,-302.720490,0.013659,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.831059,-289.984039,0.063263,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.454545,-171.454544,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.819402,-288.903870,0.012900,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-296.902710,0.012900,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.521744,0.025801,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.521744,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.521744,-0.130520,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-206.902695,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-266.902710,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-259.902710,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-205.902695,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-266.902710,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-259.902710,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-264.902710,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-257.902710,0.0,1.0,1.0,5,2],
[19,0,314,202,20,26,53.0,-264.902710,0.0,1.0,1.0,10,13],
[23,0,240,202,36,28,-2.0,-257.902710,0.0,1.0,1.0,18,14],
[13,0,798,84,106,150,-60.0,-266.902710,-0.025801,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-296.902710,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.545454,-156.454544,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.454544,-166.454544,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.454544,-169.454544,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.454544,-168.454544,0.0,1.0,1.0,3,1],
[33,0,1002,64,18,18,102.454544,-169.454544,0.0,1.0,1.0,9,9],
[24,0,390,2,266,96,-10.0,-302.902710,0.012900,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.840710,-290.207123,0.059749,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.545455,-171.545456,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.830025,-289.085907,0.012141,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-297.084869,0.012141,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.608688,0.024283,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.608688,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.608688,-0.129003,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-207.084869,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-267.084869,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-260.084869,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-206.084869,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-267.084869,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-260.084869,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-265.084869,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-258.084869,0.0,1.0,1.0,5,2],
[19,0,314,202,20,26,53.0,-265.084869,0.0,1.0,1.0,10,13],
[23,0,240,202,36,28,-2.0,-258.084869,0.0,1.0,1.0,18,14],
[13,0,798,84,106,150,-60.0,-267.084869,-0.024283,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-297.084869,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.454546,-156.545456,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.545456,-166.545456,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.545456,-169.545456,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.545456,-168.545456,0.0,1.0,1.0,3,1],
[33,0,1002,64,18,18,102.545456,-169.545456,0.0,1.0,1.0,9,9],
[24,0,390,2,266,96,-10.0,-303.084869,0.012141,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.850327,-290.430145,0.056234,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.636364,-171.636368,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.840648,-289.268005,0.011383,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-297.267090,0.011383,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.695648,0.022765,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.695648,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.695648,-0.127485,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-207.267075,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-267.267090,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-260.267090,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-206.267075,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-267.267090,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-260.267090,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-265.267090,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-258.267090,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-267.267090,-0.022765,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-297.267090,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.363636,-156.636368,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.636360,-166.636368,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.636360,-169.636368,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.636360,-168.636368,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-303.267090,0.011383,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.859913,-290.653229,0.052719,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.727273,-171.727280,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.851271,-289.450073,0.010624,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-297.449280,0.010624,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.782608,0.021247,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.782608,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.782608,-0.125967,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-207.449280,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-267.449280,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-260.449280,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-206.449280,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-267.449280,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-260.449280,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-265.449280,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-258.449280,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-267.449280,-0.021247,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-297.449280,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.272728,-156.727280,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.727272,-166.727280,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.727272,-169.727280,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.727272,-168.727280,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-303.449280,0.010624,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.869469,-290.876282,0.049205,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.818182,-171.818176,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.861894,-289.632141,0.009865,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-297.631470,0.009865,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.869568,0.019730,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.869568,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.869568,-0.124450,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-207.631470,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-267.631470,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-260.631470,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-206.631470,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-267.631470,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-260.631470,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-265.631470,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-258.631470,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-267.631470,-0.019730,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-297.631470,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.181818,-156.818176,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.818184,-166.818176,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.818184,-169.818176,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.818184,-168.818176,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-303.631470,0.009865,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.878994,-291.099365,0.045690,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.909091,-171.909088,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.872517,-289.814240,0.009106,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-297.813660,0.009106,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.956528,0.018212,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.956528,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.956528,-0.122932,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-207.813660,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-267.813660,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-260.813660,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-206.813660,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-267.813660,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-260.813660,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-265.813660,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-258.813660,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-267.813660,-0.018212,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-297.813660,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.090908,-156.909088,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.909088,-166.909088,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.909088,-169.909088,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.909088,-168.909088,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-303.813660,0.009106,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.888489,-291.322449,0.042175,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.0,-172.0,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.883141,-289.996338,0.008347,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-297.995850,0.008347,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.043472,0.016694,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.043472,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.043472,-0.121414,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-207.995850,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-267.995850,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-260.995850,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-206.995850,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-267.995850,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-260.995850,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-265.995850,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-258.995850,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-267.995850,-0.016694,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-297.995850,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.0,-157.0,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.0,-167.0,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.0,-170.0,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.0,-169.0,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-303.995850,0.008347,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.897953,-291.545532,0.038661,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.090909,-172.090912,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.893764,-290.178436,0.007588,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-298.178040,0.007588,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.130432,0.015177,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.130432,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.130432,-0.119897,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-208.178055,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-268.178040,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-261.178040,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-207.178055,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-268.178040,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-261.178040,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-266.178040,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-259.178040,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-268.178040,-0.015177,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-298.178040,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.909090,-157.090912,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.090912,-167.090912,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.090912,-170.090912,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.090912,-169.090912,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-304.178040,0.007588,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.907387,-291.768616,0.035146,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.181818,-172.181824,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.904387,-290.360596,0.006830,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-298.360260,0.006830,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.217392,0.013659,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.217392,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.217392,-0.118379,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-208.360260,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-268.360260,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-261.360260,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-207.360260,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-268.360260,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-261.360260,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-266.360260,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-259.360260,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-268.360260,-0.013659,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-298.360260,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.818182,-157.181824,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.181816,-167.181824,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.181816,-170.181824,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.181816,-169.181824,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-304.360260,0.006830,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.916786,-291.991760,0.031632,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.272727,-172.272720,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.915010,-290.542694,0.006071,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-298.542450,0.006071,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.304352,0.012141,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.304352,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.304352,-0.116861,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-208.542450,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-268.542450,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-261.542450,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-207.542450,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-268.542450,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-261.542450,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-266.542450,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-259.542450,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-268.542450,-0.012141,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-298.542450,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.727272,-157.272720,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.272728,-167.272720,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.272728,-170.272720,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.272728,-169.272720,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-304.542450,0.006071,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.926155,-292.214844,0.028117,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.363636,-172.363632,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.925634,-290.724823,0.005312,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-298.724640,0.005312,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.391312,0.010624,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.391312,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.391312,-0.115343,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-208.724640,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-268.724640,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-261.724640,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-207.724640,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-268.724640,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-261.724640,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-266.724640,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-259.724640,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-268.724640,-0.010624,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-298.724640,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.636364,-157.363632,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.363640,-167.363632,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.363640,-170.363632,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.363640,-169.363632,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-304.724640,0.005312,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.935497,-292.437958,0.024602,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.454545,-172.454544,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.936257,-290.906982,0.004553,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-298.906830,0.004553,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.478256,0.009106,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.478256,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.478256,-0.113826,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-208.906830,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-268.906830,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-261.906830,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-207.906830,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-268.906830,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-261.906830,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-266.906830,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-259.906830,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-268.906830,-0.009106,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-298.906830,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.545454,-157.454544,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.454544,-167.454544,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.454544,-170.454544,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.454544,-169.454544,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-304.906830,0.004553,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.944805,-292.661102,0.021088,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.545455,-172.545456,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.946881,-291.089111,0.003794,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-299.089020,0.003794,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.565216,0.007588,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.565216,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.565216,-0.112308,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-209.089020,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-269.089020,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-262.089020,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-208.089020,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-269.089020,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-262.089020,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-267.089020,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-260.089020,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-269.089020,-0.007588,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-299.089020,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.454546,-157.545456,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.545456,-167.545456,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.545456,-170.545456,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.545456,-169.545456,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-305.089020,0.003794,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.954082,-292.884216,0.017573,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.636364,-172.636368,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.957505,-291.271301,0.003035,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-299.271240,0.003035,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.652176,0.006071,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.652176,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.652176,-0.110790,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-209.271225,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-269.271240,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-262.271240,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-208.271225,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-269.271240,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-262.271240,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-267.271240,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-260.271240,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-269.271240,-0.006071,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-299.271240,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.363636,-157.636368,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.636360,-167.636368,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.636360,-170.636368,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.636360,-169.636368,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-305.271240,0.003035,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.963326,-293.107391,0.014058,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.727273,-172.727280,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.968129,-291.453461,0.002277,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-299.453430,0.002277,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.739136,0.004553,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.739136,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.739136,-0.109273,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-209.453430,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-269.453430,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-262.453430,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-208.453430,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-269.453430,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-262.453430,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-267.453430,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-260.453430,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-269.453430,-0.004553,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-299.453430,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.272728,-157.727280,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.727272,-167.727280,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.727272,-170.727280,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.727272,-169.727280,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-305.453430,0.002277,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.972542,-293.330536,0.010544,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.818182,-172.818176,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.978752,-291.635651,0.001518,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-299.635620,0.001518,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.826080,0.003035,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.826080,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.826080,-0.107755,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-209.635605,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-269.635620,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-262.635620,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-208.635605,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-269.635620,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-262.635620,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-267.635620,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-260.635620,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-269.635620,-0.003035,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-299.635620,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.181818,-157.818176,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.818184,-167.818176,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.818184,-170.818176,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.818184,-169.818176,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-305.635620,0.001518,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.981724,-293.553680,0.007029,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.909091,-172.909088,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.989376,-291.817810,0.000759,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-299.817810,0.000759,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.913040,0.001518,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.913040,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.913040,-0.106237,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-209.817810,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-269.817810,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-262.817810,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-208.817810,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-269.817810,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-262.817810,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-267.817810,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-260.817810,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-269.817810,-0.001518,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-299.817810,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.090910,-157.909088,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.909088,-167.909088,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.909088,-170.909088,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.909088,-169.909088,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-305.817810,0.000759,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.990879,-293.776825,0.003515,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-173.0,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-10.0,-292.0,0.0,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-300.0,0.0,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-210.0,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-270.0,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-263.0,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-209.0,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-270.0,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-263.0,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-268.0,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-261.0,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-270.0,0.0,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-300.0,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-158.0,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-168.0,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.0,-171.0,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.0,-170.0,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-306.0,0.0,1.0,1.0,133,48],
[26,0,906,146,76,96,-64.0,-294.0,0.0,1.0,1.0,48,90]
]
]
}
}
]

},{}],85:[function(require,module,exports){
module.exports=[
{
"images":["koishi.png"],
"name": "walk_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 500,
"MarginWidth": 258,
"MarginHeight": 508,
"parts": ["root","Chara","koishi0_bottom0","koishi0_thighs_l0","koishi0_calf_l0","koishi0_foot_l0","koishi0_thighs_r0","koishi0_calf_r0","koishi0_foot_r0","koishi0_body","koishi0_arm0_r0","koishi0_arm0_l0","koishi0_head0","koishi0_hear_b0","koishi0_hear_f1","koishi0_hear_f0","koishi0_mouth0","koishi0_eye0_l0","koishi0_eye0_l1","koishi0_eye0_l2","koishi0_eye1_l0","koishi0_eye0_r0","koishi0_eye0_r1","koishi0_eye0_r2","koishi0_eye1_r0","koishi0_hat0_f0","koishi0_hat0_b0","koishi0_hat0_obj0","3rdeye0_all","3rdeye0_cord_b0","3rdeye0_cord_f0","3rdeye0_body0","3rdeye0_eye0","3rdeye0_light0","3rdeye0_eye1"],
"ssa": [
[
[3,0,626,170,20,56,38.854675,-51.125820,0.368003,1.0,1.0,11,7],
[2,0,984,146,24,62,27.0,-81.0,0.471239,1.0,1.0,14,8],
[4,0,386,202,26,14,49.658798,-9.206005,0.408756,1.0,1.0,4,5],
[6,0,1002,2,18,60,-35.700405,-55.440186,-0.498728,1.0,1.0,8,9],
[5,0,626,100,22,68,-26.0,-86.0,-0.369783,1.0,1.0,8,11],
[7,0,358,202,26,14,-51.876724,-15.286396,-0.228202,1.0,1.0,4,5],
[28,0,240,180,270,20,1.807719,-171.033234,0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,-12.233901,-280.958405,0.052360,1.0,1.0,133,40],
[12,0,214,2,174,170,-29.859303,-288.643433,0.017453,1.0,1.0,62,27],
[10,0,554,100,70,140,22.756006,-196.547668,-0.017453,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-125.0,0.017453,1.0,1.0,104,104],
[9,0,926,2,74,142,-35.165352,-191.536041,0.069813,1.0,1.0,40,13],
[11,0,658,84,138,126,-10.291326,-198.971283,0.017453,1.0,1.0,60,120],
[16,0,336,202,20,26,48.652393,-260.009277,0.017453,1.0,1.0,10,13],
[20,0,278,202,34,28,-7.216912,-252.033020,0.017453,1.0,1.0,17,14],
[15,0,414,202,22,6,15.722167,-198.425201,0.017453,1.0,1.0,11,3],
[17,0,1014,92,4,6,52.651783,-260.079102,0.017453,1.0,1.0,2,3],
[21,0,1012,84,6,6,-1.217826,-252.137741,0.017453,1.0,1.0,3,3],
[18,0,650,100,4,4,46.687603,-257.974670,0.017453,1.0,1.0,2,2],
[22,0,1002,96,10,4,-10.181551,-249.980972,0.017453,1.0,1.0,5,2],
[13,0,798,84,106,150,-62.330700,-258.072083,0.017453,1.0,1.0,58,34],
[14,0,390,100,162,78,-0.863717,-289.149536,0.017453,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.927448,-155.686462,0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,99.880058,-167.744324,0.017453,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.826790,-170.848587,0.017453,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.844849,-169.778931,0.017453,1.0,1.0,3,1],
[24,0,390,2,266,96,-12.966604,-294.939209,0.052360,1.0,1.0,133,48],
[26,0,906,146,76,96,-66.264565,-280.129517,0.087266,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,34.315849,-51.530025,0.329745,1.0,1.0,11,7],
[2,0,984,146,24,62,24.0,-82.599998,0.412334,1.0,1.0,14,8],
[4,0,386,202,26,14,43.508705,-9.227646,0.334423,1.0,1.0,4,5],
[6,0,1002,2,18,60,-29.114056,-55.914192,-0.517108,1.0,1.0,8,9],
[5,0,626,100,22,68,-22.0,-87.599998,-0.288653,1.0,1.0,8,11],
[7,0,358,202,26,14,-46.025642,-16.064499,-0.284761,1.0,1.0,4,5],
[28,0,240,180,270,20,1.835223,-171.171539,0.014960,1.0,1.0,135,10],
[25,0,658,2,266,80,-11.882391,-281.933411,0.047373,1.0,1.0,133,40],
[12,0,214,2,174,170,-29.525129,-289.662994,0.013713,1.0,1.0,62,27],
[10,0,554,100,70,140,22.721109,-197.196136,-0.002493,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-125.800003,0.014960,1.0,1.0,104,104],
[9,0,926,2,74,142,-35.142212,-192.401428,0.051113,1.0,1.0,40,13],
[11,0,658,84,138,126,-10.109377,-199.943405,0.014960,1.0,1.0,60,120],
[16,0,336,202,20,26,48.986343,-260.834259,0.014960,1.0,1.0,10,13],
[20,0,278,202,34,28,-6.902673,-252.997314,0.014960,1.0,1.0,17,14],
[15,0,414,202,22,6,15.902674,-199.332458,0.014960,1.0,1.0,11,3],
[17,0,1014,92,4,6,52.985897,-260.894104,0.014960,1.0,1.0,2,3],
[21,0,1012,84,6,6,-0.903344,-253.087067,0.014960,1.0,1.0,3,3],
[18,0,650,100,4,4,47.016487,-258.804565,0.014960,1.0,1.0,2,2],
[22,0,1002,96,10,4,-9.872418,-250.952667,0.014960,1.0,1.0,5,2],
[13,0,798,84,106,150,-62.144073,-259.171631,0.012467,1.0,1.0,58,34],
[14,0,390,100,162,78,-0.456954,-290.097900,0.014960,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.938148,-155.874023,0.014960,1.0,1.0,118,15],
[30,0,512,180,40,54,99.899055,-167.638123,0.012467,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.861191,-170.712692,0.012467,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.873970,-169.662903,0.012467,1.0,1.0,3,1],
[24,0,390,2,266,96,-12.545368,-295.917694,0.047373,1.0,1.0,133,48],
[26,0,906,146,76,96,-65.916519,-281.373962,0.075735,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,29.676514,-52.013695,0.291487,1.0,1.0,11,7],
[2,0,984,146,24,62,21.0,-84.199997,0.353429,1.0,1.0,14,8],
[4,0,386,202,26,14,37.244648,-9.390656,0.260089,1.0,1.0,4,5],
[6,0,1002,2,18,60,-22.409531,-56.609261,-0.535489,1.0,1.0,8,9],
[5,0,626,100,22,68,-18.0,-89.199997,-0.207524,1.0,1.0,8,11],
[7,0,358,202,26,14,-40.050682,-17.077122,-0.341321,1.0,1.0,4,5],
[28,0,240,180,270,20,1.862715,-171.309799,0.012467,1.0,1.0,135,10],
[25,0,658,2,266,80,-11.530040,-282.907745,0.042387,1.0,1.0,133,40],
[12,0,214,2,174,170,-29.189999,-290.681946,0.009973,1.0,1.0,62,27],
[10,0,554,100,70,140,22.685648,-197.845215,0.012467,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-126.599998,0.012467,1.0,1.0,104,104],
[9,0,926,2,74,142,-35.118916,-193.267105,0.032413,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.926585,-200.915100,0.012467,1.0,1.0,60,120],
[16,0,336,202,20,26,49.320774,-261.658417,0.012467,1.0,1.0,10,13],
[20,0,278,202,34,28,-6.587611,-253.960846,0.012467,1.0,1.0,17,14],
[15,0,414,202,22,6,16.083862,-200.239304,0.012467,1.0,1.0,11,3],
[17,0,1014,92,4,6,53.320465,-261.708282,0.012467,1.0,1.0,2,3],
[21,0,1012,84,6,6,-0.588077,-254.035645,0.012467,1.0,1.0,3,3],
[18,0,650,100,4,4,47.345863,-259.633636,0.012467,1.0,1.0,2,2],
[22,0,1002,96,10,4,-9.562445,-251.923599,0.012467,1.0,1.0,5,2],
[13,0,798,84,106,150,-61.956291,-260.271088,0.007480,1.0,1.0,58,34],
[14,0,390,100,162,78,-0.049408,-291.045227,0.012467,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.948736,-156.061646,0.012467,1.0,1.0,118,15],
[30,0,512,180,40,54,99.917435,-167.531891,0.007480,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.894829,-170.576691,0.007480,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.902420,-169.546799,0.007480,1.0,1.0,3,1],
[24,0,390,2,266,96,-12.123274,-296.895172,0.042387,1.0,1.0,133,48],
[26,0,906,146,76,96,-65.566284,-282.617767,0.064203,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,24.940800,-52.584568,0.253230,1.0,1.0,11,7],
[2,0,984,146,24,62,18.0,-85.800003,0.294524,1.0,1.0,14,8],
[4,0,386,202,26,14,30.873138,-9.703251,0.185755,1.0,1.0,4,5],
[6,0,1002,2,18,60,-15.605877,-57.537094,-0.553869,1.0,1.0,8,9],
[5,0,626,100,22,68,-14.0,-90.800003,-0.126395,1.0,1.0,8,11],
[7,0,358,202,26,14,-33.970627,-18.335869,-0.397881,1.0,1.0,4,5],
[28,0,240,180,270,20,1.890196,-171.447968,0.009973,1.0,1.0,135,10],
[25,0,658,2,266,80,-11.176845,-283.881378,0.037400,1.0,1.0,133,40],
[12,0,214,2,174,170,-28.853912,-291.700195,0.006233,1.0,1.0,62,27],
[10,0,554,100,70,140,22.649628,-198.494934,0.027427,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-127.400002,0.009973,1.0,1.0,104,104],
[9,0,926,2,74,142,-35.095459,-194.133087,0.013713,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.742949,-201.886322,0.009973,1.0,1.0,60,120],
[16,0,336,202,20,26,49.655678,-262.481720,0.009973,1.0,1.0,10,13],
[20,0,278,202,34,28,-6.271725,-254.923584,0.009973,1.0,1.0,17,14],
[15,0,414,202,22,6,16.265732,-201.145676,0.009973,1.0,1.0,11,3],
[17,0,1014,92,4,6,53.655479,-262.521606,0.009973,1.0,1.0,2,3],
[21,0,1012,84,6,6,-0.272024,-254.983429,0.009973,1.0,1.0,3,3],
[18,0,650,100,4,4,47.675724,-260.461884,0.009973,1.0,1.0,2,2],
[22,0,1002,96,10,4,-9.251630,-252.893768,0.009973,1.0,1.0,5,2],
[13,0,798,84,106,150,-61.767353,-261.370422,0.002493,1.0,1.0,58,34],
[14,0,390,100,162,78,0.358920,-291.991547,0.009973,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.959211,-156.249252,0.009973,1.0,1.0,118,15],
[30,0,512,180,40,54,99.935188,-167.425583,0.002493,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.927689,-170.440536,0.002493,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.930199,-169.430557,0.002493,1.0,1.0,3,1],
[24,0,390,2,266,96,-11.700321,-297.871582,0.037400,1.0,1.0,133,48],
[26,0,906,146,76,96,-65.213867,-283.860840,0.052672,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,20.113411,-53.250137,0.214972,1.0,1.0,11,7],
[2,0,984,146,24,62,15.0,-87.400002,0.235619,1.0,1.0,14,8],
[4,0,386,202,26,14,24.401272,-10.173298,0.111422,1.0,1.0,4,5],
[6,0,1002,2,18,60,-8.723257,-58.707722,-0.572250,1.0,1.0,8,9],
[5,0,626,100,22,68,-10.0,-92.400002,-0.045265,1.0,1.0,8,11],
[7,0,358,202,26,14,-27.805401,-19.850655,-0.454440,1.0,1.0,4,5],
[28,0,240,180,270,20,1.917665,-171.586075,0.007480,1.0,1.0,135,10],
[25,0,658,2,266,80,-10.822809,-284.854279,0.032413,1.0,1.0,133,40],
[12,0,214,2,174,170,-28.516867,-292.717804,0.002493,1.0,1.0,62,27],
[10,0,554,100,70,140,22.613049,-199.145248,0.042387,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-128.199997,0.007480,1.0,1.0,104,104],
[9,0,926,2,74,142,-35.071838,-194.999374,-0.004987,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.558472,-202.857086,0.007480,1.0,1.0,60,120],
[16,0,336,202,20,26,49.991055,-263.304199,0.007480,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.955019,-255.885529,0.007480,1.0,1.0,17,14],
[15,0,414,202,22,6,16.448280,-202.051590,0.007480,1.0,1.0,11,3],
[17,0,1014,92,4,6,53.990944,-263.334106,0.007480,1.0,1.0,2,3],
[21,0,1012,84,6,6,0.044813,-255.930405,0.007480,1.0,1.0,3,3],
[18,0,650,100,4,4,48.006069,-261.289307,0.007480,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.939976,-253.863144,0.007480,1.0,1.0,5,2],
[13,0,798,84,106,150,-61.577255,-262.469666,-0.002493,1.0,1.0,58,34],
[14,0,390,100,162,78,0.768028,-292.936829,0.007480,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.969576,-156.436905,0.007480,1.0,1.0,118,15],
[30,0,512,180,40,54,99.952324,-167.319244,-0.002493,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.959785,-170.304276,-0.002493,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.957306,-169.314255,-0.002493,1.0,1.0,3,1],
[24,0,390,2,266,96,-11.276515,-298.846924,0.032413,1.0,1.0,133,48],
[26,0,906,146,76,96,-64.859261,-285.103210,0.041140,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,15.199591,-54.017681,0.176715,1.0,1.0,11,7],
[2,0,984,146,24,62,12.0,-89.0,0.176715,1.0,1.0,14,8],
[4,0,386,202,26,14,17.836699,-10.808357,0.037088,1.0,1.0,4,5],
[6,0,1002,2,18,60,-1.782804,-60.129433,-0.590630,1.0,1.0,8,9],
[5,0,626,100,22,68,-6.0,-94.0,0.035864,1.0,1.0,8,11],
[7,0,358,202,26,14,-21.575893,-21.629646,-0.511000,1.0,1.0,4,5],
[28,0,240,180,270,20,1.945122,-171.724121,0.004987,1.0,1.0,135,10],
[25,0,658,2,266,80,-10.467934,-285.826508,0.027427,1.0,1.0,133,40],
[12,0,214,2,174,170,-28.178865,-293.734772,-0.001247,1.0,1.0,62,27],
[10,0,554,100,70,140,22.575916,-199.796204,0.057347,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-129.0,0.004987,1.0,1.0,104,104],
[9,0,926,2,74,142,-35.048058,-195.865952,-0.023687,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.373154,-203.827423,0.004987,1.0,1.0,60,120],
[16,0,336,202,20,26,50.326900,-264.125885,0.004987,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.637495,-256.846710,0.004987,1.0,1.0,17,14],
[15,0,414,202,22,6,16.631510,-202.957092,0.004987,1.0,1.0,11,3],
[17,0,1014,92,4,6,54.326851,-264.145844,0.004987,1.0,1.0,2,3],
[21,0,1012,84,6,6,0.362431,-256.876617,0.004987,1.0,1.0,3,3],
[18,0,650,100,4,4,48.336899,-262.115936,0.004987,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.627484,-254.831772,0.004987,1.0,1.0,5,2],
[13,0,798,84,106,150,-61.385994,-263.568787,-0.007480,1.0,1.0,58,34],
[14,0,390,100,162,78,1.177913,-293.881165,0.004987,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.979830,-156.624573,0.004987,1.0,1.0,118,15],
[30,0,512,180,40,54,99.968834,-167.212860,-0.007480,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.991104,-170.167892,-0.007480,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.983734,-169.197845,-0.007480,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.851858,-299.821228,0.027427,1.0,1.0,133,48],
[26,0,906,146,76,96,-64.502472,-286.344879,0.029608,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,10.134604,-53.889992,0.091647,1.0,1.0,11,7],
[2,0,984,146,24,62,9.0,-89.0,0.117810,1.0,1.0,14,8],
[4,0,386,202,26,14,9.090904,-10.612854,0.018297,1.0,1.0,4,5],
[6,0,1002,2,18,60,5.318176,-61.623795,-0.609011,1.0,1.0,8,9],
[5,0,626,100,22,68,-2.0,-95.333336,0.116994,1.0,1.0,8,11],
[7,0,358,202,26,14,-15.452581,-23.684982,-0.567559,1.0,1.0,4,5],
[28,0,240,180,270,20,1.972567,-171.862106,0.002493,1.0,1.0,135,10],
[25,0,658,2,266,80,-10.112220,-285.553589,0.022440,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.839911,-293.506592,-0.004987,1.0,1.0,62,27],
[10,0,554,100,70,140,22.538233,-199.203339,0.072307,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-128.555557,0.002493,1.0,1.0,104,104],
[9,0,926,2,74,142,-35.024113,-195.488388,-0.042387,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.186996,-203.552826,0.002493,1.0,1.0,60,120],
[16,0,336,202,20,26,50.663219,-263.702240,0.002493,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.319155,-256.562622,0.002493,1.0,1.0,17,14],
[15,0,414,202,22,6,16.815416,-202.617661,0.002493,1.0,1.0,11,3],
[17,0,1014,92,4,6,54.663208,-263.712219,0.002493,1.0,1.0,2,3],
[21,0,1012,84,6,6,0.680826,-256.577576,0.002493,1.0,1.0,3,3],
[18,0,650,100,4,4,48.668213,-261.697266,0.002493,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.314159,-254.555145,0.002493,1.0,1.0,5,2],
[13,0,798,84,106,150,-61.193577,-263.423340,-0.012467,1.0,1.0,58,34],
[14,0,390,100,162,78,1.588571,-293.579956,0.002493,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.989971,-156.812286,0.002493,1.0,1.0,118,15],
[30,0,512,180,40,54,99.984726,-167.106461,-0.012467,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.021660,-170.031433,-0.012467,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.009506,-169.081375,-0.012467,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.426353,-299.550049,0.022440,1.0,1.0,133,48],
[26,0,906,146,76,96,-64.143501,-286.341400,0.018077,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,5.065681,-53.884090,0.006580,1.0,1.0,11,7],
[2,0,984,146,24,62,6.0,-89.0,0.058905,1.0,1.0,14,8],
[4,0,386,202,26,14,0.348723,-10.852123,-0.000495,1.0,1.0,4,5],
[6,0,1002,2,18,60,12.418365,-63.399864,-0.627391,1.0,1.0,8,9],
[5,0,626,100,22,68,2.0,-96.666664,0.198123,1.0,1.0,8,11],
[7,0,358,202,26,14,-9.316034,-26.044895,-0.624119,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-172.0,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.755667,-284.988251,0.017453,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.500000,-292.986115,-0.008727,1.0,1.0,62,27],
[10,0,554,100,70,140,22.500000,-198.611115,0.087266,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-128.111115,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-35.0,-195.111115,-0.061087,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-202.986115,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-262.986115,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-255.986115,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-201.986115,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-262.986115,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-255.986115,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-260.986115,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-253.986115,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-61.0,-262.986115,-0.017453,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-292.986115,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-157.0,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-167.0,-0.017453,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.051445,-169.894821,-0.017453,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.034599,-168.964798,-0.017453,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-298.986115,0.017453,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.782345,-286.045502,0.006545,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,0.0,-54.0,-0.078487,1.0,1.0,11,7],
[2,0,984,146,24,62,3.0,-89.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,-8.356104,-11.524414,-0.019286,1.0,1.0,4,5],
[6,0,1002,2,18,60,19.492355,-65.458389,-0.645772,1.0,1.0,8,9],
[5,0,626,100,22,68,6.0,-98.0,0.279253,1.0,1.0,8,11],
[7,0,358,202,26,14,-3.191151,-28.709805,-0.680678,1.0,1.0,4,5],
[28,0,240,180,270,20,2.027420,-172.137833,-0.002493,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.399730,-284.422211,0.012467,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.160591,-292.464935,-0.012467,1.0,1.0,62,27],
[10,0,554,100,70,140,22.461222,-198.019501,0.102226,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-127.666664,-0.002493,1.0,1.0,104,104],
[9,0,926,2,74,142,-34.975719,-194.734131,-0.079786,1.0,1.0,40,13],
[11,0,658,84,138,126,-8.813621,-202.418915,-0.002493,1.0,1.0,60,120],
[16,0,336,202,20,26,51.335793,-262.269135,-0.002493,1.0,1.0,10,13],
[20,0,278,202,34,28,-4.681487,-255.408783,-0.002493,1.0,1.0,17,14],
[15,0,414,202,22,6,17.183804,-201.354095,-0.002493,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.335781,-262.259155,-0.002493,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.318495,-255.393829,-0.002493,1.0,1.0,3,3],
[18,0,650,100,4,4,49.330811,-260.274139,-0.002493,1.0,1.0,2,2],
[22,0,1002,96,10,4,-7.686464,-253.416275,-0.002493,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.806717,-262.548737,-0.022440,1.0,1.0,58,34],
[14,0,390,100,162,78,2.410745,-292.391205,-0.002493,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.009918,-157.187744,-0.002493,1.0,1.0,118,15],
[30,0,512,180,40,54,100.014648,-166.893509,-0.022440,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.080452,-169.758118,-0.022440,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.059021,-168.848129,-0.022440,1.0,1.0,3,1],
[24,0,390,2,266,96,-9.574258,-298.421112,0.012467,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.420464,-285.748871,-0.004987,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,-4.697772,-53.580746,-0.142492,1.0,1.0,11,7],
[2,0,984,146,24,62,-1.000000,-88.500000,-0.024726,1.0,1.0,14,8],
[4,0,386,202,26,14,-15.753523,-11.726589,-0.072795,1.0,1.0,4,5],
[6,0,1002,2,18,60,22.288475,-63.174644,-0.509054,1.0,1.0,8,9],
[5,0,626,100,22,68,8.833333,-95.333336,0.290888,1.0,1.0,8,11],
[7,0,358,202,26,14,4.970711,-23.596165,-0.498873,1.0,1.0,4,5],
[28,0,240,180,270,20,2.054828,-172.275604,-0.004987,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.044412,-283.855469,0.007480,1.0,1.0,133,40],
[12,0,214,2,174,170,-26.821690,-291.943115,-0.016207,1.0,1.0,62,27],
[10,0,554,100,70,140,22.421900,-197.428528,0.117186,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-127.222221,-0.004987,1.0,1.0,104,104],
[9,0,926,2,74,142,-34.951271,-194.357452,-0.098486,1.0,1.0,40,13],
[11,0,658,84,138,126,-8.627860,-201.851288,-0.004987,1.0,1.0,60,120],
[16,0,336,202,20,26,51.670589,-261.551331,-0.004987,1.0,1.0,10,13],
[20,0,278,202,34,28,-4.363618,-254.830688,-0.004987,1.0,1.0,17,14],
[15,0,414,202,22,6,17.366829,-200.721649,-0.004987,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.670540,-261.531372,-0.004987,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.636307,-254.800766,-0.004987,1.0,1.0,3,3],
[18,0,650,100,4,4,49.660641,-259.561340,-0.004987,1.0,1.0,2,2],
[22,0,1002,96,10,4,-7.373554,-252.845673,-0.004987,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.613728,-262.111267,-0.027427,1.0,1.0,58,34],
[14,0,390,100,162,78,2.820800,-291.795319,-0.004987,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.019722,-157.375534,-0.004987,1.0,1.0,118,15],
[30,0,512,180,40,54,100.028679,-166.786987,-0.027427,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.108688,-169.621323,-0.027427,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.082771,-168.731384,-0.027427,1.0,1.0,3,1],
[24,0,390,2,266,96,-9.149131,-297.855072,0.007480,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.057861,-285.451477,-0.016518,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,-9.393486,-53.174603,-0.206496,1.0,1.0,11,7],
[2,0,984,146,24,62,-5.0,-88.0,-0.049451,1.0,1.0,14,8],
[4,0,386,202,26,14,-23.103611,-12.113277,-0.126304,1.0,1.0,4,5],
[6,0,1002,2,18,60,25.077564,-60.885590,-0.372337,1.0,1.0,8,9],
[5,0,626,100,22,68,11.666667,-92.666664,0.302524,1.0,1.0,8,11],
[7,0,358,202,26,14,13.470868,-19.255524,-0.317068,1.0,1.0,4,5],
[28,0,240,180,270,20,2.082223,-172.413300,-0.007480,1.0,1.0,135,10],
[25,0,658,2,266,80,-8.689713,-283.287994,0.002493,1.0,1.0,133,40],
[12,0,214,2,174,170,-26.483288,-291.420654,-0.019947,1.0,1.0,62,27],
[10,0,554,100,70,140,22.382040,-196.838196,0.132146,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-126.777779,-0.007480,1.0,1.0,104,104],
[9,0,926,2,74,142,-34.926651,-193.981064,-0.117186,1.0,1.0,40,13],
[11,0,658,84,138,126,-8.442719,-201.283173,-0.007480,1.0,1.0,60,120],
[16,0,336,202,20,26,52.004398,-260.832703,-0.007480,1.0,1.0,10,13],
[20,0,278,202,34,28,-4.046395,-254.251770,-0.007480,1.0,1.0,17,14],
[15,0,414,202,22,6,17.549074,-200.088730,-0.007480,1.0,1.0,11,3],
[17,0,1014,92,4,6,56.004288,-260.802795,-0.007480,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.953437,-254.206894,-0.007480,1.0,1.0,3,3],
[18,0,650,100,4,4,49.989494,-258.847717,-0.007480,1.0,1.0,2,2],
[22,0,1002,96,10,4,-7.061271,-252.274261,-0.007480,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.421028,-261.673645,-0.032413,1.0,1.0,58,34],
[14,0,390,100,162,78,3.230165,-291.198364,-0.007480,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.029417,-157.563324,-0.007480,1.0,1.0,118,15],
[30,0,512,180,40,54,100.042084,-166.680420,-0.032413,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.136154,-169.484406,-0.032413,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.105850,-168.614548,-0.032413,1.0,1.0,3,1],
[24,0,390,2,266,96,-8.724619,-297.287964,0.002493,1.0,1.0,133,48],
[26,0,906,146,76,96,-62.694534,-285.153351,-0.028050,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,-14.086923,-52.781513,-0.270500,1.0,1.0,11,7],
[2,0,984,146,24,62,-9.0,-87.500000,-0.074176,1.0,1.0,14,8],
[4,0,386,202,26,14,-30.395275,-12.681168,-0.179813,1.0,1.0,4,5],
[6,0,1002,2,18,60,27.859749,-58.591129,-0.235619,1.0,1.0,8,9],
[5,0,626,100,22,68,14.500000,-90.0,0.314159,1.0,1.0,8,11],
[7,0,358,202,26,14,22.197264,-15.728718,-0.135263,1.0,1.0,4,5],
[28,0,240,180,270,20,2.109605,-172.550934,-0.009973,1.0,1.0,135,10],
[25,0,658,2,266,80,-8.335632,-282.719818,-0.002493,1.0,1.0,133,40],
[12,0,214,2,174,170,-26.145395,-290.897461,-0.023687,1.0,1.0,62,27],
[10,0,554,100,70,140,22.341640,-196.248505,0.147106,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-126.333336,-0.009973,1.0,1.0,104,104],
[9,0,926,2,74,142,-34.901855,-193.604980,-0.135886,1.0,1.0,40,13],
[11,0,658,84,138,126,-8.258198,-200.714600,-0.009973,1.0,1.0,60,120],
[16,0,336,202,20,26,52.337208,-260.113220,-0.009973,1.0,1.0,10,13],
[20,0,278,202,34,28,-3.729820,-253.672073,-0.009973,1.0,1.0,17,14],
[15,0,414,202,22,6,17.730536,-199.455353,-0.009973,1.0,1.0,11,3],
[17,0,1014,92,4,6,56.337009,-260.073334,-0.009973,1.0,1.0,2,3],
[21,0,1012,84,6,6,2.269881,-253.612228,-0.009973,1.0,1.0,3,3],
[18,0,650,100,4,4,50.317360,-258.133270,-0.009973,1.0,1.0,2,2],
[22,0,1002,96,10,4,-6.749618,-251.702087,-0.009973,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.228626,-261.235931,-0.037400,1.0,1.0,58,34],
[14,0,390,100,162,78,3.638838,-290.600403,-0.009973,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.038998,-157.751144,-0.009973,1.0,1.0,118,15],
[30,0,512,180,40,54,100.054863,-166.573807,-0.037400,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.162842,-169.347366,-0.037400,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.128250,-168.497620,-0.037400,1.0,1.0,3,1],
[24,0,390,2,266,96,-8.300726,-296.719788,-0.002493,1.0,1.0,133,48],
[26,0,906,146,76,96,-62.330475,-284.854462,-0.039582,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,-18.777861,-52.401432,-0.334504,1.0,1.0,11,7],
[2,0,984,146,24,62,-13.0,-87.0,-0.098902,1.0,1.0,14,8],
[4,0,386,202,26,14,-37.617657,-13.426285,-0.233321,1.0,1.0,4,5],
[6,0,1002,2,18,60,30.635143,-56.291145,-0.098902,1.0,1.0,8,9],
[5,0,626,100,22,68,17.333334,-87.333336,0.325795,1.0,1.0,8,11],
[7,0,358,202,26,14,31.033150,-13.040489,0.046542,1.0,1.0,4,5],
[28,0,240,180,270,20,2.136974,-172.688492,-0.012467,1.0,1.0,135,10],
[25,0,658,2,266,80,-7.982173,-282.150970,-0.007480,1.0,1.0,133,40],
[12,0,214,2,174,170,-25.808008,-290.373657,-0.027427,1.0,1.0,62,27],
[10,0,554,100,70,140,22.300709,-195.659424,0.162066,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-125.888885,-0.012467,1.0,1.0,104,104],
[9,0,926,2,74,142,-34.876888,-193.229172,-0.154586,1.0,1.0,40,13],
[11,0,658,84,138,126,-8.074299,-200.145584,-0.012467,1.0,1.0,60,120],
[16,0,336,202,20,26,52.669018,-259.392944,-0.012467,1.0,1.0,10,13],
[20,0,278,202,34,28,-3.413895,-253.091599,-0.012467,1.0,1.0,17,14],
[15,0,414,202,22,6,17.911215,-198.821533,-0.012467,1.0,1.0,11,3],
[17,0,1014,92,4,6,56.668709,-259.343079,-0.012467,1.0,1.0,2,3],
[21,0,1012,84,6,6,2.585639,-253.016800,-0.012467,1.0,1.0,3,3],
[18,0,650,100,4,4,50.644241,-257.418030,-0.012467,1.0,1.0,2,2],
[22,0,1002,96,10,4,-6.438595,-251.129150,-0.012467,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.036510,-260.798065,-0.042387,1.0,1.0,58,34],
[14,0,390,100,162,78,4.046815,-290.001465,-0.012467,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.048466,-157.938980,-0.012467,1.0,1.0,118,15],
[30,0,512,180,40,54,100.067024,-166.467178,-0.042387,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.188759,-169.210236,-0.042387,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.149979,-168.380630,-0.042387,1.0,1.0,3,1],
[24,0,390,2,266,96,-7.877455,-296.150574,-0.007480,1.0,1.0,133,48],
[26,0,906,146,76,96,-61.965706,-284.554810,-0.051113,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,-23.466080,-52.034302,-0.398508,1.0,1.0,11,7],
[2,0,984,146,24,62,-17.0,-86.500000,-0.123627,1.0,1.0,14,8],
[4,0,386,202,26,14,-44.760170,-14.343960,-0.286830,1.0,1.0,4,5],
[6,0,1002,2,18,60,33.403866,-53.985527,0.037815,1.0,1.0,8,9],
[5,0,626,100,22,68,20.166666,-84.666664,0.337430,1.0,1.0,8,11],
[7,0,358,202,26,14,39.859421,-11.199001,0.228347,1.0,1.0,4,5],
[28,0,240,180,270,20,2.164330,-172.826004,-0.014960,1.0,1.0,135,10],
[25,0,658,2,266,80,-7.629336,-281.581421,-0.012467,1.0,1.0,133,40],
[12,0,214,2,174,170,-25.471128,-289.849182,-0.031167,1.0,1.0,62,27],
[10,0,554,100,70,140,22.259243,-195.070999,0.177026,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-125.444443,-0.014960,1.0,1.0,104,104],
[9,0,926,2,74,142,-34.851746,-192.853668,-0.173286,1.0,1.0,40,13],
[11,0,658,84,138,126,-7.891022,-199.576111,-0.014960,1.0,1.0,60,120],
[16,0,336,202,20,26,52.999828,-258.671844,-0.014960,1.0,1.0,10,13],
[20,0,278,202,34,28,-3.098621,-252.510345,-0.014960,1.0,1.0,17,14],
[15,0,414,202,22,6,18.091110,-198.187271,-0.014960,1.0,1.0,11,3],
[17,0,1014,92,4,6,56.999382,-258.612000,-0.014960,1.0,1.0,2,3],
[21,0,1012,84,6,6,2.900707,-252.420593,-0.014960,1.0,1.0,3,3],
[18,0,650,100,4,4,50.970135,-256.701996,-0.014960,1.0,1.0,2,2],
[22,0,1002,96,10,4,-6.128204,-250.555450,-0.014960,1.0,1.0,5,2],
[13,0,798,84,106,150,-59.844685,-260.360107,-0.047373,1.0,1.0,58,34],
[14,0,390,100,162,78,4.454093,-289.401489,-0.014960,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.057823,-158.126862,-0.014960,1.0,1.0,118,15],
[30,0,512,180,40,54,100.078568,-166.360535,-0.047373,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.213905,-169.073029,-0.047373,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.171036,-168.263580,-0.047373,1.0,1.0,3,1],
[24,0,390,2,266,96,-7.454807,-295.580322,-0.012467,1.0,1.0,133,48],
[26,0,906,146,76,96,-61.600208,-284.254425,-0.062645,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,-28.151361,-51.680065,-0.462512,1.0,1.0,11,7],
[2,0,984,146,24,62,-21.0,-86.0,-0.148353,1.0,1.0,14,8],
[4,0,386,202,26,14,-51.812538,-15.428875,-0.340339,1.0,1.0,4,5],
[6,0,1002,2,18,60,36.166050,-51.674187,0.174533,1.0,1.0,8,9],
[5,0,626,100,22,68,23.0,-82.0,0.349066,1.0,1.0,8,11],
[7,0,358,202,26,14,48.556961,-10.195694,0.410152,1.0,1.0,4,5],
[28,0,240,180,270,20,2.191672,-172.963425,-0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,-7.277120,-281.011139,-0.017453,1.0,1.0,133,40],
[12,0,214,2,174,170,-25.134760,-289.324066,-0.034907,1.0,1.0,62,27],
[10,0,554,100,70,140,22.217251,-194.483215,0.191986,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-125.0,-0.017453,1.0,1.0,104,104],
[9,0,926,2,74,142,-34.826424,-192.478455,-0.191986,1.0,1.0,40,13],
[11,0,658,84,138,126,-7.708370,-199.006180,-0.017453,1.0,1.0,60,120],
[16,0,336,202,20,26,53.329636,-257.949890,-0.017453,1.0,1.0,10,13],
[20,0,278,202,34,28,-2.784001,-251.928299,-0.017453,1.0,1.0,17,14],
[15,0,414,202,22,6,18.270218,-197.552567,-0.017453,1.0,1.0,11,3],
[17,0,1014,92,4,6,57.329025,-257.880066,-0.017453,1.0,1.0,2,3],
[21,0,1012,84,6,6,3.215085,-251.823578,-0.017453,1.0,1.0,3,3],
[18,0,650,100,4,4,51.295036,-255.985092,-0.017453,1.0,1.0,2,2],
[22,0,1002,96,10,4,-5.818449,-249.980957,-0.017453,1.0,1.0,5,2],
[13,0,798,84,106,150,-59.653152,-259.922028,-0.052360,1.0,1.0,58,34],
[14,0,390,100,162,78,4.860672,-288.800507,-0.017453,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.067068,-158.314758,-0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,100.089485,-166.253845,-0.052360,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.238274,-168.935715,-0.052360,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.191414,-168.146439,-0.052360,1.0,1.0,3,1],
[24,0,390,2,266,96,-7.032786,-295.009003,-0.017453,1.0,1.0,133,48],
[26,0,906,146,76,96,-61.233994,-283.953247,-0.074176,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,-23.254990,-52.620304,-0.436332,1.0,1.0,11,7],
[2,0,984,146,24,62,-17.222221,-87.333336,-0.110538,1.0,1.0,14,8],
[4,0,386,202,26,14,-45.959114,-15.762161,-0.356230,1.0,1.0,4,5],
[6,0,1002,2,18,60,32.311523,-51.750977,0.149886,1.0,1.0,8,9],
[5,0,626,100,22,68,20.166666,-82.500000,0.315628,1.0,1.0,8,11],
[7,0,358,202,26,14,43.486771,-10.119625,0.341535,1.0,1.0,4,5],
[28,0,240,180,270,20,2.166153,-172.835159,-0.015126,1.0,1.0,135,10],
[25,0,658,2,266,80,-7.605439,-281.821472,-0.012799,1.0,1.0,133,40],
[12,0,214,2,174,170,-25.448292,-290.092255,-0.031416,1.0,1.0,62,27],
[10,0,554,100,70,140,22.256462,-195.283646,0.178024,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-125.666664,-0.015126,1.0,1.0,104,104],
[9,0,926,2,74,142,-34.850063,-193.080505,-0.174533,1.0,1.0,40,13],
[11,0,658,84,138,126,-7.878429,-199.816162,-0.015126,1.0,1.0,60,120],
[16,0,336,202,20,26,53.022243,-258.901764,-0.015126,1.0,1.0,10,13],
[20,0,278,202,34,28,-3.077229,-252.749603,-0.015126,1.0,1.0,17,14],
[15,0,414,202,22,6,18.103470,-198.423004,-0.015126,1.0,1.0,11,3],
[17,0,1014,92,4,6,57.021786,-258.841248,-0.015126,1.0,1.0,2,3],
[21,0,1012,84,6,6,2.922084,-252.658844,-0.015126,1.0,1.0,3,3],
[18,0,650,100,4,4,50.992222,-256.932251,-0.015126,1.0,1.0,2,2],
[22,0,1002,96,10,4,-6.107138,-250.795212,-0.015126,1.0,1.0,5,2],
[13,0,798,84,106,150,-59.831509,-260.608948,-0.047706,1.0,1.0,58,34],
[14,0,390,100,162,78,4.481617,-289.639496,-0.015126,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.058443,-158.139389,-0.015126,1.0,1.0,118,15],
[30,0,512,180,40,54,100.079315,-166.353424,-0.047706,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.215553,-169.063889,-0.047706,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.172417,-168.255768,-0.047706,1.0,1.0,3,1],
[24,0,390,2,266,96,-7.426257,-295.820313,-0.012799,1.0,1.0,133,48],
[26,0,906,146,76,96,-61.575420,-284.512421,-0.076067,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,-18.338860,-53.596256,-0.410152,1.0,1.0,11,7],
[2,0,984,146,24,62,-13.444445,-88.666664,-0.072722,1.0,1.0,14,8],
[4,0,386,202,26,14,-40.070370,-16.156418,-0.372122,1.0,1.0,4,5],
[6,0,1002,2,18,60,28.443420,-51.862144,0.125239,1.0,1.0,8,9],
[5,0,626,100,22,68,17.333334,-83.0,0.282191,1.0,1.0,8,11],
[7,0,358,202,26,14,38.403111,-10.112572,0.272917,1.0,1.0,4,5],
[28,0,240,180,270,20,2.140622,-172.706833,-0.012799,1.0,1.0,135,10],
[25,0,658,2,266,80,-7.934422,-282.631165,-0.008145,1.0,1.0,133,40],
[12,0,214,2,174,170,-25.762390,-290.859863,-0.027925,1.0,1.0,62,27],
[10,0,554,100,70,140,22.295210,-196.084641,0.164061,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-126.333336,-0.012799,1.0,1.0,104,104],
[9,0,926,2,74,142,-34.873547,-193.682800,-0.157080,1.0,1.0,40,13],
[11,0,658,84,138,126,-8.049155,-200.625763,-0.012799,1.0,1.0,60,120],
[16,0,336,202,20,26,52.713852,-259.852936,-0.012799,1.0,1.0,10,13],
[20,0,278,202,34,28,-3.371150,-253.570221,-0.012799,1.0,1.0,17,14],
[15,0,414,202,22,6,17.935917,-199.293076,-0.012799,1.0,1.0,11,3],
[17,0,1014,92,4,6,56.713524,-259.801727,-0.012799,1.0,1.0,2,3],
[21,0,1012,84,6,6,2.628358,-253.493423,-0.012799,1.0,1.0,3,3],
[18,0,650,100,4,4,50.688419,-257.878693,-0.012799,1.0,1.0,2,2],
[22,0,1002,96,10,4,-6.396502,-251.608780,-0.012799,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.010246,-261.295776,-0.043051,1.0,1.0,58,34],
[14,0,390,100,162,78,4.101830,-290.477600,-0.012799,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.049721,-157.964035,-0.012799,1.0,1.0,118,15],
[30,0,512,180,40,54,100.068604,-166.452972,-0.043051,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.192162,-169.191971,-0.043051,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.152824,-168.365036,-0.043051,1.0,1.0,3,1],
[24,0,390,2,266,96,-7.820395,-296.630707,-0.008145,1.0,1.0,133,48],
[26,0,906,146,76,96,-61.916344,-285.070923,-0.077958,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,-13.404076,-54.608875,-0.383972,1.0,1.0,11,7],
[2,0,984,146,24,62,-9.666666,-90.0,-0.034907,1.0,1.0,14,8],
[4,0,386,202,26,14,-34.148079,-16.613003,-0.388013,1.0,1.0,4,5],
[6,0,1002,2,18,60,24.562895,-52.008125,0.100592,1.0,1.0,8,9],
[5,0,626,100,22,68,14.500000,-83.500000,0.248753,1.0,1.0,8,11],
[7,0,358,202,26,14,33.308105,-10.174870,0.204300,1.0,1.0,4,5],
[28,0,240,180,270,20,2.115080,-172.578461,-0.010472,1.0,1.0,135,10],
[25,0,658,2,266,80,-8.264068,-283.440277,-0.003491,1.0,1.0,133,40],
[12,0,214,2,174,170,-26.077053,-291.626892,-0.024435,1.0,1.0,62,27],
[10,0,554,100,70,140,22.333496,-196.886185,0.150098,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-127.0,-0.010472,1.0,1.0,104,104],
[9,0,926,2,74,142,-34.896877,-194.285339,-0.139626,1.0,1.0,40,13],
[11,0,658,84,138,126,-8.220545,-201.434967,-0.010472,1.0,1.0,60,120],
[16,0,336,202,20,26,52.404472,-260.803375,-0.010472,1.0,1.0,10,13],
[20,0,278,202,34,28,-3.665760,-254.390167,-0.010472,1.0,1.0,17,14],
[15,0,414,202,22,6,17.767557,-200.162750,-0.010472,1.0,1.0,11,3],
[17,0,1014,92,4,6,56.404251,-260.761475,-0.010472,1.0,1.0,2,3],
[21,0,1012,84,6,6,2.333911,-254.327332,-0.010472,1.0,1.0,3,3],
[18,0,650,100,4,4,50.383636,-258.824432,-0.010472,1.0,1.0,2,2],
[22,0,1002,96,10,4,-6.686539,-252.421692,-0.010472,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.189354,-261.982483,-0.038397,1.0,1.0,58,34],
[14,0,390,100,162,78,3.721313,-291.314850,-0.010472,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.040899,-157.788712,-0.010472,1.0,1.0,118,15],
[30,0,512,180,40,54,100.057350,-166.552505,-0.038397,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.168091,-169.319962,-0.038397,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.132652,-168.474258,-0.038397,1.0,1.0,3,1],
[24,0,390,2,266,96,-8.215199,-297.440186,-0.003491,1.0,1.0,133,48],
[26,0,906,146,76,96,-62.256756,-285.628754,-0.065248,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,-8.451795,-55.659061,-0.357792,1.0,1.0,11,7],
[2,0,984,146,24,62,-5.888889,-91.333336,0.002909,1.0,1.0,14,8],
[4,0,386,202,26,14,-28.194073,-17.133194,-0.403904,1.0,1.0,4,5],
[6,0,1002,2,18,60,20.671120,-52.189312,0.075945,1.0,1.0,8,9],
[5,0,626,100,22,68,11.666666,-84.0,0.215315,1.0,1.0,8,11],
[7,0,358,202,26,14,28.203882,-10.306782,0.135682,1.0,1.0,4,5],
[28,0,240,180,270,20,2.089526,-172.450012,-0.008145,1.0,1.0,135,10],
[25,0,658,2,266,80,-8.594378,-284.248718,0.001164,1.0,1.0,133,40],
[12,0,214,2,174,170,-26.392281,-292.393372,-0.020944,1.0,1.0,62,27],
[10,0,554,100,70,140,22.371317,-197.688293,0.136136,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-127.666664,-0.008145,1.0,1.0,104,104],
[9,0,926,2,74,142,-34.920055,-194.888153,-0.122173,1.0,1.0,40,13],
[11,0,658,84,138,126,-8.392599,-202.243759,-0.008145,1.0,1.0,60,120],
[16,0,336,202,20,26,52.094101,-261.753082,-0.008145,1.0,1.0,10,13],
[20,0,278,202,34,28,-3.961059,-255.209427,-0.008145,1.0,1.0,17,14],
[15,0,414,202,22,6,17.598394,-201.032028,-0.008145,1.0,1.0,11,3],
[17,0,1014,92,4,6,56.093967,-261.720490,-0.008145,1.0,1.0,2,3],
[21,0,1012,84,6,6,2.038743,-255.160553,-0.008145,1.0,1.0,3,3],
[18,0,650,100,4,4,50.077877,-259.769440,-0.008145,1.0,1.0,2,2],
[22,0,1002,96,10,4,-6.977249,-253.233932,-0.008145,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.368835,-262.669098,-0.033743,1.0,1.0,58,34],
[14,0,390,100,162,78,3.340066,-292.151184,-0.008145,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.031982,-157.613403,-0.008145,1.0,1.0,118,15],
[30,0,512,180,40,54,100.045555,-166.651978,-0.033743,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.143349,-169.447845,-0.033743,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.111893,-168.583359,-0.033743,1.0,1.0,3,1],
[24,0,390,2,266,96,-8.610667,-298.248718,0.001164,1.0,1.0,133,48],
[26,0,906,146,76,96,-62.596668,-286.185883,-0.052539,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,-3.483208,-56.747688,-0.331613,1.0,1.0,11,7],
[2,0,984,146,24,62,-2.111110,-92.666664,0.040724,1.0,1.0,14,8],
[4,0,386,202,26,14,-22.210230,-17.718231,-0.419795,1.0,1.0,4,5],
[6,0,1002,2,18,60,16.769279,-52.406063,0.051298,1.0,1.0,8,9],
[5,0,626,100,22,68,8.833334,-84.500000,0.181878,1.0,1.0,8,11],
[7,0,358,202,26,14,23.092588,-10.508511,0.067064,1.0,1.0,4,5],
[28,0,240,180,270,20,2.063961,-172.321503,-0.005818,1.0,1.0,135,10],
[25,0,658,2,266,80,-8.925347,-285.056610,0.005818,1.0,1.0,133,40],
[12,0,214,2,174,170,-26.708069,-293.159241,-0.017453,1.0,1.0,62,27],
[10,0,554,100,70,140,22.408672,-198.490936,0.122173,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-128.333328,-0.005818,1.0,1.0,104,104],
[9,0,926,2,74,142,-34.943085,-195.491211,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-8.565315,-203.052170,-0.005818,1.0,1.0,60,120],
[16,0,336,202,20,26,51.782734,-262.702087,-0.005818,1.0,1.0,10,13],
[20,0,278,202,34,28,-4.257043,-256.028015,-0.005818,1.0,1.0,17,14],
[15,0,414,202,22,6,17.428427,-201.900925,-0.005818,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.782665,-262.678802,-0.005818,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.742855,-255.993103,-0.005818,1.0,1.0,3,3],
[18,0,650,100,4,4,49.771133,-260.713745,-0.005818,1.0,1.0,2,2],
[22,0,1002,96,10,4,-7.268628,-254.045502,-0.005818,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.548698,-263.355621,-0.029089,1.0,1.0,58,34],
[14,0,390,100,162,78,2.958095,-292.986633,-0.005818,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.022966,-157.438110,-0.005818,1.0,1.0,118,15],
[30,0,512,180,40,54,100.033211,-166.751450,-0.029089,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.117928,-169.575668,-0.029089,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.090530,-168.692429,-0.029089,1.0,1.0,3,1],
[24,0,390,2,266,96,-9.006796,-299.056366,0.005818,1.0,1.0,133,48],
[26,0,906,146,76,96,-62.936066,-286.742401,-0.039829,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,1.500443,-57.875599,-0.305433,1.0,1.0,11,7],
[2,0,984,146,24,62,1.666667,-94.0,0.078540,1.0,1.0,14,8],
[4,0,386,202,26,14,-16.198492,-18.369301,-0.435687,1.0,1.0,4,5],
[6,0,1002,2,18,60,12.858564,-52.658695,0.026651,1.0,1.0,8,9],
[5,0,626,100,22,68,6.0,-85.0,0.148440,1.0,1.0,8,11],
[7,0,358,202,26,14,17.976360,-10.780201,-0.001553,1.0,1.0,4,5],
[28,0,240,180,270,20,2.038385,-172.192947,-0.003491,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.256981,-285.863831,0.010472,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.024422,-293.924561,-0.013963,1.0,1.0,62,27],
[10,0,554,100,70,140,22.445559,-199.294159,0.108210,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-129.0,-0.003491,1.0,1.0,104,104],
[9,0,926,2,74,142,-34.965961,-196.094543,-0.087266,1.0,1.0,40,13],
[11,0,658,84,138,126,-8.738694,-203.860168,-0.003491,1.0,1.0,60,120],
[16,0,336,202,20,26,51.470379,-263.650360,-0.003491,1.0,1.0,10,13],
[20,0,278,202,34,28,-4.553714,-256.845886,-0.003491,1.0,1.0,17,14],
[15,0,414,202,22,6,17.257656,-202.769424,-0.003491,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.470356,-263.636383,-0.003491,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.446249,-256.824951,-0.003491,1.0,1.0,3,3],
[18,0,650,100,4,4,49.463409,-261.657349,-0.003491,1.0,1.0,2,2],
[22,0,1002,96,10,4,-7.560678,-254.856369,-0.003491,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.728935,-264.042023,-0.024435,1.0,1.0,58,34],
[14,0,390,100,162,78,2.575397,-293.821228,-0.003491,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.013853,-157.262848,-0.003491,1.0,1.0,118,15],
[30,0,512,180,40,54,100.020332,-166.850891,-0.024435,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.091835,-169.703400,-0.024435,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.068604,-168.801422,-0.024435,1.0,1.0,3,1],
[24,0,390,2,266,96,-9.403585,-299.863068,0.010472,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.274963,-287.298248,-0.027120,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,6.644074,-59.228477,-0.373326,1.0,1.0,11,7],
[2,0,984,146,24,62,5.444445,-95.333336,0.116355,1.0,1.0,14,8],
[4,0,386,202,26,14,-13.694238,-21.013912,-0.474491,1.0,1.0,4,5],
[6,0,1002,2,18,60,7.298999,-52.220150,-0.051918,1.0,1.0,8,9],
[5,0,626,100,22,68,3.0,-85.0,0.069871,1.0,1.0,8,11],
[7,0,358,202,26,14,9.114043,-10.069164,0.018349,1.0,1.0,4,5],
[28,0,240,180,270,20,2.012798,-172.064331,-0.001164,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.589272,-285.559357,0.015126,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.341333,-293.578186,-0.010472,1.0,1.0,62,27],
[10,0,554,100,70,140,22.481970,-198.986801,0.094248,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-128.555557,-0.001164,1.0,1.0,104,104],
[9,0,926,2,74,142,-34.988693,-195.587006,-0.069813,1.0,1.0,40,13],
[11,0,658,84,138,126,-8.912733,-203.556671,-0.001164,1.0,1.0,60,120],
[16,0,336,202,20,26,51.157036,-263.486816,-0.001164,1.0,1.0,10,13],
[20,0,278,202,34,28,-4.851068,-256.551971,-0.001164,1.0,1.0,17,14],
[15,0,414,202,22,6,17.086086,-202.526413,-0.001164,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.157032,-263.482147,-0.001164,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.148928,-256.544983,-0.001164,1.0,1.0,3,3],
[18,0,650,100,4,4,49.154709,-261.489136,-0.001164,1.0,1.0,2,2],
[22,0,1002,96,10,4,-7.853393,-254.555466,-0.001164,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.909554,-263.617218,-0.019780,1.0,1.0,58,34],
[14,0,390,100,162,78,2.191979,-293.543823,-0.001164,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.004642,-157.087616,-0.001164,1.0,1.0,118,15],
[30,0,512,180,40,54,100.006912,-166.950302,-0.019780,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.065079,-169.831039,-0.019780,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.046082,-168.910355,-0.019780,1.0,1.0,3,1],
[24,0,390,2,266,96,-9.801031,-299.557770,0.015126,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.613350,-286.742371,-0.014410,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,11.785992,-60.632969,-0.441219,1.0,1.0,11,7],
[2,0,984,146,24,62,9.222222,-96.666664,0.154171,1.0,1.0,14,8],
[4,0,386,202,26,14,-11.097982,-23.886219,-0.513295,1.0,1.0,4,5],
[6,0,1002,2,18,60,1.712908,-51.983852,-0.130487,1.0,1.0,8,9],
[5,0,626,100,22,68,-0.000000,-85.0,-0.008698,1.0,1.0,8,11],
[7,0,358,202,26,14,0.214003,-9.820442,0.038252,1.0,1.0,4,5],
[28,0,240,180,270,20,1.987200,-171.935654,0.001164,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.921912,-284.986420,0.019780,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.658495,-292.963348,-0.006981,1.0,1.0,62,27],
[10,0,554,100,70,140,22.517910,-198.680008,0.080285,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-128.111115,0.001164,1.0,1.0,104,104],
[9,0,926,2,74,142,-35.011272,-195.079727,-0.052360,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.087120,-202.984894,0.001164,1.0,1.0,60,120],
[16,0,336,202,20,26,50.843025,-263.054657,0.001164,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.148791,-255.989517,0.001164,1.0,1.0,17,14],
[15,0,414,202,22,6,16.914026,-202.015152,0.001164,1.0,1.0,11,3],
[17,0,1014,92,4,6,54.843021,-263.059326,0.001164,1.0,1.0,2,3],
[21,0,1012,84,6,6,0.851204,-255.996506,0.001164,1.0,1.0,3,3],
[18,0,650,100,4,4,48.845352,-261.052338,0.001164,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.146462,-253.986023,0.001164,1.0,1.0,5,2],
[13,0,798,84,106,150,-61.090233,-262.924438,-0.015126,1.0,1.0,58,34],
[14,0,390,100,162,78,1.808153,-292.997620,0.001164,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.995333,-156.912399,0.001164,1.0,1.0,118,15],
[30,0,512,180,40,54,99.992950,-167.049683,-0.015126,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.037643,-169.958588,-0.015126,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.022972,-169.019196,-0.015126,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.198820,-298.983673,0.019780,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.950905,-285.917938,-0.001701,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,16.924242,-62.088993,-0.509113,1.0,1.0,11,7],
[2,0,984,146,24,62,13.0,-98.0,0.191986,1.0,1.0,14,8],
[4,0,386,202,26,14,-8.399954,-26.979378,-0.552100,1.0,1.0,4,5],
[6,0,1002,2,18,60,-3.883750,-51.951263,-0.209056,1.0,1.0,8,9],
[5,0,626,100,22,68,-3.0,-85.0,-0.087266,1.0,1.0,8,11],
[7,0,358,202,26,14,-8.687357,-10.035568,0.058154,1.0,1.0,4,5],
[28,0,240,180,270,20,1.961591,-171.806915,0.003491,1.0,1.0,135,10],
[25,0,658,2,266,80,-10.253966,-284.412811,0.024435,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.974968,-292.347961,-0.003491,1.0,1.0,62,27],
[10,0,554,100,70,140,22.553371,-198.373749,0.066323,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-127.666664,0.003491,1.0,1.0,104,104],
[9,0,926,2,74,142,-35.033710,-194.572708,-0.034907,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.260921,-202.412720,0.003491,1.0,1.0,60,120],
[16,0,336,202,20,26,50.529274,-262.621796,0.003491,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.445950,-255.426361,0.003491,1.0,1.0,17,14],
[15,0,414,202,22,6,16.742413,-201.503479,0.003491,1.0,1.0,11,3],
[17,0,1014,92,4,6,54.529251,-262.635773,0.003491,1.0,1.0,2,3],
[21,0,1012,84,6,6,0.554014,-255.447311,0.003491,1.0,1.0,3,3],
[18,0,650,100,4,4,48.536266,-260.614838,0.003491,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.438950,-253.415909,0.003491,1.0,1.0,5,2],
[13,0,798,84,106,150,-61.270042,-262.231537,-0.010472,1.0,1.0,58,34],
[14,0,390,100,162,78,1.424853,-292.450562,0.003491,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.985928,-156.737198,0.003491,1.0,1.0,118,15],
[30,0,512,180,40,54,99.978447,-167.149033,-0.010472,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.009537,-170.086044,-0.010472,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.999283,-169.127975,-0.010472,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.596017,-298.408630,0.024435,1.0,1.0,133,48],
[26,0,906,146,76,96,-64.286713,-285.092865,0.011009,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,20.766582,-60.124916,-0.362927,1.0,1.0,11,7],
[2,0,984,146,24,62,15.333333,-95.166664,0.238528,1.0,1.0,14,8],
[4,0,386,202,26,14,0.826769,-21.700916,-0.391957,1.0,1.0,4,5],
[6,0,1002,2,18,60,-9.249340,-52.361320,-0.257334,1.0,1.0,8,9],
[5,0,626,100,22,68,-6.833333,-85.166664,-0.134353,1.0,1.0,8,11],
[7,0,358,202,26,14,-15.951440,-10.522694,0.010428,1.0,1.0,4,5],
[28,0,240,180,270,20,1.935971,-171.678116,0.005818,1.0,1.0,135,10],
[25,0,658,2,266,80,-10.585430,-283.838623,0.029089,1.0,1.0,133,40],
[12,0,214,2,174,170,-28.290751,-291.731964,0.000000,1.0,1.0,62,27],
[10,0,554,100,70,140,22.588356,-198.068039,0.052360,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-127.222221,0.005818,1.0,1.0,104,104],
[9,0,926,2,74,142,-35.056004,-194.065948,-0.017453,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.434132,-201.840149,0.005818,1.0,1.0,60,120],
[16,0,336,202,20,26,50.215790,-262.188202,0.005818,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.742539,-254.862518,0.005818,1.0,1.0,17,14],
[15,0,414,202,22,6,16.571245,-200.991425,0.005818,1.0,1.0,11,3],
[17,0,1014,92,4,6,54.215721,-262.211487,0.005818,1.0,1.0,2,3],
[21,0,1012,84,6,6,0.257359,-254.897430,0.005818,1.0,1.0,3,3],
[18,0,650,100,4,4,48.227459,-260.176605,0.005818,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.730853,-252.845093,0.005818,1.0,1.0,5,2],
[13,0,798,84,106,150,-61.448990,-261.538544,-0.005818,1.0,1.0,58,34],
[14,0,390,100,162,78,1.042087,-291.902618,0.005818,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.976425,-156.562027,0.005818,1.0,1.0,118,15],
[30,0,512,180,40,54,99.963402,-167.248337,-0.005818,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.980751,-170.213379,-0.005818,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.975006,-169.236664,-0.005818,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.992617,-297.832703,0.029089,1.0,1.0,133,48],
[26,0,906,146,76,96,-64.620758,-284.267212,0.023719,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,24.536877,-58.222076,-0.216741,1.0,1.0,11,7],
[2,0,984,146,24,62,17.666666,-92.333336,0.285070,1.0,1.0,14,8],
[4,0,386,202,26,14,10.406804,-17.303364,-0.231815,1.0,1.0,4,5],
[6,0,1002,2,18,60,-14.594027,-52.841999,-0.305613,1.0,1.0,8,9],
[5,0,626,100,22,68,-10.666667,-85.333336,-0.181439,1.0,1.0,8,11],
[7,0,358,202,26,14,-23.198648,-11.166477,-0.037298,1.0,1.0,4,5],
[28,0,240,180,270,20,1.910341,-171.549271,0.008145,1.0,1.0,135,10],
[25,0,658,2,266,80,-10.916306,-283.263794,0.033743,1.0,1.0,133,40],
[12,0,214,2,174,170,-28.605843,-291.115417,0.003491,1.0,1.0,62,27],
[10,0,554,100,70,140,22.622858,-197.762878,0.038397,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-126.777779,0.008145,1.0,1.0,104,104],
[9,0,926,2,74,142,-35.078156,-193.559448,0.000000,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.606753,-201.267166,0.008145,1.0,1.0,60,120],
[16,0,336,202,20,26,49.902569,-261.753876,0.008145,1.0,1.0,10,13],
[20,0,278,202,34,28,-6.038559,-254.297989,0.008145,1.0,1.0,17,14],
[15,0,414,202,22,6,16.400528,-200.478958,0.008145,1.0,1.0,11,3],
[17,0,1014,92,4,6,53.902435,-261.786469,0.008145,1.0,1.0,2,3],
[21,0,1012,84,6,6,-0.038758,-254.346863,0.008145,1.0,1.0,3,3],
[18,0,650,100,4,4,47.918926,-259.737640,0.008145,1.0,1.0,2,2],
[22,0,1002,96,10,4,-9.022170,-252.273621,0.008145,1.0,1.0,5,2],
[13,0,798,84,106,150,-61.627064,-260.845459,-0.001164,1.0,1.0,58,34],
[14,0,390,100,162,78,0.659852,-291.353760,0.008145,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.966824,-156.386871,0.008145,1.0,1.0,118,15],
[30,0,512,180,40,54,99.947815,-167.347626,-0.001164,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.951302,-170.340637,-0.001164,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.950142,-169.345291,-0.001164,1.0,1.0,3,1],
[24,0,390,2,266,96,-11.388619,-297.255829,0.033743,1.0,1.0,133,48],
[26,0,906,146,76,96,-64.953041,-283.440887,0.036428,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,28.232761,-56.375664,-0.070555,1.0,1.0,11,7],
[2,0,984,146,24,62,20.0,-89.500000,0.331613,1.0,1.0,14,8],
[4,0,386,202,26,14,20.213856,-13.835129,-0.071672,1.0,1.0,4,5],
[6,0,1002,2,18,60,-19.914574,-53.391865,-0.353892,1.0,1.0,8,9],
[5,0,626,100,22,68,-14.500000,-85.500000,-0.228525,1.0,1.0,8,11],
[7,0,358,202,26,14,-30.421850,-11.966061,-0.085024,1.0,1.0,4,5],
[28,0,240,180,270,20,1.884701,-171.420334,0.010472,1.0,1.0,135,10],
[25,0,658,2,266,80,-11.246592,-282.688354,0.038397,1.0,1.0,133,40],
[12,0,214,2,174,170,-28.920248,-290.498260,0.006981,1.0,1.0,62,27],
[10,0,554,100,70,140,22.656876,-197.458267,0.024435,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-126.333336,0.010472,1.0,1.0,104,104],
[9,0,926,2,74,142,-35.100163,-193.053207,0.017453,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.778784,-200.693787,0.010472,1.0,1.0,60,120],
[16,0,336,202,20,26,49.589622,-261.318817,0.010472,1.0,1.0,10,13],
[20,0,278,202,34,28,-6.334008,-253.732773,0.010472,1.0,1.0,17,14],
[15,0,414,202,22,6,16.230263,-199.966110,0.010472,1.0,1.0,11,3],
[17,0,1014,92,4,6,53.589401,-261.360718,0.010472,1.0,1.0,2,3],
[21,0,1012,84,6,6,-0.334337,-253.795609,0.010472,1.0,1.0,3,3],
[18,0,650,100,4,4,47.610676,-259.297974,0.010472,1.0,1.0,2,2],
[22,0,1002,96,10,4,-9.312900,-251.701462,0.010472,1.0,1.0,5,2],
[13,0,798,84,106,150,-61.804276,-260.152252,0.003491,1.0,1.0,58,34],
[14,0,390,100,162,78,0.278152,-290.804047,0.010472,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.957127,-156.211716,0.010472,1.0,1.0,118,15],
[30,0,512,180,40,54,99.931686,-167.446838,0.003491,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.921181,-170.467758,0.003491,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.924690,-169.453812,0.003491,1.0,1.0,3,1],
[24,0,390,2,266,96,-11.784020,-296.678040,0.038397,1.0,1.0,133,48],
[26,0,906,146,76,96,-65.283562,-282.613953,0.049138,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,31.852163,-54.580795,0.075631,1.0,1.0,11,7],
[2,0,984,146,24,62,22.333334,-86.666664,0.378155,1.0,1.0,14,8],
[4,0,386,202,26,14,30.115488,-11.325924,0.088471,1.0,1.0,4,5],
[6,0,1002,2,18,60,-25.207838,-54.009350,-0.402170,1.0,1.0,8,9],
[5,0,626,100,22,68,-18.333334,-85.666664,-0.275611,1.0,1.0,8,11],
[7,0,358,202,26,14,-37.613945,-12.920292,-0.132750,1.0,1.0,4,5],
[28,0,240,180,270,20,1.859050,-171.291351,0.012799,1.0,1.0,135,10],
[25,0,658,2,266,80,-11.576286,-282.112305,0.043051,1.0,1.0,133,40],
[12,0,214,2,174,170,-29.233957,-289.880554,0.010472,1.0,1.0,62,27],
[10,0,554,100,70,140,22.690409,-197.154190,0.010472,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-125.888885,0.012799,1.0,1.0,104,104],
[9,0,926,2,74,142,-35.122032,-192.547211,0.034907,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.950224,-200.119995,0.012799,1.0,1.0,60,120],
[16,0,336,202,20,26,49.276939,-260.882996,0.012799,1.0,1.0,10,13],
[20,0,278,202,34,28,-6.628884,-253.166840,0.012799,1.0,1.0,17,14],
[15,0,414,202,22,6,16.060446,-199.452850,0.012799,1.0,1.0,11,3],
[17,0,1014,92,4,6,53.276611,-260.934204,0.012799,1.0,1.0,2,3],
[21,0,1012,84,6,6,-0.629376,-253.243637,0.012799,1.0,1.0,3,3],
[18,0,650,100,4,4,47.302700,-258.857574,0.012799,1.0,1.0,2,2],
[22,0,1002,96,10,4,-9.603041,-251.128601,0.012799,1.0,1.0,5,2],
[13,0,798,84,106,150,-61.980614,-259.458923,0.008145,1.0,1.0,58,34],
[14,0,390,100,162,78,-0.103011,-290.253418,0.012799,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.947330,-156.036606,0.012799,1.0,1.0,118,15],
[30,0,512,180,40,54,99.915016,-167.546051,0.008145,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.890381,-170.594818,0.008145,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.898659,-169.562271,0.008145,1.0,1.0,3,1],
[24,0,390,2,266,96,-12.178821,-296.099335,0.043051,1.0,1.0,133,48],
[26,0,906,146,76,96,-65.612328,-281.786407,0.061847,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,35.393295,-52.832520,0.221817,1.0,1.0,11,7],
[2,0,984,146,24,62,24.666666,-83.833336,0.424697,1.0,1.0,14,8],
[4,0,386,202,26,14,39.975895,-9.786037,0.248613,1.0,1.0,4,5],
[6,0,1002,2,18,60,-30.470764,-54.692741,-0.450449,1.0,1.0,8,9],
[5,0,626,100,22,68,-22.166666,-85.833336,-0.322697,1.0,1.0,8,11],
[7,0,358,202,26,14,-44.767891,-14.027676,-0.180476,1.0,1.0,4,5],
[28,0,240,180,270,20,1.833390,-171.162323,0.015126,1.0,1.0,135,10],
[25,0,658,2,266,80,-11.905389,-281.535645,0.047706,1.0,1.0,133,40],
[12,0,214,2,174,170,-29.546976,-289.262268,0.013963,1.0,1.0,62,27],
[10,0,554,100,70,140,22.723452,-196.850647,-0.003491,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-125.444443,0.015126,1.0,1.0,104,104],
[9,0,926,2,74,142,-35.143761,-192.041504,0.052360,1.0,1.0,40,13],
[11,0,658,84,138,126,-10.121071,-199.545837,0.015126,1.0,1.0,60,120],
[16,0,336,202,20,26,48.964527,-260.446503,0.015126,1.0,1.0,10,13],
[20,0,278,202,34,28,-6.923186,-252.600281,0.015126,1.0,1.0,17,14],
[15,0,414,202,22,6,15.891081,-198.939224,0.015126,1.0,1.0,11,3],
[17,0,1014,92,4,6,52.964069,-260.507019,0.015126,1.0,1.0,2,3],
[21,0,1012,84,6,6,-0.923872,-252.691040,0.015126,1.0,1.0,3,3],
[18,0,650,100,4,4,46.995007,-258.416473,0.015126,1.0,1.0,2,2],
[22,0,1002,96,10,4,-9.892591,-250.555130,0.015126,1.0,1.0,5,2],
[13,0,798,84,106,150,-62.156094,-258.765564,0.012799,1.0,1.0,58,34],
[14,0,390,100,162,78,-0.483634,-289.701904,0.015126,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.937439,-155.861526,0.015126,1.0,1.0,118,15],
[30,0,512,180,40,54,99.897804,-167.645203,0.012799,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.858917,-170.721756,0.012799,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.872040,-169.670639,0.012799,1.0,1.0,3,1],
[24,0,390,2,266,96,-12.573015,-295.519714,0.047706,1.0,1.0,133,48],
[26,0,906,146,76,96,-65.939331,-280.958252,0.074557,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,38.854675,-51.125820,0.368003,1.0,1.0,11,7],
[2,0,984,146,24,62,27.0,-81.0,0.471239,1.0,1.0,14,8],
[4,0,386,202,26,14,49.658798,-9.206005,0.408756,1.0,1.0,4,5],
[6,0,1002,2,18,60,-35.700405,-55.440186,-0.498728,1.0,1.0,8,9],
[5,0,626,100,22,68,-26.0,-86.0,-0.369783,1.0,1.0,8,11],
[7,0,358,202,26,14,-51.876724,-15.286396,-0.228202,1.0,1.0,4,5],
[28,0,240,180,270,20,1.807719,-171.033234,0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,-12.233901,-280.958405,0.052360,1.0,1.0,133,40],
[12,0,214,2,174,170,-29.859303,-288.643433,0.017453,1.0,1.0,62,27],
[10,0,554,100,70,140,22.756006,-196.547668,-0.017453,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-125.0,0.017453,1.0,1.0,104,104],
[9,0,926,2,74,142,-35.165352,-191.536041,0.069813,1.0,1.0,40,13],
[11,0,658,84,138,126,-10.291326,-198.971283,0.017453,1.0,1.0,60,120],
[16,0,336,202,20,26,48.652393,-260.009277,0.017453,1.0,1.0,10,13],
[20,0,278,202,34,28,-7.216912,-252.033020,0.017453,1.0,1.0,17,14],
[15,0,414,202,22,6,15.722167,-198.425201,0.017453,1.0,1.0,11,3],
[17,0,1014,92,4,6,52.651783,-260.079102,0.017453,1.0,1.0,2,3],
[21,0,1012,84,6,6,-1.217826,-252.137741,0.017453,1.0,1.0,3,3],
[18,0,650,100,4,4,46.687603,-257.974670,0.017453,1.0,1.0,2,2],
[22,0,1002,96,10,4,-10.181551,-249.980972,0.017453,1.0,1.0,5,2],
[13,0,798,84,106,150,-62.330700,-258.072083,0.017453,1.0,1.0,58,34],
[14,0,390,100,162,78,-0.863717,-289.149536,0.017453,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.927448,-155.686462,0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,99.880058,-167.744324,0.017453,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.826790,-170.848587,0.017453,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.844849,-169.778931,0.017453,1.0,1.0,3,1],
[24,0,390,2,266,96,-12.966604,-294.939209,0.052360,1.0,1.0,133,48],
[26,0,906,146,76,96,-66.264565,-280.129517,0.087266,1.0,1.0,48,90]
]
]
}
}
]

},{}],86:[function(require,module,exports){
'use strict';

var AssetsConfig = {};
AssetsConfig.images = {
	"black-mist.png":            "./image/black-mist.png",
	"koishi.png":                "./image/koishi.png",
	"chapter0-myroom-bg-001":    "./image/chapter0/myroom/chapter0-myroom-bg-001.jpg",
	"chapter0-myroom-obj-01-01": "./image/chapter0/myroom/chapter0-myroom-obj-01-01.png",
	"chapter0-myroom-obj-02-01.png": "./image/chapter0/myroom/chapter0-myroom-obj-02-01.png",
	"chapter0-myroom-obj-03-01.png": "./image/chapter0/myroom/chapter0-myroom-obj-03-01.png",
	"chapter0-myroom-obj-04-01.png": "./image/chapter0/myroom/chapter0-myroom-obj-04-01.png",
	"chapter0-myroom-obj-05-01": "./image/chapter0/myroom/chapter0-myroom-obj-05-01.png",

	"chapter0-hospital_corridor1-bg-001":    "./image/chapter0/hospital_corridor1/chapter0-hospital-bg-001.jpg",
	"chapter0-hospital_corridor1-obj-01-01": "./image/chapter0/hospital_corridor1/chapter0-hospital-obj-01-01.png",
	"chapter0-hospital_corridor1-obj-02-01": "./image/chapter0/hospital_corridor1/chapter0-hospital-obj-02-01.png",
	"chapter0-hospital_corridor1-obj-03-01": "./image/chapter0/hospital_corridor1/chapter0-hospital-obj-03-01.png",
	"chapter0-hospital_corridor1-obj-04-01": "./image/chapter0/hospital_corridor1/chapter0-hospital-obj-04-01.png",

	"chapter0-hospital2-bg-001":        "./image/chapter0/hospital_corridor2/chapter0-hospital2-bg-001.jpg",
	"chapter0-hospital2-obj-01-01.png": "./image/chapter0/hospital_corridor2/chapter0-hospital2-obj-01-01.png",
	"chapter0-hospital2-obj-02-01": "./image/chapter0/hospital_corridor2/chapter0-hospital2-obj-02-01.png",
	"chapter0-hospital2-obj-03-01.png": "./image/chapter0/hospital_corridor2/chapter0-hospital2-obj-03-01.png",


	"chapter0-mansionpas-001":          "./image/chapter0/mansion_corridor1/chapter0-mansionpas-001.jpg",
	"chapter0-mspassage-obj-01-01.png": "./image/chapter0/mansion_corridor1/chapter0-mspassage-obj-01-01.png",
	"chapter0-mspassage-obj-02-01.png": "./image/chapter0/mansion_corridor1/chapter0-mspassage-obj-02-01.png",
	"chapter0-mspassage-obj-03-01.png": "./image/chapter0/mansion_corridor1/chapter0-mspassage-obj-03-01.png",

	"chapter0-mansionpas-002":          "./image/chapter0/mansion_corridor2/chapter0-mspassage-bg-002.jpg",
	"chapter0-mspassage-obj-04-01.png": "./image/chapter0/mansion_corridor2/chapter0-mspassage-obj-04-01.png",
	"chapter0-mspassage-obj-05-01.png": "./image/chapter0/mansion_corridor2/chapter0-mspassage-obj-05-01.png",
	"chapter0-mspassage-obj-06-01.png": "./image/chapter0/mansion_corridor2/chapter0-mspassage-obj-06-01.png",

	"chapter0-mansionpas-003":          "./image/chapter0/mansion_corridor3/chapter0-mspassage-bg-003.jpg",
	"chapter0-mspassage-obj-07-01.png": "./image/chapter0/mansion_corridor3/chapter0-mspassage-obj-07-01.png",
	"chapter0-mspassage-obj-08-01.png": "./image/chapter0/mansion_corridor3/chapter0-mspassage-obj-08-01.png",
	"chapter0-mspassage-obj-09-01.png": "./image/chapter0/mansion_corridor3/chapter0-mspassage-obj-09-01.png",
	"chapter0-mspassage-obj-10-01.png": "./image/chapter0/mansion_corridor3/chapter0-mspassage-obj-10-01.png",
	"chapter0-mspassage-obj-11-01.png": "./image/chapter0/mansion_corridor3/chapter0-mspassage-obj-11-01.png",

	light:  "./image/light.png",

	// 画面遷移用やじるし
	arrow:  "./image/ui-common-btn-arrow-wht.png",

	// アイテムボタン
	tool: "./image/ui-common-btn-tool-1.png",
	// 第三の目
	eye:  "./image/ui-common-btn-eye-1.png",

	fukidashi:  "./image/ui-common-frame-talk1-brn.png",
	fukidashi_arrow:  "./image/ui-common-btn-arrow-brn.png",

	// メニュー
	"ui-common-bg-toolpu-blk":   "./image/menu/ui-common-bg-toolpu-blk.png",
	"ui-common-btn-toolpu-blu1": "./image/menu/ui-common-btn-toolpu-blu1.png",
	"ui-common-btn-toolpu-blu2": "./image/menu/ui-common-btn-toolpu-blu2.png",
	"ui-common-frame-toolpu":    "./image/menu/ui-common-frame-toolpu.png",

	// タイトル画面
	"ui-titlepg-bg-1":         "./image/title/ui-titlepg-bg-1.jpg",
	"ui-titlepg-btn-con-off":  "./image/title/ui-titlepg-btn-con-off.png",
	"ui-titlepg-btn-con-on":   "./image/title/ui-titlepg-btn-con-on.png",
	"ui-titlepg-btn-ng-off":   "./image/title/ui-titlepg-btn-ng-off.png",
	"ui-titlepg-btn-ng-on":    "./image/title/ui-titlepg-btn-ng-on.png",
	"ui-titlepg-btn-opt-off":  "./image/title/ui-titlepg-btn-opt-off.png",
	"ui-titlepg-btn-opt-on":   "./image/title/ui-titlepg-btn-opt-on.png",
	"ui-titlepg-img-logo-1":   "./image/title/ui-titlepg-img-logo-1.png",
};

AssetsConfig.sounds = {
	open_menu:    {
		path: "./sound/open_menu.ogg",
		volume: 1.0,
	},
	select_item:    {
		path: "./sound/select_item.ogg",
		volume: 1.0,
	},
	select_title:    {
		path: "./sound/select_title.ogg",
		volume: 1.0,
	},
	use_3rdeye:    {
		path: "./sound/use_3rdeye.ogg",
		volume: 1.0,
	},
	use_eyedrops:    {
		path: "./sound/use_eyedrops.ogg",
		volume: 1.0,
	},

	"chapter0_myroom-get_hat":    {
		path: "./sound/chapter0/myroom/get_hat.ogg",
		volume: 1.0,
	},
	"chapter0-myroom-door_open":    {
		path: "./sound/chapter0/myroom/door_open.ogg",
		volume: 1.0,
	},

	"chapter0-myroom-open_book":    {
		path: "./sound/chapter0/myroom/open_book.ogg",
		volume: 1.0,
	},
	"chapter0-myroom-move_crayon":    {
		path: "./sound/chapter0/myroom/move_crayon.ogg",
		volume: 0.7,
	},
	"chapter0-myroom-sound_window":    {
		path: "./sound/chapter0/myroom/sound_window.ogg",
		volume: 1.0,
	},
	"chapter0-hospital_corridor1-sound_aidkit":    {
		path: "./sound/chapter0/hospital_corridor1/sound_aidkit.ogg",
		volume: 1.0,
	},
	"chapter0-hospital_corridor1-sound_strecher":    {
		path: "./sound/chapter0/hospital_corridor1/sound_strecher.ogg",
		volume: 1.0,
	},
	"chapter0-hospital_corridor2-move_wheelchair":    {
		path: "./sound/chapter0/hospital_corridor2/move_wheelchair.ogg",
		volume: 1.0,
	},
	"chapter0-mansion_corridor1-lamp_back":    {
		path: "./sound/chapter0/mansion_corridor1/lamp_back.ogg",
		volume: 1.0,
	},
	"chapter0-mansion_corridor1-lamp_front":    {
		path: "./sound/chapter0/mansion_corridor1/lamp_front.ogg",
		volume: 1.0,
	},
	"chapter0-mansion_corridor1-move_tricycle":    {
		path: "./sound/chapter0/mansion_corridor1/move_tricycle.ogg",
		volume: 1.0,
	},
	"chapter0-mansion_corridor1-open_curtain":    {
		path: "./sound/chapter0/mansion_corridor1/open_curtain.ogg",
		volume: 1.0,
	},
	"chapter0-mansion_corridor2-flower_back":    {
		path: "./sound/chapter0/mansion_corridor2/flower_back.ogg",
		volume: 1.0,
	},
	"chapter0-mansion_corridor2-flower_front":    {
		path: "./sound/chapter0/mansion_corridor2/flower_front.ogg",
		volume: 1.0,
	},
	"chapter0-mansion_corridor2-open_door":    {
		path: "./sound/chapter0/mansion_corridor2/open_door.ogg",
		volume: 1.0,
	},
	"chapter0-mansion_corridor3-open_door":    {
		path: "./sound/chapter0/mansion_corridor3/open_door.ogg",
		volume: 1.0,
	},
	"chapter0-mansion_corridor3-ring_clock_back":    {
		path: "./sound/chapter0/mansion_corridor3/ring_clock_back.ogg",
		volume: 1.0,
	},
	"chapter0-mansion_corridor3-ring_clock_front":    {
		path: "./sound/chapter0/mansion_corridor3/ring_clock_front.ogg",
		volume: 1.0,
	},
	touch:    {
		path: "./sound/touch.ogg",
		volume: 1.0,
	},
	walking_bare_default_left:    {
		path: "./sound/walking/bare_default_left.ogg",
		volume: 1.0,
	},
	walking_bare_default_right:    {
		path: "./sound/walking/bare_default_right.ogg",
		volume: 1.0,
	},
	walking_bare_wood_left:    {
		path: "./sound/walking/bare_wood_left.ogg",
		volume: 1.0,
	},
	walking_bare_wood_right:    {
		path: "./sound/walking/bare_wood_right.ogg",
		volume: 1.0,
	},

	noise1:    {
		path: "./sound/noise/noise1.ogg",
		volume: 1.0,
	},
	noise2:    {
		path: "./sound/noise/noise2.ogg",
		volume: 1.0,
	},
	noise3:    {
		path: "./sound/noise/noise3.ogg",
		volume: 1.0,
	},
	noise4:    {
		path: "./sound/noise/noise4.ogg",
		volume: 1.0,
	},
	noise5:    {
		path: "./sound/noise/noise5.ogg",
		volume: 1.0,
	},
};

AssetsConfig.bgms = {
	title: {
		path: "./bgm/title1.ogg",
		loopStart: 0*60 + 0 + 0.000,
		//loopEnd: 1*60 + 47 + 0.027,
		volume: 0.9,
	},

	field1: {
		path: "./bgm/field1.ogg",
		loopStart: 0*60 + 0 + 0.000,
		//loopEnd: 1*60 + 47 + 0.027,
		volume: 0.9,
	},
	field2: {
		path: "./bgm/field2.ogg",
		loopStart: 0*60 + 0 + 0.000,
		//loopEnd: 1*60 + 47 + 0.027,
		volume: 0.9,
	},
	"chapter0-mansion_corridor1-wind": {
		path: "./bgm/chapter0/mansion_corridor1/wind.ogg",
		loopStart: 0*60 + 0 + 0.000,
		//loopEnd: 1*60 + 47 + 0.027,
		volume: 1.0,
	},
	"chapter0-mansion_corridor3-clock": {
		path: "./bgm/chapter0/mansion_corridor3/clock.ogg",
		loopStart: 0*60 + 0 + 0.000,
		//loopEnd: 1*60 + 47 + 0.027,
		volume: 1.0,
	},

};


module.exports = AssetsConfig;

},{}],87:[function(require,module,exports){
'use strict';
var DEBUG = require("./debug_constant");

var CONSTANT = {
	DEBUG: {},

	// オブジェクトの種類
	STATIC_IMAGE_TYPE: 1,
	ANIME_IMAGE_TYPE:  2,


	// こいしの歩ける範囲の上 上限(px)
	WALK_DEPTH_LIMIT: 300,

	// フィールドでランダムに流れるノイズ
	NOISE_SOUND_LIST: ["noise1", "noise2", "noise3", "noise4", "noise5"],
	NOISE_SOUND_INTERVAL_COUNT: 1200,
	NOISE_SOUND_PROB: 50,
};

if (DEBUG.ON) {
	CONSTANT.DEBUG = DEBUG;
}
module.exports = CONSTANT;

},{"./debug_constant":88}],88:[function(require,module,exports){
'use strict';
var DEBUG = {
	ON: true,
	SOUND_OFF: false,
	// 第一引数: scene name, 第二引数以降: 引数
	//START_SCENE: ["stage", "chapter0_hospital_corridor2"],
	//START_SCENE: ["stage", "chapter0_myroom"],
	//START_SCENE: ["movie", "./movie/trailer.mp4", "title"],
};

module.exports = DEBUG;

},{}],89:[function(require,module,exports){
var field_list = [
	require("./field/chapter0/myroom"),
	require("./field/chapter0/hospital_corridor1"),
	require("./field/chapter0/hospital_corridor2"),
	require("./field/chapter0/mansion_corridor1"),
	require("./field/chapter0/mansion_corridor2"),
	require("./field/chapter0/mansion_corridor3"),
	require("./field/chapter0/mansion_gallery1"),


];

var field_map = {};

for (var i = 0, len = field_list.length; i < len; i++) {
	var field = field_list[i];

	field_map[field.key] = field;

	// TODO: key 名が被ってたらデバッグではエラー
}
module.exports = field_map;


},{"./field/chapter0/hospital_corridor1":90,"./field/chapter0/hospital_corridor2":91,"./field/chapter0/mansion_corridor1":92,"./field/chapter0/mansion_corridor2":93,"./field/chapter0/mansion_corridor3":94,"./field/chapter0/mansion_gallery1":95,"./field/chapter0/myroom":96}],90:[function(require,module,exports){
// 病院の廊下1(コンクリ、廃れてる感じ) 車椅子とかあったほうがいいかも
var CONSTANT = require("../../constant");
module.exports = {
	key: "chapter0_hospital_corridor1",
	name: "病院の廊下1",
	bgm: "field1",
	right_start_position: {x: 690, y: 540},
	left_start_position:  {x: 180, y: 540},
	right_field: "chapter0_hospital_corridor2",
	left_field: "chapter0_myroom",
	background: "chapter0-hospital_corridor1-bg-001",
	walk_sound: "walking_bare_default",
	objects: [
		{image: "chapter0-hospital_corridor1-obj-01-01", type: CONSTANT.STATIC_IMAGE_TYPE, name: "ストレッチャー", serif: ["へんなベッド"],  x: 814, y: 608, scale: 0.7, action: "touch", sound: "chapter0-hospital_corridor1-sound_strecher"},
		{image: "chapter0-hospital_corridor1-obj-02-01", type: CONSTANT.STATIC_IMAGE_TYPE, name: "キャビネット", serif: ["くすりはいらない……"],   x: 279, y: 378, scale: 0.7},
		{image: "chapter0-hospital_corridor1-obj-03-01", type: CONSTANT.STATIC_IMAGE_TYPE, name: "救急箱", serif: ["くーくーばこ！", "けがしてないよ！"], x: 281, y: 280, scale: 0.7, action: "touch", sound: "chapter0-hospital_corridor1-sound_aidkit"},
		{image: "chapter0-hospital_corridor1-obj-04-01", type: CONSTANT.STATIC_IMAGE_TYPE, name: "メス", serif: ["ナイフ"],   x: 853, y: 534, scale: 0.7},
	],
};



},{"../../constant":87}],91:[function(require,module,exports){
// 病院の廊下2(こころ)
var CONSTANT = require("../../constant");
module.exports = {
	key: "chapter0_hospital_corridor2",
	name: "病院の廊下2",
	bgm: "field1",
	right_start_position: {x: 690, y: 540},
	left_start_position:  {x: 180, y: 540},
	right_field: "chapter0_mansion_corridor1",
	left_field: "chapter0_hospital_corridor1",
	background: "chapter0-hospital2-bg-001",
	walk_sound: "walking_bare_default",
	objects: [
		{image: "chapter0-hospital2-obj-02-01", type: CONSTANT.STATIC_IMAGE_TYPE, name: "くつした", serif: ["やだやだ。"], x: 302, y: 443, scale: 0.7, action: "look_bottom"},
		{ type: CONSTANT.ANIME_IMAGE_TYPE,  name: "車イス", serif: ["あしおったらのってもいい？"], x: 130, y: 360, scale: 0.7, anime1: "chapter0-hospital_corridor2-obj-01-01-obj01", anime2: "chapter0-hospital_corridor2-obj-01-01-obj02", anime3:"chapter0-hospital_corridor2-obj-01-01-obj03", action: "touch", sound: "chapter0-hospital_corridor2-move_wheelchair"},
	],

};


},{"../../constant":87}],92:[function(require,module,exports){
// 屋敷の廊下1
var CONSTANT = require("../../constant");
module.exports = {
	key: "chapter0_mansion_corridor1",
	name: "屋敷の廊下1",
	bgm: "field2",
	bgm2: "chapter0-mansion_corridor1-wind",
	right_start_position: {x: 690, y: 540},
	left_start_position:  {x: 180, y: 540},
	right_field: "chapter0_mansion_corridor2",
	left_field: "chapter0_hospital_corridor2",
	background: "chapter0-mansionpas-001",
	walk_sound: "walking_bare_wood",
	objects: [
		{
			type: CONSTANT.ANIME_IMAGE_TYPE,
			name: "ランプ",
			serif: ["まぶしい"],
			x: 805,
			y: 65,
			scale: 0.7,
			anime1: "chapter0-mansion_corridor1-obj-01-01-obj01",
			anime2: "chapter0-mansion_corridor1-obj-01-01-obj02",
			anime3: "chapter0-mansion_corridor1-obj-01-01-obj03",
			anime4: "chapter0-mansion_corridor1-obj-01-01-obj04",
			anime5: "chapter0-mansion_corridor1-obj-01-01-obj05",
			anime6: "chapter0-mansion_corridor1-obj-01-01-obj06",
			action: "look_top",
			sound:      "chapter0-mansion_corridor1-lamp_front",
			sound_back: "chapter0-mansion_corridor1-lamp_back"
		},
		{
			type: CONSTANT.ANIME_IMAGE_TYPE,
			name: "三輪車",
			serif: ["あとでのろっと"],
			x: 815,
			y: 515,
			scale: 0.7,
			anime1: "chapter0-mansion_corridor1-obj-02-01-obj01",
			anime2: "chapter0-mansion_corridor1-obj-02-01-obj02",
			anime3: "chapter0-mansion_corridor1-obj-02-01-obj03",
			anime4: "chapter0-mansion_corridor1-obj-02-01-obj04",
			anime5: "chapter0-mansion_corridor1-obj-02-01-obj05",
			anime6: "chapter0-mansion_corridor1-obj-02-01-obj06",
			action: "touch",
			sound: "chapter0-mansion_corridor1-move_tricycle"
		},
		{
			type: CONSTANT.ANIME_IMAGE_TYPE,
			name: "カーテン",
			serif: ["いまはかくれんぼしてないからあとでね！"],
			x: 190,
			y: 135,
			scale: 0.7,
			anime1: "chapter0-mansion_corridor1-obj-03-01-obj01",
			anime2: "chapter0-mansion_corridor1-obj-03-01-obj02",
			anime3: "chapter0-mansion_corridor1-obj-03-01-obj03",
			anime4: "chapter0-mansion_corridor1-obj-03-01-obj04",
			anime5: "chapter0-mansion_corridor1-obj-03-01-obj05",
			anime6: "chapter0-mansion_corridor1-obj-03-01-obj06",
			action: "look_top",
			sound_back: "chapter0-mansion_corridor1-open_curtain"
		},
	],

};

},{"../../constant":87}],93:[function(require,module,exports){
// 屋敷の廊下2(ドアがある) 最初のフラッシュバックが入る
var CONSTANT = require("../../constant");
module.exports = {
	key: "chapter0_mansion_corridor2",
	name: "屋敷の廊下2",
	bgm: "field2",
	right_start_position: {x: 690, y: 540},
	left_start_position:  {x: 180, y: 540},
	right_field: "chapter0_mansion_corridor3",
	left_field: "chapter0_mansion_corridor1",
	background: "chapter0-mansionpas-002",
	walk_sound: "walking_bare_wood",
	objects: [
		{
			type: CONSTANT.ANIME_IMAGE_TYPE,
			name: "ほこりの積もった観葉植物",
			serif: ["このはっぱ、えがかけるよ"],
			x: 840,
			y: 305,
			scale: 0.7,
			anime1: "chapter0-mansion_corridor2-obj-04-01-obj01",
			anime2: "chapter0-mansion_corridor2-obj-04-01-obj02",
			anime3: "chapter0-mansion_corridor2-obj-04-01-obj03",
			anime4: "chapter0-mansion_corridor2-obj-04-01-obj04",
			anime5: "chapter0-mansion_corridor2-obj-04-01-obj05",
			anime6: "chapter0-mansion_corridor2-obj-04-01-obj06",
			action: "touch",
			sound:      "chapter0-mansion_corridor2-flower_front",
			sound_back: "chapter0-mansion_corridor2-flower_back"

		},
		{
			type: CONSTANT.ANIME_IMAGE_TYPE,
			name: "壁かけの斧",
			serif: ["あれでかぎあけられる！", "でもとどかない......"],
			x: 310,
			y: 102,
			scale: 0.7,
			anime1: "chapter0-mansion_corridor2-obj-05-01-obj01",
			anime2: "chapter0-mansion_corridor2-obj-05-01-obj02",
			anime3: "chapter0-mansion_corridor2-obj-05-01-obj03",
			anime4: "chapter0-mansion_corridor2-obj-05-01-obj04",
			anime5: "chapter0-mansion_corridor2-obj-05-01-obj05",
			anime6: "chapter0-mansion_corridor2-obj-05-01-obj06",
			action: "look_top"
		},
		{
			type: CONSTANT.ANIME_IMAGE_TYPE,
			name: "ドア",
			serif: null,
			x: 610,
			y: 245,
			scale: 0.7,
			anime1: "chapter0-mansion_corridor2-obj-06-01-obj01",
			anime2: "chapter0-mansion_corridor2-obj-06-01-obj02",
			anime3: "chapter0-mansion_corridor2-obj-06-01-obj03",
			action: null,
			sound:      "chapter0-mansion_corridor2-open_door",
		},
	],


};


},{"../../constant":87}],94:[function(require,module,exports){
// 屋敷の廊下3(家具) 行き止まり (サードアイを使用すると、家具が豹変／床に扉が出現)
var CONSTANT = require("../../constant");
module.exports = {
	key: "chapter0_mansion_corridor3",
	name: "屋敷の廊下3",
	bgm: "field2",
	bgm2: "chapter0-mansion_corridor3-clock",
	right_start_position: {x: 690, y: 540},
	left_start_position:  {x: 180, y: 540},
	right_field: null,
	left_field: "chapter0_mansion_corridor2",
	background: "chapter0-mansionpas-003",
	walk_sound: "walking_bare_wood",
	objects: [
		{
			type: CONSTANT.ANIME_IMAGE_TYPE,
			name: "みずさし",
			serif: ["これはかびん……", "おおきいから"],
			x: 715,
			y: 270,
			scale: 2/3,
			anime1: "chapter0-mansion_corridor3-obj-07-01-obj01",
			anime2: "chapter0-mansion_corridor3-obj-07-01-obj02",
			anime3: "chapter0-mansion_corridor3-obj-07-01-obj03",
			anime4: "chapter0-mansion_corridor3-obj-07-01-obj04",
			anime5: "chapter0-mansion_corridor3-obj-07-01-obj05",
			anime6: "chapter0-mansion_corridor3-obj-07-01-obj06",
			action: "touch",
			sound: "touch",
		},
		{
			type: CONSTANT.ANIME_IMAGE_TYPE,
			name: "花瓶",
			serif: ["かびん！"],
			x: 650,
			y: 285,
			scale: 2/3,
			anime1: "chapter0-mansion_corridor3-obj-08-01-obj01",
			anime2: "chapter0-mansion_corridor3-obj-08-01-obj02",
			anime3: "chapter0-mansion_corridor3-obj-08-01-obj03",
			anime4: "chapter0-mansion_corridor3-obj-08-01-obj04",
			anime5: "chapter0-mansion_corridor3-obj-08-01-obj05",
			anime6: "chapter0-mansion_corridor3-obj-08-01-obj06",
			action: "touch",
			sound: "touch",
		},
		{
			type: CONSTANT.ANIME_IMAGE_TYPE,
			name: "窓",
			serif: ["さっきのこいないなー"],
			x: 900,
			y: 190,
			scale: 2/3,
			anime1: "chapter0-mansion_corridor3-obj-09-01-obj01",
			anime2: "chapter0-mansion_corridor3-obj-09-01-obj02",
			anime3: "chapter0-mansion_corridor3-obj-09-01-obj03",
			anime4: "chapter0-mansion_corridor3-obj-09-01-obj04",
			anime5: "chapter0-mansion_corridor3-obj-09-01-obj05",
			anime6: "chapter0-mansion_corridor3-obj-09-01-obj06",
			action: "look_front"
		},
		{
			type: CONSTANT.ANIME_IMAGE_TYPE,
			name: "振子時計",
			serif: ["これうるさいからきらい"],
			x: 145,
			y: 230,
			scale: 2/3,
			anime1: "chapter0-mansion_corridor3-obj-10-01-obj01",
			anime2: "chapter0-mansion_corridor3-obj-10-01-obj02",
			anime3: "chapter0-mansion_corridor3-obj-10-01-obj03",
			anime4: "chapter0-mansion_corridor3-obj-10-01-obj04",
			anime5: "chapter0-mansion_corridor3-obj-10-01-obj05",
			anime6: "chapter0-mansion_corridor3-obj-10-01-obj06",
			action: "look_top",
			sound:      "chapter0-mansion_corridor3-ring_clock_front",
			sound_back: "chapter0-mansion_corridor3-ring_clock_back"
		},
		{
			type: CONSTANT.ANIME_IMAGE_TYPE,
			name: "カーペット",
			serif: null,
			x: 490,
			y: 570,
			scale: 2/3,
			anime1: "chapter0-mansion_corridor3-obj-11-01-obj01",
			anime2: "chapter0-mansion_corridor3-obj-11-01-obj02",
			anime3: "chapter0-mansion_corridor3-obj-11-01-obj03",
			anime4: "chapter0-mansion_corridor3-obj-11-01-obj04",
			anime5: "chapter0-mansion_corridor3-obj-11-01-obj05",
			anime6: "chapter0-mansion_corridor3-obj-11-01-obj06",
			action: null
		},
	],
};


},{"../../constant":87}],95:[function(require,module,exports){
// 画廊(屋敷の廊下2から遷移)
var CONSTANT = require("../../constant");
module.exports = {
	key: "chapter0_mansion_gallery1",
	name: "屋敷の廊下3",
	bgm: "field2",
	right_start_position: {x: 690, y: 540},
	left_start_position:  {x: 180, y: 540},
	right_field: null,
	left_field: "chapter0_mansion_corridor2",
	background: "bg",
	objects: [
	],

};


},{"../../constant":87}],96:[function(require,module,exports){
// こいしの自室(ベッド／帽子／ドア) 帽子はベッドのふちにかけてある
var CONSTANT = require("../../constant");
module.exports = {
	key: "chapter0_myroom",
	name: "こいしの部屋",
	bgm: "field1",
	right_start_position: {x: 690, y: 540},
	left_start_position:  {x: 180, y: 540},
	right_field: "chapter0_hospital_corridor1",
	left_field: null,
	background: "chapter0-myroom-bg-001",
	walk_sound: "walking_bare_default",
	objects: [
		{image: "chapter0-myroom-obj-01-01", type: CONSTANT.STATIC_IMAGE_TYPE, name: "ベッド", serif: ["まだねむたくないもん"], x: 258, y: 389, scale: 0.7, action: "touch", sound: "touch"},
		{image: "chapter0-myroom-obj-05-01", type: CONSTANT.STATIC_IMAGE_TYPE, name: "キャビネット", serif: ["あけない"], x: 59, y: 496, scale: 0.7, action: "touch", sound: "touch"},

		{ type: CONSTANT.ANIME_IMAGE_TYPE,  name: "本", serif: ["にっきさんひさしぶり！", "だっておはなしすることないんだもん"], x: 340, y: 530, scale: 0.7, anime1: "chapter0-myroom-obj-02-01-obj01", anime2: "chapter0-myroom-obj-02-01-obj02", anime3: "chapter0-myroom-obj-02-01-obj03", width: 80, height: 80, action: "look_bottom", sound: "chapter0-myroom-open_book"},
		{ type: CONSTANT.ANIME_IMAGE_TYPE,  name: "クレヨン", serif: ["くれおん！", "ピンクなくなっちゃったなー"], x: 600, y: 530, scale: 0.7, anime1: "chapter0-myroom-obj-03-01-obj01", anime2: "chapter0-myroom-obj-03-01-obj02", anime3: "chapter0-myroom-obj-03-01-obj03", width: 80, height: 80, action: "look_bottom", sound: "chapter0-myroom-move_crayon"},
		{ type: CONSTANT.ANIME_IMAGE_TYPE,  name: "まど", serif: ["なにかいる！"], x: 5, y: 180, scale: 0.7, anime1: "chapter0-myroom-obj-04-01-obj01", anime2: "chapter0-myroom-obj-04-01-obj02", anime3: "chapter0-myroom-obj-04-01-obj03", action: "look_top", sound: "chapter0-myroom-sound_window"},
	],
};


},{"../../constant":87}],97:[function(require,module,exports){
'use strict';
var core = require('./hakurei').core;
var util = require('./hakurei').util;
var CONSTANT = require('./constant');

var SaveManager = require('./save_manager');

var SceneTitle = require('./scene/title');
var SceneStage = require('./scene/stage');
var SceneLoading = require('./scene/loading');
var SceneMovie = require('./hakurei').scene.movie;

var Game = function(canvas) {
	core.apply(this, arguments);
};
util.inherit(Game, core);

Game.prototype.init = function () {
	core.prototype.init.apply(this, arguments);

	// セーブデータ
	this.save_manager = SaveManager.load();


	this.addScene("loading", new SceneLoading(this));
	this.addScene("title", new SceneTitle(this));
	this.addScene("stage", new SceneStage(this));

	var scene_movie = new SceneMovie(this);
	if (CONSTANT.DEBUG.SOUND_OFF) {
		scene_movie.is_mute = true;
	}
	this.addScene("movie", scene_movie);

	this.changeScene("loading");
};
Game.prototype.setupDebug = function (dom) {
	if (!CONSTANT.DEBUG.ON) return;

	this.debug_manager.setOn(dom);

	// テキスト追加
	this.debug_manager.addMenuText("マウスクリックで移動／調べる");

	this.debug_manager.addGitLatestCommitInfo("sairoutine", "Koishibow", "gh-pages");

	// ゲームスタート ボタン
	this.debug_manager.addMenuButton("Run", function (game) {
		game.startRun();
	});

	// ゲームストップ ボタン
	this.debug_manager.addMenuButton("Stop", function (game) {
		game.stopRun();
	});

	// フルスクリーン ボタン
	this.debug_manager.addMenuButton("最大化", function (game) {
		game.fullscreen();
	});

	// ゲームデータ消去ボタン
	this.debug_manager.addMenuButton("セーブクリア", function (game) {
		game.save_manager.del();
	});

	this.debug_manager.addMenuButton("当たり判定表示", function (game) {
		game.debug_manager.setShowingCollisionAreaOn();
	});
	this.debug_manager.addMenuButton("当たり判定非表示", function (game) {
		game.debug_manager.setShowingCollisionAreaOff();
	});

	this.debug_manager.addMenuButton("移動制限範囲表示", function (game) {
		game.debug_manager.set("is_show_immovable_area", true);
	});
	this.debug_manager.addMenuButton("移動制限範囲非表示", function (game) {
		game.debug_manager.set("is_show_immovable_area", false);
	});
	this.debug_manager.addMenuButton("トレーラー再生", function (game) {
		game.changeScene("movie", "./movie/trailer.mp4", "title");
	});

	this.debug_manager.addMenuSelect("ライトの合成方法", [
		{value: "source-over"},
		{value: "destination-over"},
		{value: "source-in"},
		{value: "destination-in"},
		{value: "source-out"},
		{value: "destination-out"},
		{value: "source-atop"},
		{value: "destination-atop"},
		{value: "lighter"},
		{value: "xor"},
		{value: "copy"},
		{value: "normal"},
		{value: "multiply"},
		{value: "screen"},
		{value: "overlay"},
		{value: "darken"},
		{value: "lighten"},
		{value: "color-dodge"},
		{value: "color-burn"},
		{value: "hard-light"},
		{value: "soft-light"},
		{value: "difference"},
		{value: "exclusion"},
		{value: "hue"},
		{value: "saturation"},
		{value: "color"},
		{value: "luminosity"}
	], function (game, value) {
		game.debug_manager.set("light_global_composite", value);
	});



};




Game.prototype.playSound = function () {
	if (CONSTANT.DEBUG.SOUND_OFF) return;
	return this.audio_loader.playSound.apply(this.audio_loader, arguments);
};
Game.prototype.playBGM = function () {
	if (CONSTANT.DEBUG.SOUND_OFF) return;
	return this.audio_loader.playBGM.apply(this.audio_loader, arguments);
};
Game.prototype.addBGM = function () {
	if (CONSTANT.DEBUG.SOUND_OFF) return;
	return this.audio_loader.addBGM.apply(this.audio_loader, arguments);
};

Game.prototype.changeBGM = function () {
	if (CONSTANT.DEBUG.SOUND_OFF) return;
	return this.audio_loader.changeBGM.apply(this.audio_loader, arguments);
};
Game.prototype.stopBGM = function () {
	if (CONSTANT.DEBUG.SOUND_OFF) return;
	return this.audio_loader.stopBGM.apply(this.audio_loader, arguments);
};

module.exports = Game;

},{"./constant":87,"./hakurei":98,"./save_manager":146,"./scene/loading":147,"./scene/stage":148,"./scene/title":154}],98:[function(require,module,exports){
'use strict';

module.exports = require("./hakureijs/index");

},{"./hakureijs/index":106}],99:[function(require,module,exports){
'use strict';

var AudioLoader = function() {
	this.sounds = {};
	this.bgms = {};

	this.loading_audio_num = 0;
	this.loaded_audio_num = 0;

	this.id = 0;

	// flag which determine what sound.
	this.soundflag = 0x00;

	this.audio_context = null;
	if (window && window.AudioContext) {
		this.audio_context = new window.AudioContext();

		// for legacy browser
		this.audio_context.createGain = this.audio_context.createGain || this.audio_context.createGainNode;
	}

	// key: bgm name, value: playing AudioBufferSourceNode instance
	this._audio_source_map = {};
};
AudioLoader.prototype.init = function() {
	// TODO: cancel already loading bgms and sounds

	this.sounds = {};
	this.bgms = {};

	this.loading_audio_num = 0;
	this.loaded_audio_num = 0;

	this.id = 0;

	this.soundflag = 0x00;

	this._audio_source_map = {};
};

AudioLoader.prototype.loadSound = function(name, path, volume) {
	if(!window || !window.Audio) return;

	var self = this;
	self.loading_audio_num++;

	if(!volume) volume = 1.0;


	// it's done to load sound
	var onload_function = function() {
		self.loaded_audio_num++;
	};

	var audio = new window.Audio(path);
	audio.volume = volume;
	audio.addEventListener('canplay', onload_function);
	audio.load();
	self.sounds[name] = {
		id: 1 << self.id++,
		audio: audio,
	};
};

AudioLoader.prototype.loadBGM = function(name, path, volume, loopStart, loopEnd) {
	if (!this.audio_context) return;

	var self = this;
	self.loading_audio_num++;

	// it's done to load audio
	var successCallback = function(audioBuffer) {
		self.loaded_audio_num++;
		self.bgms[name] = {
			audio:     audioBuffer,
			volume:    volume,
			loopStart: loopStart,
			loopEnd:   loopEnd,
		};
	};

	var errorCallback = function(error) {
		if (error instanceof Error) {
			throw new Error(error.message);
		} else {
			throw error;
		}
	};

	var xhr = new XMLHttpRequest();
	xhr.onload = function() {
		if(xhr.status !== 200) {
			return;
		}

		var arrayBuffer = xhr.response;

		// decode
		self.audio_context.decodeAudioData(arrayBuffer, successCallback, errorCallback);
	};

	xhr.open('GET', path, true);
	xhr.responseType = 'arraybuffer';
	xhr.send(null);
};

AudioLoader.prototype.isAllLoaded = function() {
	return this.loaded_audio_num === this.loading_audio_num;
};

AudioLoader.prototype.playSound = function(name) {
	if (!(name in this.sounds)) throw new Error("Can't find sound '" + name + "'.");
	this.soundflag |= this.sounds[name].id;
};

AudioLoader.prototype.executePlaySound = function() {

	for(var name in this.sounds) {
		if(this.soundflag & this.sounds[name].id) {
			// play
			this.sounds[name].audio.pause();
			this.sounds[name].audio.currentTime = 0;
			this.sounds[name].audio.play();

			// delete flag
			this.soundflag &= ~this.sounds[name].id;

		}
	}
};
AudioLoader.prototype.playBGM = function(name) {
	// stop playing bgm
	this.stopAllBGM();

	this.addBGM(name);
};
AudioLoader.prototype.addBGM = function(name) {
	if (this.isPlayingBGM(name)) {
		this.stopBGM(name);
	}

	this._audio_source_map[name] = this._createSourceNode(name);
	this._audio_source_map[name].start(0);
};


// play if the bgm is not playing now
AudioLoader.prototype.changeBGM = function(name) {
	if (!this.isPlayingBGM(name)) {
		this.playBGM(name);
	}
};
AudioLoader.prototype.stopAllBGM = function() {
	for (var bgm_name in this._audio_source_map) {
		this.stopBGM(bgm_name);
	}
};
AudioLoader.prototype.stopBGMWithout = function(exclude_bgm_name) {
	for (var bgm_name in this._audio_source_map) {
		if (bgm_name !== exclude_bgm_name) {
			this.stopBGM(bgm_name);
		}
	}
};



AudioLoader.prototype.stopBGM = function(name) {
	if(typeof name === "undefined") {
		return this.stopAllBGM();
	}

	if (name in this._audio_source_map) {
		var audio_source = this._audio_source_map[name];
		audio_source.stop(0);
		delete this._audio_source_map[name];
	}
};
AudioLoader.prototype.isPlayingBGM = function(name) {
	if(typeof name === "undefined") {
		return Object.keys(this._audio_source_map).length ? true : false;
	}
	else {
		return name in this._audio_source_map ? true : false;
	}
};

// create AudioBufferSourceNode instance
AudioLoader.prototype._createSourceNode = function(name) {
	var self = this;
	var data = self.bgms[name];

	var source = self.audio_context.createBufferSource();
	source.buffer = data.audio;

	if("loopStart" in data || "loopEnd" in data) { source.loop = true; }
	if(data.loopStart) { source.loopStart = data.loopStart; }
	if(data.loopEnd)   { source.loopEnd = data.loopEnd; }

	var audio_gain = this.audio_context.createGain();
	audio_gain.gain.value = data.volume || 1.0;

	source.connect(audio_gain);

	audio_gain.connect(self.audio_context.destination);
	source.start = source.start || source.noteOn;
	source.stop  = source.stop  || source.noteOff;

	return source;
};

AudioLoader.prototype.progress = function() {
	return this.loaded_audio_num / this.loading_audio_num;
};


module.exports = AudioLoader;

},{}],100:[function(require,module,exports){
'use strict';

var FontLoader = function() {
	this.is_done = false;
};
FontLoader.prototype.init = function() {
	this.is_done = false;
};
FontLoader.prototype.isAllLoaded = function() {
	return this.is_done;
};

FontLoader.prototype.notifyLoadingDone = function() {
	this.is_done = true;
};

FontLoader.prototype.progress = function() {
	return this.is_done ? 1 : 0;
};




module.exports = FontLoader;

},{}],101:[function(require,module,exports){
'use strict';

var ImageLoader = function() {
	this.images = {};

	this.loading_image_num = 0;
	this.loaded_image_num = 0;
};
ImageLoader.prototype.init = function() {
	// cancel already loading images
	for(var name in this.images){
		this.images[name].src = "";
	}

	this.images = {};

	this.loading_image_num = 0;
	this.loaded_image_num = 0;
};

ImageLoader.prototype.loadImage = function(name, path) {
	var self = this;

	self.loading_image_num++;

	// it's done to load image
	var onload_function = function() {
		self.loaded_image_num++;
	};

	var image = new Image();
	image.src = path;
	image.onload = onload_function;
	this.images[name] = image;
};

ImageLoader.prototype.isAllLoaded = function() {
	return this.loaded_image_num === this.loading_image_num;
};

ImageLoader.prototype.getImage = function(name) {
	return this.images[name];
};

ImageLoader.prototype.progress = function() {
	return this.loaded_image_num / this.loading_image_num;
};




module.exports = ImageLoader;

},{}],102:[function(require,module,exports){
'use strict';

// only keyboard (because core class uses key board map)
var Constant = {
	BUTTON_LEFT:  0x01,
	BUTTON_UP:    0x02,
	BUTTON_RIGHT: 0x04,
	BUTTON_DOWN:  0x08,
	BUTTON_Z:     0x10,
	BUTTON_X:     0x20,
	BUTTON_SHIFT: 0x40,
	BUTTON_SPACE: 0x80,
};

module.exports = Constant;

},{}],103:[function(require,module,exports){
'use strict';

var CONSTANT = {
	SPRITE3D: {},
};

// vertices
CONSTANT.SPRITE3D.V_ITEM_SIZE = 3;
CONSTANT.SPRITE3D.V_ITEM_NUM = 4;
CONSTANT.SPRITE3D.V_SIZE =
	CONSTANT.SPRITE3D.V_ITEM_SIZE * CONSTANT.SPRITE3D.V_ITEM_NUM;
// texture coordinates
CONSTANT.SPRITE3D.C_ITEM_SIZE = 2;
CONSTANT.SPRITE3D.C_ITEM_NUM = 4;
CONSTANT.SPRITE3D.C_SIZE =
	CONSTANT.SPRITE3D.C_ITEM_SIZE * CONSTANT.SPRITE3D.C_ITEM_NUM;

// indices
CONSTANT.SPRITE3D.I_ITEM_SIZE = 1;
CONSTANT.SPRITE3D.I_ITEM_NUM = 6;
CONSTANT.SPRITE3D.I_SIZE =
	CONSTANT.SPRITE3D.I_ITEM_SIZE * CONSTANT.SPRITE3D.I_ITEM_NUM;

// color
CONSTANT.SPRITE3D.A_ITEM_SIZE = 4;
CONSTANT.SPRITE3D.A_ITEM_NUM = 4;
CONSTANT.SPRITE3D.A_SIZE =
	CONSTANT.SPRITE3D.A_ITEM_SIZE * CONSTANT.SPRITE3D.A_ITEM_NUM;

module.exports = CONSTANT;

},{}],104:[function(require,module,exports){
'use strict';

/* TODO: create input_manager class */

var WebGLDebugUtils = require("webgl-debug");
var CONSTANT = require("./constant/button");
var Util = require("./util");
var DebugManager = require("./debug_manager");
var InputManager = require("./input_manager");
var ImageLoader = require("./asset_loader/image");
var AudioLoader = require("./asset_loader/audio");
var FontLoader = require("./asset_loader/font");
var SceneLoading = require('./scene/loading');

var ShaderProgram = require('./shader_program');
var VS = require("./shader/main.vs");
var FS = require("./shader/main.fs");


var Core = function(canvas, options) {
	if(!options) {
		options = {};
	}

	this.canvas_dom = canvas;
	this.ctx = null; // 2D context
	this.gl  = null; // 3D context

	// WebGL 3D mode
	if(options.webgl) {
		this.gl = this.createWebGLContext(this.canvas_dom);

		// shader program
		this.sprite_3d_shader = new ShaderProgram(
			this.gl,
			// verticle shader, fragment shader
			VS, FS,
			// attributes
			[
				"aTextureCoordinates",
				"aVertexPosition",
				"aColor"
			],
			// uniforms
			[
				"uMVMatrix",
				"uPMatrix",
				"uSampler", // texture data
			]
		);
	}
	// Canvas 2D mode
	else {
		this.ctx = this.canvas_dom.getContext('2d');
	}

	this.debug_manager = new DebugManager(this);

	this.input_manager = new InputManager();

	this.width = Number(canvas.getAttribute('width'));
	this.height = Number(canvas.getAttribute('height'));

	this.current_scene = null;
	this._reserved_next_scene = null; // next scene which changes next frame run
	this.scenes = {};

	this.frame_count = 0;

	this.request_id = null;

	this.image_loader = new ImageLoader();
	this.audio_loader = new AudioLoader();
	this.font_loader = new FontLoader();
};
Core.prototype.init = function () {
	this.current_scene = null;
	this._reserved_next_scene = null; // next scene which changes next frame run

	this.frame_count = 0;

	this.request_id = null;

	// TODO:
	//this.debug_manager.init();
	this.input_manager.init();

	this.image_loader.init();
	this.audio_loader.init();
	this.font_loader.init();

	this.addScene("loading", new SceneLoading(this));
};
Core.prototype.isRunning = function () {
	return this.request_id ? true : false;
};
Core.prototype.startRun = function () {
	if(this.isRunning()) return;

	this.run();
};
Core.prototype.stopRun = function () {
	if(!this.isRunning()) return;

	cancelAnimationFrame(this.request_id);

	this.request_id = null;
};
Core.prototype.run = function(){
	// get gamepad input
	// get pressed key time
	this.input_manager.beforeRun();

	// go to next scene if next scene is set
	this.changeNextSceneIfReserved();

	// play sound which already set to play
	this.audio_loader.executePlaySound();

	var current_scene = this.currentScene();
	if(current_scene) {
		current_scene.beforeDraw();

		// clear already rendered canvas
		this.clearCanvas();

		current_scene.draw();
		current_scene.afterDraw();
	}

	/*

	if(Config.DEBUG) {
		this._renderFPS();
	}

	// play sound effects
	this.runPlaySound();
	*/

	this.frame_count++;

	this.input_manager.afterRun();

	// tick
	this.request_id = requestAnimationFrame(Util.bind(this.run, this));
};
Core.prototype.currentScene = function() {
	if(this.current_scene === null) {
		return;
	}

	return this.scenes[this.current_scene];
};

Core.prototype.addScene = function(name, scene) {
	this.scenes[name] = scene;
};
Core.prototype.changeScene = function() {
	var args = Array.prototype.slice.call(arguments); // to convert array object
	this._reserved_next_scene = args;
};
Core.prototype.changeNextSceneIfReserved = function() {
	if(this._reserved_next_scene) {
		if (this.currentScene() && this.currentScene().isSetFadeOut() && !this.currentScene().isInFadeOut()) {
			this.currentScene().startFadeOut();
		}
		else if (this.currentScene() && this.currentScene().isSetFadeOut() && this.currentScene().isInFadeOut()) {
			// waiting for quiting fade out
		}
		else {
			// change next scene
			this.current_scene = this._reserved_next_scene.shift();
			var current_scene = this.currentScene();
			current_scene.init.apply(current_scene, this._reserved_next_scene);

			this._reserved_next_scene = null;
		}
	}
};
Core.prototype.changeSceneWithLoading = function(scene, assets) {
	if(!assets) assets = {};
	this.changeScene("loading", assets, scene);
};

Core.prototype.clearCanvas = function() {
	if (this.is2D()) {
		// 2D
		this.ctx.clearRect(0, 0, this.width, this.height);
	}
	else if (this.is3D()) {
		// 3D
		this.gl.clearColor(0.0, 0.0, 0.0, 0.0);
		this.gl.clearDepth(1.0);
		this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT);
	}
};
Core.prototype.is2D = function() {
	return this.ctx ? true : false;
};
Core.prototype.is3D = function() {
	return this.gl ? true : false;
};
// this method is deprecated.
Core.prototype.isKeyDown = function(flag) {
	return this.input_manager.isKeyDown(flag);
};
// this method is deprecated.
Core.prototype.isKeyPush = function(flag) {
	return this.input_manager.isKeyPush(flag);
};
// this method is deprecated.
Core.prototype.getKeyDownTime = function(bit_code) {
	return this.input_manager.getKeyDownTime(bit_code);
};
// this method is deprecated.
Core.prototype.isLeftClickDown = function() {
	return this.input_manager.isLeftClickDown();
};
// this method is deprecated.
Core.prototype.isLeftClickPush = function() {
	return this.input_manager.isLeftClickPush();
};
// this method is deprecated.
Core.prototype.isRightClickDown = function() {
	return this.input_manager.isRightClickDown();
};
// this method is deprecated.
Core.prototype.isRightClickPush = function() {
	return this.input_manager.isRightClickPush();
};

// this method is deprecated.
Core.prototype.mousePositionX = function () {
	return this.input_manager.mousePositionX();
};
// this method is deprecated.
Core.prototype.mousePositionY = function () {
	return this.input_manager.mousePositionX();
};
// this method is deprecated.
Core.prototype.mouseMoveX = function () {
	return this.input_manager.mouseMoveX();
};
// this method is deprecated.
Core.prototype.mouseMoveY = function () {
	return this.input_manager.mouseMoveY();
};
// this method is deprecated.
Core.prototype.mouseScroll = function () {
	return this.input_manager.mouseScroll();
};

Core.prototype.fullscreen = function() {
	var mainCanvas = this.canvas_dom;
	if (mainCanvas.requestFullscreen) {
		mainCanvas.requestFullscreen();
	}
	else if (mainCanvas.msRequestuestFullscreen) {
		mainCanvas.msRequestuestFullscreen();
	}
	else if (mainCanvas.mozRequestFullScreen) {
		mainCanvas.mozRequestFullScreen();
	}
	else if (mainCanvas.webkitRequestFullscreen) {
		mainCanvas.webkitRequestFullscreen();
	}
};

// it is done to load fonts
Core.prototype.fontLoadingDone = function() {
	this.font_loader.notifyLoadingDone();
};

Core.prototype.isAllLoaded = function() {
	if (this.image_loader.isAllLoaded() && this.audio_loader.isAllLoaded() && this.font_loader.isAllLoaded()) {
		return true;
	}
	return false;
};




Core.prototype.setupEvents = function() {
	if(!window) return;

	var self = this;

	// setup WebAudio
	window.AudioContext = (function(){
		return window.AudioContext || window.webkitAudioContext;
	})();

	// setup requestAnimationFrame
	window.requestAnimationFrame = (function(){
		return window.requestAnimationFrame	||
			window.webkitRequestAnimationFrame ||
			window.mozRequestAnimationFrame	||
			function(callback) { window.setTimeout(callback, 1000 / 60); };
	})();


	// If the browser has `document.fonts`, wait font loading.
	// Note: safari 10.0 has document.fonts but not occur loadingdone event
	if(window.document && window.document.fonts && !navigator.userAgent.toLowerCase().indexOf("safari")) {
		window.document.fonts.addEventListener('loadingdone', function() { self.fontLoadingDone(); });
	}
	else {
		self.fontLoadingDone();
	}

	this.input_manager.setupEvents(this.canvas_dom);
};

Core.prototype.createWebGLContext = function(canvas) {
	var gl;
	try {
		gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');
		gl = WebGLDebugUtils.makeDebugContext(gl);
	} catch (e) {
		throw e;
	}
	if (!gl) {
		throw new Error ("Could not initialize WebGL");
	}

	return gl;
};




module.exports = Core;

},{"./asset_loader/audio":99,"./asset_loader/font":100,"./asset_loader/image":101,"./constant/button":102,"./debug_manager":105,"./input_manager":107,"./scene/loading":126,"./shader/main.fs":129,"./shader/main.vs":130,"./shader_program":131,"./util":134,"webgl-debug":118}],105:[function(require,module,exports){
'use strict';

var DebugManager = function (core) {
	this.core = core;
	this.dom = null; // debug menu area

	this.is_debug_mode = false; // default: false


	this._is_showing_collision_area = false; // default: false

	this._variables = {};
};

DebugManager.prototype.setOn = function (dom) {
	this.is_debug_mode = true;
	this.dom = dom;
};
DebugManager.prototype.setOff = function () {
	this.is_debug_mode = false;
	this.dom = null;
};

DebugManager.prototype.set = function (name, value) {
	if(!this.is_debug_mode) return;

	this._variables[name] = value;
};
DebugManager.prototype.get = function (name) {
	if(!this.is_debug_mode) return null;

	return this._variables[name];
};



// add text menu
DebugManager.prototype.addMenuText = function (text) {
	if(!this.is_debug_mode) return;

	// create element
	var dom = window.document.createElement('pre');
	dom.textContent = text;

	// add element
	this.dom.appendChild(dom);
};

// add button menu
DebugManager.prototype.addMenuButton = function (button_value, func) {
	if(!this.is_debug_mode) return;

	var core = this.core;

	// create element
	var input = window.document.createElement('input');

	// set attributes
	input.setAttribute('type', 'button');
	input.setAttribute('value', button_value);
	input.onclick = function () {
		func(core);
	};

	// add element
	this.dom.appendChild(input);
};

// add select pull down menu
DebugManager.prototype.addMenuSelect = function (button_value, pulldown_list, func) {
	if(!this.is_debug_mode) return;

	var core = this.core;

	// create element
	var input = window.document.createElement('input');

	// select tag
	var select = window.document.createElement("select");

	// label
	var option_label = document.createElement("option");
	option_label.setAttribute("value", "");
	option_label.appendChild(document.createTextNode(button_value));
	select.appendChild(option_label);

	// add event
	select.onchange = function () {
		if(select.value === "") return;
		func(core, select.value);
	};

	// set attributes
	for (var i = 0, len = pulldown_list.length; i < len; i++) {
		var opt = pulldown_list[i];
		var value = opt.value;
		var name = name in opt ? opt.name : value;

		var option = document.createElement("option");
		option.setAttribute("value", value);
		option.appendChild( document.createTextNode(name) );
		select.appendChild(option);
	}

	// add element
	this.dom.appendChild(select);
};

DebugManager.prototype.addGitLatestCommitInfo = function (user_name, repo_name, branch) {
	if(!this.is_debug_mode) return;

	branch = branch || "master";

	var core = this.core;

	// create element
	var dom = window.document.createElement('pre');

	// add element
	this.dom.appendChild(dom);

	var git_api_url = "https://api.github.com/repos/" + user_name + "/" + repo_name + "/branches/" + branch;

	// fetch git info
	var xhr = new XMLHttpRequest();
	xhr.onload = function() {
		if(xhr.status !== 200) {
			return;
		}

		var json_text = xhr.response;

		var json;
		if (json_text) {
			json = JSON.parse(json_text);
		}
		else {
			throw new Error("Can't parse git lastest commit info");
		}

		dom.textContent =
			//"sha: " + json.commit.sha + "\n" +
			//"author: " + json.commit.commit.author.name + "\n" +
			"last update date: " + (new Date(json.commit.commit.author.date)) + "\n" +
			//"message: " + json.commit.commit.message + "\n" +
			""
		;
	};

	xhr.open('GET', git_api_url, true);
	xhr.send(null);
};










// show collision area of object instance
DebugManager.prototype.setShowingCollisionAreaOn = function () {
	if(!this.is_debug_mode) return null;
	this._is_showing_collision_area = true;
};
DebugManager.prototype.setShowingCollisionAreaOff = function () {
	if(!this.is_debug_mode) return null;
	this._is_showing_collision_area = false;
};
DebugManager.prototype.isShowingCollisionArea = function () {
	if(!this.is_debug_mode) return false;
	return this._is_showing_collision_area;
};

module.exports = DebugManager;

},{}],106:[function(require,module,exports){
'use strict';
module.exports = {
	util: require("./util"),
	core: require("./core"),
	// constant.BUTTON_NAME is deprecated.
	constant: require("./util").assign(require("./constant/button"), {
		button: require("./constant/button"),
	}),
	serif_manager: require("./serif_manager"),
	shader_program: require("./shader_program"),
	scene: {
		base:    require("./scene/base"),
		loading: require("./scene/loading"),
		movie:   require("./scene/movie"),
	},
	object: {
		base: require("./object/base"),
		sprite: require("./object/sprite"),
		sprite3d: require("./object/sprite3d"),
		pool_manager: require("./object/pool_manager"),
		pool_manager3d: require("./object/pool_manager3d"),
		ui_parts: require("./object/ui_parts"),
	},
	asset_loader: {
		image: require("./asset_loader/image"),
		audio: require("./asset_loader/audio"),
		font:  require("./asset_loader/font"),
	},
	storage: {
		base: require("./storage/base"),
		save: require("./storage/save"),
	},

};

},{"./asset_loader/audio":99,"./asset_loader/font":100,"./asset_loader/image":101,"./constant/button":102,"./core":104,"./object/base":119,"./object/pool_manager":120,"./object/pool_manager3d":121,"./object/sprite":122,"./object/sprite3d":123,"./object/ui_parts":124,"./scene/base":125,"./scene/loading":126,"./scene/movie":127,"./serif_manager":128,"./shader_program":131,"./storage/base":132,"./storage/save":133,"./util":134}],107:[function(require,module,exports){
'use strict';

var CONSTANT = require("./constant/button");
var Util = require("./util");

// const
var DEFAULT_BUTTON_ID_TO_BIT_CODE = {
	0: CONSTANT.BUTTON_Z,
	1: CONSTANT.BUTTON_X,
	2: CONSTANT.BUTTON_SPACE,
	3: CONSTANT.BUTTON_SHIFT,
};

var InputManager = function () {
	this.current_keyflag = 0x0;
	this.before_keyflag = 0x0;
	this._key_bit_code_to_down_time = {};

	// gamepad button_id to bit code of key input
	this._button_id_to_key_bit_code = Util.shallowCopyHash(DEFAULT_BUTTON_ID_TO_BIT_CODE);

	this.is_left_clicked  = false;
	this.is_right_clicked = false;
	this.before_is_left_clicked  = false;
	this.before_is_right_clicked = false;
	this.mouse_change_x = 0;
	this.mouse_change_y = 0;
	this.mouse_x = 0;
	this.mouse_y = 0;
	this.mouse_scroll = 0;

	this.is_connect_gamepad = false;
};

InputManager.prototype.init = function () {
	this.current_keyflag = 0x0;
	this.before_keyflag = 0x0;
	this.initPressedKeyTime();

	// gamepad button_id to bit code of key input
	this._button_id_to_key_bit_code = Util.shallowCopyHash(DEFAULT_BUTTON_ID_TO_BIT_CODE);

	this.is_left_clicked  = false;
	this.is_right_clicked = false;
	this.before_is_left_clicked  = false;
	this.before_is_right_clicked = false;
	this.mouse_change_x = 0;
	this.mouse_change_y = 0;
	this.mouse_x = 0;
	this.mouse_y = 0;
	this.mouse_scroll = 0;

	this.is_connect_gamepad = false;
};
InputManager.prototype.enableGamePad = function () {
	this.is_connect_gamepad = true;
};
InputManager.prototype.beforeRun = function(){
	// get gamepad input
	this.handleGamePad();

	// get pressed key time
	this.handlePressedKeyTime();
};

InputManager.prototype.afterRun = function(){
	// save key current pressed keys
	this.before_keyflag = this.current_keyflag;
	this.before_is_left_clicked = this.is_left_clicked;
	this.before_is_right_clicked = this.is_right_clicked;

	// reset mouse wheel and mouse move
	this.mouse_scroll = 0;
	this.mouse_change_x = 0;
	this.mouse_change_y = 0;
};


InputManager.prototype.handleKeyDown = function(e) {
	this.current_keyflag |= this._keyCodeToBitCode(e.keyCode);
	e.preventDefault();
};
InputManager.prototype.handleKeyUp = function(e) {
	this.current_keyflag &= ~this._keyCodeToBitCode(e.keyCode);
	e.preventDefault();
};
InputManager.prototype.isKeyDown = function(flag) {
	return((this.current_keyflag & flag) ? true : false);
};
InputManager.prototype.isKeyPush = function(flag) {
	return !(this.before_keyflag & flag) && this.current_keyflag & flag;
};


InputManager.prototype.getKeyDownTime = function(bit_code) {
	return this._key_bit_code_to_down_time[bit_code];
};

InputManager.prototype.handleMouseDown = function(event) {
	if ("which" in event) { // Gecko (Firefox), WebKit (Safari/Chrome) & Opera
		this.is_left_clicked  = event.which === 1;
		this.is_right_clicked = event.which === 3;
	}
	else if ("button" in event) {  // IE, Opera
		this.is_left_clicked  = event.button === 1;
		this.is_right_clicked = event.button === 2;
	}
	event.preventDefault();
};
InputManager.prototype.handleMouseUp = function(event) {
	if ("which" in event) { // Gecko (Firefox), WebKit (Safari/Chrome) & Opera
		this.is_left_clicked  = event.which === 1 ? false : this.is_left_clicked;
		this.is_right_clicked = event.which === 3 ? false : this.is_right_clicked;
	}
	else if ("button" in event) {  // IE, Opera
		this.is_left_clicked  = event.button === 1 ? false : this.is_left_clicked;
		this.is_right_clicked = event.button === 2 ? false : this.is_right_clicked;
	}
	event.preventDefault();
};
InputManager.prototype.isLeftClickDown = function() {
	return this.is_left_clicked;
};
InputManager.prototype.isLeftClickPush = function() {
	// not true if is pressed in previous frame
	return this.is_left_clicked && !this.before_is_left_clicked;
};
InputManager.prototype.isRightClickDown = function() {
	return this.is_right_clicked;
};
InputManager.prototype.isRightClickPush = function() {
	// not true if is pressed in previous frame
	return this.is_right_clicked && !this.before_is_right_clicked;
};
InputManager.prototype.handleMouseMove = function (d) {
	d = d ? d : window.event;
	d.preventDefault();

	// get absolute coordinate position of canvas and adjust click position
	// because clientX and clientY return the position from the document.
	var rect = d.target.getBoundingClientRect();

	var x = d.clientX - rect.left;
	var y = d.clientY - rect.top;

	this.mouse_change_x = this.mouse_x - x;
	this.mouse_change_y = this.mouse_y - y;
	this.mouse_x = x;
	this.mouse_y = y;
};
InputManager.prototype.mousePositionX = function () {
	return this.mouse_x;
};
InputManager.prototype.mousePositionY = function () {
	return this.mouse_y;
};
InputManager.prototype.mouseMoveX = function () {
	return this.mouse_change_x;
};
InputManager.prototype.mouseMoveY = function () {
	return this.mouse_change_y;
};
InputManager.prototype.handleMouseWheel = function (event) {
	this.mouse_scroll = event.detail ? event.detail : -event.wheelDelta/120;
};
InputManager.prototype.mouseScroll = function () {
	return this.mouse_scroll;
};
InputManager.prototype._keyCodeToBitCode = function(keyCode) {
	var flag;
	switch(keyCode) {
		case 16: // shift
			flag = CONSTANT.BUTTON_SHIFT;
			break;
		case 32: // space
			flag = CONSTANT.BUTTON_SPACE;
			break;
		case 37: // left
			flag = CONSTANT.BUTTON_LEFT;
			break;
		case 38: // up
			flag = CONSTANT.BUTTON_UP;
			break;
		case 39: // right
			flag = CONSTANT.BUTTON_RIGHT;
			break;
		case 40: // down
			flag = CONSTANT.BUTTON_DOWN;
			break;
		case 88: // x
			flag = CONSTANT.BUTTON_X;
			break;
		case 90: // z
			flag = CONSTANT.BUTTON_Z;
			break;
	}
	return flag;
};
InputManager.prototype.handleGamePad = function() {
	if(!this.is_connect_gamepad) return;
	var pads = window.navigator.getGamepads();
	var pad = pads[0]; // 1Pコン

	if(!pad) return;

	// button
	for (var i = 0, len = pad.buttons.length; i < len; i++) {
		if(!(i in this._button_id_to_key_bit_code)) continue; // ignore if I don't know its button
		if(pad.buttons[i].pressed) { // pressed
			this.current_keyflag |= this.getKeyByButtonId(i);
		}
		else { // not pressed
			this.current_keyflag &= ~this.getKeyByButtonId(i);
		}
	}

	// arrow keys
	if (pad.axes[1] < -0.5) {
			this.current_keyflag |= CONSTANT.BUTTON_UP;
	}
	else {
			this.current_keyflag &= ~CONSTANT.BUTTON_UP;
	}
	if (pad.axes[1] > 0.5) {
			this.current_keyflag |= CONSTANT.BUTTON_DOWN;
	}
	else {
			this.current_keyflag &= ~CONSTANT.BUTTON_DOWN;
	}
	if (pad.axes[0] < -0.5) {
			this.current_keyflag |= CONSTANT.BUTTON_LEFT;
	}
	else {
			this.current_keyflag &= ~CONSTANT.BUTTON_LEFT;
	}
	if (pad.axes[0] > 0.5) {
			this.current_keyflag |= CONSTANT.BUTTON_RIGHT;
	}
	else {
			this.current_keyflag &= ~CONSTANT.BUTTON_RIGHT;
	}
};
InputManager.prototype.initPressedKeyTime = function() {
	this._key_bit_code_to_down_time = {};

	for (var button_id in CONSTANT) {
		var bit_code = CONSTANT[button_id];
		this._key_bit_code_to_down_time[bit_code] = 0;
	}
};

InputManager.prototype.handlePressedKeyTime = function() {
	for (var button_id in CONSTANT) {
		var bit_code = CONSTANT[button_id];
		if (this.isKeyDown(bit_code)) {
			this._key_bit_code_to_down_time[bit_code]++;
		}
		else {
			this._key_bit_code_to_down_time[bit_code] = 0;
		}
	}
};
InputManager.prototype.setupEvents = function(canvas_dom) {
	var self = this;

	// bind keyboard
	window.onkeydown = function(e) { self.handleKeyDown(e); };
	window.onkeyup   = function(e) { self.handleKeyUp(e); };

	// bind mouse click
	canvas_dom.onmousedown = function(e) { self.handleMouseDown(e); };
	canvas_dom.onmouseup   = function(e) { self.handleMouseUp(e); };

	// bind mouse move
	canvas_dom.onmousemove = function(d) { self.handleMouseMove(d); };

	// bind mouse wheel
	var mousewheelevent = (window.navi && /Firefox/i.test(window.navigator.userAgent)) ? "DOMMouseScroll" : "mousewheel";
	if (canvas_dom.addEventListener) { //WC3 browsers
		canvas_dom.addEventListener(mousewheelevent, function(e) {
			var event = window.event || e;
			self.handleMouseWheel(event);
		}, false);
	}

	// unable to use right click menu.
	// NOTE: not used
	// this.canvas_dom.oncontextmenu = function() { return false; };

	// bind gamepad
	if(window.Gamepad && window.navigator && window.navigator.getGamepads) {
		self.enableGamePad();
	}
};

InputManager.prototype.getKeyByButtonId = function(button_id) {
	var keys = this._button_id_to_key_bit_code[button_id];
	if(!keys) keys = 0x00;

	return keys;
};

// get one of the pressed button id
InputManager.prototype.getAnyButtonId = function(){
	if(!this.is_connect_gamepad) return;

	var pads = window.navigator.getGamepads();
	var pad = pads[0]; // 1Pコン

	if(!pad) return;

	for (var i = 0; i < pad.buttons.length; i++) {
		if(pad.buttons[i].pressed) {
			return i;
		}
	}
};
/*
InputManager.prototype.setButtonIdMapping = function(button_id, key) {
	var defined_key = this._button_id_to_key_bit_code[button_id];

	for (var target_button_id in this._button_id_to_key_bit_code) {
		var target_key = this._button_id_to_key_bit_code[target_button_id];
		// If there are already set keys in other keys, replace it.
		if (target_key === key) {
			if (defined_key) {
				// replace other key's button_id mapping to current button_id's key.
				this._button_id_to_key_bit_code[target_button_id] = defined_key;
			}
			else {
				// the player presses target_button_id, no event has occured.
				delete this._button_id_to_key_bit_code[target_button_id];
			}
		}
	}

	// set
	this._button_id_to_key_bit_code[button_id] = key;
};

InputManager.prototype.setAllButtonIdMapping = function(map) {
	this._button_id_to_key_bit_code = Util.shallowCopyHash(map);
};

InputManager.prototype.getButtonIdToKeyMap = function() {
	return Util.shallowCopyHash(this._button_id_to_key_bit_code);
};
// convert { value => key } hash
InputManager.prototype.getKeyToButtonIdMap = function() {
	var map = {};
	for (var button_id in this._button_id_to_key_bit_code) {
		var key = this._button_id_to_key_bit_code[button_id];
		map[key] = button_id; // NOTE: cannot duplicate, if it, overwrite it
	}

	return map;
};


InputManager.prototype.dumpGamePadKey = function() {
	var dump = {};

	for (var button_id in this._button_id_to_key_bit_code) {
		var key = this._button_id_to_key_bit_code[ button_id ];
		switch(key) {
			case CONSTANT.BUTTON_LEFT:
				dump[button_id] = "LEFT";
				break;
			case CONSTANT.BUTTON_UP:
				dump[button_id] = "UP";
				break;
			case CONSTANT.BUTTON_RIGHT:
				dump[button_id] = "RIGHT";
				break;
			case CONSTANT.BUTTON_DOWN:
				dump[button_id] = "DOWN";
				break;
			case CONSTANT.BUTTON_Z:
				dump[button_id] = "Z";
				break;
			case CONSTANT.BUTTON_X:
				dump[button_id] = "X";
				break;
			case CONSTANT.BUTTON_SHIFT:
				dump[button_id] = "SHIFT";
				break;
			case CONSTANT.BUTTON_SPACE:
				dump[button_id] = "SPACE";
				break;
			default:
				dump[button_id] = "UNKNOWN";
		}
	}

	console.log(dump);
};
*/





module.exports = InputManager;

},{"./constant/button":102,"./util":134}],108:[function(require,module,exports){
/**
 * @fileoverview gl-matrix - High performance matrix and vector operations
 * @author Brandon Jones
 * @author Colin MacKenzie IV
 * @version 2.3.2
 */

/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE. */
// END HEADER

exports.glMatrix = require("./gl-matrix/common.js");
exports.mat2 = require("./gl-matrix/mat2.js");
exports.mat2d = require("./gl-matrix/mat2d.js");
exports.mat3 = require("./gl-matrix/mat3.js");
exports.mat4 = require("./gl-matrix/mat4.js");
exports.quat = require("./gl-matrix/quat.js");
exports.vec2 = require("./gl-matrix/vec2.js");
exports.vec3 = require("./gl-matrix/vec3.js");
exports.vec4 = require("./gl-matrix/vec4.js");
},{"./gl-matrix/common.js":109,"./gl-matrix/mat2.js":110,"./gl-matrix/mat2d.js":111,"./gl-matrix/mat3.js":112,"./gl-matrix/mat4.js":113,"./gl-matrix/quat.js":114,"./gl-matrix/vec2.js":115,"./gl-matrix/vec3.js":116,"./gl-matrix/vec4.js":117}],109:[function(require,module,exports){
/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE. */

/**
 * @class Common utilities
 * @name glMatrix
 */
var glMatrix = {};

// Configuration Constants
glMatrix.EPSILON = 0.000001;
glMatrix.ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;
glMatrix.RANDOM = Math.random;
glMatrix.ENABLE_SIMD = false;

// Capability detection
glMatrix.SIMD_AVAILABLE = (glMatrix.ARRAY_TYPE === Float32Array) && ('SIMD' in this);
glMatrix.USE_SIMD = glMatrix.ENABLE_SIMD && glMatrix.SIMD_AVAILABLE;

/**
 * Sets the type of array used when creating new vectors and matrices
 *
 * @param {Type} type Array type, such as Float32Array or Array
 */
glMatrix.setMatrixArrayType = function(type) {
    glMatrix.ARRAY_TYPE = type;
}

var degree = Math.PI / 180;

/**
* Convert Degree To Radian
*
* @param {Number} Angle in Degrees
*/
glMatrix.toRadian = function(a){
     return a * degree;
}

/**
 * Tests whether or not the arguments have approximately the same value, within an absolute
 * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less 
 * than or equal to 1.0, and a relative tolerance is used for larger values)
 * 
 * @param {Number} a The first number to test.
 * @param {Number} b The second number to test.
 * @returns {Boolean} True if the numbers are approximately equal, false otherwise.
 */
glMatrix.equals = function(a, b) {
	return Math.abs(a - b) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a), Math.abs(b));
}

module.exports = glMatrix;

},{}],110:[function(require,module,exports){
/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE. */

var glMatrix = require("./common.js");

/**
 * @class 2x2 Matrix
 * @name mat2
 */
var mat2 = {};

/**
 * Creates a new identity mat2
 *
 * @returns {mat2} a new 2x2 matrix
 */
mat2.create = function() {
    var out = new glMatrix.ARRAY_TYPE(4);
    out[0] = 1;
    out[1] = 0;
    out[2] = 0;
    out[3] = 1;
    return out;
};

/**
 * Creates a new mat2 initialized with values from an existing matrix
 *
 * @param {mat2} a matrix to clone
 * @returns {mat2} a new 2x2 matrix
 */
mat2.clone = function(a) {
    var out = new glMatrix.ARRAY_TYPE(4);
    out[0] = a[0];
    out[1] = a[1];
    out[2] = a[2];
    out[3] = a[3];
    return out;
};

/**
 * Copy the values from one mat2 to another
 *
 * @param {mat2} out the receiving matrix
 * @param {mat2} a the source matrix
 * @returns {mat2} out
 */
mat2.copy = function(out, a) {
    out[0] = a[0];
    out[1] = a[1];
    out[2] = a[2];
    out[3] = a[3];
    return out;
};

/**
 * Set a mat2 to the identity matrix
 *
 * @param {mat2} out the receiving matrix
 * @returns {mat2} out
 */
mat2.identity = function(out) {
    out[0] = 1;
    out[1] = 0;
    out[2] = 0;
    out[3] = 1;
    return out;
};

/**
 * Create a new mat2 with the given values
 *
 * @param {Number} m00 Component in column 0, row 0 position (index 0)
 * @param {Number} m01 Component in column 0, row 1 position (index 1)
 * @param {Number} m10 Component in column 1, row 0 position (index 2)
 * @param {Number} m11 Component in column 1, row 1 position (index 3)
 * @returns {mat2} out A new 2x2 matrix
 */
mat2.fromValues = function(m00, m01, m10, m11) {
    var out = new glMatrix.ARRAY_TYPE(4);
    out[0] = m00;
    out[1] = m01;
    out[2] = m10;
    out[3] = m11;
    return out;
};

/**
 * Set the components of a mat2 to the given values
 *
 * @param {mat2} out the receiving matrix
 * @param {Number} m00 Component in column 0, row 0 position (index 0)
 * @param {Number} m01 Component in column 0, row 1 position (index 1)
 * @param {Number} m10 Component in column 1, row 0 position (index 2)
 * @param {Number} m11 Component in column 1, row 1 position (index 3)
 * @returns {mat2} out
 */
mat2.set = function(out, m00, m01, m10, m11) {
    out[0] = m00;
    out[1] = m01;
    out[2] = m10;
    out[3] = m11;
    return out;
};


/**
 * Transpose the values of a mat2
 *
 * @param {mat2} out the receiving matrix
 * @param {mat2} a the source matrix
 * @returns {mat2} out
 */
mat2.transpose = function(out, a) {
    // If we are transposing ourselves we can skip a few steps but have to cache some values
    if (out === a) {
        var a1 = a[1];
        out[1] = a[2];
        out[2] = a1;
    } else {
        out[0] = a[0];
        out[1] = a[2];
        out[2] = a[1];
        out[3] = a[3];
    }
    
    return out;
};

/**
 * Inverts a mat2
 *
 * @param {mat2} out the receiving matrix
 * @param {mat2} a the source matrix
 * @returns {mat2} out
 */
mat2.invert = function(out, a) {
    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],

        // Calculate the determinant
        det = a0 * a3 - a2 * a1;

    if (!det) {
        return null;
    }
    det = 1.0 / det;
    
    out[0] =  a3 * det;
    out[1] = -a1 * det;
    out[2] = -a2 * det;
    out[3] =  a0 * det;

    return out;
};

/**
 * Calculates the adjugate of a mat2
 *
 * @param {mat2} out the receiving matrix
 * @param {mat2} a the source matrix
 * @returns {mat2} out
 */
mat2.adjoint = function(out, a) {
    // Caching this value is nessecary if out == a
    var a0 = a[0];
    out[0] =  a[3];
    out[1] = -a[1];
    out[2] = -a[2];
    out[3] =  a0;

    return out;
};

/**
 * Calculates the determinant of a mat2
 *
 * @param {mat2} a the source matrix
 * @returns {Number} determinant of a
 */
mat2.determinant = function (a) {
    return a[0] * a[3] - a[2] * a[1];
};

/**
 * Multiplies two mat2's
 *
 * @param {mat2} out the receiving matrix
 * @param {mat2} a the first operand
 * @param {mat2} b the second operand
 * @returns {mat2} out
 */
mat2.multiply = function (out, a, b) {
    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];
    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];
    out[0] = a0 * b0 + a2 * b1;
    out[1] = a1 * b0 + a3 * b1;
    out[2] = a0 * b2 + a2 * b3;
    out[3] = a1 * b2 + a3 * b3;
    return out;
};

/**
 * Alias for {@link mat2.multiply}
 * @function
 */
mat2.mul = mat2.multiply;

/**
 * Rotates a mat2 by the given angle
 *
 * @param {mat2} out the receiving matrix
 * @param {mat2} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat2} out
 */
mat2.rotate = function (out, a, rad) {
    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],
        s = Math.sin(rad),
        c = Math.cos(rad);
    out[0] = a0 *  c + a2 * s;
    out[1] = a1 *  c + a3 * s;
    out[2] = a0 * -s + a2 * c;
    out[3] = a1 * -s + a3 * c;
    return out;
};

/**
 * Scales the mat2 by the dimensions in the given vec2
 *
 * @param {mat2} out the receiving matrix
 * @param {mat2} a the matrix to rotate
 * @param {vec2} v the vec2 to scale the matrix by
 * @returns {mat2} out
 **/
mat2.scale = function(out, a, v) {
    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],
        v0 = v[0], v1 = v[1];
    out[0] = a0 * v0;
    out[1] = a1 * v0;
    out[2] = a2 * v1;
    out[3] = a3 * v1;
    return out;
};

/**
 * Creates a matrix from a given angle
 * This is equivalent to (but much faster than):
 *
 *     mat2.identity(dest);
 *     mat2.rotate(dest, dest, rad);
 *
 * @param {mat2} out mat2 receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat2} out
 */
mat2.fromRotation = function(out, rad) {
    var s = Math.sin(rad),
        c = Math.cos(rad);
    out[0] = c;
    out[1] = s;
    out[2] = -s;
    out[3] = c;
    return out;
}

/**
 * Creates a matrix from a vector scaling
 * This is equivalent to (but much faster than):
 *
 *     mat2.identity(dest);
 *     mat2.scale(dest, dest, vec);
 *
 * @param {mat2} out mat2 receiving operation result
 * @param {vec2} v Scaling vector
 * @returns {mat2} out
 */
mat2.fromScaling = function(out, v) {
    out[0] = v[0];
    out[1] = 0;
    out[2] = 0;
    out[3] = v[1];
    return out;
}

/**
 * Returns a string representation of a mat2
 *
 * @param {mat2} mat matrix to represent as a string
 * @returns {String} string representation of the matrix
 */
mat2.str = function (a) {
    return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';
};

/**
 * Returns Frobenius norm of a mat2
 *
 * @param {mat2} a the matrix to calculate Frobenius norm of
 * @returns {Number} Frobenius norm
 */
mat2.frob = function (a) {
    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2)))
};

/**
 * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix
 * @param {mat2} L the lower triangular matrix 
 * @param {mat2} D the diagonal matrix 
 * @param {mat2} U the upper triangular matrix 
 * @param {mat2} a the input matrix to factorize
 */

mat2.LDU = function (L, D, U, a) { 
    L[2] = a[2]/a[0]; 
    U[0] = a[0]; 
    U[1] = a[1]; 
    U[3] = a[3] - L[2] * U[1]; 
    return [L, D, U];       
}; 

/**
 * Adds two mat2's
 *
 * @param {mat2} out the receiving matrix
 * @param {mat2} a the first operand
 * @param {mat2} b the second operand
 * @returns {mat2} out
 */
mat2.add = function(out, a, b) {
    out[0] = a[0] + b[0];
    out[1] = a[1] + b[1];
    out[2] = a[2] + b[2];
    out[3] = a[3] + b[3];
    return out;
};

/**
 * Subtracts matrix b from matrix a
 *
 * @param {mat2} out the receiving matrix
 * @param {mat2} a the first operand
 * @param {mat2} b the second operand
 * @returns {mat2} out
 */
mat2.subtract = function(out, a, b) {
    out[0] = a[0] - b[0];
    out[1] = a[1] - b[1];
    out[2] = a[2] - b[2];
    out[3] = a[3] - b[3];
    return out;
};

/**
 * Alias for {@link mat2.subtract}
 * @function
 */
mat2.sub = mat2.subtract;

/**
 * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)
 *
 * @param {mat2} a The first matrix.
 * @param {mat2} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */
mat2.exactEquals = function (a, b) {
    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];
};

/**
 * Returns whether or not the matrices have approximately the same elements in the same position.
 *
 * @param {mat2} a The first matrix.
 * @param {mat2} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */
mat2.equals = function (a, b) {
    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];
    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];
    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&
            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&
            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&
            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));
};

/**
 * Multiply each element of the matrix by a scalar.
 *
 * @param {mat2} out the receiving matrix
 * @param {mat2} a the matrix to scale
 * @param {Number} b amount to scale the matrix's elements by
 * @returns {mat2} out
 */
mat2.multiplyScalar = function(out, a, b) {
    out[0] = a[0] * b;
    out[1] = a[1] * b;
    out[2] = a[2] * b;
    out[3] = a[3] * b;
    return out;
};

/**
 * Adds two mat2's after multiplying each element of the second operand by a scalar value.
 *
 * @param {mat2} out the receiving vector
 * @param {mat2} a the first operand
 * @param {mat2} b the second operand
 * @param {Number} scale the amount to scale b's elements by before adding
 * @returns {mat2} out
 */
mat2.multiplyScalarAndAdd = function(out, a, b, scale) {
    out[0] = a[0] + (b[0] * scale);
    out[1] = a[1] + (b[1] * scale);
    out[2] = a[2] + (b[2] * scale);
    out[3] = a[3] + (b[3] * scale);
    return out;
};

module.exports = mat2;

},{"./common.js":109}],111:[function(require,module,exports){
/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE. */

var glMatrix = require("./common.js");

/**
 * @class 2x3 Matrix
 * @name mat2d
 * 
 * @description 
 * A mat2d contains six elements defined as:
 * <pre>
 * [a, c, tx,
 *  b, d, ty]
 * </pre>
 * This is a short form for the 3x3 matrix:
 * <pre>
 * [a, c, tx,
 *  b, d, ty,
 *  0, 0, 1]
 * </pre>
 * The last row is ignored so the array is shorter and operations are faster.
 */
var mat2d = {};

/**
 * Creates a new identity mat2d
 *
 * @returns {mat2d} a new 2x3 matrix
 */
mat2d.create = function() {
    var out = new glMatrix.ARRAY_TYPE(6);
    out[0] = 1;
    out[1] = 0;
    out[2] = 0;
    out[3] = 1;
    out[4] = 0;
    out[5] = 0;
    return out;
};

/**
 * Creates a new mat2d initialized with values from an existing matrix
 *
 * @param {mat2d} a matrix to clone
 * @returns {mat2d} a new 2x3 matrix
 */
mat2d.clone = function(a) {
    var out = new glMatrix.ARRAY_TYPE(6);
    out[0] = a[0];
    out[1] = a[1];
    out[2] = a[2];
    out[3] = a[3];
    out[4] = a[4];
    out[5] = a[5];
    return out;
};

/**
 * Copy the values from one mat2d to another
 *
 * @param {mat2d} out the receiving matrix
 * @param {mat2d} a the source matrix
 * @returns {mat2d} out
 */
mat2d.copy = function(out, a) {
    out[0] = a[0];
    out[1] = a[1];
    out[2] = a[2];
    out[3] = a[3];
    out[4] = a[4];
    out[5] = a[5];
    return out;
};

/**
 * Set a mat2d to the identity matrix
 *
 * @param {mat2d} out the receiving matrix
 * @returns {mat2d} out
 */
mat2d.identity = function(out) {
    out[0] = 1;
    out[1] = 0;
    out[2] = 0;
    out[3] = 1;
    out[4] = 0;
    out[5] = 0;
    return out;
};

/**
 * Create a new mat2d with the given values
 *
 * @param {Number} a Component A (index 0)
 * @param {Number} b Component B (index 1)
 * @param {Number} c Component C (index 2)
 * @param {Number} d Component D (index 3)
 * @param {Number} tx Component TX (index 4)
 * @param {Number} ty Component TY (index 5)
 * @returns {mat2d} A new mat2d
 */
mat2d.fromValues = function(a, b, c, d, tx, ty) {
    var out = new glMatrix.ARRAY_TYPE(6);
    out[0] = a;
    out[1] = b;
    out[2] = c;
    out[3] = d;
    out[4] = tx;
    out[5] = ty;
    return out;
};

/**
 * Set the components of a mat2d to the given values
 *
 * @param {mat2d} out the receiving matrix
 * @param {Number} a Component A (index 0)
 * @param {Number} b Component B (index 1)
 * @param {Number} c Component C (index 2)
 * @param {Number} d Component D (index 3)
 * @param {Number} tx Component TX (index 4)
 * @param {Number} ty Component TY (index 5)
 * @returns {mat2d} out
 */
mat2d.set = function(out, a, b, c, d, tx, ty) {
    out[0] = a;
    out[1] = b;
    out[2] = c;
    out[3] = d;
    out[4] = tx;
    out[5] = ty;
    return out;
};

/**
 * Inverts a mat2d
 *
 * @param {mat2d} out the receiving matrix
 * @param {mat2d} a the source matrix
 * @returns {mat2d} out
 */
mat2d.invert = function(out, a) {
    var aa = a[0], ab = a[1], ac = a[2], ad = a[3],
        atx = a[4], aty = a[5];

    var det = aa * ad - ab * ac;
    if(!det){
        return null;
    }
    det = 1.0 / det;

    out[0] = ad * det;
    out[1] = -ab * det;
    out[2] = -ac * det;
    out[3] = aa * det;
    out[4] = (ac * aty - ad * atx) * det;
    out[5] = (ab * atx - aa * aty) * det;
    return out;
};

/**
 * Calculates the determinant of a mat2d
 *
 * @param {mat2d} a the source matrix
 * @returns {Number} determinant of a
 */
mat2d.determinant = function (a) {
    return a[0] * a[3] - a[1] * a[2];
};

/**
 * Multiplies two mat2d's
 *
 * @param {mat2d} out the receiving matrix
 * @param {mat2d} a the first operand
 * @param {mat2d} b the second operand
 * @returns {mat2d} out
 */
mat2d.multiply = function (out, a, b) {
    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],
        b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];
    out[0] = a0 * b0 + a2 * b1;
    out[1] = a1 * b0 + a3 * b1;
    out[2] = a0 * b2 + a2 * b3;
    out[3] = a1 * b2 + a3 * b3;
    out[4] = a0 * b4 + a2 * b5 + a4;
    out[5] = a1 * b4 + a3 * b5 + a5;
    return out;
};

/**
 * Alias for {@link mat2d.multiply}
 * @function
 */
mat2d.mul = mat2d.multiply;

/**
 * Rotates a mat2d by the given angle
 *
 * @param {mat2d} out the receiving matrix
 * @param {mat2d} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat2d} out
 */
mat2d.rotate = function (out, a, rad) {
    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],
        s = Math.sin(rad),
        c = Math.cos(rad);
    out[0] = a0 *  c + a2 * s;
    out[1] = a1 *  c + a3 * s;
    out[2] = a0 * -s + a2 * c;
    out[3] = a1 * -s + a3 * c;
    out[4] = a4;
    out[5] = a5;
    return out;
};

/**
 * Scales the mat2d by the dimensions in the given vec2
 *
 * @param {mat2d} out the receiving matrix
 * @param {mat2d} a the matrix to translate
 * @param {vec2} v the vec2 to scale the matrix by
 * @returns {mat2d} out
 **/
mat2d.scale = function(out, a, v) {
    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],
        v0 = v[0], v1 = v[1];
    out[0] = a0 * v0;
    out[1] = a1 * v0;
    out[2] = a2 * v1;
    out[3] = a3 * v1;
    out[4] = a4;
    out[5] = a5;
    return out;
};

/**
 * Translates the mat2d by the dimensions in the given vec2
 *
 * @param {mat2d} out the receiving matrix
 * @param {mat2d} a the matrix to translate
 * @param {vec2} v the vec2 to translate the matrix by
 * @returns {mat2d} out
 **/
mat2d.translate = function(out, a, v) {
    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],
        v0 = v[0], v1 = v[1];
    out[0] = a0;
    out[1] = a1;
    out[2] = a2;
    out[3] = a3;
    out[4] = a0 * v0 + a2 * v1 + a4;
    out[5] = a1 * v0 + a3 * v1 + a5;
    return out;
};

/**
 * Creates a matrix from a given angle
 * This is equivalent to (but much faster than):
 *
 *     mat2d.identity(dest);
 *     mat2d.rotate(dest, dest, rad);
 *
 * @param {mat2d} out mat2d receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat2d} out
 */
mat2d.fromRotation = function(out, rad) {
    var s = Math.sin(rad), c = Math.cos(rad);
    out[0] = c;
    out[1] = s;
    out[2] = -s;
    out[3] = c;
    out[4] = 0;
    out[5] = 0;
    return out;
}

/**
 * Creates a matrix from a vector scaling
 * This is equivalent to (but much faster than):
 *
 *     mat2d.identity(dest);
 *     mat2d.scale(dest, dest, vec);
 *
 * @param {mat2d} out mat2d receiving operation result
 * @param {vec2} v Scaling vector
 * @returns {mat2d} out
 */
mat2d.fromScaling = function(out, v) {
    out[0] = v[0];
    out[1] = 0;
    out[2] = 0;
    out[3] = v[1];
    out[4] = 0;
    out[5] = 0;
    return out;
}

/**
 * Creates a matrix from a vector translation
 * This is equivalent to (but much faster than):
 *
 *     mat2d.identity(dest);
 *     mat2d.translate(dest, dest, vec);
 *
 * @param {mat2d} out mat2d receiving operation result
 * @param {vec2} v Translation vector
 * @returns {mat2d} out
 */
mat2d.fromTranslation = function(out, v) {
    out[0] = 1;
    out[1] = 0;
    out[2] = 0;
    out[3] = 1;
    out[4] = v[0];
    out[5] = v[1];
    return out;
}

/**
 * Returns a string representation of a mat2d
 *
 * @param {mat2d} a matrix to represent as a string
 * @returns {String} string representation of the matrix
 */
mat2d.str = function (a) {
    return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + 
                    a[3] + ', ' + a[4] + ', ' + a[5] + ')';
};

/**
 * Returns Frobenius norm of a mat2d
 *
 * @param {mat2d} a the matrix to calculate Frobenius norm of
 * @returns {Number} Frobenius norm
 */
mat2d.frob = function (a) { 
    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1))
}; 

/**
 * Adds two mat2d's
 *
 * @param {mat2d} out the receiving matrix
 * @param {mat2d} a the first operand
 * @param {mat2d} b the second operand
 * @returns {mat2d} out
 */
mat2d.add = function(out, a, b) {
    out[0] = a[0] + b[0];
    out[1] = a[1] + b[1];
    out[2] = a[2] + b[2];
    out[3] = a[3] + b[3];
    out[4] = a[4] + b[4];
    out[5] = a[5] + b[5];
    return out;
};

/**
 * Subtracts matrix b from matrix a
 *
 * @param {mat2d} out the receiving matrix
 * @param {mat2d} a the first operand
 * @param {mat2d} b the second operand
 * @returns {mat2d} out
 */
mat2d.subtract = function(out, a, b) {
    out[0] = a[0] - b[0];
    out[1] = a[1] - b[1];
    out[2] = a[2] - b[2];
    out[3] = a[3] - b[3];
    out[4] = a[4] - b[4];
    out[5] = a[5] - b[5];
    return out;
};

/**
 * Alias for {@link mat2d.subtract}
 * @function
 */
mat2d.sub = mat2d.subtract;

/**
 * Multiply each element of the matrix by a scalar.
 *
 * @param {mat2d} out the receiving matrix
 * @param {mat2d} a the matrix to scale
 * @param {Number} b amount to scale the matrix's elements by
 * @returns {mat2d} out
 */
mat2d.multiplyScalar = function(out, a, b) {
    out[0] = a[0] * b;
    out[1] = a[1] * b;
    out[2] = a[2] * b;
    out[3] = a[3] * b;
    out[4] = a[4] * b;
    out[5] = a[5] * b;
    return out;
};

/**
 * Adds two mat2d's after multiplying each element of the second operand by a scalar value.
 *
 * @param {mat2d} out the receiving vector
 * @param {mat2d} a the first operand
 * @param {mat2d} b the second operand
 * @param {Number} scale the amount to scale b's elements by before adding
 * @returns {mat2d} out
 */
mat2d.multiplyScalarAndAdd = function(out, a, b, scale) {
    out[0] = a[0] + (b[0] * scale);
    out[1] = a[1] + (b[1] * scale);
    out[2] = a[2] + (b[2] * scale);
    out[3] = a[3] + (b[3] * scale);
    out[4] = a[4] + (b[4] * scale);
    out[5] = a[5] + (b[5] * scale);
    return out;
};

/**
 * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)
 *
 * @param {mat2d} a The first matrix.
 * @param {mat2d} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */
mat2d.exactEquals = function (a, b) {
    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];
};

/**
 * Returns whether or not the matrices have approximately the same elements in the same position.
 *
 * @param {mat2d} a The first matrix.
 * @param {mat2d} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */
mat2d.equals = function (a, b) {
    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];
    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];
    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&
            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&
            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&
            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&
            Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&
            Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)));
};

module.exports = mat2d;

},{"./common.js":109}],112:[function(require,module,exports){
/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE. */

var glMatrix = require("./common.js");

/**
 * @class 3x3 Matrix
 * @name mat3
 */
var mat3 = {};

/**
 * Creates a new identity mat3
 *
 * @returns {mat3} a new 3x3 matrix
 */
mat3.create = function() {
    var out = new glMatrix.ARRAY_TYPE(9);
    out[0] = 1;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 1;
    out[5] = 0;
    out[6] = 0;
    out[7] = 0;
    out[8] = 1;
    return out;
};

/**
 * Copies the upper-left 3x3 values into the given mat3.
 *
 * @param {mat3} out the receiving 3x3 matrix
 * @param {mat4} a   the source 4x4 matrix
 * @returns {mat3} out
 */
mat3.fromMat4 = function(out, a) {
    out[0] = a[0];
    out[1] = a[1];
    out[2] = a[2];
    out[3] = a[4];
    out[4] = a[5];
    out[5] = a[6];
    out[6] = a[8];
    out[7] = a[9];
    out[8] = a[10];
    return out;
};

/**
 * Creates a new mat3 initialized with values from an existing matrix
 *
 * @param {mat3} a matrix to clone
 * @returns {mat3} a new 3x3 matrix
 */
mat3.clone = function(a) {
    var out = new glMatrix.ARRAY_TYPE(9);
    out[0] = a[0];
    out[1] = a[1];
    out[2] = a[2];
    out[3] = a[3];
    out[4] = a[4];
    out[5] = a[5];
    out[6] = a[6];
    out[7] = a[7];
    out[8] = a[8];
    return out;
};

/**
 * Copy the values from one mat3 to another
 *
 * @param {mat3} out the receiving matrix
 * @param {mat3} a the source matrix
 * @returns {mat3} out
 */
mat3.copy = function(out, a) {
    out[0] = a[0];
    out[1] = a[1];
    out[2] = a[2];
    out[3] = a[3];
    out[4] = a[4];
    out[5] = a[5];
    out[6] = a[6];
    out[7] = a[7];
    out[8] = a[8];
    return out;
};

/**
 * Create a new mat3 with the given values
 *
 * @param {Number} m00 Component in column 0, row 0 position (index 0)
 * @param {Number} m01 Component in column 0, row 1 position (index 1)
 * @param {Number} m02 Component in column 0, row 2 position (index 2)
 * @param {Number} m10 Component in column 1, row 0 position (index 3)
 * @param {Number} m11 Component in column 1, row 1 position (index 4)
 * @param {Number} m12 Component in column 1, row 2 position (index 5)
 * @param {Number} m20 Component in column 2, row 0 position (index 6)
 * @param {Number} m21 Component in column 2, row 1 position (index 7)
 * @param {Number} m22 Component in column 2, row 2 position (index 8)
 * @returns {mat3} A new mat3
 */
mat3.fromValues = function(m00, m01, m02, m10, m11, m12, m20, m21, m22) {
    var out = new glMatrix.ARRAY_TYPE(9);
    out[0] = m00;
    out[1] = m01;
    out[2] = m02;
    out[3] = m10;
    out[4] = m11;
    out[5] = m12;
    out[6] = m20;
    out[7] = m21;
    out[8] = m22;
    return out;
};

/**
 * Set the components of a mat3 to the given values
 *
 * @param {mat3} out the receiving matrix
 * @param {Number} m00 Component in column 0, row 0 position (index 0)
 * @param {Number} m01 Component in column 0, row 1 position (index 1)
 * @param {Number} m02 Component in column 0, row 2 position (index 2)
 * @param {Number} m10 Component in column 1, row 0 position (index 3)
 * @param {Number} m11 Component in column 1, row 1 position (index 4)
 * @param {Number} m12 Component in column 1, row 2 position (index 5)
 * @param {Number} m20 Component in column 2, row 0 position (index 6)
 * @param {Number} m21 Component in column 2, row 1 position (index 7)
 * @param {Number} m22 Component in column 2, row 2 position (index 8)
 * @returns {mat3} out
 */
mat3.set = function(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {
    out[0] = m00;
    out[1] = m01;
    out[2] = m02;
    out[3] = m10;
    out[4] = m11;
    out[5] = m12;
    out[6] = m20;
    out[7] = m21;
    out[8] = m22;
    return out;
};

/**
 * Set a mat3 to the identity matrix
 *
 * @param {mat3} out the receiving matrix
 * @returns {mat3} out
 */
mat3.identity = function(out) {
    out[0] = 1;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 1;
    out[5] = 0;
    out[6] = 0;
    out[7] = 0;
    out[8] = 1;
    return out;
};

/**
 * Transpose the values of a mat3
 *
 * @param {mat3} out the receiving matrix
 * @param {mat3} a the source matrix
 * @returns {mat3} out
 */
mat3.transpose = function(out, a) {
    // If we are transposing ourselves we can skip a few steps but have to cache some values
    if (out === a) {
        var a01 = a[1], a02 = a[2], a12 = a[5];
        out[1] = a[3];
        out[2] = a[6];
        out[3] = a01;
        out[5] = a[7];
        out[6] = a02;
        out[7] = a12;
    } else {
        out[0] = a[0];
        out[1] = a[3];
        out[2] = a[6];
        out[3] = a[1];
        out[4] = a[4];
        out[5] = a[7];
        out[6] = a[2];
        out[7] = a[5];
        out[8] = a[8];
    }
    
    return out;
};

/**
 * Inverts a mat3
 *
 * @param {mat3} out the receiving matrix
 * @param {mat3} a the source matrix
 * @returns {mat3} out
 */
mat3.invert = function(out, a) {
    var a00 = a[0], a01 = a[1], a02 = a[2],
        a10 = a[3], a11 = a[4], a12 = a[5],
        a20 = a[6], a21 = a[7], a22 = a[8],

        b01 = a22 * a11 - a12 * a21,
        b11 = -a22 * a10 + a12 * a20,
        b21 = a21 * a10 - a11 * a20,

        // Calculate the determinant
        det = a00 * b01 + a01 * b11 + a02 * b21;

    if (!det) { 
        return null; 
    }
    det = 1.0 / det;

    out[0] = b01 * det;
    out[1] = (-a22 * a01 + a02 * a21) * det;
    out[2] = (a12 * a01 - a02 * a11) * det;
    out[3] = b11 * det;
    out[4] = (a22 * a00 - a02 * a20) * det;
    out[5] = (-a12 * a00 + a02 * a10) * det;
    out[6] = b21 * det;
    out[7] = (-a21 * a00 + a01 * a20) * det;
    out[8] = (a11 * a00 - a01 * a10) * det;
    return out;
};

/**
 * Calculates the adjugate of a mat3
 *
 * @param {mat3} out the receiving matrix
 * @param {mat3} a the source matrix
 * @returns {mat3} out
 */
mat3.adjoint = function(out, a) {
    var a00 = a[0], a01 = a[1], a02 = a[2],
        a10 = a[3], a11 = a[4], a12 = a[5],
        a20 = a[6], a21 = a[7], a22 = a[8];

    out[0] = (a11 * a22 - a12 * a21);
    out[1] = (a02 * a21 - a01 * a22);
    out[2] = (a01 * a12 - a02 * a11);
    out[3] = (a12 * a20 - a10 * a22);
    out[4] = (a00 * a22 - a02 * a20);
    out[5] = (a02 * a10 - a00 * a12);
    out[6] = (a10 * a21 - a11 * a20);
    out[7] = (a01 * a20 - a00 * a21);
    out[8] = (a00 * a11 - a01 * a10);
    return out;
};

/**
 * Calculates the determinant of a mat3
 *
 * @param {mat3} a the source matrix
 * @returns {Number} determinant of a
 */
mat3.determinant = function (a) {
    var a00 = a[0], a01 = a[1], a02 = a[2],
        a10 = a[3], a11 = a[4], a12 = a[5],
        a20 = a[6], a21 = a[7], a22 = a[8];

    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);
};

/**
 * Multiplies two mat3's
 *
 * @param {mat3} out the receiving matrix
 * @param {mat3} a the first operand
 * @param {mat3} b the second operand
 * @returns {mat3} out
 */
mat3.multiply = function (out, a, b) {
    var a00 = a[0], a01 = a[1], a02 = a[2],
        a10 = a[3], a11 = a[4], a12 = a[5],
        a20 = a[6], a21 = a[7], a22 = a[8],

        b00 = b[0], b01 = b[1], b02 = b[2],
        b10 = b[3], b11 = b[4], b12 = b[5],
        b20 = b[6], b21 = b[7], b22 = b[8];

    out[0] = b00 * a00 + b01 * a10 + b02 * a20;
    out[1] = b00 * a01 + b01 * a11 + b02 * a21;
    out[2] = b00 * a02 + b01 * a12 + b02 * a22;

    out[3] = b10 * a00 + b11 * a10 + b12 * a20;
    out[4] = b10 * a01 + b11 * a11 + b12 * a21;
    out[5] = b10 * a02 + b11 * a12 + b12 * a22;

    out[6] = b20 * a00 + b21 * a10 + b22 * a20;
    out[7] = b20 * a01 + b21 * a11 + b22 * a21;
    out[8] = b20 * a02 + b21 * a12 + b22 * a22;
    return out;
};

/**
 * Alias for {@link mat3.multiply}
 * @function
 */
mat3.mul = mat3.multiply;

/**
 * Translate a mat3 by the given vector
 *
 * @param {mat3} out the receiving matrix
 * @param {mat3} a the matrix to translate
 * @param {vec2} v vector to translate by
 * @returns {mat3} out
 */
mat3.translate = function(out, a, v) {
    var a00 = a[0], a01 = a[1], a02 = a[2],
        a10 = a[3], a11 = a[4], a12 = a[5],
        a20 = a[6], a21 = a[7], a22 = a[8],
        x = v[0], y = v[1];

    out[0] = a00;
    out[1] = a01;
    out[2] = a02;

    out[3] = a10;
    out[4] = a11;
    out[5] = a12;

    out[6] = x * a00 + y * a10 + a20;
    out[7] = x * a01 + y * a11 + a21;
    out[8] = x * a02 + y * a12 + a22;
    return out;
};

/**
 * Rotates a mat3 by the given angle
 *
 * @param {mat3} out the receiving matrix
 * @param {mat3} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat3} out
 */
mat3.rotate = function (out, a, rad) {
    var a00 = a[0], a01 = a[1], a02 = a[2],
        a10 = a[3], a11 = a[4], a12 = a[5],
        a20 = a[6], a21 = a[7], a22 = a[8],

        s = Math.sin(rad),
        c = Math.cos(rad);

    out[0] = c * a00 + s * a10;
    out[1] = c * a01 + s * a11;
    out[2] = c * a02 + s * a12;

    out[3] = c * a10 - s * a00;
    out[4] = c * a11 - s * a01;
    out[5] = c * a12 - s * a02;

    out[6] = a20;
    out[7] = a21;
    out[8] = a22;
    return out;
};

/**
 * Scales the mat3 by the dimensions in the given vec2
 *
 * @param {mat3} out the receiving matrix
 * @param {mat3} a the matrix to rotate
 * @param {vec2} v the vec2 to scale the matrix by
 * @returns {mat3} out
 **/
mat3.scale = function(out, a, v) {
    var x = v[0], y = v[1];

    out[0] = x * a[0];
    out[1] = x * a[1];
    out[2] = x * a[2];

    out[3] = y * a[3];
    out[4] = y * a[4];
    out[5] = y * a[5];

    out[6] = a[6];
    out[7] = a[7];
    out[8] = a[8];
    return out;
};

/**
 * Creates a matrix from a vector translation
 * This is equivalent to (but much faster than):
 *
 *     mat3.identity(dest);
 *     mat3.translate(dest, dest, vec);
 *
 * @param {mat3} out mat3 receiving operation result
 * @param {vec2} v Translation vector
 * @returns {mat3} out
 */
mat3.fromTranslation = function(out, v) {
    out[0] = 1;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 1;
    out[5] = 0;
    out[6] = v[0];
    out[7] = v[1];
    out[8] = 1;
    return out;
}

/**
 * Creates a matrix from a given angle
 * This is equivalent to (but much faster than):
 *
 *     mat3.identity(dest);
 *     mat3.rotate(dest, dest, rad);
 *
 * @param {mat3} out mat3 receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat3} out
 */
mat3.fromRotation = function(out, rad) {
    var s = Math.sin(rad), c = Math.cos(rad);

    out[0] = c;
    out[1] = s;
    out[2] = 0;

    out[3] = -s;
    out[4] = c;
    out[5] = 0;

    out[6] = 0;
    out[7] = 0;
    out[8] = 1;
    return out;
}

/**
 * Creates a matrix from a vector scaling
 * This is equivalent to (but much faster than):
 *
 *     mat3.identity(dest);
 *     mat3.scale(dest, dest, vec);
 *
 * @param {mat3} out mat3 receiving operation result
 * @param {vec2} v Scaling vector
 * @returns {mat3} out
 */
mat3.fromScaling = function(out, v) {
    out[0] = v[0];
    out[1] = 0;
    out[2] = 0;

    out[3] = 0;
    out[4] = v[1];
    out[5] = 0;

    out[6] = 0;
    out[7] = 0;
    out[8] = 1;
    return out;
}

/**
 * Copies the values from a mat2d into a mat3
 *
 * @param {mat3} out the receiving matrix
 * @param {mat2d} a the matrix to copy
 * @returns {mat3} out
 **/
mat3.fromMat2d = function(out, a) {
    out[0] = a[0];
    out[1] = a[1];
    out[2] = 0;

    out[3] = a[2];
    out[4] = a[3];
    out[5] = 0;

    out[6] = a[4];
    out[7] = a[5];
    out[8] = 1;
    return out;
};

/**
* Calculates a 3x3 matrix from the given quaternion
*
* @param {mat3} out mat3 receiving operation result
* @param {quat} q Quaternion to create matrix from
*
* @returns {mat3} out
*/
mat3.fromQuat = function (out, q) {
    var x = q[0], y = q[1], z = q[2], w = q[3],
        x2 = x + x,
        y2 = y + y,
        z2 = z + z,

        xx = x * x2,
        yx = y * x2,
        yy = y * y2,
        zx = z * x2,
        zy = z * y2,
        zz = z * z2,
        wx = w * x2,
        wy = w * y2,
        wz = w * z2;

    out[0] = 1 - yy - zz;
    out[3] = yx - wz;
    out[6] = zx + wy;

    out[1] = yx + wz;
    out[4] = 1 - xx - zz;
    out[7] = zy - wx;

    out[2] = zx - wy;
    out[5] = zy + wx;
    out[8] = 1 - xx - yy;

    return out;
};

/**
* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix
*
* @param {mat3} out mat3 receiving operation result
* @param {mat4} a Mat4 to derive the normal matrix from
*
* @returns {mat3} out
*/
mat3.normalFromMat4 = function (out, a) {
    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],
        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],
        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],
        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],

        b00 = a00 * a11 - a01 * a10,
        b01 = a00 * a12 - a02 * a10,
        b02 = a00 * a13 - a03 * a10,
        b03 = a01 * a12 - a02 * a11,
        b04 = a01 * a13 - a03 * a11,
        b05 = a02 * a13 - a03 * a12,
        b06 = a20 * a31 - a21 * a30,
        b07 = a20 * a32 - a22 * a30,
        b08 = a20 * a33 - a23 * a30,
        b09 = a21 * a32 - a22 * a31,
        b10 = a21 * a33 - a23 * a31,
        b11 = a22 * a33 - a23 * a32,

        // Calculate the determinant
        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;

    if (!det) { 
        return null; 
    }
    det = 1.0 / det;

    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;
    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;
    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;

    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;
    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;
    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;

    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;
    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;
    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;

    return out;
};

/**
 * Returns a string representation of a mat3
 *
 * @param {mat3} mat matrix to represent as a string
 * @returns {String} string representation of the matrix
 */
mat3.str = function (a) {
    return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + 
                    a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + 
                    a[6] + ', ' + a[7] + ', ' + a[8] + ')';
};

/**
 * Returns Frobenius norm of a mat3
 *
 * @param {mat3} a the matrix to calculate Frobenius norm of
 * @returns {Number} Frobenius norm
 */
mat3.frob = function (a) {
    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2)))
};

/**
 * Adds two mat3's
 *
 * @param {mat3} out the receiving matrix
 * @param {mat3} a the first operand
 * @param {mat3} b the second operand
 * @returns {mat3} out
 */
mat3.add = function(out, a, b) {
    out[0] = a[0] + b[0];
    out[1] = a[1] + b[1];
    out[2] = a[2] + b[2];
    out[3] = a[3] + b[3];
    out[4] = a[4] + b[4];
    out[5] = a[5] + b[5];
    out[6] = a[6] + b[6];
    out[7] = a[7] + b[7];
    out[8] = a[8] + b[8];
    return out;
};

/**
 * Subtracts matrix b from matrix a
 *
 * @param {mat3} out the receiving matrix
 * @param {mat3} a the first operand
 * @param {mat3} b the second operand
 * @returns {mat3} out
 */
mat3.subtract = function(out, a, b) {
    out[0] = a[0] - b[0];
    out[1] = a[1] - b[1];
    out[2] = a[2] - b[2];
    out[3] = a[3] - b[3];
    out[4] = a[4] - b[4];
    out[5] = a[5] - b[5];
    out[6] = a[6] - b[6];
    out[7] = a[7] - b[7];
    out[8] = a[8] - b[8];
    return out;
};

/**
 * Alias for {@link mat3.subtract}
 * @function
 */
mat3.sub = mat3.subtract;

/**
 * Multiply each element of the matrix by a scalar.
 *
 * @param {mat3} out the receiving matrix
 * @param {mat3} a the matrix to scale
 * @param {Number} b amount to scale the matrix's elements by
 * @returns {mat3} out
 */
mat3.multiplyScalar = function(out, a, b) {
    out[0] = a[0] * b;
    out[1] = a[1] * b;
    out[2] = a[2] * b;
    out[3] = a[3] * b;
    out[4] = a[4] * b;
    out[5] = a[5] * b;
    out[6] = a[6] * b;
    out[7] = a[7] * b;
    out[8] = a[8] * b;
    return out;
};

/**
 * Adds two mat3's after multiplying each element of the second operand by a scalar value.
 *
 * @param {mat3} out the receiving vector
 * @param {mat3} a the first operand
 * @param {mat3} b the second operand
 * @param {Number} scale the amount to scale b's elements by before adding
 * @returns {mat3} out
 */
mat3.multiplyScalarAndAdd = function(out, a, b, scale) {
    out[0] = a[0] + (b[0] * scale);
    out[1] = a[1] + (b[1] * scale);
    out[2] = a[2] + (b[2] * scale);
    out[3] = a[3] + (b[3] * scale);
    out[4] = a[4] + (b[4] * scale);
    out[5] = a[5] + (b[5] * scale);
    out[6] = a[6] + (b[6] * scale);
    out[7] = a[7] + (b[7] * scale);
    out[8] = a[8] + (b[8] * scale);
    return out;
};

/*
 * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)
 *
 * @param {mat3} a The first matrix.
 * @param {mat3} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */
mat3.exactEquals = function (a, b) {
    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && 
           a[3] === b[3] && a[4] === b[4] && a[5] === b[5] &&
           a[6] === b[6] && a[7] === b[7] && a[8] === b[8];
};

/**
 * Returns whether or not the matrices have approximately the same elements in the same position.
 *
 * @param {mat3} a The first matrix.
 * @param {mat3} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */
mat3.equals = function (a, b) {
    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5], a6 = a[6], a7 = a[7], a8 = a[8];
    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = a[6], b7 = b[7], b8 = b[8];
    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&
            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&
            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&
            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&
            Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&
            Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&
            Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&
            Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&
            Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)));
};


module.exports = mat3;

},{"./common.js":109}],113:[function(require,module,exports){
/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE. */

var glMatrix = require("./common.js");

/**
 * @class 4x4 Matrix
 * @name mat4
 */
var mat4 = {
  scalar: {},
  SIMD: {},
};

/**
 * Creates a new identity mat4
 *
 * @returns {mat4} a new 4x4 matrix
 */
mat4.create = function() {
    var out = new glMatrix.ARRAY_TYPE(16);
    out[0] = 1;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 0;
    out[5] = 1;
    out[6] = 0;
    out[7] = 0;
    out[8] = 0;
    out[9] = 0;
    out[10] = 1;
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 1;
    return out;
};

/**
 * Creates a new mat4 initialized with values from an existing matrix
 *
 * @param {mat4} a matrix to clone
 * @returns {mat4} a new 4x4 matrix
 */
mat4.clone = function(a) {
    var out = new glMatrix.ARRAY_TYPE(16);
    out[0] = a[0];
    out[1] = a[1];
    out[2] = a[2];
    out[3] = a[3];
    out[4] = a[4];
    out[5] = a[5];
    out[6] = a[6];
    out[7] = a[7];
    out[8] = a[8];
    out[9] = a[9];
    out[10] = a[10];
    out[11] = a[11];
    out[12] = a[12];
    out[13] = a[13];
    out[14] = a[14];
    out[15] = a[15];
    return out;
};

/**
 * Copy the values from one mat4 to another
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the source matrix
 * @returns {mat4} out
 */
mat4.copy = function(out, a) {
    out[0] = a[0];
    out[1] = a[1];
    out[2] = a[2];
    out[3] = a[3];
    out[4] = a[4];
    out[5] = a[5];
    out[6] = a[6];
    out[7] = a[7];
    out[8] = a[8];
    out[9] = a[9];
    out[10] = a[10];
    out[11] = a[11];
    out[12] = a[12];
    out[13] = a[13];
    out[14] = a[14];
    out[15] = a[15];
    return out;
};

/**
 * Create a new mat4 with the given values
 *
 * @param {Number} m00 Component in column 0, row 0 position (index 0)
 * @param {Number} m01 Component in column 0, row 1 position (index 1)
 * @param {Number} m02 Component in column 0, row 2 position (index 2)
 * @param {Number} m03 Component in column 0, row 3 position (index 3)
 * @param {Number} m10 Component in column 1, row 0 position (index 4)
 * @param {Number} m11 Component in column 1, row 1 position (index 5)
 * @param {Number} m12 Component in column 1, row 2 position (index 6)
 * @param {Number} m13 Component in column 1, row 3 position (index 7)
 * @param {Number} m20 Component in column 2, row 0 position (index 8)
 * @param {Number} m21 Component in column 2, row 1 position (index 9)
 * @param {Number} m22 Component in column 2, row 2 position (index 10)
 * @param {Number} m23 Component in column 2, row 3 position (index 11)
 * @param {Number} m30 Component in column 3, row 0 position (index 12)
 * @param {Number} m31 Component in column 3, row 1 position (index 13)
 * @param {Number} m32 Component in column 3, row 2 position (index 14)
 * @param {Number} m33 Component in column 3, row 3 position (index 15)
 * @returns {mat4} A new mat4
 */
mat4.fromValues = function(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {
    var out = new glMatrix.ARRAY_TYPE(16);
    out[0] = m00;
    out[1] = m01;
    out[2] = m02;
    out[3] = m03;
    out[4] = m10;
    out[5] = m11;
    out[6] = m12;
    out[7] = m13;
    out[8] = m20;
    out[9] = m21;
    out[10] = m22;
    out[11] = m23;
    out[12] = m30;
    out[13] = m31;
    out[14] = m32;
    out[15] = m33;
    return out;
};

/**
 * Set the components of a mat4 to the given values
 *
 * @param {mat4} out the receiving matrix
 * @param {Number} m00 Component in column 0, row 0 position (index 0)
 * @param {Number} m01 Component in column 0, row 1 position (index 1)
 * @param {Number} m02 Component in column 0, row 2 position (index 2)
 * @param {Number} m03 Component in column 0, row 3 position (index 3)
 * @param {Number} m10 Component in column 1, row 0 position (index 4)
 * @param {Number} m11 Component in column 1, row 1 position (index 5)
 * @param {Number} m12 Component in column 1, row 2 position (index 6)
 * @param {Number} m13 Component in column 1, row 3 position (index 7)
 * @param {Number} m20 Component in column 2, row 0 position (index 8)
 * @param {Number} m21 Component in column 2, row 1 position (index 9)
 * @param {Number} m22 Component in column 2, row 2 position (index 10)
 * @param {Number} m23 Component in column 2, row 3 position (index 11)
 * @param {Number} m30 Component in column 3, row 0 position (index 12)
 * @param {Number} m31 Component in column 3, row 1 position (index 13)
 * @param {Number} m32 Component in column 3, row 2 position (index 14)
 * @param {Number} m33 Component in column 3, row 3 position (index 15)
 * @returns {mat4} out
 */
mat4.set = function(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {
    out[0] = m00;
    out[1] = m01;
    out[2] = m02;
    out[3] = m03;
    out[4] = m10;
    out[5] = m11;
    out[6] = m12;
    out[7] = m13;
    out[8] = m20;
    out[9] = m21;
    out[10] = m22;
    out[11] = m23;
    out[12] = m30;
    out[13] = m31;
    out[14] = m32;
    out[15] = m33;
    return out;
};


/**
 * Set a mat4 to the identity matrix
 *
 * @param {mat4} out the receiving matrix
 * @returns {mat4} out
 */
mat4.identity = function(out) {
    out[0] = 1;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 0;
    out[5] = 1;
    out[6] = 0;
    out[7] = 0;
    out[8] = 0;
    out[9] = 0;
    out[10] = 1;
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 1;
    return out;
};

/**
 * Transpose the values of a mat4 not using SIMD
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the source matrix
 * @returns {mat4} out
 */
mat4.scalar.transpose = function(out, a) {
    // If we are transposing ourselves we can skip a few steps but have to cache some values
    if (out === a) {
        var a01 = a[1], a02 = a[2], a03 = a[3],
            a12 = a[6], a13 = a[7],
            a23 = a[11];

        out[1] = a[4];
        out[2] = a[8];
        out[3] = a[12];
        out[4] = a01;
        out[6] = a[9];
        out[7] = a[13];
        out[8] = a02;
        out[9] = a12;
        out[11] = a[14];
        out[12] = a03;
        out[13] = a13;
        out[14] = a23;
    } else {
        out[0] = a[0];
        out[1] = a[4];
        out[2] = a[8];
        out[3] = a[12];
        out[4] = a[1];
        out[5] = a[5];
        out[6] = a[9];
        out[7] = a[13];
        out[8] = a[2];
        out[9] = a[6];
        out[10] = a[10];
        out[11] = a[14];
        out[12] = a[3];
        out[13] = a[7];
        out[14] = a[11];
        out[15] = a[15];
    }

    return out;
};

/**
 * Transpose the values of a mat4 using SIMD
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the source matrix
 * @returns {mat4} out
 */
mat4.SIMD.transpose = function(out, a) {
    var a0, a1, a2, a3,
        tmp01, tmp23,
        out0, out1, out2, out3;

    a0 = SIMD.Float32x4.load(a, 0);
    a1 = SIMD.Float32x4.load(a, 4);
    a2 = SIMD.Float32x4.load(a, 8);
    a3 = SIMD.Float32x4.load(a, 12);

    tmp01 = SIMD.Float32x4.shuffle(a0, a1, 0, 1, 4, 5);
    tmp23 = SIMD.Float32x4.shuffle(a2, a3, 0, 1, 4, 5);
    out0  = SIMD.Float32x4.shuffle(tmp01, tmp23, 0, 2, 4, 6);
    out1  = SIMD.Float32x4.shuffle(tmp01, tmp23, 1, 3, 5, 7);
    SIMD.Float32x4.store(out, 0,  out0);
    SIMD.Float32x4.store(out, 4,  out1);

    tmp01 = SIMD.Float32x4.shuffle(a0, a1, 2, 3, 6, 7);
    tmp23 = SIMD.Float32x4.shuffle(a2, a3, 2, 3, 6, 7);
    out2  = SIMD.Float32x4.shuffle(tmp01, tmp23, 0, 2, 4, 6);
    out3  = SIMD.Float32x4.shuffle(tmp01, tmp23, 1, 3, 5, 7);
    SIMD.Float32x4.store(out, 8,  out2);
    SIMD.Float32x4.store(out, 12, out3);

    return out;
};

/**
 * Transpse a mat4 using SIMD if available and enabled
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the source matrix
 * @returns {mat4} out
 */
mat4.transpose = glMatrix.USE_SIMD ? mat4.SIMD.transpose : mat4.scalar.transpose;

/**
 * Inverts a mat4 not using SIMD
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the source matrix
 * @returns {mat4} out
 */
mat4.scalar.invert = function(out, a) {
    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],
        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],
        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],
        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],

        b00 = a00 * a11 - a01 * a10,
        b01 = a00 * a12 - a02 * a10,
        b02 = a00 * a13 - a03 * a10,
        b03 = a01 * a12 - a02 * a11,
        b04 = a01 * a13 - a03 * a11,
        b05 = a02 * a13 - a03 * a12,
        b06 = a20 * a31 - a21 * a30,
        b07 = a20 * a32 - a22 * a30,
        b08 = a20 * a33 - a23 * a30,
        b09 = a21 * a32 - a22 * a31,
        b10 = a21 * a33 - a23 * a31,
        b11 = a22 * a33 - a23 * a32,

        // Calculate the determinant
        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;

    if (!det) {
        return null;
    }
    det = 1.0 / det;

    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;
    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;
    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;
    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;
    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;
    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;
    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;
    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;
    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;
    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;
    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;
    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;
    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;
    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;
    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;
    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;

    return out;
};

/**
 * Inverts a mat4 using SIMD
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the source matrix
 * @returns {mat4} out
 */
mat4.SIMD.invert = function(out, a) {
  var row0, row1, row2, row3,
      tmp1,
      minor0, minor1, minor2, minor3,
      det,
      a0 = SIMD.Float32x4.load(a, 0),
      a1 = SIMD.Float32x4.load(a, 4),
      a2 = SIMD.Float32x4.load(a, 8),
      a3 = SIMD.Float32x4.load(a, 12);

  // Compute matrix adjugate
  tmp1 = SIMD.Float32x4.shuffle(a0, a1, 0, 1, 4, 5);
  row1 = SIMD.Float32x4.shuffle(a2, a3, 0, 1, 4, 5);
  row0 = SIMD.Float32x4.shuffle(tmp1, row1, 0, 2, 4, 6);
  row1 = SIMD.Float32x4.shuffle(row1, tmp1, 1, 3, 5, 7);
  tmp1 = SIMD.Float32x4.shuffle(a0, a1, 2, 3, 6, 7);
  row3 = SIMD.Float32x4.shuffle(a2, a3, 2, 3, 6, 7);
  row2 = SIMD.Float32x4.shuffle(tmp1, row3, 0, 2, 4, 6);
  row3 = SIMD.Float32x4.shuffle(row3, tmp1, 1, 3, 5, 7);

  tmp1   = SIMD.Float32x4.mul(row2, row3);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
  minor0 = SIMD.Float32x4.mul(row1, tmp1);
  minor1 = SIMD.Float32x4.mul(row0, tmp1);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
  minor0 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row1, tmp1), minor0);
  minor1 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor1);
  minor1 = SIMD.Float32x4.swizzle(minor1, 2, 3, 0, 1);

  tmp1   = SIMD.Float32x4.mul(row1, row2);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
  minor0 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor0);
  minor3 = SIMD.Float32x4.mul(row0, tmp1);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
  minor0 = SIMD.Float32x4.sub(minor0, SIMD.Float32x4.mul(row3, tmp1));
  minor3 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor3);
  minor3 = SIMD.Float32x4.swizzle(minor3, 2, 3, 0, 1);

  tmp1   = SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(row1, 2, 3, 0, 1), row3);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
  row2   = SIMD.Float32x4.swizzle(row2, 2, 3, 0, 1);
  minor0 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row2, tmp1), minor0);
  minor2 = SIMD.Float32x4.mul(row0, tmp1);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
  minor0 = SIMD.Float32x4.sub(minor0, SIMD.Float32x4.mul(row2, tmp1));
  minor2 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor2);
  minor2 = SIMD.Float32x4.swizzle(minor2, 2, 3, 0, 1);

  tmp1   = SIMD.Float32x4.mul(row0, row1);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
  minor2 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor2);
  minor3 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row2, tmp1), minor3);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
  minor2 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row3, tmp1), minor2);
  minor3 = SIMD.Float32x4.sub(minor3, SIMD.Float32x4.mul(row2, tmp1));

  tmp1   = SIMD.Float32x4.mul(row0, row3);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
  minor1 = SIMD.Float32x4.sub(minor1, SIMD.Float32x4.mul(row2, tmp1));
  minor2 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row1, tmp1), minor2);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
  minor1 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row2, tmp1), minor1);
  minor2 = SIMD.Float32x4.sub(minor2, SIMD.Float32x4.mul(row1, tmp1));

  tmp1   = SIMD.Float32x4.mul(row0, row2);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
  minor1 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor1);
  minor3 = SIMD.Float32x4.sub(minor3, SIMD.Float32x4.mul(row1, tmp1));
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
  minor1 = SIMD.Float32x4.sub(minor1, SIMD.Float32x4.mul(row3, tmp1));
  minor3 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row1, tmp1), minor3);

  // Compute matrix determinant
  det   = SIMD.Float32x4.mul(row0, minor0);
  det   = SIMD.Float32x4.add(SIMD.Float32x4.swizzle(det, 2, 3, 0, 1), det);
  det   = SIMD.Float32x4.add(SIMD.Float32x4.swizzle(det, 1, 0, 3, 2), det);
  tmp1  = SIMD.Float32x4.reciprocalApproximation(det);
  det   = SIMD.Float32x4.sub(
               SIMD.Float32x4.add(tmp1, tmp1),
               SIMD.Float32x4.mul(det, SIMD.Float32x4.mul(tmp1, tmp1)));
  det   = SIMD.Float32x4.swizzle(det, 0, 0, 0, 0);
  if (!det) {
      return null;
  }

  // Compute matrix inverse
  SIMD.Float32x4.store(out, 0,  SIMD.Float32x4.mul(det, minor0));
  SIMD.Float32x4.store(out, 4,  SIMD.Float32x4.mul(det, minor1));
  SIMD.Float32x4.store(out, 8,  SIMD.Float32x4.mul(det, minor2));
  SIMD.Float32x4.store(out, 12, SIMD.Float32x4.mul(det, minor3));
  return out;
}

/**
 * Inverts a mat4 using SIMD if available and enabled
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the source matrix
 * @returns {mat4} out
 */
mat4.invert = glMatrix.USE_SIMD ? mat4.SIMD.invert : mat4.scalar.invert;

/**
 * Calculates the adjugate of a mat4 not using SIMD
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the source matrix
 * @returns {mat4} out
 */
mat4.scalar.adjoint = function(out, a) {
    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],
        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],
        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],
        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];

    out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));
    out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));
    out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));
    out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));
    out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));
    out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));
    out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));
    out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));
    out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));
    out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));
    out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));
    out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));
    out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));
    out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));
    out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));
    out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));
    return out;
};

/**
 * Calculates the adjugate of a mat4 using SIMD
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the source matrix
 * @returns {mat4} out
 */
mat4.SIMD.adjoint = function(out, a) {
  var a0, a1, a2, a3;
  var row0, row1, row2, row3;
  var tmp1;
  var minor0, minor1, minor2, minor3;

  var a0 = SIMD.Float32x4.load(a, 0);
  var a1 = SIMD.Float32x4.load(a, 4);
  var a2 = SIMD.Float32x4.load(a, 8);
  var a3 = SIMD.Float32x4.load(a, 12);

  // Transpose the source matrix.  Sort of.  Not a true transpose operation
  tmp1 = SIMD.Float32x4.shuffle(a0, a1, 0, 1, 4, 5);
  row1 = SIMD.Float32x4.shuffle(a2, a3, 0, 1, 4, 5);
  row0 = SIMD.Float32x4.shuffle(tmp1, row1, 0, 2, 4, 6);
  row1 = SIMD.Float32x4.shuffle(row1, tmp1, 1, 3, 5, 7);

  tmp1 = SIMD.Float32x4.shuffle(a0, a1, 2, 3, 6, 7);
  row3 = SIMD.Float32x4.shuffle(a2, a3, 2, 3, 6, 7);
  row2 = SIMD.Float32x4.shuffle(tmp1, row3, 0, 2, 4, 6);
  row3 = SIMD.Float32x4.shuffle(row3, tmp1, 1, 3, 5, 7);

  tmp1   = SIMD.Float32x4.mul(row2, row3);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
  minor0 = SIMD.Float32x4.mul(row1, tmp1);
  minor1 = SIMD.Float32x4.mul(row0, tmp1);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
  minor0 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row1, tmp1), minor0);
  minor1 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor1);
  minor1 = SIMD.Float32x4.swizzle(minor1, 2, 3, 0, 1);

  tmp1   = SIMD.Float32x4.mul(row1, row2);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
  minor0 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor0);
  minor3 = SIMD.Float32x4.mul(row0, tmp1);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
  minor0 = SIMD.Float32x4.sub(minor0, SIMD.Float32x4.mul(row3, tmp1));
  minor3 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor3);
  minor3 = SIMD.Float32x4.swizzle(minor3, 2, 3, 0, 1);

  tmp1   = SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(row1, 2, 3, 0, 1), row3);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
  row2   = SIMD.Float32x4.swizzle(row2, 2, 3, 0, 1);
  minor0 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row2, tmp1), minor0);
  minor2 = SIMD.Float32x4.mul(row0, tmp1);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
  minor0 = SIMD.Float32x4.sub(minor0, SIMD.Float32x4.mul(row2, tmp1));
  minor2 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor2);
  minor2 = SIMD.Float32x4.swizzle(minor2, 2, 3, 0, 1);

  tmp1   = SIMD.Float32x4.mul(row0, row1);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
  minor2 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor2);
  minor3 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row2, tmp1), minor3);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
  minor2 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row3, tmp1), minor2);
  minor3 = SIMD.Float32x4.sub(minor3, SIMD.Float32x4.mul(row2, tmp1));

  tmp1   = SIMD.Float32x4.mul(row0, row3);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
  minor1 = SIMD.Float32x4.sub(minor1, SIMD.Float32x4.mul(row2, tmp1));
  minor2 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row1, tmp1), minor2);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
  minor1 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row2, tmp1), minor1);
  minor2 = SIMD.Float32x4.sub(minor2, SIMD.Float32x4.mul(row1, tmp1));

  tmp1   = SIMD.Float32x4.mul(row0, row2);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
  minor1 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor1);
  minor3 = SIMD.Float32x4.sub(minor3, SIMD.Float32x4.mul(row1, tmp1));
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
  minor1 = SIMD.Float32x4.sub(minor1, SIMD.Float32x4.mul(row3, tmp1));
  minor3 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row1, tmp1), minor3);

  SIMD.Float32x4.store(out, 0,  minor0);
  SIMD.Float32x4.store(out, 4,  minor1);
  SIMD.Float32x4.store(out, 8,  minor2);
  SIMD.Float32x4.store(out, 12, minor3);
  return out;
};

/**
 * Calculates the adjugate of a mat4 using SIMD if available and enabled
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the source matrix
 * @returns {mat4} out
 */
 mat4.adjoint = glMatrix.USE_SIMD ? mat4.SIMD.adjoint : mat4.scalar.adjoint;

/**
 * Calculates the determinant of a mat4
 *
 * @param {mat4} a the source matrix
 * @returns {Number} determinant of a
 */
mat4.determinant = function (a) {
    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],
        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],
        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],
        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],

        b00 = a00 * a11 - a01 * a10,
        b01 = a00 * a12 - a02 * a10,
        b02 = a00 * a13 - a03 * a10,
        b03 = a01 * a12 - a02 * a11,
        b04 = a01 * a13 - a03 * a11,
        b05 = a02 * a13 - a03 * a12,
        b06 = a20 * a31 - a21 * a30,
        b07 = a20 * a32 - a22 * a30,
        b08 = a20 * a33 - a23 * a30,
        b09 = a21 * a32 - a22 * a31,
        b10 = a21 * a33 - a23 * a31,
        b11 = a22 * a33 - a23 * a32;

    // Calculate the determinant
    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
};

/**
 * Multiplies two mat4's explicitly using SIMD
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the first operand, must be a Float32Array
 * @param {mat4} b the second operand, must be a Float32Array
 * @returns {mat4} out
 */
mat4.SIMD.multiply = function (out, a, b) {
    var a0 = SIMD.Float32x4.load(a, 0);
    var a1 = SIMD.Float32x4.load(a, 4);
    var a2 = SIMD.Float32x4.load(a, 8);
    var a3 = SIMD.Float32x4.load(a, 12);

    var b0 = SIMD.Float32x4.load(b, 0);
    var out0 = SIMD.Float32x4.add(
                   SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b0, 0, 0, 0, 0), a0),
                   SIMD.Float32x4.add(
                       SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b0, 1, 1, 1, 1), a1),
                       SIMD.Float32x4.add(
                           SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b0, 2, 2, 2, 2), a2),
                           SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b0, 3, 3, 3, 3), a3))));
    SIMD.Float32x4.store(out, 0, out0);

    var b1 = SIMD.Float32x4.load(b, 4);
    var out1 = SIMD.Float32x4.add(
                   SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b1, 0, 0, 0, 0), a0),
                   SIMD.Float32x4.add(
                       SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b1, 1, 1, 1, 1), a1),
                       SIMD.Float32x4.add(
                           SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b1, 2, 2, 2, 2), a2),
                           SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b1, 3, 3, 3, 3), a3))));
    SIMD.Float32x4.store(out, 4, out1);

    var b2 = SIMD.Float32x4.load(b, 8);
    var out2 = SIMD.Float32x4.add(
                   SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b2, 0, 0, 0, 0), a0),
                   SIMD.Float32x4.add(
                       SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b2, 1, 1, 1, 1), a1),
                       SIMD.Float32x4.add(
                               SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b2, 2, 2, 2, 2), a2),
                               SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b2, 3, 3, 3, 3), a3))));
    SIMD.Float32x4.store(out, 8, out2);

    var b3 = SIMD.Float32x4.load(b, 12);
    var out3 = SIMD.Float32x4.add(
                   SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b3, 0, 0, 0, 0), a0),
                   SIMD.Float32x4.add(
                        SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b3, 1, 1, 1, 1), a1),
                        SIMD.Float32x4.add(
                            SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b3, 2, 2, 2, 2), a2),
                            SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b3, 3, 3, 3, 3), a3))));
    SIMD.Float32x4.store(out, 12, out3);

    return out;
};

/**
 * Multiplies two mat4's explicitly not using SIMD
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the first operand
 * @param {mat4} b the second operand
 * @returns {mat4} out
 */
mat4.scalar.multiply = function (out, a, b) {
    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],
        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],
        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],
        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];

    // Cache only the current line of the second matrix
    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];
    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;
    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;
    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;
    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;

    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];
    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;
    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;
    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;
    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;

    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];
    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;
    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;
    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;
    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;

    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];
    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;
    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;
    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;
    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;
    return out;
};

/**
 * Multiplies two mat4's using SIMD if available and enabled
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the first operand
 * @param {mat4} b the second operand
 * @returns {mat4} out
 */
mat4.multiply = glMatrix.USE_SIMD ? mat4.SIMD.multiply : mat4.scalar.multiply;

/**
 * Alias for {@link mat4.multiply}
 * @function
 */
mat4.mul = mat4.multiply;

/**
 * Translate a mat4 by the given vector not using SIMD
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to translate
 * @param {vec3} v vector to translate by
 * @returns {mat4} out
 */
mat4.scalar.translate = function (out, a, v) {
    var x = v[0], y = v[1], z = v[2],
        a00, a01, a02, a03,
        a10, a11, a12, a13,
        a20, a21, a22, a23;

    if (a === out) {
        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];
        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];
        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];
        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];
    } else {
        a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];
        a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];
        a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];

        out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;
        out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;
        out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;

        out[12] = a00 * x + a10 * y + a20 * z + a[12];
        out[13] = a01 * x + a11 * y + a21 * z + a[13];
        out[14] = a02 * x + a12 * y + a22 * z + a[14];
        out[15] = a03 * x + a13 * y + a23 * z + a[15];
    }

    return out;
};

/**
 * Translates a mat4 by the given vector using SIMD
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to translate
 * @param {vec3} v vector to translate by
 * @returns {mat4} out
 */
mat4.SIMD.translate = function (out, a, v) {
    var a0 = SIMD.Float32x4.load(a, 0),
        a1 = SIMD.Float32x4.load(a, 4),
        a2 = SIMD.Float32x4.load(a, 8),
        a3 = SIMD.Float32x4.load(a, 12),
        vec = SIMD.Float32x4(v[0], v[1], v[2] , 0);

    if (a !== out) {
        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];
        out[4] = a[4]; out[5] = a[5]; out[6] = a[6]; out[7] = a[7];
        out[8] = a[8]; out[9] = a[9]; out[10] = a[10]; out[11] = a[11];
    }

    a0 = SIMD.Float32x4.mul(a0, SIMD.Float32x4.swizzle(vec, 0, 0, 0, 0));
    a1 = SIMD.Float32x4.mul(a1, SIMD.Float32x4.swizzle(vec, 1, 1, 1, 1));
    a2 = SIMD.Float32x4.mul(a2, SIMD.Float32x4.swizzle(vec, 2, 2, 2, 2));

    var t0 = SIMD.Float32x4.add(a0, SIMD.Float32x4.add(a1, SIMD.Float32x4.add(a2, a3)));
    SIMD.Float32x4.store(out, 12, t0);

    return out;
};

/**
 * Translates a mat4 by the given vector using SIMD if available and enabled
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to translate
 * @param {vec3} v vector to translate by
 * @returns {mat4} out
 */
mat4.translate = glMatrix.USE_SIMD ? mat4.SIMD.translate : mat4.scalar.translate;

/**
 * Scales the mat4 by the dimensions in the given vec3 not using vectorization
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to scale
 * @param {vec3} v the vec3 to scale the matrix by
 * @returns {mat4} out
 **/
mat4.scalar.scale = function(out, a, v) {
    var x = v[0], y = v[1], z = v[2];

    out[0] = a[0] * x;
    out[1] = a[1] * x;
    out[2] = a[2] * x;
    out[3] = a[3] * x;
    out[4] = a[4] * y;
    out[5] = a[5] * y;
    out[6] = a[6] * y;
    out[7] = a[7] * y;
    out[8] = a[8] * z;
    out[9] = a[9] * z;
    out[10] = a[10] * z;
    out[11] = a[11] * z;
    out[12] = a[12];
    out[13] = a[13];
    out[14] = a[14];
    out[15] = a[15];
    return out;
};

/**
 * Scales the mat4 by the dimensions in the given vec3 using vectorization
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to scale
 * @param {vec3} v the vec3 to scale the matrix by
 * @returns {mat4} out
 **/
mat4.SIMD.scale = function(out, a, v) {
    var a0, a1, a2;
    var vec = SIMD.Float32x4(v[0], v[1], v[2], 0);

    a0 = SIMD.Float32x4.load(a, 0);
    SIMD.Float32x4.store(
        out, 0, SIMD.Float32x4.mul(a0, SIMD.Float32x4.swizzle(vec, 0, 0, 0, 0)));

    a1 = SIMD.Float32x4.load(a, 4);
    SIMD.Float32x4.store(
        out, 4, SIMD.Float32x4.mul(a1, SIMD.Float32x4.swizzle(vec, 1, 1, 1, 1)));

    a2 = SIMD.Float32x4.load(a, 8);
    SIMD.Float32x4.store(
        out, 8, SIMD.Float32x4.mul(a2, SIMD.Float32x4.swizzle(vec, 2, 2, 2, 2)));

    out[12] = a[12];
    out[13] = a[13];
    out[14] = a[14];
    out[15] = a[15];
    return out;
};

/**
 * Scales the mat4 by the dimensions in the given vec3 using SIMD if available and enabled
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to scale
 * @param {vec3} v the vec3 to scale the matrix by
 * @returns {mat4} out
 */
mat4.scale = glMatrix.USE_SIMD ? mat4.SIMD.scale : mat4.scalar.scale;

/**
 * Rotates a mat4 by the given angle around the given axis
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @param {vec3} axis the axis to rotate around
 * @returns {mat4} out
 */
mat4.rotate = function (out, a, rad, axis) {
    var x = axis[0], y = axis[1], z = axis[2],
        len = Math.sqrt(x * x + y * y + z * z),
        s, c, t,
        a00, a01, a02, a03,
        a10, a11, a12, a13,
        a20, a21, a22, a23,
        b00, b01, b02,
        b10, b11, b12,
        b20, b21, b22;

    if (Math.abs(len) < glMatrix.EPSILON) { return null; }

    len = 1 / len;
    x *= len;
    y *= len;
    z *= len;

    s = Math.sin(rad);
    c = Math.cos(rad);
    t = 1 - c;

    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];
    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];
    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];

    // Construct the elements of the rotation matrix
    b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;
    b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;
    b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;

    // Perform rotation-specific matrix multiplication
    out[0] = a00 * b00 + a10 * b01 + a20 * b02;
    out[1] = a01 * b00 + a11 * b01 + a21 * b02;
    out[2] = a02 * b00 + a12 * b01 + a22 * b02;
    out[3] = a03 * b00 + a13 * b01 + a23 * b02;
    out[4] = a00 * b10 + a10 * b11 + a20 * b12;
    out[5] = a01 * b10 + a11 * b11 + a21 * b12;
    out[6] = a02 * b10 + a12 * b11 + a22 * b12;
    out[7] = a03 * b10 + a13 * b11 + a23 * b12;
    out[8] = a00 * b20 + a10 * b21 + a20 * b22;
    out[9] = a01 * b20 + a11 * b21 + a21 * b22;
    out[10] = a02 * b20 + a12 * b21 + a22 * b22;
    out[11] = a03 * b20 + a13 * b21 + a23 * b22;

    if (a !== out) { // If the source and destination differ, copy the unchanged last row
        out[12] = a[12];
        out[13] = a[13];
        out[14] = a[14];
        out[15] = a[15];
    }
    return out;
};

/**
 * Rotates a matrix by the given angle around the X axis not using SIMD
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */
mat4.scalar.rotateX = function (out, a, rad) {
    var s = Math.sin(rad),
        c = Math.cos(rad),
        a10 = a[4],
        a11 = a[5],
        a12 = a[6],
        a13 = a[7],
        a20 = a[8],
        a21 = a[9],
        a22 = a[10],
        a23 = a[11];

    if (a !== out) { // If the source and destination differ, copy the unchanged rows
        out[0]  = a[0];
        out[1]  = a[1];
        out[2]  = a[2];
        out[3]  = a[3];
        out[12] = a[12];
        out[13] = a[13];
        out[14] = a[14];
        out[15] = a[15];
    }

    // Perform axis-specific matrix multiplication
    out[4] = a10 * c + a20 * s;
    out[5] = a11 * c + a21 * s;
    out[6] = a12 * c + a22 * s;
    out[7] = a13 * c + a23 * s;
    out[8] = a20 * c - a10 * s;
    out[9] = a21 * c - a11 * s;
    out[10] = a22 * c - a12 * s;
    out[11] = a23 * c - a13 * s;
    return out;
};

/**
 * Rotates a matrix by the given angle around the X axis using SIMD
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */
mat4.SIMD.rotateX = function (out, a, rad) {
    var s = SIMD.Float32x4.splat(Math.sin(rad)),
        c = SIMD.Float32x4.splat(Math.cos(rad));

    if (a !== out) { // If the source and destination differ, copy the unchanged rows
      out[0]  = a[0];
      out[1]  = a[1];
      out[2]  = a[2];
      out[3]  = a[3];
      out[12] = a[12];
      out[13] = a[13];
      out[14] = a[14];
      out[15] = a[15];
    }

    // Perform axis-specific matrix multiplication
    var a_1 = SIMD.Float32x4.load(a, 4);
    var a_2 = SIMD.Float32x4.load(a, 8);
    SIMD.Float32x4.store(out, 4,
                         SIMD.Float32x4.add(SIMD.Float32x4.mul(a_1, c), SIMD.Float32x4.mul(a_2, s)));
    SIMD.Float32x4.store(out, 8,
                         SIMD.Float32x4.sub(SIMD.Float32x4.mul(a_2, c), SIMD.Float32x4.mul(a_1, s)));
    return out;
};

/**
 * Rotates a matrix by the given angle around the X axis using SIMD if availabe and enabled
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */
mat4.rotateX = glMatrix.USE_SIMD ? mat4.SIMD.rotateX : mat4.scalar.rotateX;

/**
 * Rotates a matrix by the given angle around the Y axis not using SIMD
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */
mat4.scalar.rotateY = function (out, a, rad) {
    var s = Math.sin(rad),
        c = Math.cos(rad),
        a00 = a[0],
        a01 = a[1],
        a02 = a[2],
        a03 = a[3],
        a20 = a[8],
        a21 = a[9],
        a22 = a[10],
        a23 = a[11];

    if (a !== out) { // If the source and destination differ, copy the unchanged rows
        out[4]  = a[4];
        out[5]  = a[5];
        out[6]  = a[6];
        out[7]  = a[7];
        out[12] = a[12];
        out[13] = a[13];
        out[14] = a[14];
        out[15] = a[15];
    }

    // Perform axis-specific matrix multiplication
    out[0] = a00 * c - a20 * s;
    out[1] = a01 * c - a21 * s;
    out[2] = a02 * c - a22 * s;
    out[3] = a03 * c - a23 * s;
    out[8] = a00 * s + a20 * c;
    out[9] = a01 * s + a21 * c;
    out[10] = a02 * s + a22 * c;
    out[11] = a03 * s + a23 * c;
    return out;
};

/**
 * Rotates a matrix by the given angle around the Y axis using SIMD
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */
mat4.SIMD.rotateY = function (out, a, rad) {
    var s = SIMD.Float32x4.splat(Math.sin(rad)),
        c = SIMD.Float32x4.splat(Math.cos(rad));

    if (a !== out) { // If the source and destination differ, copy the unchanged rows
        out[4]  = a[4];
        out[5]  = a[5];
        out[6]  = a[6];
        out[7]  = a[7];
        out[12] = a[12];
        out[13] = a[13];
        out[14] = a[14];
        out[15] = a[15];
    }

    // Perform axis-specific matrix multiplication
    var a_0 = SIMD.Float32x4.load(a, 0);
    var a_2 = SIMD.Float32x4.load(a, 8);
    SIMD.Float32x4.store(out, 0,
                         SIMD.Float32x4.sub(SIMD.Float32x4.mul(a_0, c), SIMD.Float32x4.mul(a_2, s)));
    SIMD.Float32x4.store(out, 8,
                         SIMD.Float32x4.add(SIMD.Float32x4.mul(a_0, s), SIMD.Float32x4.mul(a_2, c)));
    return out;
};

/**
 * Rotates a matrix by the given angle around the Y axis if SIMD available and enabled
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */
 mat4.rotateY = glMatrix.USE_SIMD ? mat4.SIMD.rotateY : mat4.scalar.rotateY;

/**
 * Rotates a matrix by the given angle around the Z axis not using SIMD
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */
mat4.scalar.rotateZ = function (out, a, rad) {
    var s = Math.sin(rad),
        c = Math.cos(rad),
        a00 = a[0],
        a01 = a[1],
        a02 = a[2],
        a03 = a[3],
        a10 = a[4],
        a11 = a[5],
        a12 = a[6],
        a13 = a[7];

    if (a !== out) { // If the source and destination differ, copy the unchanged last row
        out[8]  = a[8];
        out[9]  = a[9];
        out[10] = a[10];
        out[11] = a[11];
        out[12] = a[12];
        out[13] = a[13];
        out[14] = a[14];
        out[15] = a[15];
    }

    // Perform axis-specific matrix multiplication
    out[0] = a00 * c + a10 * s;
    out[1] = a01 * c + a11 * s;
    out[2] = a02 * c + a12 * s;
    out[3] = a03 * c + a13 * s;
    out[4] = a10 * c - a00 * s;
    out[5] = a11 * c - a01 * s;
    out[6] = a12 * c - a02 * s;
    out[7] = a13 * c - a03 * s;
    return out;
};

/**
 * Rotates a matrix by the given angle around the Z axis using SIMD
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */
mat4.SIMD.rotateZ = function (out, a, rad) {
    var s = SIMD.Float32x4.splat(Math.sin(rad)),
        c = SIMD.Float32x4.splat(Math.cos(rad));

    if (a !== out) { // If the source and destination differ, copy the unchanged last row
        out[8]  = a[8];
        out[9]  = a[9];
        out[10] = a[10];
        out[11] = a[11];
        out[12] = a[12];
        out[13] = a[13];
        out[14] = a[14];
        out[15] = a[15];
    }

    // Perform axis-specific matrix multiplication
    var a_0 = SIMD.Float32x4.load(a, 0);
    var a_1 = SIMD.Float32x4.load(a, 4);
    SIMD.Float32x4.store(out, 0,
                         SIMD.Float32x4.add(SIMD.Float32x4.mul(a_0, c), SIMD.Float32x4.mul(a_1, s)));
    SIMD.Float32x4.store(out, 4,
                         SIMD.Float32x4.sub(SIMD.Float32x4.mul(a_1, c), SIMD.Float32x4.mul(a_0, s)));
    return out;
};

/**
 * Rotates a matrix by the given angle around the Z axis if SIMD available and enabled
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */
 mat4.rotateZ = glMatrix.USE_SIMD ? mat4.SIMD.rotateZ : mat4.scalar.rotateZ;

/**
 * Creates a matrix from a vector translation
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.translate(dest, dest, vec);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {vec3} v Translation vector
 * @returns {mat4} out
 */
mat4.fromTranslation = function(out, v) {
    out[0] = 1;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 0;
    out[5] = 1;
    out[6] = 0;
    out[7] = 0;
    out[8] = 0;
    out[9] = 0;
    out[10] = 1;
    out[11] = 0;
    out[12] = v[0];
    out[13] = v[1];
    out[14] = v[2];
    out[15] = 1;
    return out;
}

/**
 * Creates a matrix from a vector scaling
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.scale(dest, dest, vec);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {vec3} v Scaling vector
 * @returns {mat4} out
 */
mat4.fromScaling = function(out, v) {
    out[0] = v[0];
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 0;
    out[5] = v[1];
    out[6] = 0;
    out[7] = 0;
    out[8] = 0;
    out[9] = 0;
    out[10] = v[2];
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 1;
    return out;
}

/**
 * Creates a matrix from a given angle around a given axis
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.rotate(dest, dest, rad, axis);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @param {vec3} axis the axis to rotate around
 * @returns {mat4} out
 */
mat4.fromRotation = function(out, rad, axis) {
    var x = axis[0], y = axis[1], z = axis[2],
        len = Math.sqrt(x * x + y * y + z * z),
        s, c, t;

    if (Math.abs(len) < glMatrix.EPSILON) { return null; }

    len = 1 / len;
    x *= len;
    y *= len;
    z *= len;

    s = Math.sin(rad);
    c = Math.cos(rad);
    t = 1 - c;

    // Perform rotation-specific matrix multiplication
    out[0] = x * x * t + c;
    out[1] = y * x * t + z * s;
    out[2] = z * x * t - y * s;
    out[3] = 0;
    out[4] = x * y * t - z * s;
    out[5] = y * y * t + c;
    out[6] = z * y * t + x * s;
    out[7] = 0;
    out[8] = x * z * t + y * s;
    out[9] = y * z * t - x * s;
    out[10] = z * z * t + c;
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 1;
    return out;
}

/**
 * Creates a matrix from the given angle around the X axis
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.rotateX(dest, dest, rad);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */
mat4.fromXRotation = function(out, rad) {
    var s = Math.sin(rad),
        c = Math.cos(rad);

    // Perform axis-specific matrix multiplication
    out[0]  = 1;
    out[1]  = 0;
    out[2]  = 0;
    out[3]  = 0;
    out[4] = 0;
    out[5] = c;
    out[6] = s;
    out[7] = 0;
    out[8] = 0;
    out[9] = -s;
    out[10] = c;
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 1;
    return out;
}

/**
 * Creates a matrix from the given angle around the Y axis
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.rotateY(dest, dest, rad);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */
mat4.fromYRotation = function(out, rad) {
    var s = Math.sin(rad),
        c = Math.cos(rad);

    // Perform axis-specific matrix multiplication
    out[0]  = c;
    out[1]  = 0;
    out[2]  = -s;
    out[3]  = 0;
    out[4] = 0;
    out[5] = 1;
    out[6] = 0;
    out[7] = 0;
    out[8] = s;
    out[9] = 0;
    out[10] = c;
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 1;
    return out;
}

/**
 * Creates a matrix from the given angle around the Z axis
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.rotateZ(dest, dest, rad);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */
mat4.fromZRotation = function(out, rad) {
    var s = Math.sin(rad),
        c = Math.cos(rad);

    // Perform axis-specific matrix multiplication
    out[0]  = c;
    out[1]  = s;
    out[2]  = 0;
    out[3]  = 0;
    out[4] = -s;
    out[5] = c;
    out[6] = 0;
    out[7] = 0;
    out[8] = 0;
    out[9] = 0;
    out[10] = 1;
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 1;
    return out;
}

/**
 * Creates a matrix from a quaternion rotation and vector translation
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.translate(dest, vec);
 *     var quatMat = mat4.create();
 *     quat4.toMat4(quat, quatMat);
 *     mat4.multiply(dest, quatMat);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {quat4} q Rotation quaternion
 * @param {vec3} v Translation vector
 * @returns {mat4} out
 */
mat4.fromRotationTranslation = function (out, q, v) {
    // Quaternion math
    var x = q[0], y = q[1], z = q[2], w = q[3],
        x2 = x + x,
        y2 = y + y,
        z2 = z + z,

        xx = x * x2,
        xy = x * y2,
        xz = x * z2,
        yy = y * y2,
        yz = y * z2,
        zz = z * z2,
        wx = w * x2,
        wy = w * y2,
        wz = w * z2;

    out[0] = 1 - (yy + zz);
    out[1] = xy + wz;
    out[2] = xz - wy;
    out[3] = 0;
    out[4] = xy - wz;
    out[5] = 1 - (xx + zz);
    out[6] = yz + wx;
    out[7] = 0;
    out[8] = xz + wy;
    out[9] = yz - wx;
    out[10] = 1 - (xx + yy);
    out[11] = 0;
    out[12] = v[0];
    out[13] = v[1];
    out[14] = v[2];
    out[15] = 1;

    return out;
};

/**
 * Returns the translation vector component of a transformation
 *  matrix. If a matrix is built with fromRotationTranslation,
 *  the returned vector will be the same as the translation vector
 *  originally supplied.
 * @param  {vec3} out Vector to receive translation component
 * @param  {mat4} mat Matrix to be decomposed (input)
 * @return {vec3} out
 */
mat4.getTranslation = function (out, mat) {
  out[0] = mat[12];
  out[1] = mat[13];
  out[2] = mat[14];

  return out;
};

/**
 * Returns a quaternion representing the rotational component
 *  of a transformation matrix. If a matrix is built with
 *  fromRotationTranslation, the returned quaternion will be the
 *  same as the quaternion originally supplied.
 * @param {quat} out Quaternion to receive the rotation component
 * @param {mat4} mat Matrix to be decomposed (input)
 * @return {quat} out
 */
mat4.getRotation = function (out, mat) {
  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm
  var trace = mat[0] + mat[5] + mat[10];
  var S = 0;

  if (trace > 0) { 
    S = Math.sqrt(trace + 1.0) * 2;
    out[3] = 0.25 * S;
    out[0] = (mat[6] - mat[9]) / S;
    out[1] = (mat[8] - mat[2]) / S; 
    out[2] = (mat[1] - mat[4]) / S; 
  } else if ((mat[0] > mat[5])&(mat[0] > mat[10])) { 
    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;
    out[3] = (mat[6] - mat[9]) / S;
    out[0] = 0.25 * S;
    out[1] = (mat[1] + mat[4]) / S; 
    out[2] = (mat[8] + mat[2]) / S; 
  } else if (mat[5] > mat[10]) { 
    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;
    out[3] = (mat[8] - mat[2]) / S;
    out[0] = (mat[1] + mat[4]) / S; 
    out[1] = 0.25 * S;
    out[2] = (mat[6] + mat[9]) / S; 
  } else { 
    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;
    out[3] = (mat[1] - mat[4]) / S;
    out[0] = (mat[8] + mat[2]) / S;
    out[1] = (mat[6] + mat[9]) / S;
    out[2] = 0.25 * S;
  }

  return out;
};

/**
 * Creates a matrix from a quaternion rotation, vector translation and vector scale
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.translate(dest, vec);
 *     var quatMat = mat4.create();
 *     quat4.toMat4(quat, quatMat);
 *     mat4.multiply(dest, quatMat);
 *     mat4.scale(dest, scale)
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {quat4} q Rotation quaternion
 * @param {vec3} v Translation vector
 * @param {vec3} s Scaling vector
 * @returns {mat4} out
 */
mat4.fromRotationTranslationScale = function (out, q, v, s) {
    // Quaternion math
    var x = q[0], y = q[1], z = q[2], w = q[3],
        x2 = x + x,
        y2 = y + y,
        z2 = z + z,

        xx = x * x2,
        xy = x * y2,
        xz = x * z2,
        yy = y * y2,
        yz = y * z2,
        zz = z * z2,
        wx = w * x2,
        wy = w * y2,
        wz = w * z2,
        sx = s[0],
        sy = s[1],
        sz = s[2];

    out[0] = (1 - (yy + zz)) * sx;
    out[1] = (xy + wz) * sx;
    out[2] = (xz - wy) * sx;
    out[3] = 0;
    out[4] = (xy - wz) * sy;
    out[5] = (1 - (xx + zz)) * sy;
    out[6] = (yz + wx) * sy;
    out[7] = 0;
    out[8] = (xz + wy) * sz;
    out[9] = (yz - wx) * sz;
    out[10] = (1 - (xx + yy)) * sz;
    out[11] = 0;
    out[12] = v[0];
    out[13] = v[1];
    out[14] = v[2];
    out[15] = 1;

    return out;
};

/**
 * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.translate(dest, vec);
 *     mat4.translate(dest, origin);
 *     var quatMat = mat4.create();
 *     quat4.toMat4(quat, quatMat);
 *     mat4.multiply(dest, quatMat);
 *     mat4.scale(dest, scale)
 *     mat4.translate(dest, negativeOrigin);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {quat4} q Rotation quaternion
 * @param {vec3} v Translation vector
 * @param {vec3} s Scaling vector
 * @param {vec3} o The origin vector around which to scale and rotate
 * @returns {mat4} out
 */
mat4.fromRotationTranslationScaleOrigin = function (out, q, v, s, o) {
  // Quaternion math
  var x = q[0], y = q[1], z = q[2], w = q[3],
      x2 = x + x,
      y2 = y + y,
      z2 = z + z,

      xx = x * x2,
      xy = x * y2,
      xz = x * z2,
      yy = y * y2,
      yz = y * z2,
      zz = z * z2,
      wx = w * x2,
      wy = w * y2,
      wz = w * z2,

      sx = s[0],
      sy = s[1],
      sz = s[2],

      ox = o[0],
      oy = o[1],
      oz = o[2];

  out[0] = (1 - (yy + zz)) * sx;
  out[1] = (xy + wz) * sx;
  out[2] = (xz - wy) * sx;
  out[3] = 0;
  out[4] = (xy - wz) * sy;
  out[5] = (1 - (xx + zz)) * sy;
  out[6] = (yz + wx) * sy;
  out[7] = 0;
  out[8] = (xz + wy) * sz;
  out[9] = (yz - wx) * sz;
  out[10] = (1 - (xx + yy)) * sz;
  out[11] = 0;
  out[12] = v[0] + ox - (out[0] * ox + out[4] * oy + out[8] * oz);
  out[13] = v[1] + oy - (out[1] * ox + out[5] * oy + out[9] * oz);
  out[14] = v[2] + oz - (out[2] * ox + out[6] * oy + out[10] * oz);
  out[15] = 1;

  return out;
};

/**
 * Calculates a 4x4 matrix from the given quaternion
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {quat} q Quaternion to create matrix from
 *
 * @returns {mat4} out
 */
mat4.fromQuat = function (out, q) {
    var x = q[0], y = q[1], z = q[2], w = q[3],
        x2 = x + x,
        y2 = y + y,
        z2 = z + z,

        xx = x * x2,
        yx = y * x2,
        yy = y * y2,
        zx = z * x2,
        zy = z * y2,
        zz = z * z2,
        wx = w * x2,
        wy = w * y2,
        wz = w * z2;

    out[0] = 1 - yy - zz;
    out[1] = yx + wz;
    out[2] = zx - wy;
    out[3] = 0;

    out[4] = yx - wz;
    out[5] = 1 - xx - zz;
    out[6] = zy + wx;
    out[7] = 0;

    out[8] = zx + wy;
    out[9] = zy - wx;
    out[10] = 1 - xx - yy;
    out[11] = 0;

    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 1;

    return out;
};

/**
 * Generates a frustum matrix with the given bounds
 *
 * @param {mat4} out mat4 frustum matrix will be written into
 * @param {Number} left Left bound of the frustum
 * @param {Number} right Right bound of the frustum
 * @param {Number} bottom Bottom bound of the frustum
 * @param {Number} top Top bound of the frustum
 * @param {Number} near Near bound of the frustum
 * @param {Number} far Far bound of the frustum
 * @returns {mat4} out
 */
mat4.frustum = function (out, left, right, bottom, top, near, far) {
    var rl = 1 / (right - left),
        tb = 1 / (top - bottom),
        nf = 1 / (near - far);
    out[0] = (near * 2) * rl;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 0;
    out[5] = (near * 2) * tb;
    out[6] = 0;
    out[7] = 0;
    out[8] = (right + left) * rl;
    out[9] = (top + bottom) * tb;
    out[10] = (far + near) * nf;
    out[11] = -1;
    out[12] = 0;
    out[13] = 0;
    out[14] = (far * near * 2) * nf;
    out[15] = 0;
    return out;
};

/**
 * Generates a perspective projection matrix with the given bounds
 *
 * @param {mat4} out mat4 frustum matrix will be written into
 * @param {number} fovy Vertical field of view in radians
 * @param {number} aspect Aspect ratio. typically viewport width/height
 * @param {number} near Near bound of the frustum
 * @param {number} far Far bound of the frustum
 * @returns {mat4} out
 */
mat4.perspective = function (out, fovy, aspect, near, far) {
    var f = 1.0 / Math.tan(fovy / 2),
        nf = 1 / (near - far);
    out[0] = f / aspect;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 0;
    out[5] = f;
    out[6] = 0;
    out[7] = 0;
    out[8] = 0;
    out[9] = 0;
    out[10] = (far + near) * nf;
    out[11] = -1;
    out[12] = 0;
    out[13] = 0;
    out[14] = (2 * far * near) * nf;
    out[15] = 0;
    return out;
};

/**
 * Generates a perspective projection matrix with the given field of view.
 * This is primarily useful for generating projection matrices to be used
 * with the still experiemental WebVR API.
 *
 * @param {mat4} out mat4 frustum matrix will be written into
 * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees
 * @param {number} near Near bound of the frustum
 * @param {number} far Far bound of the frustum
 * @returns {mat4} out
 */
mat4.perspectiveFromFieldOfView = function (out, fov, near, far) {
    var upTan = Math.tan(fov.upDegrees * Math.PI/180.0),
        downTan = Math.tan(fov.downDegrees * Math.PI/180.0),
        leftTan = Math.tan(fov.leftDegrees * Math.PI/180.0),
        rightTan = Math.tan(fov.rightDegrees * Math.PI/180.0),
        xScale = 2.0 / (leftTan + rightTan),
        yScale = 2.0 / (upTan + downTan);

    out[0] = xScale;
    out[1] = 0.0;
    out[2] = 0.0;
    out[3] = 0.0;
    out[4] = 0.0;
    out[5] = yScale;
    out[6] = 0.0;
    out[7] = 0.0;
    out[8] = -((leftTan - rightTan) * xScale * 0.5);
    out[9] = ((upTan - downTan) * yScale * 0.5);
    out[10] = far / (near - far);
    out[11] = -1.0;
    out[12] = 0.0;
    out[13] = 0.0;
    out[14] = (far * near) / (near - far);
    out[15] = 0.0;
    return out;
}

/**
 * Generates a orthogonal projection matrix with the given bounds
 *
 * @param {mat4} out mat4 frustum matrix will be written into
 * @param {number} left Left bound of the frustum
 * @param {number} right Right bound of the frustum
 * @param {number} bottom Bottom bound of the frustum
 * @param {number} top Top bound of the frustum
 * @param {number} near Near bound of the frustum
 * @param {number} far Far bound of the frustum
 * @returns {mat4} out
 */
mat4.ortho = function (out, left, right, bottom, top, near, far) {
    var lr = 1 / (left - right),
        bt = 1 / (bottom - top),
        nf = 1 / (near - far);
    out[0] = -2 * lr;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 0;
    out[5] = -2 * bt;
    out[6] = 0;
    out[7] = 0;
    out[8] = 0;
    out[9] = 0;
    out[10] = 2 * nf;
    out[11] = 0;
    out[12] = (left + right) * lr;
    out[13] = (top + bottom) * bt;
    out[14] = (far + near) * nf;
    out[15] = 1;
    return out;
};

/**
 * Generates a look-at matrix with the given eye position, focal point, and up axis
 *
 * @param {mat4} out mat4 frustum matrix will be written into
 * @param {vec3} eye Position of the viewer
 * @param {vec3} center Point the viewer is looking at
 * @param {vec3} up vec3 pointing up
 * @returns {mat4} out
 */
mat4.lookAt = function (out, eye, center, up) {
    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len,
        eyex = eye[0],
        eyey = eye[1],
        eyez = eye[2],
        upx = up[0],
        upy = up[1],
        upz = up[2],
        centerx = center[0],
        centery = center[1],
        centerz = center[2];

    if (Math.abs(eyex - centerx) < glMatrix.EPSILON &&
        Math.abs(eyey - centery) < glMatrix.EPSILON &&
        Math.abs(eyez - centerz) < glMatrix.EPSILON) {
        return mat4.identity(out);
    }

    z0 = eyex - centerx;
    z1 = eyey - centery;
    z2 = eyez - centerz;

    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);
    z0 *= len;
    z1 *= len;
    z2 *= len;

    x0 = upy * z2 - upz * z1;
    x1 = upz * z0 - upx * z2;
    x2 = upx * z1 - upy * z0;
    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);
    if (!len) {
        x0 = 0;
        x1 = 0;
        x2 = 0;
    } else {
        len = 1 / len;
        x0 *= len;
        x1 *= len;
        x2 *= len;
    }

    y0 = z1 * x2 - z2 * x1;
    y1 = z2 * x0 - z0 * x2;
    y2 = z0 * x1 - z1 * x0;

    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);
    if (!len) {
        y0 = 0;
        y1 = 0;
        y2 = 0;
    } else {
        len = 1 / len;
        y0 *= len;
        y1 *= len;
        y2 *= len;
    }

    out[0] = x0;
    out[1] = y0;
    out[2] = z0;
    out[3] = 0;
    out[4] = x1;
    out[5] = y1;
    out[6] = z1;
    out[7] = 0;
    out[8] = x2;
    out[9] = y2;
    out[10] = z2;
    out[11] = 0;
    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);
    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);
    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);
    out[15] = 1;

    return out;
};

/**
 * Returns a string representation of a mat4
 *
 * @param {mat4} mat matrix to represent as a string
 * @returns {String} string representation of the matrix
 */
mat4.str = function (a) {
    return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +
                    a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' +
                    a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' +
                    a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';
};

/**
 * Returns Frobenius norm of a mat4
 *
 * @param {mat4} a the matrix to calculate Frobenius norm of
 * @returns {Number} Frobenius norm
 */
mat4.frob = function (a) {
    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2) ))
};

/**
 * Adds two mat4's
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the first operand
 * @param {mat4} b the second operand
 * @returns {mat4} out
 */
mat4.add = function(out, a, b) {
    out[0] = a[0] + b[0];
    out[1] = a[1] + b[1];
    out[2] = a[2] + b[2];
    out[3] = a[3] + b[3];
    out[4] = a[4] + b[4];
    out[5] = a[5] + b[5];
    out[6] = a[6] + b[6];
    out[7] = a[7] + b[7];
    out[8] = a[8] + b[8];
    out[9] = a[9] + b[9];
    out[10] = a[10] + b[10];
    out[11] = a[11] + b[11];
    out[12] = a[12] + b[12];
    out[13] = a[13] + b[13];
    out[14] = a[14] + b[14];
    out[15] = a[15] + b[15];
    return out;
};

/**
 * Subtracts matrix b from matrix a
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the first operand
 * @param {mat4} b the second operand
 * @returns {mat4} out
 */
mat4.subtract = function(out, a, b) {
    out[0] = a[0] - b[0];
    out[1] = a[1] - b[1];
    out[2] = a[2] - b[2];
    out[3] = a[3] - b[3];
    out[4] = a[4] - b[4];
    out[5] = a[5] - b[5];
    out[6] = a[6] - b[6];
    out[7] = a[7] - b[7];
    out[8] = a[8] - b[8];
    out[9] = a[9] - b[9];
    out[10] = a[10] - b[10];
    out[11] = a[11] - b[11];
    out[12] = a[12] - b[12];
    out[13] = a[13] - b[13];
    out[14] = a[14] - b[14];
    out[15] = a[15] - b[15];
    return out;
};

/**
 * Alias for {@link mat4.subtract}
 * @function
 */
mat4.sub = mat4.subtract;

/**
 * Multiply each element of the matrix by a scalar.
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to scale
 * @param {Number} b amount to scale the matrix's elements by
 * @returns {mat4} out
 */
mat4.multiplyScalar = function(out, a, b) {
    out[0] = a[0] * b;
    out[1] = a[1] * b;
    out[2] = a[2] * b;
    out[3] = a[3] * b;
    out[4] = a[4] * b;
    out[5] = a[5] * b;
    out[6] = a[6] * b;
    out[7] = a[7] * b;
    out[8] = a[8] * b;
    out[9] = a[9] * b;
    out[10] = a[10] * b;
    out[11] = a[11] * b;
    out[12] = a[12] * b;
    out[13] = a[13] * b;
    out[14] = a[14] * b;
    out[15] = a[15] * b;
    return out;
};

/**
 * Adds two mat4's after multiplying each element of the second operand by a scalar value.
 *
 * @param {mat4} out the receiving vector
 * @param {mat4} a the first operand
 * @param {mat4} b the second operand
 * @param {Number} scale the amount to scale b's elements by before adding
 * @returns {mat4} out
 */
mat4.multiplyScalarAndAdd = function(out, a, b, scale) {
    out[0] = a[0] + (b[0] * scale);
    out[1] = a[1] + (b[1] * scale);
    out[2] = a[2] + (b[2] * scale);
    out[3] = a[3] + (b[3] * scale);
    out[4] = a[4] + (b[4] * scale);
    out[5] = a[5] + (b[5] * scale);
    out[6] = a[6] + (b[6] * scale);
    out[7] = a[7] + (b[7] * scale);
    out[8] = a[8] + (b[8] * scale);
    out[9] = a[9] + (b[9] * scale);
    out[10] = a[10] + (b[10] * scale);
    out[11] = a[11] + (b[11] * scale);
    out[12] = a[12] + (b[12] * scale);
    out[13] = a[13] + (b[13] * scale);
    out[14] = a[14] + (b[14] * scale);
    out[15] = a[15] + (b[15] * scale);
    return out;
};

/**
 * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)
 *
 * @param {mat4} a The first matrix.
 * @param {mat4} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */
mat4.exactEquals = function (a, b) {
    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && 
           a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && 
           a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] &&
           a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];
};

/**
 * Returns whether or not the matrices have approximately the same elements in the same position.
 *
 * @param {mat4} a The first matrix.
 * @param {mat4} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */
mat4.equals = function (a, b) {
    var a0  = a[0],  a1  = a[1],  a2  = a[2],  a3  = a[3],
        a4  = a[4],  a5  = a[5],  a6  = a[6],  a7  = a[7], 
        a8  = a[8],  a9  = a[9],  a10 = a[10], a11 = a[11], 
        a12 = a[12], a13 = a[13], a14 = a[14], a15 = a[15];

    var b0  = b[0],  b1  = b[1],  b2  = b[2],  b3  = b[3],
        b4  = b[4],  b5  = b[5],  b6  = b[6],  b7  = b[7], 
        b8  = b[8],  b9  = b[9],  b10 = b[10], b11 = b[11], 
        b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];

    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&
            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&
            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&
            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&
            Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&
            Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&
            Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&
            Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&
            Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)) &&
            Math.abs(a9 - b9) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a9), Math.abs(b9)) &&
            Math.abs(a10 - b10) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a10), Math.abs(b10)) &&
            Math.abs(a11 - b11) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a11), Math.abs(b11)) &&
            Math.abs(a12 - b12) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a12), Math.abs(b12)) &&
            Math.abs(a13 - b13) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a13), Math.abs(b13)) &&
            Math.abs(a14 - b14) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a14), Math.abs(b14)) &&
            Math.abs(a15 - b15) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a15), Math.abs(b15)));
};



module.exports = mat4;

},{"./common.js":109}],114:[function(require,module,exports){
/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE. */

var glMatrix = require("./common.js");
var mat3 = require("./mat3.js");
var vec3 = require("./vec3.js");
var vec4 = require("./vec4.js");

/**
 * @class Quaternion
 * @name quat
 */
var quat = {};

/**
 * Creates a new identity quat
 *
 * @returns {quat} a new quaternion
 */
quat.create = function() {
    var out = new glMatrix.ARRAY_TYPE(4);
    out[0] = 0;
    out[1] = 0;
    out[2] = 0;
    out[3] = 1;
    return out;
};

/**
 * Sets a quaternion to represent the shortest rotation from one
 * vector to another.
 *
 * Both vectors are assumed to be unit length.
 *
 * @param {quat} out the receiving quaternion.
 * @param {vec3} a the initial vector
 * @param {vec3} b the destination vector
 * @returns {quat} out
 */
quat.rotationTo = (function() {
    var tmpvec3 = vec3.create();
    var xUnitVec3 = vec3.fromValues(1,0,0);
    var yUnitVec3 = vec3.fromValues(0,1,0);

    return function(out, a, b) {
        var dot = vec3.dot(a, b);
        if (dot < -0.999999) {
            vec3.cross(tmpvec3, xUnitVec3, a);
            if (vec3.length(tmpvec3) < 0.000001)
                vec3.cross(tmpvec3, yUnitVec3, a);
            vec3.normalize(tmpvec3, tmpvec3);
            quat.setAxisAngle(out, tmpvec3, Math.PI);
            return out;
        } else if (dot > 0.999999) {
            out[0] = 0;
            out[1] = 0;
            out[2] = 0;
            out[3] = 1;
            return out;
        } else {
            vec3.cross(tmpvec3, a, b);
            out[0] = tmpvec3[0];
            out[1] = tmpvec3[1];
            out[2] = tmpvec3[2];
            out[3] = 1 + dot;
            return quat.normalize(out, out);
        }
    };
})();

/**
 * Sets the specified quaternion with values corresponding to the given
 * axes. Each axis is a vec3 and is expected to be unit length and
 * perpendicular to all other specified axes.
 *
 * @param {vec3} view  the vector representing the viewing direction
 * @param {vec3} right the vector representing the local "right" direction
 * @param {vec3} up    the vector representing the local "up" direction
 * @returns {quat} out
 */
quat.setAxes = (function() {
    var matr = mat3.create();

    return function(out, view, right, up) {
        matr[0] = right[0];
        matr[3] = right[1];
        matr[6] = right[2];

        matr[1] = up[0];
        matr[4] = up[1];
        matr[7] = up[2];

        matr[2] = -view[0];
        matr[5] = -view[1];
        matr[8] = -view[2];

        return quat.normalize(out, quat.fromMat3(out, matr));
    };
})();

/**
 * Creates a new quat initialized with values from an existing quaternion
 *
 * @param {quat} a quaternion to clone
 * @returns {quat} a new quaternion
 * @function
 */
quat.clone = vec4.clone;

/**
 * Creates a new quat initialized with the given values
 *
 * @param {Number} x X component
 * @param {Number} y Y component
 * @param {Number} z Z component
 * @param {Number} w W component
 * @returns {quat} a new quaternion
 * @function
 */
quat.fromValues = vec4.fromValues;

/**
 * Copy the values from one quat to another
 *
 * @param {quat} out the receiving quaternion
 * @param {quat} a the source quaternion
 * @returns {quat} out
 * @function
 */
quat.copy = vec4.copy;

/**
 * Set the components of a quat to the given values
 *
 * @param {quat} out the receiving quaternion
 * @param {Number} x X component
 * @param {Number} y Y component
 * @param {Number} z Z component
 * @param {Number} w W component
 * @returns {quat} out
 * @function
 */
quat.set = vec4.set;

/**
 * Set a quat to the identity quaternion
 *
 * @param {quat} out the receiving quaternion
 * @returns {quat} out
 */
quat.identity = function(out) {
    out[0] = 0;
    out[1] = 0;
    out[2] = 0;
    out[3] = 1;
    return out;
};

/**
 * Sets a quat from the given angle and rotation axis,
 * then returns it.
 *
 * @param {quat} out the receiving quaternion
 * @param {vec3} axis the axis around which to rotate
 * @param {Number} rad the angle in radians
 * @returns {quat} out
 **/
quat.setAxisAngle = function(out, axis, rad) {
    rad = rad * 0.5;
    var s = Math.sin(rad);
    out[0] = s * axis[0];
    out[1] = s * axis[1];
    out[2] = s * axis[2];
    out[3] = Math.cos(rad);
    return out;
};

/**
 * Gets the rotation axis and angle for a given
 *  quaternion. If a quaternion is created with
 *  setAxisAngle, this method will return the same
 *  values as providied in the original parameter list
 *  OR functionally equivalent values.
 * Example: The quaternion formed by axis [0, 0, 1] and
 *  angle -90 is the same as the quaternion formed by
 *  [0, 0, 1] and 270. This method favors the latter.
 * @param  {vec3} out_axis  Vector receiving the axis of rotation
 * @param  {quat} q     Quaternion to be decomposed
 * @return {Number}     Angle, in radians, of the rotation
 */
quat.getAxisAngle = function(out_axis, q) {
    var rad = Math.acos(q[3]) * 2.0;
    var s = Math.sin(rad / 2.0);
    if (s != 0.0) {
        out_axis[0] = q[0] / s;
        out_axis[1] = q[1] / s;
        out_axis[2] = q[2] / s;
    } else {
        // If s is zero, return any axis (no rotation - axis does not matter)
        out_axis[0] = 1;
        out_axis[1] = 0;
        out_axis[2] = 0;
    }
    return rad;
};

/**
 * Adds two quat's
 *
 * @param {quat} out the receiving quaternion
 * @param {quat} a the first operand
 * @param {quat} b the second operand
 * @returns {quat} out
 * @function
 */
quat.add = vec4.add;

/**
 * Multiplies two quat's
 *
 * @param {quat} out the receiving quaternion
 * @param {quat} a the first operand
 * @param {quat} b the second operand
 * @returns {quat} out
 */
quat.multiply = function(out, a, b) {
    var ax = a[0], ay = a[1], az = a[2], aw = a[3],
        bx = b[0], by = b[1], bz = b[2], bw = b[3];

    out[0] = ax * bw + aw * bx + ay * bz - az * by;
    out[1] = ay * bw + aw * by + az * bx - ax * bz;
    out[2] = az * bw + aw * bz + ax * by - ay * bx;
    out[3] = aw * bw - ax * bx - ay * by - az * bz;
    return out;
};

/**
 * Alias for {@link quat.multiply}
 * @function
 */
quat.mul = quat.multiply;

/**
 * Scales a quat by a scalar number
 *
 * @param {quat} out the receiving vector
 * @param {quat} a the vector to scale
 * @param {Number} b amount to scale the vector by
 * @returns {quat} out
 * @function
 */
quat.scale = vec4.scale;

/**
 * Rotates a quaternion by the given angle about the X axis
 *
 * @param {quat} out quat receiving operation result
 * @param {quat} a quat to rotate
 * @param {number} rad angle (in radians) to rotate
 * @returns {quat} out
 */
quat.rotateX = function (out, a, rad) {
    rad *= 0.5; 

    var ax = a[0], ay = a[1], az = a[2], aw = a[3],
        bx = Math.sin(rad), bw = Math.cos(rad);

    out[0] = ax * bw + aw * bx;
    out[1] = ay * bw + az * bx;
    out[2] = az * bw - ay * bx;
    out[3] = aw * bw - ax * bx;
    return out;
};

/**
 * Rotates a quaternion by the given angle about the Y axis
 *
 * @param {quat} out quat receiving operation result
 * @param {quat} a quat to rotate
 * @param {number} rad angle (in radians) to rotate
 * @returns {quat} out
 */
quat.rotateY = function (out, a, rad) {
    rad *= 0.5; 

    var ax = a[0], ay = a[1], az = a[2], aw = a[3],
        by = Math.sin(rad), bw = Math.cos(rad);

    out[0] = ax * bw - az * by;
    out[1] = ay * bw + aw * by;
    out[2] = az * bw + ax * by;
    out[3] = aw * bw - ay * by;
    return out;
};

/**
 * Rotates a quaternion by the given angle about the Z axis
 *
 * @param {quat} out quat receiving operation result
 * @param {quat} a quat to rotate
 * @param {number} rad angle (in radians) to rotate
 * @returns {quat} out
 */
quat.rotateZ = function (out, a, rad) {
    rad *= 0.5; 

    var ax = a[0], ay = a[1], az = a[2], aw = a[3],
        bz = Math.sin(rad), bw = Math.cos(rad);

    out[0] = ax * bw + ay * bz;
    out[1] = ay * bw - ax * bz;
    out[2] = az * bw + aw * bz;
    out[3] = aw * bw - az * bz;
    return out;
};

/**
 * Calculates the W component of a quat from the X, Y, and Z components.
 * Assumes that quaternion is 1 unit in length.
 * Any existing W component will be ignored.
 *
 * @param {quat} out the receiving quaternion
 * @param {quat} a quat to calculate W component of
 * @returns {quat} out
 */
quat.calculateW = function (out, a) {
    var x = a[0], y = a[1], z = a[2];

    out[0] = x;
    out[1] = y;
    out[2] = z;
    out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));
    return out;
};

/**
 * Calculates the dot product of two quat's
 *
 * @param {quat} a the first operand
 * @param {quat} b the second operand
 * @returns {Number} dot product of a and b
 * @function
 */
quat.dot = vec4.dot;

/**
 * Performs a linear interpolation between two quat's
 *
 * @param {quat} out the receiving quaternion
 * @param {quat} a the first operand
 * @param {quat} b the second operand
 * @param {Number} t interpolation amount between the two inputs
 * @returns {quat} out
 * @function
 */
quat.lerp = vec4.lerp;

/**
 * Performs a spherical linear interpolation between two quat
 *
 * @param {quat} out the receiving quaternion
 * @param {quat} a the first operand
 * @param {quat} b the second operand
 * @param {Number} t interpolation amount between the two inputs
 * @returns {quat} out
 */
quat.slerp = function (out, a, b, t) {
    // benchmarks:
    //    http://jsperf.com/quaternion-slerp-implementations

    var ax = a[0], ay = a[1], az = a[2], aw = a[3],
        bx = b[0], by = b[1], bz = b[2], bw = b[3];

    var        omega, cosom, sinom, scale0, scale1;

    // calc cosine
    cosom = ax * bx + ay * by + az * bz + aw * bw;
    // adjust signs (if necessary)
    if ( cosom < 0.0 ) {
        cosom = -cosom;
        bx = - bx;
        by = - by;
        bz = - bz;
        bw = - bw;
    }
    // calculate coefficients
    if ( (1.0 - cosom) > 0.000001 ) {
        // standard case (slerp)
        omega  = Math.acos(cosom);
        sinom  = Math.sin(omega);
        scale0 = Math.sin((1.0 - t) * omega) / sinom;
        scale1 = Math.sin(t * omega) / sinom;
    } else {        
        // "from" and "to" quaternions are very close 
        //  ... so we can do a linear interpolation
        scale0 = 1.0 - t;
        scale1 = t;
    }
    // calculate final values
    out[0] = scale0 * ax + scale1 * bx;
    out[1] = scale0 * ay + scale1 * by;
    out[2] = scale0 * az + scale1 * bz;
    out[3] = scale0 * aw + scale1 * bw;
    
    return out;
};

/**
 * Performs a spherical linear interpolation with two control points
 *
 * @param {quat} out the receiving quaternion
 * @param {quat} a the first operand
 * @param {quat} b the second operand
 * @param {quat} c the third operand
 * @param {quat} d the fourth operand
 * @param {Number} t interpolation amount
 * @returns {quat} out
 */
quat.sqlerp = (function () {
  var temp1 = quat.create();
  var temp2 = quat.create();
  
  return function (out, a, b, c, d, t) {
    quat.slerp(temp1, a, d, t);
    quat.slerp(temp2, b, c, t);
    quat.slerp(out, temp1, temp2, 2 * t * (1 - t));
    
    return out;
  };
}());

/**
 * Calculates the inverse of a quat
 *
 * @param {quat} out the receiving quaternion
 * @param {quat} a quat to calculate inverse of
 * @returns {quat} out
 */
quat.invert = function(out, a) {
    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],
        dot = a0*a0 + a1*a1 + a2*a2 + a3*a3,
        invDot = dot ? 1.0/dot : 0;
    
    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0

    out[0] = -a0*invDot;
    out[1] = -a1*invDot;
    out[2] = -a2*invDot;
    out[3] = a3*invDot;
    return out;
};

/**
 * Calculates the conjugate of a quat
 * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.
 *
 * @param {quat} out the receiving quaternion
 * @param {quat} a quat to calculate conjugate of
 * @returns {quat} out
 */
quat.conjugate = function (out, a) {
    out[0] = -a[0];
    out[1] = -a[1];
    out[2] = -a[2];
    out[3] = a[3];
    return out;
};

/**
 * Calculates the length of a quat
 *
 * @param {quat} a vector to calculate length of
 * @returns {Number} length of a
 * @function
 */
quat.length = vec4.length;

/**
 * Alias for {@link quat.length}
 * @function
 */
quat.len = quat.length;

/**
 * Calculates the squared length of a quat
 *
 * @param {quat} a vector to calculate squared length of
 * @returns {Number} squared length of a
 * @function
 */
quat.squaredLength = vec4.squaredLength;

/**
 * Alias for {@link quat.squaredLength}
 * @function
 */
quat.sqrLen = quat.squaredLength;

/**
 * Normalize a quat
 *
 * @param {quat} out the receiving quaternion
 * @param {quat} a quaternion to normalize
 * @returns {quat} out
 * @function
 */
quat.normalize = vec4.normalize;

/**
 * Creates a quaternion from the given 3x3 rotation matrix.
 *
 * NOTE: The resultant quaternion is not normalized, so you should be sure
 * to renormalize the quaternion yourself where necessary.
 *
 * @param {quat} out the receiving quaternion
 * @param {mat3} m rotation matrix
 * @returns {quat} out
 * @function
 */
quat.fromMat3 = function(out, m) {
    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes
    // article "Quaternion Calculus and Fast Animation".
    var fTrace = m[0] + m[4] + m[8];
    var fRoot;

    if ( fTrace > 0.0 ) {
        // |w| > 1/2, may as well choose w > 1/2
        fRoot = Math.sqrt(fTrace + 1.0);  // 2w
        out[3] = 0.5 * fRoot;
        fRoot = 0.5/fRoot;  // 1/(4w)
        out[0] = (m[5]-m[7])*fRoot;
        out[1] = (m[6]-m[2])*fRoot;
        out[2] = (m[1]-m[3])*fRoot;
    } else {
        // |w| <= 1/2
        var i = 0;
        if ( m[4] > m[0] )
          i = 1;
        if ( m[8] > m[i*3+i] )
          i = 2;
        var j = (i+1)%3;
        var k = (i+2)%3;
        
        fRoot = Math.sqrt(m[i*3+i]-m[j*3+j]-m[k*3+k] + 1.0);
        out[i] = 0.5 * fRoot;
        fRoot = 0.5 / fRoot;
        out[3] = (m[j*3+k] - m[k*3+j]) * fRoot;
        out[j] = (m[j*3+i] + m[i*3+j]) * fRoot;
        out[k] = (m[k*3+i] + m[i*3+k]) * fRoot;
    }
    
    return out;
};

/**
 * Returns a string representation of a quatenion
 *
 * @param {quat} vec vector to represent as a string
 * @returns {String} string representation of the vector
 */
quat.str = function (a) {
    return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';
};

/**
 * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)
 *
 * @param {quat} a The first quaternion.
 * @param {quat} b The second quaternion.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */
quat.exactEquals = vec4.exactEquals;

/**
 * Returns whether or not the quaternions have approximately the same elements in the same position.
 *
 * @param {quat} a The first vector.
 * @param {quat} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */
quat.equals = vec4.equals;

module.exports = quat;

},{"./common.js":109,"./mat3.js":112,"./vec3.js":116,"./vec4.js":117}],115:[function(require,module,exports){
/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE. */

var glMatrix = require("./common.js");

/**
 * @class 2 Dimensional Vector
 * @name vec2
 */
var vec2 = {};

/**
 * Creates a new, empty vec2
 *
 * @returns {vec2} a new 2D vector
 */
vec2.create = function() {
    var out = new glMatrix.ARRAY_TYPE(2);
    out[0] = 0;
    out[1] = 0;
    return out;
};

/**
 * Creates a new vec2 initialized with values from an existing vector
 *
 * @param {vec2} a vector to clone
 * @returns {vec2} a new 2D vector
 */
vec2.clone = function(a) {
    var out = new glMatrix.ARRAY_TYPE(2);
    out[0] = a[0];
    out[1] = a[1];
    return out;
};

/**
 * Creates a new vec2 initialized with the given values
 *
 * @param {Number} x X component
 * @param {Number} y Y component
 * @returns {vec2} a new 2D vector
 */
vec2.fromValues = function(x, y) {
    var out = new glMatrix.ARRAY_TYPE(2);
    out[0] = x;
    out[1] = y;
    return out;
};

/**
 * Copy the values from one vec2 to another
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the source vector
 * @returns {vec2} out
 */
vec2.copy = function(out, a) {
    out[0] = a[0];
    out[1] = a[1];
    return out;
};

/**
 * Set the components of a vec2 to the given values
 *
 * @param {vec2} out the receiving vector
 * @param {Number} x X component
 * @param {Number} y Y component
 * @returns {vec2} out
 */
vec2.set = function(out, x, y) {
    out[0] = x;
    out[1] = y;
    return out;
};

/**
 * Adds two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @returns {vec2} out
 */
vec2.add = function(out, a, b) {
    out[0] = a[0] + b[0];
    out[1] = a[1] + b[1];
    return out;
};

/**
 * Subtracts vector b from vector a
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @returns {vec2} out
 */
vec2.subtract = function(out, a, b) {
    out[0] = a[0] - b[0];
    out[1] = a[1] - b[1];
    return out;
};

/**
 * Alias for {@link vec2.subtract}
 * @function
 */
vec2.sub = vec2.subtract;

/**
 * Multiplies two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @returns {vec2} out
 */
vec2.multiply = function(out, a, b) {
    out[0] = a[0] * b[0];
    out[1] = a[1] * b[1];
    return out;
};

/**
 * Alias for {@link vec2.multiply}
 * @function
 */
vec2.mul = vec2.multiply;

/**
 * Divides two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @returns {vec2} out
 */
vec2.divide = function(out, a, b) {
    out[0] = a[0] / b[0];
    out[1] = a[1] / b[1];
    return out;
};

/**
 * Alias for {@link vec2.divide}
 * @function
 */
vec2.div = vec2.divide;

/**
 * Math.ceil the components of a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a vector to ceil
 * @returns {vec2} out
 */
vec2.ceil = function (out, a) {
    out[0] = Math.ceil(a[0]);
    out[1] = Math.ceil(a[1]);
    return out;
};

/**
 * Math.floor the components of a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a vector to floor
 * @returns {vec2} out
 */
vec2.floor = function (out, a) {
    out[0] = Math.floor(a[0]);
    out[1] = Math.floor(a[1]);
    return out;
};

/**
 * Returns the minimum of two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @returns {vec2} out
 */
vec2.min = function(out, a, b) {
    out[0] = Math.min(a[0], b[0]);
    out[1] = Math.min(a[1], b[1]);
    return out;
};

/**
 * Returns the maximum of two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @returns {vec2} out
 */
vec2.max = function(out, a, b) {
    out[0] = Math.max(a[0], b[0]);
    out[1] = Math.max(a[1], b[1]);
    return out;
};

/**
 * Math.round the components of a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a vector to round
 * @returns {vec2} out
 */
vec2.round = function (out, a) {
    out[0] = Math.round(a[0]);
    out[1] = Math.round(a[1]);
    return out;
};

/**
 * Scales a vec2 by a scalar number
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the vector to scale
 * @param {Number} b amount to scale the vector by
 * @returns {vec2} out
 */
vec2.scale = function(out, a, b) {
    out[0] = a[0] * b;
    out[1] = a[1] * b;
    return out;
};

/**
 * Adds two vec2's after scaling the second operand by a scalar value
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @param {Number} scale the amount to scale b by before adding
 * @returns {vec2} out
 */
vec2.scaleAndAdd = function(out, a, b, scale) {
    out[0] = a[0] + (b[0] * scale);
    out[1] = a[1] + (b[1] * scale);
    return out;
};

/**
 * Calculates the euclidian distance between two vec2's
 *
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @returns {Number} distance between a and b
 */
vec2.distance = function(a, b) {
    var x = b[0] - a[0],
        y = b[1] - a[1];
    return Math.sqrt(x*x + y*y);
};

/**
 * Alias for {@link vec2.distance}
 * @function
 */
vec2.dist = vec2.distance;

/**
 * Calculates the squared euclidian distance between two vec2's
 *
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @returns {Number} squared distance between a and b
 */
vec2.squaredDistance = function(a, b) {
    var x = b[0] - a[0],
        y = b[1] - a[1];
    return x*x + y*y;
};

/**
 * Alias for {@link vec2.squaredDistance}
 * @function
 */
vec2.sqrDist = vec2.squaredDistance;

/**
 * Calculates the length of a vec2
 *
 * @param {vec2} a vector to calculate length of
 * @returns {Number} length of a
 */
vec2.length = function (a) {
    var x = a[0],
        y = a[1];
    return Math.sqrt(x*x + y*y);
};

/**
 * Alias for {@link vec2.length}
 * @function
 */
vec2.len = vec2.length;

/**
 * Calculates the squared length of a vec2
 *
 * @param {vec2} a vector to calculate squared length of
 * @returns {Number} squared length of a
 */
vec2.squaredLength = function (a) {
    var x = a[0],
        y = a[1];
    return x*x + y*y;
};

/**
 * Alias for {@link vec2.squaredLength}
 * @function
 */
vec2.sqrLen = vec2.squaredLength;

/**
 * Negates the components of a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a vector to negate
 * @returns {vec2} out
 */
vec2.negate = function(out, a) {
    out[0] = -a[0];
    out[1] = -a[1];
    return out;
};

/**
 * Returns the inverse of the components of a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a vector to invert
 * @returns {vec2} out
 */
vec2.inverse = function(out, a) {
  out[0] = 1.0 / a[0];
  out[1] = 1.0 / a[1];
  return out;
};

/**
 * Normalize a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a vector to normalize
 * @returns {vec2} out
 */
vec2.normalize = function(out, a) {
    var x = a[0],
        y = a[1];
    var len = x*x + y*y;
    if (len > 0) {
        //TODO: evaluate use of glm_invsqrt here?
        len = 1 / Math.sqrt(len);
        out[0] = a[0] * len;
        out[1] = a[1] * len;
    }
    return out;
};

/**
 * Calculates the dot product of two vec2's
 *
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @returns {Number} dot product of a and b
 */
vec2.dot = function (a, b) {
    return a[0] * b[0] + a[1] * b[1];
};

/**
 * Computes the cross product of two vec2's
 * Note that the cross product must by definition produce a 3D vector
 *
 * @param {vec3} out the receiving vector
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @returns {vec3} out
 */
vec2.cross = function(out, a, b) {
    var z = a[0] * b[1] - a[1] * b[0];
    out[0] = out[1] = 0;
    out[2] = z;
    return out;
};

/**
 * Performs a linear interpolation between two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @param {Number} t interpolation amount between the two inputs
 * @returns {vec2} out
 */
vec2.lerp = function (out, a, b, t) {
    var ax = a[0],
        ay = a[1];
    out[0] = ax + t * (b[0] - ax);
    out[1] = ay + t * (b[1] - ay);
    return out;
};

/**
 * Generates a random vector with the given scale
 *
 * @param {vec2} out the receiving vector
 * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned
 * @returns {vec2} out
 */
vec2.random = function (out, scale) {
    scale = scale || 1.0;
    var r = glMatrix.RANDOM() * 2.0 * Math.PI;
    out[0] = Math.cos(r) * scale;
    out[1] = Math.sin(r) * scale;
    return out;
};

/**
 * Transforms the vec2 with a mat2
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the vector to transform
 * @param {mat2} m matrix to transform with
 * @returns {vec2} out
 */
vec2.transformMat2 = function(out, a, m) {
    var x = a[0],
        y = a[1];
    out[0] = m[0] * x + m[2] * y;
    out[1] = m[1] * x + m[3] * y;
    return out;
};

/**
 * Transforms the vec2 with a mat2d
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the vector to transform
 * @param {mat2d} m matrix to transform with
 * @returns {vec2} out
 */
vec2.transformMat2d = function(out, a, m) {
    var x = a[0],
        y = a[1];
    out[0] = m[0] * x + m[2] * y + m[4];
    out[1] = m[1] * x + m[3] * y + m[5];
    return out;
};

/**
 * Transforms the vec2 with a mat3
 * 3rd vector component is implicitly '1'
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the vector to transform
 * @param {mat3} m matrix to transform with
 * @returns {vec2} out
 */
vec2.transformMat3 = function(out, a, m) {
    var x = a[0],
        y = a[1];
    out[0] = m[0] * x + m[3] * y + m[6];
    out[1] = m[1] * x + m[4] * y + m[7];
    return out;
};

/**
 * Transforms the vec2 with a mat4
 * 3rd vector component is implicitly '0'
 * 4th vector component is implicitly '1'
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the vector to transform
 * @param {mat4} m matrix to transform with
 * @returns {vec2} out
 */
vec2.transformMat4 = function(out, a, m) {
    var x = a[0], 
        y = a[1];
    out[0] = m[0] * x + m[4] * y + m[12];
    out[1] = m[1] * x + m[5] * y + m[13];
    return out;
};

/**
 * Perform some operation over an array of vec2s.
 *
 * @param {Array} a the array of vectors to iterate over
 * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed
 * @param {Number} offset Number of elements to skip at the beginning of the array
 * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array
 * @param {Function} fn Function to call for each vector in the array
 * @param {Object} [arg] additional argument to pass to fn
 * @returns {Array} a
 * @function
 */
vec2.forEach = (function() {
    var vec = vec2.create();

    return function(a, stride, offset, count, fn, arg) {
        var i, l;
        if(!stride) {
            stride = 2;
        }

        if(!offset) {
            offset = 0;
        }
        
        if(count) {
            l = Math.min((count * stride) + offset, a.length);
        } else {
            l = a.length;
        }

        for(i = offset; i < l; i += stride) {
            vec[0] = a[i]; vec[1] = a[i+1];
            fn(vec, vec, arg);
            a[i] = vec[0]; a[i+1] = vec[1];
        }
        
        return a;
    };
})();

/**
 * Returns a string representation of a vector
 *
 * @param {vec2} vec vector to represent as a string
 * @returns {String} string representation of the vector
 */
vec2.str = function (a) {
    return 'vec2(' + a[0] + ', ' + a[1] + ')';
};

/**
 * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)
 *
 * @param {vec2} a The first vector.
 * @param {vec2} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */
vec2.exactEquals = function (a, b) {
    return a[0] === b[0] && a[1] === b[1];
};

/**
 * Returns whether or not the vectors have approximately the same elements in the same position.
 *
 * @param {vec2} a The first vector.
 * @param {vec2} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */
vec2.equals = function (a, b) {
    var a0 = a[0], a1 = a[1];
    var b0 = b[0], b1 = b[1];
    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&
            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)));
};

module.exports = vec2;

},{"./common.js":109}],116:[function(require,module,exports){
/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE. */

var glMatrix = require("./common.js");

/**
 * @class 3 Dimensional Vector
 * @name vec3
 */
var vec3 = {};

/**
 * Creates a new, empty vec3
 *
 * @returns {vec3} a new 3D vector
 */
vec3.create = function() {
    var out = new glMatrix.ARRAY_TYPE(3);
    out[0] = 0;
    out[1] = 0;
    out[2] = 0;
    return out;
};

/**
 * Creates a new vec3 initialized with values from an existing vector
 *
 * @param {vec3} a vector to clone
 * @returns {vec3} a new 3D vector
 */
vec3.clone = function(a) {
    var out = new glMatrix.ARRAY_TYPE(3);
    out[0] = a[0];
    out[1] = a[1];
    out[2] = a[2];
    return out;
};

/**
 * Creates a new vec3 initialized with the given values
 *
 * @param {Number} x X component
 * @param {Number} y Y component
 * @param {Number} z Z component
 * @returns {vec3} a new 3D vector
 */
vec3.fromValues = function(x, y, z) {
    var out = new glMatrix.ARRAY_TYPE(3);
    out[0] = x;
    out[1] = y;
    out[2] = z;
    return out;
};

/**
 * Copy the values from one vec3 to another
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the source vector
 * @returns {vec3} out
 */
vec3.copy = function(out, a) {
    out[0] = a[0];
    out[1] = a[1];
    out[2] = a[2];
    return out;
};

/**
 * Set the components of a vec3 to the given values
 *
 * @param {vec3} out the receiving vector
 * @param {Number} x X component
 * @param {Number} y Y component
 * @param {Number} z Z component
 * @returns {vec3} out
 */
vec3.set = function(out, x, y, z) {
    out[0] = x;
    out[1] = y;
    out[2] = z;
    return out;
};

/**
 * Adds two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @returns {vec3} out
 */
vec3.add = function(out, a, b) {
    out[0] = a[0] + b[0];
    out[1] = a[1] + b[1];
    out[2] = a[2] + b[2];
    return out;
};

/**
 * Subtracts vector b from vector a
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @returns {vec3} out
 */
vec3.subtract = function(out, a, b) {
    out[0] = a[0] - b[0];
    out[1] = a[1] - b[1];
    out[2] = a[2] - b[2];
    return out;
};

/**
 * Alias for {@link vec3.subtract}
 * @function
 */
vec3.sub = vec3.subtract;

/**
 * Multiplies two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @returns {vec3} out
 */
vec3.multiply = function(out, a, b) {
    out[0] = a[0] * b[0];
    out[1] = a[1] * b[1];
    out[2] = a[2] * b[2];
    return out;
};

/**
 * Alias for {@link vec3.multiply}
 * @function
 */
vec3.mul = vec3.multiply;

/**
 * Divides two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @returns {vec3} out
 */
vec3.divide = function(out, a, b) {
    out[0] = a[0] / b[0];
    out[1] = a[1] / b[1];
    out[2] = a[2] / b[2];
    return out;
};

/**
 * Alias for {@link vec3.divide}
 * @function
 */
vec3.div = vec3.divide;

/**
 * Math.ceil the components of a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a vector to ceil
 * @returns {vec3} out
 */
vec3.ceil = function (out, a) {
    out[0] = Math.ceil(a[0]);
    out[1] = Math.ceil(a[1]);
    out[2] = Math.ceil(a[2]);
    return out;
};

/**
 * Math.floor the components of a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a vector to floor
 * @returns {vec3} out
 */
vec3.floor = function (out, a) {
    out[0] = Math.floor(a[0]);
    out[1] = Math.floor(a[1]);
    out[2] = Math.floor(a[2]);
    return out;
};

/**
 * Returns the minimum of two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @returns {vec3} out
 */
vec3.min = function(out, a, b) {
    out[0] = Math.min(a[0], b[0]);
    out[1] = Math.min(a[1], b[1]);
    out[2] = Math.min(a[2], b[2]);
    return out;
};

/**
 * Returns the maximum of two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @returns {vec3} out
 */
vec3.max = function(out, a, b) {
    out[0] = Math.max(a[0], b[0]);
    out[1] = Math.max(a[1], b[1]);
    out[2] = Math.max(a[2], b[2]);
    return out;
};

/**
 * Math.round the components of a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a vector to round
 * @returns {vec3} out
 */
vec3.round = function (out, a) {
    out[0] = Math.round(a[0]);
    out[1] = Math.round(a[1]);
    out[2] = Math.round(a[2]);
    return out;
};

/**
 * Scales a vec3 by a scalar number
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the vector to scale
 * @param {Number} b amount to scale the vector by
 * @returns {vec3} out
 */
vec3.scale = function(out, a, b) {
    out[0] = a[0] * b;
    out[1] = a[1] * b;
    out[2] = a[2] * b;
    return out;
};

/**
 * Adds two vec3's after scaling the second operand by a scalar value
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @param {Number} scale the amount to scale b by before adding
 * @returns {vec3} out
 */
vec3.scaleAndAdd = function(out, a, b, scale) {
    out[0] = a[0] + (b[0] * scale);
    out[1] = a[1] + (b[1] * scale);
    out[2] = a[2] + (b[2] * scale);
    return out;
};

/**
 * Calculates the euclidian distance between two vec3's
 *
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @returns {Number} distance between a and b
 */
vec3.distance = function(a, b) {
    var x = b[0] - a[0],
        y = b[1] - a[1],
        z = b[2] - a[2];
    return Math.sqrt(x*x + y*y + z*z);
};

/**
 * Alias for {@link vec3.distance}
 * @function
 */
vec3.dist = vec3.distance;

/**
 * Calculates the squared euclidian distance between two vec3's
 *
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @returns {Number} squared distance between a and b
 */
vec3.squaredDistance = function(a, b) {
    var x = b[0] - a[0],
        y = b[1] - a[1],
        z = b[2] - a[2];
    return x*x + y*y + z*z;
};

/**
 * Alias for {@link vec3.squaredDistance}
 * @function
 */
vec3.sqrDist = vec3.squaredDistance;

/**
 * Calculates the length of a vec3
 *
 * @param {vec3} a vector to calculate length of
 * @returns {Number} length of a
 */
vec3.length = function (a) {
    var x = a[0],
        y = a[1],
        z = a[2];
    return Math.sqrt(x*x + y*y + z*z);
};

/**
 * Alias for {@link vec3.length}
 * @function
 */
vec3.len = vec3.length;

/**
 * Calculates the squared length of a vec3
 *
 * @param {vec3} a vector to calculate squared length of
 * @returns {Number} squared length of a
 */
vec3.squaredLength = function (a) {
    var x = a[0],
        y = a[1],
        z = a[2];
    return x*x + y*y + z*z;
};

/**
 * Alias for {@link vec3.squaredLength}
 * @function
 */
vec3.sqrLen = vec3.squaredLength;

/**
 * Negates the components of a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a vector to negate
 * @returns {vec3} out
 */
vec3.negate = function(out, a) {
    out[0] = -a[0];
    out[1] = -a[1];
    out[2] = -a[2];
    return out;
};

/**
 * Returns the inverse of the components of a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a vector to invert
 * @returns {vec3} out
 */
vec3.inverse = function(out, a) {
  out[0] = 1.0 / a[0];
  out[1] = 1.0 / a[1];
  out[2] = 1.0 / a[2];
  return out;
};

/**
 * Normalize a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a vector to normalize
 * @returns {vec3} out
 */
vec3.normalize = function(out, a) {
    var x = a[0],
        y = a[1],
        z = a[2];
    var len = x*x + y*y + z*z;
    if (len > 0) {
        //TODO: evaluate use of glm_invsqrt here?
        len = 1 / Math.sqrt(len);
        out[0] = a[0] * len;
        out[1] = a[1] * len;
        out[2] = a[2] * len;
    }
    return out;
};

/**
 * Calculates the dot product of two vec3's
 *
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @returns {Number} dot product of a and b
 */
vec3.dot = function (a, b) {
    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
};

/**
 * Computes the cross product of two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @returns {vec3} out
 */
vec3.cross = function(out, a, b) {
    var ax = a[0], ay = a[1], az = a[2],
        bx = b[0], by = b[1], bz = b[2];

    out[0] = ay * bz - az * by;
    out[1] = az * bx - ax * bz;
    out[2] = ax * by - ay * bx;
    return out;
};

/**
 * Performs a linear interpolation between two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @param {Number} t interpolation amount between the two inputs
 * @returns {vec3} out
 */
vec3.lerp = function (out, a, b, t) {
    var ax = a[0],
        ay = a[1],
        az = a[2];
    out[0] = ax + t * (b[0] - ax);
    out[1] = ay + t * (b[1] - ay);
    out[2] = az + t * (b[2] - az);
    return out;
};

/**
 * Performs a hermite interpolation with two control points
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @param {vec3} c the third operand
 * @param {vec3} d the fourth operand
 * @param {Number} t interpolation amount between the two inputs
 * @returns {vec3} out
 */
vec3.hermite = function (out, a, b, c, d, t) {
  var factorTimes2 = t * t,
      factor1 = factorTimes2 * (2 * t - 3) + 1,
      factor2 = factorTimes2 * (t - 2) + t,
      factor3 = factorTimes2 * (t - 1),
      factor4 = factorTimes2 * (3 - 2 * t);
  
  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;
  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;
  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;
  
  return out;
};

/**
 * Performs a bezier interpolation with two control points
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @param {vec3} c the third operand
 * @param {vec3} d the fourth operand
 * @param {Number} t interpolation amount between the two inputs
 * @returns {vec3} out
 */
vec3.bezier = function (out, a, b, c, d, t) {
  var inverseFactor = 1 - t,
      inverseFactorTimesTwo = inverseFactor * inverseFactor,
      factorTimes2 = t * t,
      factor1 = inverseFactorTimesTwo * inverseFactor,
      factor2 = 3 * t * inverseFactorTimesTwo,
      factor3 = 3 * factorTimes2 * inverseFactor,
      factor4 = factorTimes2 * t;
  
  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;
  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;
  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;
  
  return out;
};

/**
 * Generates a random vector with the given scale
 *
 * @param {vec3} out the receiving vector
 * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned
 * @returns {vec3} out
 */
vec3.random = function (out, scale) {
    scale = scale || 1.0;

    var r = glMatrix.RANDOM() * 2.0 * Math.PI;
    var z = (glMatrix.RANDOM() * 2.0) - 1.0;
    var zScale = Math.sqrt(1.0-z*z) * scale;

    out[0] = Math.cos(r) * zScale;
    out[1] = Math.sin(r) * zScale;
    out[2] = z * scale;
    return out;
};

/**
 * Transforms the vec3 with a mat4.
 * 4th vector component is implicitly '1'
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the vector to transform
 * @param {mat4} m matrix to transform with
 * @returns {vec3} out
 */
vec3.transformMat4 = function(out, a, m) {
    var x = a[0], y = a[1], z = a[2],
        w = m[3] * x + m[7] * y + m[11] * z + m[15];
    w = w || 1.0;
    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;
    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;
    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;
    return out;
};

/**
 * Transforms the vec3 with a mat3.
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the vector to transform
 * @param {mat4} m the 3x3 matrix to transform with
 * @returns {vec3} out
 */
vec3.transformMat3 = function(out, a, m) {
    var x = a[0], y = a[1], z = a[2];
    out[0] = x * m[0] + y * m[3] + z * m[6];
    out[1] = x * m[1] + y * m[4] + z * m[7];
    out[2] = x * m[2] + y * m[5] + z * m[8];
    return out;
};

/**
 * Transforms the vec3 with a quat
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the vector to transform
 * @param {quat} q quaternion to transform with
 * @returns {vec3} out
 */
vec3.transformQuat = function(out, a, q) {
    // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations

    var x = a[0], y = a[1], z = a[2],
        qx = q[0], qy = q[1], qz = q[2], qw = q[3],

        // calculate quat * vec
        ix = qw * x + qy * z - qz * y,
        iy = qw * y + qz * x - qx * z,
        iz = qw * z + qx * y - qy * x,
        iw = -qx * x - qy * y - qz * z;

    // calculate result * inverse quat
    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;
    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;
    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;
    return out;
};

/**
 * Rotate a 3D vector around the x-axis
 * @param {vec3} out The receiving vec3
 * @param {vec3} a The vec3 point to rotate
 * @param {vec3} b The origin of the rotation
 * @param {Number} c The angle of rotation
 * @returns {vec3} out
 */
vec3.rotateX = function(out, a, b, c){
   var p = [], r=[];
	  //Translate point to the origin
	  p[0] = a[0] - b[0];
	  p[1] = a[1] - b[1];
  	p[2] = a[2] - b[2];

	  //perform rotation
	  r[0] = p[0];
	  r[1] = p[1]*Math.cos(c) - p[2]*Math.sin(c);
	  r[2] = p[1]*Math.sin(c) + p[2]*Math.cos(c);

	  //translate to correct position
	  out[0] = r[0] + b[0];
	  out[1] = r[1] + b[1];
	  out[2] = r[2] + b[2];

  	return out;
};

/**
 * Rotate a 3D vector around the y-axis
 * @param {vec3} out The receiving vec3
 * @param {vec3} a The vec3 point to rotate
 * @param {vec3} b The origin of the rotation
 * @param {Number} c The angle of rotation
 * @returns {vec3} out
 */
vec3.rotateY = function(out, a, b, c){
  	var p = [], r=[];
  	//Translate point to the origin
  	p[0] = a[0] - b[0];
  	p[1] = a[1] - b[1];
  	p[2] = a[2] - b[2];
  
  	//perform rotation
  	r[0] = p[2]*Math.sin(c) + p[0]*Math.cos(c);
  	r[1] = p[1];
  	r[2] = p[2]*Math.cos(c) - p[0]*Math.sin(c);
  
  	//translate to correct position
  	out[0] = r[0] + b[0];
  	out[1] = r[1] + b[1];
  	out[2] = r[2] + b[2];
  
  	return out;
};

/**
 * Rotate a 3D vector around the z-axis
 * @param {vec3} out The receiving vec3
 * @param {vec3} a The vec3 point to rotate
 * @param {vec3} b The origin of the rotation
 * @param {Number} c The angle of rotation
 * @returns {vec3} out
 */
vec3.rotateZ = function(out, a, b, c){
  	var p = [], r=[];
  	//Translate point to the origin
  	p[0] = a[0] - b[0];
  	p[1] = a[1] - b[1];
  	p[2] = a[2] - b[2];
  
  	//perform rotation
  	r[0] = p[0]*Math.cos(c) - p[1]*Math.sin(c);
  	r[1] = p[0]*Math.sin(c) + p[1]*Math.cos(c);
  	r[2] = p[2];
  
  	//translate to correct position
  	out[0] = r[0] + b[0];
  	out[1] = r[1] + b[1];
  	out[2] = r[2] + b[2];
  
  	return out;
};

/**
 * Perform some operation over an array of vec3s.
 *
 * @param {Array} a the array of vectors to iterate over
 * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed
 * @param {Number} offset Number of elements to skip at the beginning of the array
 * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array
 * @param {Function} fn Function to call for each vector in the array
 * @param {Object} [arg] additional argument to pass to fn
 * @returns {Array} a
 * @function
 */
vec3.forEach = (function() {
    var vec = vec3.create();

    return function(a, stride, offset, count, fn, arg) {
        var i, l;
        if(!stride) {
            stride = 3;
        }

        if(!offset) {
            offset = 0;
        }
        
        if(count) {
            l = Math.min((count * stride) + offset, a.length);
        } else {
            l = a.length;
        }

        for(i = offset; i < l; i += stride) {
            vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2];
            fn(vec, vec, arg);
            a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2];
        }
        
        return a;
    };
})();

/**
 * Get the angle between two 3D vectors
 * @param {vec3} a The first operand
 * @param {vec3} b The second operand
 * @returns {Number} The angle in radians
 */
vec3.angle = function(a, b) {
   
    var tempA = vec3.fromValues(a[0], a[1], a[2]);
    var tempB = vec3.fromValues(b[0], b[1], b[2]);
 
    vec3.normalize(tempA, tempA);
    vec3.normalize(tempB, tempB);
 
    var cosine = vec3.dot(tempA, tempB);

    if(cosine > 1.0){
        return 0;
    } else {
        return Math.acos(cosine);
    }     
};

/**
 * Returns a string representation of a vector
 *
 * @param {vec3} vec vector to represent as a string
 * @returns {String} string representation of the vector
 */
vec3.str = function (a) {
    return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';
};

/**
 * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)
 *
 * @param {vec3} a The first vector.
 * @param {vec3} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */
vec3.exactEquals = function (a, b) {
    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];
};

/**
 * Returns whether or not the vectors have approximately the same elements in the same position.
 *
 * @param {vec3} a The first vector.
 * @param {vec3} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */
vec3.equals = function (a, b) {
    var a0 = a[0], a1 = a[1], a2 = a[2];
    var b0 = b[0], b1 = b[1], b2 = b[2];
    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&
            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&
            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)));
};

module.exports = vec3;

},{"./common.js":109}],117:[function(require,module,exports){
/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE. */

var glMatrix = require("./common.js");

/**
 * @class 4 Dimensional Vector
 * @name vec4
 */
var vec4 = {};

/**
 * Creates a new, empty vec4
 *
 * @returns {vec4} a new 4D vector
 */
vec4.create = function() {
    var out = new glMatrix.ARRAY_TYPE(4);
    out[0] = 0;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    return out;
};

/**
 * Creates a new vec4 initialized with values from an existing vector
 *
 * @param {vec4} a vector to clone
 * @returns {vec4} a new 4D vector
 */
vec4.clone = function(a) {
    var out = new glMatrix.ARRAY_TYPE(4);
    out[0] = a[0];
    out[1] = a[1];
    out[2] = a[2];
    out[3] = a[3];
    return out;
};

/**
 * Creates a new vec4 initialized with the given values
 *
 * @param {Number} x X component
 * @param {Number} y Y component
 * @param {Number} z Z component
 * @param {Number} w W component
 * @returns {vec4} a new 4D vector
 */
vec4.fromValues = function(x, y, z, w) {
    var out = new glMatrix.ARRAY_TYPE(4);
    out[0] = x;
    out[1] = y;
    out[2] = z;
    out[3] = w;
    return out;
};

/**
 * Copy the values from one vec4 to another
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the source vector
 * @returns {vec4} out
 */
vec4.copy = function(out, a) {
    out[0] = a[0];
    out[1] = a[1];
    out[2] = a[2];
    out[3] = a[3];
    return out;
};

/**
 * Set the components of a vec4 to the given values
 *
 * @param {vec4} out the receiving vector
 * @param {Number} x X component
 * @param {Number} y Y component
 * @param {Number} z Z component
 * @param {Number} w W component
 * @returns {vec4} out
 */
vec4.set = function(out, x, y, z, w) {
    out[0] = x;
    out[1] = y;
    out[2] = z;
    out[3] = w;
    return out;
};

/**
 * Adds two vec4's
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the first operand
 * @param {vec4} b the second operand
 * @returns {vec4} out
 */
vec4.add = function(out, a, b) {
    out[0] = a[0] + b[0];
    out[1] = a[1] + b[1];
    out[2] = a[2] + b[2];
    out[3] = a[3] + b[3];
    return out;
};

/**
 * Subtracts vector b from vector a
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the first operand
 * @param {vec4} b the second operand
 * @returns {vec4} out
 */
vec4.subtract = function(out, a, b) {
    out[0] = a[0] - b[0];
    out[1] = a[1] - b[1];
    out[2] = a[2] - b[2];
    out[3] = a[3] - b[3];
    return out;
};

/**
 * Alias for {@link vec4.subtract}
 * @function
 */
vec4.sub = vec4.subtract;

/**
 * Multiplies two vec4's
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the first operand
 * @param {vec4} b the second operand
 * @returns {vec4} out
 */
vec4.multiply = function(out, a, b) {
    out[0] = a[0] * b[0];
    out[1] = a[1] * b[1];
    out[2] = a[2] * b[2];
    out[3] = a[3] * b[3];
    return out;
};

/**
 * Alias for {@link vec4.multiply}
 * @function
 */
vec4.mul = vec4.multiply;

/**
 * Divides two vec4's
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the first operand
 * @param {vec4} b the second operand
 * @returns {vec4} out
 */
vec4.divide = function(out, a, b) {
    out[0] = a[0] / b[0];
    out[1] = a[1] / b[1];
    out[2] = a[2] / b[2];
    out[3] = a[3] / b[3];
    return out;
};

/**
 * Alias for {@link vec4.divide}
 * @function
 */
vec4.div = vec4.divide;

/**
 * Math.ceil the components of a vec4
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a vector to ceil
 * @returns {vec4} out
 */
vec4.ceil = function (out, a) {
    out[0] = Math.ceil(a[0]);
    out[1] = Math.ceil(a[1]);
    out[2] = Math.ceil(a[2]);
    out[3] = Math.ceil(a[3]);
    return out;
};

/**
 * Math.floor the components of a vec4
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a vector to floor
 * @returns {vec4} out
 */
vec4.floor = function (out, a) {
    out[0] = Math.floor(a[0]);
    out[1] = Math.floor(a[1]);
    out[2] = Math.floor(a[2]);
    out[3] = Math.floor(a[3]);
    return out;
};

/**
 * Returns the minimum of two vec4's
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the first operand
 * @param {vec4} b the second operand
 * @returns {vec4} out
 */
vec4.min = function(out, a, b) {
    out[0] = Math.min(a[0], b[0]);
    out[1] = Math.min(a[1], b[1]);
    out[2] = Math.min(a[2], b[2]);
    out[3] = Math.min(a[3], b[3]);
    return out;
};

/**
 * Returns the maximum of two vec4's
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the first operand
 * @param {vec4} b the second operand
 * @returns {vec4} out
 */
vec4.max = function(out, a, b) {
    out[0] = Math.max(a[0], b[0]);
    out[1] = Math.max(a[1], b[1]);
    out[2] = Math.max(a[2], b[2]);
    out[3] = Math.max(a[3], b[3]);
    return out;
};

/**
 * Math.round the components of a vec4
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a vector to round
 * @returns {vec4} out
 */
vec4.round = function (out, a) {
    out[0] = Math.round(a[0]);
    out[1] = Math.round(a[1]);
    out[2] = Math.round(a[2]);
    out[3] = Math.round(a[3]);
    return out;
};

/**
 * Scales a vec4 by a scalar number
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the vector to scale
 * @param {Number} b amount to scale the vector by
 * @returns {vec4} out
 */
vec4.scale = function(out, a, b) {
    out[0] = a[0] * b;
    out[1] = a[1] * b;
    out[2] = a[2] * b;
    out[3] = a[3] * b;
    return out;
};

/**
 * Adds two vec4's after scaling the second operand by a scalar value
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the first operand
 * @param {vec4} b the second operand
 * @param {Number} scale the amount to scale b by before adding
 * @returns {vec4} out
 */
vec4.scaleAndAdd = function(out, a, b, scale) {
    out[0] = a[0] + (b[0] * scale);
    out[1] = a[1] + (b[1] * scale);
    out[2] = a[2] + (b[2] * scale);
    out[3] = a[3] + (b[3] * scale);
    return out;
};

/**
 * Calculates the euclidian distance between two vec4's
 *
 * @param {vec4} a the first operand
 * @param {vec4} b the second operand
 * @returns {Number} distance between a and b
 */
vec4.distance = function(a, b) {
    var x = b[0] - a[0],
        y = b[1] - a[1],
        z = b[2] - a[2],
        w = b[3] - a[3];
    return Math.sqrt(x*x + y*y + z*z + w*w);
};

/**
 * Alias for {@link vec4.distance}
 * @function
 */
vec4.dist = vec4.distance;

/**
 * Calculates the squared euclidian distance between two vec4's
 *
 * @param {vec4} a the first operand
 * @param {vec4} b the second operand
 * @returns {Number} squared distance between a and b
 */
vec4.squaredDistance = function(a, b) {
    var x = b[0] - a[0],
        y = b[1] - a[1],
        z = b[2] - a[2],
        w = b[3] - a[3];
    return x*x + y*y + z*z + w*w;
};

/**
 * Alias for {@link vec4.squaredDistance}
 * @function
 */
vec4.sqrDist = vec4.squaredDistance;

/**
 * Calculates the length of a vec4
 *
 * @param {vec4} a vector to calculate length of
 * @returns {Number} length of a
 */
vec4.length = function (a) {
    var x = a[0],
        y = a[1],
        z = a[2],
        w = a[3];
    return Math.sqrt(x*x + y*y + z*z + w*w);
};

/**
 * Alias for {@link vec4.length}
 * @function
 */
vec4.len = vec4.length;

/**
 * Calculates the squared length of a vec4
 *
 * @param {vec4} a vector to calculate squared length of
 * @returns {Number} squared length of a
 */
vec4.squaredLength = function (a) {
    var x = a[0],
        y = a[1],
        z = a[2],
        w = a[3];
    return x*x + y*y + z*z + w*w;
};

/**
 * Alias for {@link vec4.squaredLength}
 * @function
 */
vec4.sqrLen = vec4.squaredLength;

/**
 * Negates the components of a vec4
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a vector to negate
 * @returns {vec4} out
 */
vec4.negate = function(out, a) {
    out[0] = -a[0];
    out[1] = -a[1];
    out[2] = -a[2];
    out[3] = -a[3];
    return out;
};

/**
 * Returns the inverse of the components of a vec4
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a vector to invert
 * @returns {vec4} out
 */
vec4.inverse = function(out, a) {
  out[0] = 1.0 / a[0];
  out[1] = 1.0 / a[1];
  out[2] = 1.0 / a[2];
  out[3] = 1.0 / a[3];
  return out;
};

/**
 * Normalize a vec4
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a vector to normalize
 * @returns {vec4} out
 */
vec4.normalize = function(out, a) {
    var x = a[0],
        y = a[1],
        z = a[2],
        w = a[3];
    var len = x*x + y*y + z*z + w*w;
    if (len > 0) {
        len = 1 / Math.sqrt(len);
        out[0] = x * len;
        out[1] = y * len;
        out[2] = z * len;
        out[3] = w * len;
    }
    return out;
};

/**
 * Calculates the dot product of two vec4's
 *
 * @param {vec4} a the first operand
 * @param {vec4} b the second operand
 * @returns {Number} dot product of a and b
 */
vec4.dot = function (a, b) {
    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];
};

/**
 * Performs a linear interpolation between two vec4's
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the first operand
 * @param {vec4} b the second operand
 * @param {Number} t interpolation amount between the two inputs
 * @returns {vec4} out
 */
vec4.lerp = function (out, a, b, t) {
    var ax = a[0],
        ay = a[1],
        az = a[2],
        aw = a[3];
    out[0] = ax + t * (b[0] - ax);
    out[1] = ay + t * (b[1] - ay);
    out[2] = az + t * (b[2] - az);
    out[3] = aw + t * (b[3] - aw);
    return out;
};

/**
 * Generates a random vector with the given scale
 *
 * @param {vec4} out the receiving vector
 * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned
 * @returns {vec4} out
 */
vec4.random = function (out, scale) {
    scale = scale || 1.0;

    //TODO: This is a pretty awful way of doing this. Find something better.
    out[0] = glMatrix.RANDOM();
    out[1] = glMatrix.RANDOM();
    out[2] = glMatrix.RANDOM();
    out[3] = glMatrix.RANDOM();
    vec4.normalize(out, out);
    vec4.scale(out, out, scale);
    return out;
};

/**
 * Transforms the vec4 with a mat4.
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the vector to transform
 * @param {mat4} m matrix to transform with
 * @returns {vec4} out
 */
vec4.transformMat4 = function(out, a, m) {
    var x = a[0], y = a[1], z = a[2], w = a[3];
    out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;
    out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;
    out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;
    out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;
    return out;
};

/**
 * Transforms the vec4 with a quat
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the vector to transform
 * @param {quat} q quaternion to transform with
 * @returns {vec4} out
 */
vec4.transformQuat = function(out, a, q) {
    var x = a[0], y = a[1], z = a[2],
        qx = q[0], qy = q[1], qz = q[2], qw = q[3],

        // calculate quat * vec
        ix = qw * x + qy * z - qz * y,
        iy = qw * y + qz * x - qx * z,
        iz = qw * z + qx * y - qy * x,
        iw = -qx * x - qy * y - qz * z;

    // calculate result * inverse quat
    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;
    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;
    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;
    out[3] = a[3];
    return out;
};

/**
 * Perform some operation over an array of vec4s.
 *
 * @param {Array} a the array of vectors to iterate over
 * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed
 * @param {Number} offset Number of elements to skip at the beginning of the array
 * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array
 * @param {Function} fn Function to call for each vector in the array
 * @param {Object} [arg] additional argument to pass to fn
 * @returns {Array} a
 * @function
 */
vec4.forEach = (function() {
    var vec = vec4.create();

    return function(a, stride, offset, count, fn, arg) {
        var i, l;
        if(!stride) {
            stride = 4;
        }

        if(!offset) {
            offset = 0;
        }
        
        if(count) {
            l = Math.min((count * stride) + offset, a.length);
        } else {
            l = a.length;
        }

        for(i = offset; i < l; i += stride) {
            vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2]; vec[3] = a[i+3];
            fn(vec, vec, arg);
            a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2]; a[i+3] = vec[3];
        }
        
        return a;
    };
})();

/**
 * Returns a string representation of a vector
 *
 * @param {vec4} vec vector to represent as a string
 * @returns {String} string representation of the vector
 */
vec4.str = function (a) {
    return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';
};

/**
 * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)
 *
 * @param {vec4} a The first vector.
 * @param {vec4} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */
vec4.exactEquals = function (a, b) {
    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];
};

/**
 * Returns whether or not the vectors have approximately the same elements in the same position.
 *
 * @param {vec4} a The first vector.
 * @param {vec4} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */
vec4.equals = function (a, b) {
    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];
    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];
    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&
            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&
            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&
            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));
};

module.exports = vec4;

},{"./common.js":109}],118:[function(require,module,exports){
(function (global){
/*
** Copyright (c) 2012 The Khronos Group Inc.
**
** Permission is hereby granted, free of charge, to any person obtaining a
** copy of this software and/or associated documentation files (the
** "Materials"), to deal in the Materials without restriction, including
** without limitation the rights to use, copy, modify, merge, publish,
** distribute, sublicense, and/or sell copies of the Materials, and to
** permit persons to whom the Materials are furnished to do so, subject to
** the following conditions:
**
** The above copyright notice and this permission notice shall be included
** in all copies or substantial portions of the Materials.
**
** THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.
*/

//Ported to node by Marcin Ignac on 2016-05-20

// Various functions for helping debug WebGL apps.

WebGLDebugUtils = function() {

//polyfill window in node
if (typeof(window) == 'undefined') {
    window = global;
}

/**
 * Wrapped logging function.
 * @param {string} msg Message to log.
 */
var log = function(msg) {
  if (window.console && window.console.log) {
    window.console.log(msg);
  }
};

/**
 * Wrapped error logging function.
 * @param {string} msg Message to log.
 */
var error = function(msg) {
  if (window.console && window.console.error) {
    window.console.error(msg);
  } else {
    log(msg);
  }
};


/**
 * Which arguments are enums based on the number of arguments to the function.
 * So
 *    'texImage2D': {
 *       9: { 0:true, 2:true, 6:true, 7:true },
 *       6: { 0:true, 2:true, 3:true, 4:true },
 *    },
 *
 * means if there are 9 arguments then 6 and 7 are enums, if there are 6
 * arguments 3 and 4 are enums
 *
 * @type {!Object.<number, !Object.<number, string>}
 */
var glValidEnumContexts = {
  // Generic setters and getters

  'enable': {1: { 0:true }},
  'disable': {1: { 0:true }},
  'getParameter': {1: { 0:true }},

  // Rendering

  'drawArrays': {3:{ 0:true }},
  'drawElements': {4:{ 0:true, 2:true }},

  // Shaders

  'createShader': {1: { 0:true }},
  'getShaderParameter': {2: { 1:true }},
  'getProgramParameter': {2: { 1:true }},
  'getShaderPrecisionFormat': {2: { 0: true, 1:true }},

  // Vertex attributes

  'getVertexAttrib': {2: { 1:true }},
  'vertexAttribPointer': {6: { 2:true }},

  // Textures

  'bindTexture': {2: { 0:true }},
  'activeTexture': {1: { 0:true }},
  'getTexParameter': {2: { 0:true, 1:true }},
  'texParameterf': {3: { 0:true, 1:true }},
  'texParameteri': {3: { 0:true, 1:true, 2:true }},
  'texImage2D': {
     9: { 0:true, 2:true, 6:true, 7:true },
     6: { 0:true, 2:true, 3:true, 4:true }
  },
  'texSubImage2D': {
    9: { 0:true, 6:true, 7:true },
    7: { 0:true, 4:true, 5:true }
  },
  'copyTexImage2D': {8: { 0:true, 2:true }},
  'copyTexSubImage2D': {8: { 0:true }},
  'generateMipmap': {1: { 0:true }},
  'compressedTexImage2D': {7: { 0: true, 2:true }},
  'compressedTexSubImage2D': {8: { 0: true, 6:true }},

  // Buffer objects

  'bindBuffer': {2: { 0:true }},
  'bufferData': {3: { 0:true, 2:true }},
  'bufferSubData': {3: { 0:true }},
  'getBufferParameter': {2: { 0:true, 1:true }},

  // Renderbuffers and framebuffers

  'pixelStorei': {2: { 0:true, 1:true }},
  'readPixels': {7: { 4:true, 5:true }},
  'bindRenderbuffer': {2: { 0:true }},
  'bindFramebuffer': {2: { 0:true }},
  'checkFramebufferStatus': {1: { 0:true }},
  'framebufferRenderbuffer': {4: { 0:true, 1:true, 2:true }},
  'framebufferTexture2D': {5: { 0:true, 1:true, 2:true }},
  'getFramebufferAttachmentParameter': {3: { 0:true, 1:true, 2:true }},
  'getRenderbufferParameter': {2: { 0:true, 1:true }},
  'renderbufferStorage': {4: { 0:true, 1:true }},

  // Frame buffer operations (clear, blend, depth test, stencil)

  'clear': {1: { 0: { 'enumBitwiseOr': ['COLOR_BUFFER_BIT', 'DEPTH_BUFFER_BIT', 'STENCIL_BUFFER_BIT'] }}},
  'depthFunc': {1: { 0:true }},
  'blendFunc': {2: { 0:true, 1:true }},
  'blendFuncSeparate': {4: { 0:true, 1:true, 2:true, 3:true }},
  'blendEquation': {1: { 0:true }},
  'blendEquationSeparate': {2: { 0:true, 1:true }},
  'stencilFunc': {3: { 0:true }},
  'stencilFuncSeparate': {4: { 0:true, 1:true }},
  'stencilMaskSeparate': {2: { 0:true }},
  'stencilOp': {3: { 0:true, 1:true, 2:true }},
  'stencilOpSeparate': {4: { 0:true, 1:true, 2:true, 3:true }},

  // Culling

  'cullFace': {1: { 0:true }},
  'frontFace': {1: { 0:true }},

  // ANGLE_instanced_arrays extension

  'drawArraysInstancedANGLE': {4: { 0:true }},
  'drawElementsInstancedANGLE': {5: { 0:true, 2:true }},

  // EXT_blend_minmax extension

  'blendEquationEXT': {1: { 0:true }}
};

/**
 * Map of numbers to names.
 * @type {Object}
 */
var glEnums = null;

/**
 * Map of names to numbers.
 * @type {Object}
 */
var enumStringToValue = null;

/**
 * Initializes this module. Safe to call more than once.
 * @param {!WebGLRenderingContext} ctx A WebGL context. If
 *    you have more than one context it doesn't matter which one
 *    you pass in, it is only used to pull out constants.
 */
function init(ctx) {
  if (glEnums == null) {
    glEnums = { };
    enumStringToValue = { };
    for (var propertyName in ctx) {
      if (typeof ctx[propertyName] == 'number') {
        glEnums[ctx[propertyName]] = propertyName;
        enumStringToValue[propertyName] = ctx[propertyName];
      }
    }
  }
}

/**
 * Checks the utils have been initialized.
 */
function checkInit() {
  if (glEnums == null) {
    throw 'WebGLDebugUtils.init(ctx) not called';
  }
}

/**
 * Returns true or false if value matches any WebGL enum
 * @param {*} value Value to check if it might be an enum.
 * @return {boolean} True if value matches one of the WebGL defined enums
 */
function mightBeEnum(value) {
  checkInit();
  return (glEnums[value] !== undefined);
}

/**
 * Gets an string version of an WebGL enum.
 *
 * Example:
 *   var str = WebGLDebugUtil.glEnumToString(ctx.getError());
 *
 * @param {number} value Value to return an enum for
 * @return {string} The string version of the enum.
 */
function glEnumToString(value) {
  checkInit();
  var name = glEnums[value];
  return (name !== undefined) ? ("gl." + name) :
      ("/*UNKNOWN WebGL ENUM*/ 0x" + value.toString(16) + "");
}

/**
 * Returns the string version of a WebGL argument.
 * Attempts to convert enum arguments to strings.
 * @param {string} functionName the name of the WebGL function.
 * @param {number} numArgs the number of arguments passed to the function.
 * @param {number} argumentIndx the index of the argument.
 * @param {*} value The value of the argument.
 * @return {string} The value as a string.
 */
function glFunctionArgToString(functionName, numArgs, argumentIndex, value) {
  var funcInfo = glValidEnumContexts[functionName];
  if (funcInfo !== undefined) {
    var funcInfo = funcInfo[numArgs];
    if (funcInfo !== undefined) {
      if (funcInfo[argumentIndex]) {
        if (typeof funcInfo[argumentIndex] === 'object' &&
            funcInfo[argumentIndex]['enumBitwiseOr'] !== undefined) {
          var enums = funcInfo[argumentIndex]['enumBitwiseOr'];
          var orResult = 0;
          var orEnums = [];
          for (var i = 0; i < enums.length; ++i) {
            var enumValue = enumStringToValue[enums[i]];
            if ((value & enumValue) !== 0) {
              orResult |= enumValue;
              orEnums.push(glEnumToString(enumValue));
            }
          }
          if (orResult === value) {
            return orEnums.join(' | ');
          } else {
            return glEnumToString(value);
          }
        } else {
          return glEnumToString(value);
        }
      }
    }
  }
  if (value === null) {
    return "null";
  } else if (value === undefined) {
    return "undefined";
  } else {
    return value.toString();
  }
}

/**
 * Converts the arguments of a WebGL function to a string.
 * Attempts to convert enum arguments to strings.
 *
 * @param {string} functionName the name of the WebGL function.
 * @param {number} args The arguments.
 * @return {string} The arguments as a string.
 */
function glFunctionArgsToString(functionName, args) {
  // apparently we can't do args.join(",");
  var argStr = "";
  var numArgs = args.length;
  for (var ii = 0; ii < numArgs; ++ii) {
    argStr += ((ii == 0) ? '' : ', ') +
        glFunctionArgToString(functionName, numArgs, ii, args[ii]);
  }
  return argStr;
};


function makePropertyWrapper(wrapper, original, propertyName) {
  //log("wrap prop: " + propertyName);
  wrapper.__defineGetter__(propertyName, function() {
    return original[propertyName];
  });
  // TODO(gmane): this needs to handle properties that take more than
  // one value?
  wrapper.__defineSetter__(propertyName, function(value) {
    //log("set: " + propertyName);
    original[propertyName] = value;
  });
}

// Makes a function that calls a function on another object.
function makeFunctionWrapper(original, functionName) {
  //log("wrap fn: " + functionName);
  var f = original[functionName];
  return function() {
    //log("call: " + functionName);
    var result = f.apply(original, arguments);
    return result;
  };
}

/**
 * Given a WebGL context returns a wrapped context that calls
 * gl.getError after every command and calls a function if the
 * result is not gl.NO_ERROR.
 *
 * @param {!WebGLRenderingContext} ctx The webgl context to
 *        wrap.
 * @param {!function(err, funcName, args): void} opt_onErrorFunc
 *        The function to call when gl.getError returns an
 *        error. If not specified the default function calls
 *        console.log with a message.
 * @param {!function(funcName, args): void} opt_onFunc The
 *        function to call when each webgl function is called.
 *        You can use this to log all calls for example.
 * @param {!WebGLRenderingContext} opt_err_ctx The webgl context
 *        to call getError on if different than ctx.
 */
function makeDebugContext(ctx, opt_onErrorFunc, opt_onFunc, opt_err_ctx) {
  opt_err_ctx = opt_err_ctx || ctx;
  init(ctx);
  opt_onErrorFunc = opt_onErrorFunc || function(err, functionName, args) {
        // apparently we can't do args.join(",");
        var argStr = "";
        var numArgs = args.length;
        for (var ii = 0; ii < numArgs; ++ii) {
          argStr += ((ii == 0) ? '' : ', ') +
              glFunctionArgToString(functionName, numArgs, ii, args[ii]);
        }
        error("WebGL error "+ glEnumToString(err) + " in "+ functionName +
              "(" + argStr + ")");
      };

  // Holds booleans for each GL error so after we get the error ourselves
  // we can still return it to the client app.
  var glErrorShadow = { };

  // Makes a function that calls a WebGL function and then calls getError.
  function makeErrorWrapper(ctx, functionName) {
    return function() {
      if (opt_onFunc) {
        opt_onFunc(functionName, arguments);
      }
      var result = ctx[functionName].apply(ctx, arguments);
      var err = opt_err_ctx.getError();
      if (err != 0) {
        glErrorShadow[err] = true;
        opt_onErrorFunc(err, functionName, arguments);
      }
      return result;
    };
  }

  // Make a an object that has a copy of every property of the WebGL context
  // but wraps all functions.
  var wrapper = {};
  for (var propertyName in ctx) {
    if (typeof ctx[propertyName] == 'function') {
      if (propertyName != 'getExtension') {
        wrapper[propertyName] = makeErrorWrapper(ctx, propertyName);
      } else {
        var wrapped = makeErrorWrapper(ctx, propertyName);
        wrapper[propertyName] = function () {
          var result = wrapped.apply(ctx, arguments);
          return makeDebugContext(result, opt_onErrorFunc, opt_onFunc, opt_err_ctx);
        };
      }
    } else {
      makePropertyWrapper(wrapper, ctx, propertyName);
    }
  }

  // Override the getError function with one that returns our saved results.
  wrapper.getError = function() {
    for (var err in glErrorShadow) {
      if (glErrorShadow.hasOwnProperty(err)) {
        if (glErrorShadow[err]) {
          glErrorShadow[err] = false;
          return err;
        }
      }
    }
    return ctx.NO_ERROR;
  };

  return wrapper;
}

function resetToInitialState(ctx) {
  var numAttribs = ctx.getParameter(ctx.MAX_VERTEX_ATTRIBS);
  var tmp = ctx.createBuffer();
  ctx.bindBuffer(ctx.ARRAY_BUFFER, tmp);
  for (var ii = 0; ii < numAttribs; ++ii) {
    ctx.disableVertexAttribArray(ii);
    ctx.vertexAttribPointer(ii, 4, ctx.FLOAT, false, 0, 0);
    ctx.vertexAttrib1f(ii, 0);
  }
  ctx.deleteBuffer(tmp);

  var numTextureUnits = ctx.getParameter(ctx.MAX_TEXTURE_IMAGE_UNITS);
  for (var ii = 0; ii < numTextureUnits; ++ii) {
    ctx.activeTexture(ctx.TEXTURE0 + ii);
    ctx.bindTexture(ctx.TEXTURE_CUBE_MAP, null);
    ctx.bindTexture(ctx.TEXTURE_2D, null);
  }

  ctx.activeTexture(ctx.TEXTURE0);
  ctx.useProgram(null);
  ctx.bindBuffer(ctx.ARRAY_BUFFER, null);
  ctx.bindBuffer(ctx.ELEMENT_ARRAY_BUFFER, null);
  ctx.bindFramebuffer(ctx.FRAMEBUFFER, null);
  ctx.bindRenderbuffer(ctx.RENDERBUFFER, null);
  ctx.disable(ctx.BLEND);
  ctx.disable(ctx.CULL_FACE);
  ctx.disable(ctx.DEPTH_TEST);
  ctx.disable(ctx.DITHER);
  ctx.disable(ctx.SCISSOR_TEST);
  ctx.blendColor(0, 0, 0, 0);
  ctx.blendEquation(ctx.FUNC_ADD);
  ctx.blendFunc(ctx.ONE, ctx.ZERO);
  ctx.clearColor(0, 0, 0, 0);
  ctx.clearDepth(1);
  ctx.clearStencil(-1);
  ctx.colorMask(true, true, true, true);
  ctx.cullFace(ctx.BACK);
  ctx.depthFunc(ctx.LESS);
  ctx.depthMask(true);
  ctx.depthRange(0, 1);
  ctx.frontFace(ctx.CCW);
  ctx.hint(ctx.GENERATE_MIPMAP_HINT, ctx.DONT_CARE);
  ctx.lineWidth(1);
  ctx.pixelStorei(ctx.PACK_ALIGNMENT, 4);
  ctx.pixelStorei(ctx.UNPACK_ALIGNMENT, 4);
  ctx.pixelStorei(ctx.UNPACK_FLIP_Y_WEBGL, false);
  ctx.pixelStorei(ctx.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);
  // TODO: Delete this IF.
  if (ctx.UNPACK_COLORSPACE_CONVERSION_WEBGL) {
    ctx.pixelStorei(ctx.UNPACK_COLORSPACE_CONVERSION_WEBGL, ctx.BROWSER_DEFAULT_WEBGL);
  }
  ctx.polygonOffset(0, 0);
  ctx.sampleCoverage(1, false);
  ctx.scissor(0, 0, ctx.canvas.width, ctx.canvas.height);
  ctx.stencilFunc(ctx.ALWAYS, 0, 0xFFFFFFFF);
  ctx.stencilMask(0xFFFFFFFF);
  ctx.stencilOp(ctx.KEEP, ctx.KEEP, ctx.KEEP);
  ctx.viewport(0, 0, ctx.canvas.width, ctx.canvas.height);
  ctx.clear(ctx.COLOR_BUFFER_BIT | ctx.DEPTH_BUFFER_BIT | ctx.STENCIL_BUFFER_BIT);

  // TODO: This should NOT be needed but Firefox fails with 'hint'
  while(ctx.getError());
}

function makeLostContextSimulatingCanvas(canvas) {
  var unwrappedContext_;
  var wrappedContext_;
  var onLost_ = [];
  var onRestored_ = [];
  var wrappedContext_ = {};
  var contextId_ = 1;
  var contextLost_ = false;
  var resourceId_ = 0;
  var resourceDb_ = [];
  var numCallsToLoseContext_ = 0;
  var numCalls_ = 0;
  var canRestore_ = false;
  var restoreTimeout_ = 0;

  // Holds booleans for each GL error so can simulate errors.
  var glErrorShadow_ = { };

  canvas.getContext = function(f) {
    return function() {
      var ctx = f.apply(canvas, arguments);
      // Did we get a context and is it a WebGL context?
      if (ctx instanceof WebGLRenderingContext) {
        if (ctx != unwrappedContext_) {
          if (unwrappedContext_) {
            throw "got different context"
          }
          unwrappedContext_ = ctx;
          wrappedContext_ = makeLostContextSimulatingContext(unwrappedContext_);
        }
        return wrappedContext_;
      }
      return ctx;
    }
  }(canvas.getContext);

  function wrapEvent(listener) {
    if (typeof(listener) == "function") {
      return listener;
    } else {
      return function(info) {
        listener.handleEvent(info);
      }
    }
  }

  var addOnContextLostListener = function(listener) {
    onLost_.push(wrapEvent(listener));
  };

  var addOnContextRestoredListener = function(listener) {
    onRestored_.push(wrapEvent(listener));
  };


  function wrapAddEventListener(canvas) {
    var f = canvas.addEventListener;
    canvas.addEventListener = function(type, listener, bubble) {
      switch (type) {
        case 'webglcontextlost':
          addOnContextLostListener(listener);
          break;
        case 'webglcontextrestored':
          addOnContextRestoredListener(listener);
          break;
        default:
          f.apply(canvas, arguments);
      }
    };
  }

  wrapAddEventListener(canvas);

  canvas.loseContext = function() {
    if (!contextLost_) {
      contextLost_ = true;
      numCallsToLoseContext_ = 0;
      ++contextId_;
      while (unwrappedContext_.getError());
      clearErrors();
      glErrorShadow_[unwrappedContext_.CONTEXT_LOST_WEBGL] = true;
      var event = makeWebGLContextEvent("context lost");
      var callbacks = onLost_.slice();
      setTimeout(function() {
          //log("numCallbacks:" + callbacks.length);
          for (var ii = 0; ii < callbacks.length; ++ii) {
            //log("calling callback:" + ii);
            callbacks[ii](event);
          }
          if (restoreTimeout_ >= 0) {
            setTimeout(function() {
                canvas.restoreContext();
              }, restoreTimeout_);
          }
        }, 0);
    }
  };

  canvas.restoreContext = function() {
    if (contextLost_) {
      if (onRestored_.length) {
        setTimeout(function() {
            if (!canRestore_) {
              throw "can not restore. webglcontestlost listener did not call event.preventDefault";
            }
            freeResources();
            resetToInitialState(unwrappedContext_);
            contextLost_ = false;
            numCalls_ = 0;
            canRestore_ = false;
            var callbacks = onRestored_.slice();
            var event = makeWebGLContextEvent("context restored");
            for (var ii = 0; ii < callbacks.length; ++ii) {
              callbacks[ii](event);
            }
          }, 0);
      }
    }
  };

  canvas.loseContextInNCalls = function(numCalls) {
    if (contextLost_) {
      throw "You can not ask a lost contet to be lost";
    }
    numCallsToLoseContext_ = numCalls_ + numCalls;
  };

  canvas.getNumCalls = function() {
    return numCalls_;
  };

  canvas.setRestoreTimeout = function(timeout) {
    restoreTimeout_ = timeout;
  };

  function isWebGLObject(obj) {
    //return false;
    return (obj instanceof WebGLBuffer ||
            obj instanceof WebGLFramebuffer ||
            obj instanceof WebGLProgram ||
            obj instanceof WebGLRenderbuffer ||
            obj instanceof WebGLShader ||
            obj instanceof WebGLTexture);
  }

  function checkResources(args) {
    for (var ii = 0; ii < args.length; ++ii) {
      var arg = args[ii];
      if (isWebGLObject(arg)) {
        return arg.__webglDebugContextLostId__ == contextId_;
      }
    }
    return true;
  }

  function clearErrors() {
    var k = Object.keys(glErrorShadow_);
    for (var ii = 0; ii < k.length; ++ii) {
      delete glErrorShadow_[k];
    }
  }

  function loseContextIfTime() {
    ++numCalls_;
    if (!contextLost_) {
      if (numCallsToLoseContext_ == numCalls_) {
        canvas.loseContext();
      }
    }
  }

  // Makes a function that simulates WebGL when out of context.
  function makeLostContextFunctionWrapper(ctx, functionName) {
    var f = ctx[functionName];
    return function() {
      // log("calling:" + functionName);
      // Only call the functions if the context is not lost.
      loseContextIfTime();
      if (!contextLost_) {
        //if (!checkResources(arguments)) {
        //  glErrorShadow_[wrappedContext_.INVALID_OPERATION] = true;
        //  return;
        //}
        var result = f.apply(ctx, arguments);
        return result;
      }
    };
  }

  function freeResources() {
    for (var ii = 0; ii < resourceDb_.length; ++ii) {
      var resource = resourceDb_[ii];
      if (resource instanceof WebGLBuffer) {
        unwrappedContext_.deleteBuffer(resource);
      } else if (resource instanceof WebGLFramebuffer) {
        unwrappedContext_.deleteFramebuffer(resource);
      } else if (resource instanceof WebGLProgram) {
        unwrappedContext_.deleteProgram(resource);
      } else if (resource instanceof WebGLRenderbuffer) {
        unwrappedContext_.deleteRenderbuffer(resource);
      } else if (resource instanceof WebGLShader) {
        unwrappedContext_.deleteShader(resource);
      } else if (resource instanceof WebGLTexture) {
        unwrappedContext_.deleteTexture(resource);
      }
    }
  }

  function makeWebGLContextEvent(statusMessage) {
    return {
      statusMessage: statusMessage,
      preventDefault: function() {
          canRestore_ = true;
        }
    };
  }

  return canvas;

  function makeLostContextSimulatingContext(ctx) {
    // copy all functions and properties to wrapper
    for (var propertyName in ctx) {
      if (typeof ctx[propertyName] == 'function') {
         wrappedContext_[propertyName] = makeLostContextFunctionWrapper(
             ctx, propertyName);
       } else {
         makePropertyWrapper(wrappedContext_, ctx, propertyName);
       }
    }

    // Wrap a few functions specially.
    wrappedContext_.getError = function() {
      loseContextIfTime();
      if (!contextLost_) {
        var err;
        while (err = unwrappedContext_.getError()) {
          glErrorShadow_[err] = true;
        }
      }
      for (var err in glErrorShadow_) {
        if (glErrorShadow_[err]) {
          delete glErrorShadow_[err];
          return err;
        }
      }
      return wrappedContext_.NO_ERROR;
    };

    var creationFunctions = [
      "createBuffer",
      "createFramebuffer",
      "createProgram",
      "createRenderbuffer",
      "createShader",
      "createTexture"
    ];
    for (var ii = 0; ii < creationFunctions.length; ++ii) {
      var functionName = creationFunctions[ii];
      wrappedContext_[functionName] = function(f) {
        return function() {
          loseContextIfTime();
          if (contextLost_) {
            return null;
          }
          var obj = f.apply(ctx, arguments);
          obj.__webglDebugContextLostId__ = contextId_;
          resourceDb_.push(obj);
          return obj;
        };
      }(ctx[functionName]);
    }

    var functionsThatShouldReturnNull = [
      "getActiveAttrib",
      "getActiveUniform",
      "getBufferParameter",
      "getContextAttributes",
      "getAttachedShaders",
      "getFramebufferAttachmentParameter",
      "getParameter",
      "getProgramParameter",
      "getProgramInfoLog",
      "getRenderbufferParameter",
      "getShaderParameter",
      "getShaderInfoLog",
      "getShaderSource",
      "getTexParameter",
      "getUniform",
      "getUniformLocation",
      "getVertexAttrib"
    ];
    for (var ii = 0; ii < functionsThatShouldReturnNull.length; ++ii) {
      var functionName = functionsThatShouldReturnNull[ii];
      wrappedContext_[functionName] = function(f) {
        return function() {
          loseContextIfTime();
          if (contextLost_) {
            return null;
          }
          return f.apply(ctx, arguments);
        }
      }(wrappedContext_[functionName]);
    }

    var isFunctions = [
      "isBuffer",
      "isEnabled",
      "isFramebuffer",
      "isProgram",
      "isRenderbuffer",
      "isShader",
      "isTexture"
    ];
    for (var ii = 0; ii < isFunctions.length; ++ii) {
      var functionName = isFunctions[ii];
      wrappedContext_[functionName] = function(f) {
        return function() {
          loseContextIfTime();
          if (contextLost_) {
            return false;
          }
          return f.apply(ctx, arguments);
        }
      }(wrappedContext_[functionName]);
    }

    wrappedContext_.checkFramebufferStatus = function(f) {
      return function() {
        loseContextIfTime();
        if (contextLost_) {
          return wrappedContext_.FRAMEBUFFER_UNSUPPORTED;
        }
        return f.apply(ctx, arguments);
      };
    }(wrappedContext_.checkFramebufferStatus);

    wrappedContext_.getAttribLocation = function(f) {
      return function() {
        loseContextIfTime();
        if (contextLost_) {
          return -1;
        }
        return f.apply(ctx, arguments);
      };
    }(wrappedContext_.getAttribLocation);

    wrappedContext_.getVertexAttribOffset = function(f) {
      return function() {
        loseContextIfTime();
        if (contextLost_) {
          return 0;
        }
        return f.apply(ctx, arguments);
      };
    }(wrappedContext_.getVertexAttribOffset);

    wrappedContext_.isContextLost = function() {
      return contextLost_;
    };

    return wrappedContext_;
  }
}

return {
  /**
   * Initializes this module. Safe to call more than once.
   * @param {!WebGLRenderingContext} ctx A WebGL context. If
   *    you have more than one context it doesn't matter which one
   *    you pass in, it is only used to pull out constants.
   */
  'init': init,

  /**
   * Returns true or false if value matches any WebGL enum
   * @param {*} value Value to check if it might be an enum.
   * @return {boolean} True if value matches one of the WebGL defined enums
   */
  'mightBeEnum': mightBeEnum,

  /**
   * Gets an string version of an WebGL enum.
   *
   * Example:
   *   WebGLDebugUtil.init(ctx);
   *   var str = WebGLDebugUtil.glEnumToString(ctx.getError());
   *
   * @param {number} value Value to return an enum for
   * @return {string} The string version of the enum.
   */
  'glEnumToString': glEnumToString,

  /**
   * Converts the argument of a WebGL function to a string.
   * Attempts to convert enum arguments to strings.
   *
   * Example:
   *   WebGLDebugUtil.init(ctx);
   *   var str = WebGLDebugUtil.glFunctionArgToString('bindTexture', 2, 0, gl.TEXTURE_2D);
   *
   * would return 'TEXTURE_2D'
   *
   * @param {string} functionName the name of the WebGL function.
   * @param {number} numArgs The number of arguments
   * @param {number} argumentIndx the index of the argument.
   * @param {*} value The value of the argument.
   * @return {string} The value as a string.
   */
  'glFunctionArgToString': glFunctionArgToString,

  /**
   * Converts the arguments of a WebGL function to a string.
   * Attempts to convert enum arguments to strings.
   *
   * @param {string} functionName the name of the WebGL function.
   * @param {number} args The arguments.
   * @return {string} The arguments as a string.
   */
  'glFunctionArgsToString': glFunctionArgsToString,

  /**
   * Given a WebGL context returns a wrapped context that calls
   * gl.getError after every command and calls a function if the
   * result is not NO_ERROR.
   *
   * You can supply your own function if you want. For example, if you'd like
   * an exception thrown on any GL error you could do this
   *
   *    function throwOnGLError(err, funcName, args) {
   *      throw WebGLDebugUtils.glEnumToString(err) +
   *            " was caused by call to " + funcName;
   *    };
   *
   *    ctx = WebGLDebugUtils.makeDebugContext(
   *        canvas.getContext("webgl"), throwOnGLError);
   *
   * @param {!WebGLRenderingContext} ctx The webgl context to wrap.
   * @param {!function(err, funcName, args): void} opt_onErrorFunc The function
   *     to call when gl.getError returns an error. If not specified the default
   *     function calls console.log with a message.
   * @param {!function(funcName, args): void} opt_onFunc The
   *     function to call when each webgl function is called. You
   *     can use this to log all calls for example.
   */
  'makeDebugContext': makeDebugContext,

  /**
   * Given a canvas element returns a wrapped canvas element that will
   * simulate lost context. The canvas returned adds the following functions.
   *
   * loseContext:
   *   simulates a lost context event.
   *
   * restoreContext:
   *   simulates the context being restored.
   *
   * lostContextInNCalls:
   *   loses the context after N gl calls.
   *
   * getNumCalls:
   *   tells you how many gl calls there have been so far.
   *
   * setRestoreTimeout:
   *   sets the number of milliseconds until the context is restored
   *   after it has been lost. Defaults to 0. Pass -1 to prevent
   *   automatic restoring.
   *
   * @param {!Canvas} canvas The canvas element to wrap.
   */
  'makeLostContextSimulatingCanvas': makeLostContextSimulatingCanvas,

  /**
   * Resets a context to the initial state.
   * @param {!WebGLRenderingContext} ctx The webgl context to
   *     reset.
   */
  'resetToInitialState': resetToInitialState
};

}();

module.exports = WebGLDebugUtils;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],119:[function(require,module,exports){
'use strict';

var util = require('../util');

// used by isOutOfStage method
var EXTRA_OUT_OF_SIZE = 100;

var id = 0;

var ObjectBase = function(scene) {
	this.scene = scene;
	this.core = scene.core;
	this.parent = null; // parent object if this is sub object
	this.id = ++id;

	this.frame_count = 0;

	this._x = 0; // local center x
	this._y = 0; // local center y

	// manage flags that disappears in frame elapsed
	this._auto_disable_times_map = {};

	this._velocity = null;
	this.resetVelocity();

	this._previous_x = null;
	this._previous_y = null;

	// sub object
	this.objects = [];

};

ObjectBase.prototype.init = function(){
	this.frame_count = 0;

	// NOTE: abolished
	//this._x = 0;
	//this._y = 0;

	this._auto_disable_times_map = {};

	this.resetVelocity();

	this._previous_x = null;
	this._previous_y = null;

	for(var i = 0, len = this.objects.length; i < len; i++) {
		this.objects[i].init();
	}
};

ObjectBase.prototype.beforeDraw = function(){
	this.frame_count++;

	// check flags that disappears in frame elapsed
	this._checkAutoDisableFlags();

	for(var i = 0, len = this.objects.length; i < len; i++) {
		this.objects[i].beforeDraw();
	}

	// move if this object is set velocity
	this._move();
};

ObjectBase.prototype.draw = function() {
	var ctx = this.core.ctx;

	// If is in DEBUG mode, show collision area
	if(this.core.debug_manager.isShowingCollisionArea()) {
		this._drawCollisionArea("white");
	}


	for(var i = 0, len = this.objects.length; i < len; i++) {
		this.objects[i].draw();
	}
};

ObjectBase.prototype.afterDraw = function() {
	for(var i = 0, len = this.objects.length; i < len; i++) {
		this.objects[i].afterDraw();
	}
};

ObjectBase.prototype.width = function() {
	return 0;
};
ObjectBase.prototype.height = function() {
	return 0;
};

ObjectBase.prototype.x = function(val) {
	if (typeof val !== 'undefined') { this._x = val; }
	return this._x;
};
ObjectBase.prototype.y = function(val) {
	if (typeof val !== 'undefined') { this._y = val; }
	return this._y;
};

ObjectBase.prototype.setPosition = function(x, y) {
	this._x = x;
	this._y = y;
};

/*
*******************************
* position methods
*******************************
*/

ObjectBase.prototype.globalCenterX = function() {
	return this.scene.x() + this.x();
};

ObjectBase.prototype.globalCenterY = function() {
	return this.scene.y() + this.y();
};


ObjectBase.prototype.globalLeftX = function() {
	return this.scene.x() + this.x() - this.width()/2;
};

ObjectBase.prototype.globalRightX = function() {
	return this.scene.x() + this.x() + this.width()/2;
};

ObjectBase.prototype.globalUpY = function() {
	return this.scene.y() + this.y() - this.height()/2;
};

ObjectBase.prototype.globalDownY = function() {
	return this.scene.y() + this.y() + this.height()/2;
};

/*
*******************************
* sub object methods
*******************************
*/

// add sub object
ObjectBase.prototype.addSubObject = function(object){
	object.setParent(this);
	this.objects.push(object);
};

ObjectBase.prototype.removeSubObject = function(object){
	// TODO: O(n) -> O(1)
	for(var i = 0, len = this.objects.length; i < len; i++) {
		if(this.objects[i].id === object.id) {
			this.objects[i].resetParent();
			this.objects.splice(i, 1);
			break;
		}
	}
};

ObjectBase.prototype.removeAllSubObject = function() {
	for(var i = 0, len = this.objects.length; i < len; i++) {
		this.objects[i].resetParent();
	}

	this.objects = [];
};

// set parent object if this is sub object
ObjectBase.prototype.setParent = function(parent_object) {
	if(this.parent) throw new Error("already set parent");
	this.parent = parent_object;
};

ObjectBase.prototype.resetParent = function() {
	this.parent = null;
};

/*
*******************************
* collision methods
*******************************
*/

// collision width
// NOTE: the obj of arguments is collision target object
ObjectBase.prototype.collisionWidth = function(obj) {
	return 0;
};

// collision height
// NOTE: the obj of arguments is collision target object
ObjectBase.prototype.collisionHeight = function(obj) {
	return 0;
};

// callback if the object is collision with
// NOTE: the obj of arguments is collision target object
ObjectBase.prototype.onCollision = function(obj){
};

// flag if the object is check collision with
// NOTE: the obj of arguments is collision target object
ObjectBase.prototype.isCollision = function(obj) {
	return true;
};

// check Collision Detect with object and execute onCollision method if detect
ObjectBase.prototype.checkCollisionWithObject = function(obj1) {
	var obj2 = this;
	var is_collision = obj1.intersect(obj2);

	if(is_collision) {
		obj1.onCollision(obj2);
		obj2.onCollision(obj1);
	}

	return is_collision;
};

// check Collision Detect with object array and execute onCollision method if detect
ObjectBase.prototype.checkCollisionWithObjects = function(objs) {
	var obj1 = this;
	var return_flag = false;
	for(var i = 0; i < objs.length; i++) {
		var obj2 = objs[i];
		if(obj1.checkCollisionByObject(obj2)) {
			obj1.onCollision(obj2);
			obj2.onCollision(obj1);
			return_flag = true;
		}
	}

	return return_flag;
};

// check Collision Detect with (x, y) and execute onCollision method if detect
ObjectBase.prototype.checkCollisionWithPosition = function(x, y) {
	var point = new ObjectPoint(this.scene);
	point.init();
	point.setPosition(x, y);

	return this.checkCollisionWithObject(point);
};

// is the object collides with obj of argument ?
ObjectBase.prototype.intersect = function(obj) {
	if (!this.isCollision(obj) || !obj.isCollision(this)) return false;

	if(Math.abs(this.x() - obj.x()) < this.collisionWidth(obj)/2 + obj.collisionWidth(this)/2 &&
		Math.abs(this.y() - obj.y()) < this.collisionHeight(obj)/2 + obj.collisionHeight(this)/2) {
		return true;
	}

	return false;
};

ObjectBase.prototype.getCollisionLeftX = function(obj) {
	return this.x() - this.collisionWidth(obj) / 2;
};

ObjectBase.prototype.getCollisionRightX = function(obj) {
	return this.x() + this.collisionWidth(obj) / 2;
};

ObjectBase.prototype.getCollisionUpY = function(obj) {
	return this.y() - this.collisionHeight(obj) / 2;
};

ObjectBase.prototype.getCollisionDownY = function(obj) {
	return this.y() + this.collisionHeight(obj) / 2;
};

ObjectBase.prototype._drawCollisionArea = function(color) {
	// make dummy object to decide collision width and height
	var dummy_object = new ObjectBase(this.scene);

	color = color || 'rgb( 255, 255, 255 )' ;
	var ctx = this.core.ctx;
	ctx.save();
	ctx.fillStyle = color;
	ctx.globalAlpha = 0.4;
	ctx.fillRect(
		this.getCollisionLeftX(dummy_object),
		this.getCollisionUpY(dummy_object),
		this.collisionWidth(dummy_object),
		this.collisionHeight(dummy_object)
	);
	ctx.restore();
};


// NOTE: deprecated
ObjectBase.prototype.checkCollision = function(obj) {
	return this.checkCollisionByObject(obj);
};

// NOTE: deprecated
ObjectBase.prototype.checkCollisionByObject = function(obj) {
	return this.intersect(obj);
};
/*
*******************************
* disable flag methods
*******************************
*/

// set flags that disappears in frame elapsed
// TODO: enable to set flag which becomes false -> true
// TODO: reset flag if the object calls init method
ObjectBase.prototype.setAutoDisableFlag = function(flag_name, count) {
	var self = this;

	self[flag_name] = true;

	self._auto_disable_times_map[flag_name] = self.frame_count + count;

};

// check flags that disappears in frame elapsed
ObjectBase.prototype._checkAutoDisableFlags = function() {
	var self = this;
	for (var flag_name in self._auto_disable_times_map) {
		if(this._auto_disable_times_map[flag_name] < self.frame_count) {
			self[flag_name] = false;
			delete self._auto_disable_times_map[flag_name];
		}
	}
};

/*
*******************************
* velocity methods
*******************************
*/

ObjectBase.prototype.setVelocity = function(velocity) {
	this._velocity = velocity;
};

ObjectBase.prototype.resetVelocity = function() {
	this._velocity = {magnitude:0, theta:0};
};

ObjectBase.prototype.setVelocityMagnitude = function(magnitude) {
	this._velocity.magnitude = magnitude;
};

ObjectBase.prototype.setVelocityTheta = function(theta) {
	this._velocity.theta = theta;
};

// move if this object is set velocity
// TODO: doesn't move if the object's velocity magnitude is 0
ObjectBase.prototype._move = function() {
	var x = util.calcMoveXByVelocity(this._velocity);
	var y = util.calcMoveYByVelocity(this._velocity);

	// save previous (x,y)
	this._previous_x = this._x;
	this._previous_y = this._y;

	this._x += x;
	this._y += y;
};

ObjectBase.prototype.moveBack = function() {
	if (this._previous_x === null && this._previous_y) return;

	var current_x = this._x;
	var current_y = this._y;

	this._x = this._previous_x;
	this._y = this._previous_y;

	this._previous_x = current_x;
	this._previous_y = current_y;
};

/*
*******************************
* other methods
*******************************
*/

// TODO: this.core -> this.scene
ObjectBase.prototype.isOutOfStage = function( ) {
	if(this.x() + EXTRA_OUT_OF_SIZE < 0 ||
	   this.y() + EXTRA_OUT_OF_SIZE < 0 ||
	   this.x() > this.core.width  + EXTRA_OUT_OF_SIZE ||
	   this.y() > this.core.height + EXTRA_OUT_OF_SIZE
	  ) {
		return true;
	}

	return false;
};

/*
*******************************
* point object class
*******************************
*/

var ObjectPoint = function(scene) {
	ObjectBase.apply(this, arguments);

};
util.inherit(ObjectPoint, ObjectBase);

ObjectPoint.prototype.collisionWidth = function(){
	return 1;
};
ObjectPoint.prototype.collisionHeight = function(){
	return 1;
};
ObjectPoint.prototype.width = function() {
	return 1;
};
ObjectPoint.prototype.height = function() {
	return 1;
};

module.exports = ObjectBase;

},{"../util":134}],120:[function(require,module,exports){
'use strict';

// TODO: add pooling logic
// TODO: split manager class and pool manager class
var base_object = require('./base');
var util = require('../util');

var PoolManager = function(scene, Class) {
	base_object.apply(this, arguments);

	this.Class = Class;
	this.objects = {};
};
util.inherit(PoolManager, base_object);

PoolManager.prototype.init = function() {
	base_object.prototype.init.apply(this, arguments);

	this.objects = {};
};

PoolManager.prototype.beforeDraw = function(){
	base_object.prototype.beforeDraw.apply(this, arguments);

	for(var id in this.objects) {
		this.objects[id].beforeDraw();
	}
};

PoolManager.prototype.draw = function(){
	base_object.prototype.draw.apply(this, arguments);
	for(var id in this.objects) {
		this.objects[id].draw();
	}
};

PoolManager.prototype.afterDraw = function(){
	base_object.prototype.afterDraw.apply(this, arguments);
	for(var id in this.objects) {
		this.objects[id].afterDraw();
	}
};

PoolManager.prototype.create = function() {
	var object = new this.Class(this.scene);
	object.init.apply(object, arguments);

	this.objects[object.id] = object;

	return object;
};
PoolManager.prototype.remove = function(id) {
	delete this.objects[id];
};

PoolManager.prototype.checkCollisionWithObject = function(obj1) {
	for(var id in this.objects) {
		var obj2 = this.objects[id];
		if(obj1.checkCollision(obj2)) {
			obj1.onCollision(obj2);
			obj2.onCollision(obj1);
		}
	}
};

PoolManager.prototype.checkCollisionWithManager = function(manager) {
	for(var obj1_id in this.objects) {
		for(var obj2_id in manager.objects) {
			if(this.objects[obj1_id].checkCollision(manager.objects[obj2_id])) {
				var obj1 = this.objects[obj1_id];
				var obj2 = manager.objects[obj2_id];

				obj1.onCollision(obj2);
				obj2.onCollision(obj1);

				// do not check died object twice
				if (!this.objects[obj1_id]) {
					break;
				}
			}
		}
	}
};

PoolManager.prototype.removeOutOfStageObjects = function() {
	for(var id in this.objects) {
		if(this.objects[id].isOutOfStage()) {
			this.remove(id);
		}
	}
};




module.exports = PoolManager;

},{"../util":134,"./base":119}],121:[function(require,module,exports){
'use strict';

// TODO: add pooling logic
// TODO: split manager class and pool manager class
var base_object = require('./base');
var util = require('../util');
var glmat = require('gl-matrix');

var CONSTANT_3D = require('../constant/webgl').SPRITE3D;

var PoolManager3D = function(scene, Class) {
	base_object.apply(this, arguments);

	this.Class = Class;
	this.objects = {};

	this.vertices = [];
	this.coordinates = [];
	this.indices = [];
	this.colors = [];

	var gl = this.core.gl;
	this.vBuffer = gl.createBuffer();
	this.cBuffer = gl.createBuffer();
	this.iBuffer = gl.createBuffer();
	this.aBuffer = gl.createBuffer();

	this.mvMatrix = glmat.mat4.create();
	this.pMatrix = glmat.mat4.create();
};
util.inherit(PoolManager3D, base_object);

PoolManager3D.prototype.init = function() {
	base_object.prototype.init.apply(this, arguments);

	this.objects = {};

	this._initmvpMatrix();

};
PoolManager3D.prototype._initmvpMatrix = function() {
	// The upper left corner is the canvas origin
	// so reduce canvas width and add canvas height
	glmat.mat4.identity(this.mvMatrix);
	glmat.mat4.translate(this.mvMatrix, this.mvMatrix, [-this.core.width/2, this.core.height/2, 0]);

	this._setOrthographicProjection();
};
PoolManager3D.prototype._setOrthographicProjection = function() {
	glmat.mat4.identity(this.pMatrix);
	var near = 0.1;
	var far  = 10.0;
	glmat.mat4.ortho(this.pMatrix,
		-this.core.width/2,
		this.core.width/2,
		-this.core.height/2,
		this.core.height/2,
		near, far);
};

PoolManager3D.prototype.beforeDraw = function(){
	base_object.prototype.beforeDraw.apply(this, arguments);

	for(var id in this.objects) {
		this.objects[id].beforeDraw();
	}

	// update: vertices, indices, texture coordinates, colors
	this._updateAttributes();
};

// update: vertices, indices, texture coordinates, colors
PoolManager3D.prototype._updateAttributes = function() {
	this._resetAttributes();

	var i = 0;
	for(var id in this.objects) {
		var object = this.objects[id];

		if(!object.isShow()){
			continue;
		}

		var j;
		for(j = 0; j < CONSTANT_3D.V_SIZE; j++) {
			this.vertices[i * CONSTANT_3D.V_SIZE + j] = object.vertices[j];
		}

		for(j = 0; j < CONSTANT_3D.C_SIZE; j++) {
			this.coordinates[i * CONSTANT_3D.C_SIZE + j] = object.coordinates[j];
		}

		for(j = 0; j < CONSTANT_3D.I_SIZE; j++) {
			this.indices[i * CONSTANT_3D.I_SIZE + j] = i * CONSTANT_3D.V_ITEM_NUM + object.indices[j];
		}

		for(j = 0; j < CONSTANT_3D.A_SIZE; j++) {
			this.colors[i * CONSTANT_3D.A_SIZE + j] = object.colors[j];
		}

		i++;
	}
};

PoolManager3D.prototype._resetAttributes = function() {
	this.vertices.length    = 0;
	this.coordinates.length = 0;
	this.indices.length     = 0;
	this.colors.length      = 0;
};




PoolManager3D.prototype.draw = function(){
	base_object.prototype.draw.apply(this, arguments);

	// There is no objects.
	if (this.vertices.length === 0) return;

	var gl = this.core.gl;
	var shader = this.shader();

	gl.useProgram(shader.shader_program);
	gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);
	gl.enable(gl.BLEND);
	gl.disable(gl.DEPTH_TEST);

	this._setupAttribute("aVertexPosition", this.vBuffer, new Float32Array(this.vertices), CONSTANT_3D.V_ITEM_SIZE);
	this._setupAttribute("aTextureCoordinates", this.cBuffer, new Float32Array(this.coordinates), CONSTANT_3D.C_ITEM_SIZE);
	this._setupAttribute("aColor", this.aBuffer, new Float32Array(this.colors), CONSTANT_3D.A_ITEM_SIZE);

	// TODO: use some types of texture
	for(var id in this.objects) {
		var texture = this.objects[id].texture;
		this._setupTexture("uSampler", 0, texture);
		break;
	}

	gl.uniformMatrix4fv(shader.uniform_locations.uPMatrix,  false, this.pMatrix);
	gl.uniformMatrix4fv(shader.uniform_locations.uMVMatrix, false, this.mvMatrix);

	gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.iBuffer);
	gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(this.indices), gl.STATIC_DRAW);

	// TODO: how to implement?
	//this.setupAdditionalVariables();

	gl.drawElements(gl.TRIANGLES, this.indices.length, gl.UNSIGNED_SHORT, 0);

	/*
	 * TODO:
	 * reflect
	 * scaling
	*/
};

PoolManager3D.prototype._setupAttribute = function(attr_name, buffer, data, size){
	var gl = this.core.gl;
	var shader = this.shader();
	gl.bindBuffer(gl.ARRAY_BUFFER, buffer);
	gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);
	gl.enableVertexAttribArray(shader.attribute_locations[attr_name]);
	gl.vertexAttribPointer(shader.attribute_locations[attr_name], size, gl.FLOAT, false, 0, 0);
};
PoolManager3D.prototype._setupTexture = function(uniform_name, unit_no, texture){
	var gl = this.core.gl;
	var shader = this.shader();
	gl.activeTexture(gl["TEXTURE" + unit_no]);
	gl.bindTexture(gl.TEXTURE_2D, texture);
	gl.uniform1i(shader.uniform_locations[uniform_name], unit_no);
};



PoolManager3D.prototype.afterDraw = function(){
	base_object.prototype.afterDraw.apply(this, arguments);
	for(var id in this.objects) {
		this.objects[id].afterDraw();
	}
};

PoolManager3D.prototype.create = function() {
	var object = new this.Class(this.scene);
	object.init.apply(object, arguments);

	this.objects[object.id] = object;

	return object;
};
PoolManager3D.prototype.remove = function(id) {
	delete this.objects[id];
};

PoolManager3D.prototype.checkCollisionWithObject = function(obj1) {
	for(var id in this.objects) {
		var obj2 = this.objects[id];
		if(obj1.checkCollision(obj2)) {
			obj1.onCollision(obj2);
			obj2.onCollision(obj1);
		}
	}
};

PoolManager3D.prototype.checkCollisionWithManager = function(manager) {
	for(var obj1_id in this.objects) {
		for(var obj2_id in manager.objects) {
			if(this.objects[obj1_id].checkCollision(manager.objects[obj2_id])) {
				var obj1 = this.objects[obj1_id];
				var obj2 = manager.objects[obj2_id];

				obj1.onCollision(obj2);
				obj2.onCollision(obj1);

				// do not check died object twice
				if (!this.objects[obj1_id]) {
					break;
				}
			}
		}
	}
};

PoolManager3D.prototype.removeOutOfStageObjects = function() {
	for(var id in this.objects) {
		if(this.objects[id].isOutOfStage()) {
			this.remove(id);
		}
	}
};

PoolManager3D.prototype.shader = function(){
	return this.core.sprite_3d_shader;
};




module.exports = PoolManager3D;

},{"../constant/webgl":103,"../util":134,"./base":119,"gl-matrix":108}],122:[function(require,module,exports){
'use strict';
var base_object = require('./base');
var util = require('../util');

var Sprite = function(scene) {
	base_object.apply(this, arguments);

	this.current_sprite_index = 0;
};
util.inherit(Sprite, base_object);

Sprite.prototype.init = function(){
	base_object.prototype.init.apply(this, arguments);

	this.current_sprite_index = 0;
};

Sprite.prototype.beforeDraw = function(){
	base_object.prototype.beforeDraw.apply(this, arguments);

	// animation sprite
	if(this.frame_count % this.spriteAnimationSpan() === 0) {
		this.current_sprite_index++;
		if(this.current_sprite_index >= this.spriteIndices().length) {
			this.current_sprite_index = 0;
		}
	}
};
Sprite.prototype.draw = function(){
	if(this.isShow()) {

		var image = this.core.image_loader.getImage(this.spriteName());

		if(this.scale()) console.error("scale method is deprecated. you should use scaleWidth and scaleHeight.");

		var ctx = this.core.ctx;

		ctx.save();

		// set position
		ctx.translate(this.globalCenterX(), this.globalCenterY());

		// rotate
		var rotate = util.thetaToRadian(this._velocity.theta + this.rotateAdjust());
		ctx.rotate(rotate);

		var sprite_width  = this.spriteWidth();
		var sprite_height = this.spriteHeight();
		if(!sprite_width)  sprite_width = image.width;
		if(!sprite_height) sprite_height = image.height;

		var width  = this.width();
		var height = this.height();

		// reflect left or right
		if(this.isReflect()) {
			ctx.transform(-1, 0, 0, 1, 0, 0);
		}

		ctx.globalAlpha = this.alpha();
		ctx.drawImage(image,
			// sprite position
			sprite_width * this.spriteIndexX(), sprite_height * this.spriteIndexY(),
			// sprite size to get
			sprite_width,                       sprite_height,
			// adjust left x, up y because of x and y indicate sprite center.
			-width/2,                           -height/2,
			// sprite size to show
			width,                              height
		);
		ctx.restore();
	}

	// draw sub objects(even if this object is not show)
	base_object.prototype.draw.apply(this, arguments);
};

Sprite.prototype.spriteName = function(){
	throw new Error("spriteName method must be overridden.");
};
Sprite.prototype.spriteIndexX = function(){
	return this.spriteIndices()[this.current_sprite_index].x;
};
Sprite.prototype.spriteIndexY = function(){
	return this.spriteIndices()[this.current_sprite_index].y;
};
Sprite.prototype.width = function(){
	return this.spriteWidth() * this.scaleWidth();
};
Sprite.prototype.height = function(){
	return this.spriteHeight() * this.scaleHeight();
};




Sprite.prototype.isShow = function(){
	return true;
};


Sprite.prototype.spriteAnimationSpan = function(){
	return 0;
};
Sprite.prototype.spriteIndices = function(){
	return [{x: 0, y: 0}];
};
Sprite.prototype.spriteWidth = function(){
	return 0;
};
Sprite.prototype.spriteHeight = function(){
	return 0;
};
Sprite.prototype.rotateAdjust = function(){
	return 0;
};

// scale method is deprecated. you should use scaleWidth and scaleHeight
Sprite.prototype.scale = function(){
	return 0;
};


Sprite.prototype.scaleWidth = function(){
	return 1;
};
Sprite.prototype.scaleHeight = function(){
	return 1;
};
Sprite.prototype.isReflect = function(){
	return false;
};
Sprite.prototype.alpha = function() {
	return 1.0;
};





module.exports = Sprite;

},{"../util":134,"./base":119}],123:[function(require,module,exports){
'use strict';
var base_object = require('./base');
var util = require('../util');
var CONSTANT_3D = require('../constant/webgl').SPRITE3D;
var glmat = require('gl-matrix');

var Sprite3d = function(scene) {
	base_object.apply(this, arguments);

	this.current_sprite_index = 0;

	this._z = 0;

	this.vertices = [];
	this.coordinates = [];
	this.indices = [];
	this.colors = [];

	this.vertices.length    = CONSTANT_3D.V_SIZE;
	this.coordinates.length = CONSTANT_3D.C_SIZE;
	this.indices.length     = CONSTANT_3D.I_SIZE;
	this.colors.length      = CONSTANT_3D.A_SIZE;

	var gl = this.core.gl;
	this.vBuffer = gl.createBuffer();
	this.cBuffer = gl.createBuffer();
	this.iBuffer = gl.createBuffer();
	this.aBuffer = gl.createBuffer();

	this.texture = null;

	this.mvMatrix = glmat.mat4.create();
	this.pMatrix = glmat.mat4.create();
};
util.inherit(Sprite3d, base_object);

Sprite3d.prototype.init = function(){
	base_object.prototype.init.apply(this, arguments);

	this.current_sprite_index = 0;

	this._initmvpMatrix();
	this._initVertices();
	this._initCoordinates();
	this._initIndices();
	this._initColors();

	this._initTexture();

};

Sprite3d.prototype._initmvpMatrix = function() {
	// The upper left corner is the canvas origin
	// so reduce canvas width and add canvas height
	glmat.mat4.identity(this.mvMatrix);
	glmat.mat4.translate(this.mvMatrix, this.mvMatrix, [-this.core.width/2, this.core.height/2, 0]);

	this._setOrthographicProjection();
};
Sprite3d.prototype._initVertices = function() {
	var w = this.spriteWidth()/2;
	var h = this.spriteHeight()/2;

	this.vertices[0]  = -w;
	this.vertices[1]  = -h;
	this.vertices[2]  = -1.0;

	this.vertices[3]  =  w;
	this.vertices[4]  = -h;
	this.vertices[5]  = -1.0;

	this.vertices[6]  =  w;
	this.vertices[7]  =  h;
	this.vertices[8]  = -1.0;

	this.vertices[9]  = -w;
	this.vertices[10] =  h;
	this.vertices[11] = -1.0;
};

Sprite3d.prototype._initCoordinates = function() {

	var image = this.core.image_loader.getImage(this.spriteName());

	var w = this.spriteWidth() / image.width;
	var h = this.spriteHeight() / image.height;

	var x1 = w * this.spriteIndexX();
	var y1 = h * this.spriteIndexY();
	var x2 = x1 + w;
	var y2 = y1 + h;

	this.coordinates[0] = x1;
	this.coordinates[1] = y2;

	this.coordinates[2] = x2;
	this.coordinates[3] = y2;

	this.coordinates[4] = x2;
	this.coordinates[5] = y1;

	this.coordinates[6] = x1;
	this.coordinates[7] = y1;
};

Sprite3d.prototype._initIndices = function() {
	this.indices[0] = 0;
	this.indices[1] = 1;
	this.indices[2] = 2;

	this.indices[3] = 0;
	this.indices[4] = 2;
	this.indices[5] = 3;
};

Sprite3d.prototype._initColors = function() {
	this.colors[0] = 1.0;
	this.colors[1] = 1.0;
	this.colors[2] = 1.0;
	this.colors[3] = 1.0;

	this.colors[4] = 1.0;
	this.colors[5] = 1.0;
	this.colors[6] = 1.0;
	this.colors[7] = 1.0;

	this.colors[8] = 1.0;
	this.colors[9] = 1.0;
	this.colors[10] = 1.0;
	this.colors[11] = 1.0;

	this.colors[12] = 1.0;
	this.colors[13] = 1.0;
	this.colors[14] = 1.0;
	this.colors[15] = 1.0;
};

Sprite3d.prototype._initTexture = function() {
	var gl = this.core.gl;
	var image = this.core.image_loader.getImage(this.spriteName());

	var texture = gl.createTexture();

	gl.bindTexture(gl.TEXTURE_2D, texture);
	gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);
	gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
	gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
	gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);
	gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);
	gl.bindTexture(gl.TEXTURE_2D, null);

	this.texture = texture;
};
Sprite3d.prototype._setOrthographicProjection = function() {
	glmat.mat4.identity(this.pMatrix);
	var near = 0.1;
	var far  = 10.0;
	glmat.mat4.ortho(this.pMatrix,
		-this.core.width/2,
		this.core.width/2,
		-this.core.height/2,
		this.core.height/2,
		near, far);
};




Sprite3d.prototype.beforeDraw = function(){
	base_object.prototype.beforeDraw.apply(this, arguments);
	// animation sprite
	if(this.frame_count % this.spriteAnimationSpan() === 0) {
		this.current_sprite_index++;
		if(this.current_sprite_index >= this.spriteIndices().length) {
			this.current_sprite_index = 0;
		}
	}

	// update vertices property
	this._initVertices();
	this._initCoordinates();
	this._translate();
	// TODO: rotate
	//this._rotate();
};


Sprite3d.prototype._translate = function() {
	for(var i = 0; i < CONSTANT_3D.V_ITEM_NUM; i++) {
		this.vertices[i * CONSTANT_3D.V_ITEM_SIZE + 0] += this.x();
		this.vertices[i * CONSTANT_3D.V_ITEM_SIZE + 1] -= this.y();
		this.vertices[i * CONSTANT_3D.V_ITEM_SIZE + 2] += this.z();
	}
};

Sprite3d.prototype._rotate = function() {
	var radian = this._getRadian();
	for(var i = 0; i < CONSTANT_3D.V_ITEM_NUM; i++) {
		var x = this.vertices[i * CONSTANT_3D.V_ITEM_SIZE + 0];
		var y = this.vertices[i * CONSTANT_3D.V_ITEM_SIZE + 1];

		this.vertices[i * CONSTANT_3D.V_ITEM_SIZE + 0] = x * Math.cos(radian) - y * Math.sin(radian);
		this.vertices[i * CONSTANT_3D.V_ITEM_SIZE + 1] = x * Math.sin(radian) + y * Math.cos(radian);
	}
};

Sprite3d.prototype._getRadian = function() {
	var theta = this.velocity.theta;
	return util.thetaToRadian(theta);
};

Sprite3d.prototype.draw = function(){
	if(this.isShow()) {
		var gl = this.core.gl;

		var shader = this.shader();

		gl.useProgram(shader.shader_program);

		gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);
		gl.enable(gl.BLEND);
		gl.disable(gl.DEPTH_TEST);

		this._setupAttribute("aVertexPosition", this.vBuffer, new Float32Array(this.vertices), CONSTANT_3D.V_ITEM_SIZE);
		this._setupAttribute("aTextureCoordinates", this.cBuffer, new Float32Array(this.coordinates), CONSTANT_3D.C_ITEM_SIZE);
		this._setupAttribute("aColor", this.aBuffer, new Float32Array(this.colors), CONSTANT_3D.A_ITEM_SIZE);

		this._setupTexture("uSampler", 0, this.texture);

		gl.uniformMatrix4fv(shader.uniform_locations.uPMatrix,  false, this.pMatrix);
		gl.uniformMatrix4fv(shader.uniform_locations.uMVMatrix, false, this.mvMatrix);

		gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.iBuffer);
		gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(this.indices), gl.STATIC_DRAW);

		// inherit class may implement this.
		this.setupAdditionalVariables();

		gl.drawElements(gl.TRIANGLES, this.indices.length, gl.UNSIGNED_SHORT, 0);

		/*
		 * TODO:
		 * reflect
		 * scaling
		*/
	}

	// draw sub objects(even if this object is not show)
	base_object.prototype.draw.apply(this, arguments);
};

Sprite3d.prototype._setupAttribute = function(attr_name, buffer, data, size){
	var gl = this.core.gl;
	var shader = this.shader();
	gl.bindBuffer(gl.ARRAY_BUFFER, buffer);
	gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);
	gl.enableVertexAttribArray(shader.attribute_locations[attr_name]);
	gl.vertexAttribPointer(shader.attribute_locations[attr_name], size, gl.FLOAT, false, 0, 0);
};
Sprite3d.prototype._setupTexture = function(uniform_name, unit_no, texture){
	var gl = this.core.gl;
	var shader = this.shader();
	gl.activeTexture(gl["TEXTURE" + unit_no]);
	gl.bindTexture(gl.TEXTURE_2D, texture);
	gl.uniform1i(shader.uniform_locations[uniform_name], unit_no);
};




Sprite3d.prototype.z = function(val) {
	if (typeof val !== 'undefined') { this._z = val; }
	return this._z;
};

Sprite3d.prototype.shader = function(){
	return this.core.sprite_3d_shader;
};

// setup additional variables for shader(attributes, uniforms)
Sprite3d.prototype.setupAdditionalVariables = function(){


};






Sprite3d.prototype.spriteName = function(){
	throw new Error("spriteName method must be overridden.");
};
Sprite3d.prototype.spriteIndexX = function(){
	return this.spriteIndices()[this.current_sprite_index].x;
};
Sprite3d.prototype.spriteIndexY = function(){
	return this.spriteIndices()[this.current_sprite_index].y;
};
Sprite3d.prototype.width = function(){
	return this.spriteWidth() * this.scaleWidth();
};
Sprite3d.prototype.height = function(){
	return this.spriteHeight() * this.scaleHeight();
};




Sprite3d.prototype.isShow = function(){
	return true;
};


Sprite3d.prototype.spriteAnimationSpan = function(){
	return 0;
};
Sprite3d.prototype.spriteIndices = function(){
	return [{x: 0, y: 0}];
};
Sprite3d.prototype.spriteWidth = function(){
	return 0;
};
Sprite3d.prototype.spriteHeight = function(){
	return 0;
};
Sprite3d.prototype.rotateAdjust = function(){
	return 0;
};

Sprite3d.prototype.scaleWidth = function(){
	return 1;
};
Sprite3d.prototype.scaleHeight = function(){
	return 1;
};
Sprite3d.prototype.isReflect = function(){
	return false;
};



module.exports = Sprite3d;

},{"../constant/webgl":103,"../util":134,"./base":119,"gl-matrix":108}],124:[function(require,module,exports){
'use strict';
var base_object = require('./base');
var Util = require('../util');

var ObjectUIParts = function(scene, x, y, width, height, draw_function) {
	base_object.apply(this, arguments);

	this.x(x);
	this.y(y);

	this._width  = width;
	this._height = height;

	this._draw_function = Util.bind(draw_function, this);

	this._is_show_rect = false;

	this._scale = 1;
};
Util.inherit(ObjectUIParts, base_object);

ObjectUIParts.prototype.collisionWidth = function(){
	return this._width;
};

ObjectUIParts.prototype.collisionHeight = function(){
	return this._height;
};

ObjectUIParts.prototype.setShowRect = function() {
	this._is_show_rect = true;
	return this;
};

ObjectUIParts.prototype.setVariable = function (name, value){
	this[name] = value;
	return this;
};

ObjectUIParts.prototype.draw = function(){
	base_object.prototype.draw.apply(this, arguments);
	var ctx = this.core.ctx;
	ctx.save();
	this._draw_function();
	ctx.restore();

	if(this._is_show_rect) {
		ctx.save();
		ctx.fillStyle = 'rgb( 255, 255, 255 )' ;
		ctx.globalAlpha = 0.4;
		ctx.fillRect(this.getCollisionLeftX(), this.getCollisionUpY(), this.collisionWidth(), this.collisionHeight());
		ctx.restore();
	}
};

module.exports = ObjectUIParts;

},{"../util":134,"./base":119}],125:[function(require,module,exports){
'use strict';

var SceneBase = function(core) {
	this.core = core;
	this.parent = null; // parent scene if this is sub scene
	this.width = this.core.width; // default
	this.height = this.core.height; // default

	this._x = 0;
	this._y = 0;

	this.frame_count = 0;

	this.objects = [];

	// sub scenes
	this.current_scene = null;
	this._reserved_next_scene = null; // next scene which changes next frame run
	this.scenes = {};

	// property for fade in
	this._fade_in_duration = null;
	this._fade_in_color = null;
	this._fade_in_start_frame_count = null;

	// property for fade out
	this._fade_out_duration = null;
	this._fade_out_color = null;
	this._fade_out_start_frame_count = null;
};

SceneBase.prototype.init = function(){
	// sub scenes
	this.current_scene = null;
	this._reserved_next_scene = null; // next scene which changes next frame run

	this._x = 0;
	this._y = 0;

	this.frame_count = 0;

	// property for fade in
	this._fade_in_duration = null;
	this._fade_in_color = null;
	this._fade_in_start_frame_count = null;

	// property for fade out
	this._fade_out_duration = null;
	this._fade_out_color = null;
	this._fade_out_start_frame_count = null;

	for(var i = 0, len = this.objects.length; i < len; i++) {
		this.objects[i].init();
	}
};

SceneBase.prototype.beforeDraw = function(){
	this.frame_count++;

	// go to next sub scene if next scene is set
	this.changeNextSubSceneIfReserved();

	for(var i = 0, len = this.objects.length; i < len; i++) {
		this.objects[i].beforeDraw();
	}

	if(this.currentSubScene()) this.currentSubScene().beforeDraw();
};

SceneBase.prototype.draw = function(){
	for(var i = 0, len = this.objects.length; i < len; i++) {
		this.objects[i].draw();
	}
	if(this.currentSubScene()) this.currentSubScene().draw();
};

SceneBase.prototype.afterDraw = function(){
	var ctx = this.core.ctx;

	var alpha;
	// fade in
	if (this.isInFadeIn()) {
		ctx.save();

		// tranparent settings
		if(this.frame_count - this._fade_in_start_frame_count < this._fade_in_duration) {
			alpha = 1.0 - (this.frame_count - this._fade_in_start_frame_count) / this._fade_in_duration;
		}
		else {
			alpha = 0.0;
		}

		ctx.globalAlpha = alpha;

		// transition color
		ctx.fillStyle = this._fade_in_color;
		ctx.fillRect(0, 0, this.width, this.height);

		ctx.restore();

		// alpha === 0.0 by transparent settings so quit fade in
		// why there? because alpha === 0, _fade_in_color === null by quitFadeIn method
		if(alpha === 1) this._quitFadeIn();

	}
	// fade out
	else if (this.isInFadeOut()) {
		ctx.save();

		// tranparent settings
		if(this.frame_count - this._fade_out_start_frame_count < this._fade_out_duration) {
			alpha = (this.frame_count - this._fade_out_start_frame_count) / this._fade_out_duration;
		}
		else {
			alpha = 1.0;
		}

		ctx.globalAlpha = alpha;

		// transition color
		ctx.fillStyle = this._fade_out_color;
		ctx.fillRect(0, 0, this.width, this.height);

		ctx.restore();

		// alpha === 1.0 by transparent settings so quit fade out
		// why there? because alpha === 1, _fade_out_color === null by quitFadeOut method
		if(alpha === 1) this._quitFadeOut();
	}

	for(var i = 0, len = this.objects.length; i < len; i++) {
		this.objects[i].afterDraw();
	}

	if(this.currentSubScene()) this.currentSubScene().afterDraw();
};

SceneBase.prototype.addObject = function(object){
	this.objects.push(object);
};
SceneBase.prototype.addObjects = function(object_list){
	this.objects = this.objects.concat(object_list);
};
SceneBase.prototype.removeAllObject = function() {
	this.objects = [];
};
SceneBase.prototype.removeObject = function(object){
	// TODO: O(n) -> O(1)
	for(var i = 0, len = this.objects.length; i < len; i++) {
		if(this.objects[i].id === object.id) {
			this.objects.splice(i, 1);
			break;
		}
	}
};




// set parent scene if this is sub scene
SceneBase.prototype.setParent = function(parent_scene) {
	if(this.parent) throw new Error("already set parent");
	this.parent = parent_scene;
};

SceneBase.prototype.resetParent = function() {
	this.parent = null;
};

SceneBase.prototype.currentSubScene = function() {
	if(this.current_scene === null) {
		return;
	}

	return this.scenes[this.current_scene];
};
SceneBase.prototype.getSubScene = function(name) {
	return this.scenes[name];
};

SceneBase.prototype.addSubScene = function(name, scene) {
	scene.setParent(this);
	this.scenes[name] = scene;
};
SceneBase.prototype.changeSubScene = function() {
	var args = Array.prototype.slice.call(arguments); // to convert array object
	this._reserved_next_scene = args;

};
SceneBase.prototype.changeNextSubSceneIfReserved = function() {
	if(this._reserved_next_scene) {
		this.current_scene = this._reserved_next_scene.shift();

		var current_sub_scene = this.currentSubScene();
		current_sub_scene.init.apply(current_sub_scene, this._reserved_next_scene);

		this._reserved_next_scene = null;
	}

};

SceneBase.prototype.setFadeIn = function(duration, color) {
	this._fade_in_duration = duration || 30;
	this._fade_in_color = color || 'white';

	// start fade in immediately
	this._startFadeIn();
};
SceneBase.prototype._startFadeIn = function() {
	this._quitFadeOut();
	this._fade_in_start_frame_count = this.frame_count;
};

SceneBase.prototype._quitFadeIn = function() {
	this._fade_in_duration = null;
	this._fade_in_color = null;
	this._fade_in_start_frame_count = null;
};
SceneBase.prototype.isInFadeIn = function() {
	return this._fade_in_start_frame_count !== null ? true : false;
};


SceneBase.prototype.setFadeOut = function(duration, color) {
	this._fade_out_duration = duration || 30;
	this._fade_out_color = color || 'black';
};
SceneBase.prototype.startFadeOut = function() {
	if(!this.isSetFadeOut()) return;

	this._quitFadeIn();
	this._fade_out_start_frame_count = this.frame_count;
};

SceneBase.prototype._quitFadeOut = function() {
	this._fade_out_duration = null;
	this._fade_out_color = null;
	this._fade_out_start_frame_count = null;
};
SceneBase.prototype.isInFadeOut = function() {
	return this._fade_out_start_frame_count !== null ? true : false;
};
SceneBase.prototype.isSetFadeOut = function() {
	return this._fade_out_duration && this._fade_out_color ? true : false;
};

SceneBase.prototype.x = function(val) {
	if (typeof val !== 'undefined') { this._x = val; }
	return this._x;
};
SceneBase.prototype.y = function(val) {
	if (typeof val !== 'undefined') { this._y = val; }
	return this._y;
};

module.exports = SceneBase;


},{}],126:[function(require,module,exports){
'use strict';

// loading scene

var base_scene = require('./base');
var util = require('../util');

var SceneLoading = function(core) {
	base_scene.apply(this, arguments);

	// go if the all assets loading is done.
	this.next_scene_name = null;
};
util.inherit(SceneLoading, base_scene);

SceneLoading.prototype.init = function(assets, next_scene_name) {
	base_scene.prototype.init.apply(this, arguments);

	// assets
	var images = assets.images || [];
	var sounds = assets.sounds || [];
	var bgms   = assets.bgms   || [];

	// go if the all assets loading is done.
	this.next_scene_name = next_scene_name;

	for (var key in images) {
		this.core.image_loader.loadImage(key, images[key]);
	}

	for (var key2 in sounds) {
		var conf2 = sounds[key2];
		this.core.audio_loader.loadSound(key2, conf2.path, conf2.volume);
	}

	for (var key3 in bgms) {
		var conf3 = bgms[key3];
		this.core.audio_loader.loadBGM(key3, conf3.path, 1.0, conf3.loopStart, conf3.loopEnd);
	}
};

SceneLoading.prototype.beforeDraw = function() {
	base_scene.prototype.beforeDraw.apply(this, arguments);

	// TODO: not wait font loading if no font is ready to load
	//if (this.core.image_loader.isAllLoaded() && this.core.audio_loader.isAllLoaded() && this.core.font_loader.isAllLoaded()) {
	if (this.core.image_loader.isAllLoaded() && this.core.audio_loader.isAllLoaded()) {
		this.notifyAllLoaded();
	}
};

SceneLoading.prototype.progress = function(){
	var progress = (this.core.audio_loader.progress() + this.core.image_loader.progress() + this.core.font_loader.progress()) / 3;
	return progress;
};

SceneLoading.prototype.draw = function(){
	base_scene.prototype.draw.apply(this, arguments);
};
SceneLoading.prototype.notifyAllLoaded = function(){
	if (this.next_scene_name) {
		this.core.changeScene(this.next_scene_name);
	}
};


module.exports = SceneLoading;

},{"../util":134,"./base":125}],127:[function(require,module,exports){
'use strict';

// movie scene

var base_scene = require('./base');
var util = require('../util');

var SceneMovie = function(core) {
	base_scene.apply(this, arguments);

	this.video = null;

	// go if the movie is done.
	this.next_scene_name = null;

	this.is_playing = false;

	this._height = null;
	this._width  = null;
	this._top    = null;
	this._left   = null;

	this.is_mute = false;
};
util.inherit(SceneMovie, base_scene);

SceneMovie.prototype.init = function(movie_path, next_scene_name) {
	base_scene.prototype.init.apply(this, arguments);

	var self = this;

	self.is_playing = false;

	self._height = null;
	self._width  = null;
	self._top    = null;
	self._left   = null;

	// go if the movie is done.
	self.next_scene_name = next_scene_name;

	// stop bgm if it is played.
	this.core.audio_loader.stopBGM();

	var video = document.createElement("video");
	video.src = movie_path;
	video.controls = false;
	video.preload = "auto";
	video.oncanplaythrough = function () {
		self._calcDrawSizeAndPosition();

		video.play();

		self.is_playing = true;
	};

	if (this.is_mute) {
		video.muted = true;
	}

	video.load();


	self.video = video;
};

SceneMovie.prototype.beforeDraw = function(){
	base_scene.prototype.beforeDraw.apply(this, arguments);

	if(this.is_playing && this.video.ended) {
		this.notifyEnd();
	}
};

SceneMovie.prototype.draw = function(){
	base_scene.prototype.draw.apply(this, arguments);

	var ctx = this.core.ctx;

	if(!ctx) return; // 2D context has been depricated in this game

	ctx.save();
	ctx.fillStyle = 'black';
	ctx.fillRect(0, 0, this.core.width, this.core.height);

	if (this.is_playing) {
		ctx.drawImage(this.video, 0, 0, this.video.videoWidth, this.video.videoHeight, this._left, this._top, this._width, this._height);
	}
	ctx.restore();
};

SceneMovie.prototype._calcDrawSizeAndPosition = function(){
	var scene_aspect = this.width / this.height; // canvas aspect
	var video_aspect = this.video.videoWidth / this.video.videoHeight; // video aspect
	var left, top, width, height;

	if(video_aspect >= scene_aspect) { // video width is larger than it's height
		width = this.width;
		height = this.width / video_aspect;
		top = (this.height - height) / 2;
		left = 0;
	}
	else { // video height is larger than it's width
		height = this.height;
		width = this.height * video_aspect;
		top = 0;
		left = (this.width - width) / 2;
	}


	this._height = height;
	this._width  = width;
	this._top    = top;
	this._left   = left;
};

SceneMovie.prototype.notifyEnd = function(){
	// release video data memory
	this.video = null;

	this.is_playing = false;

	if (this.next_scene_name) {
		this.core.changeScene(this.next_scene_name);
	}
};


module.exports = SceneMovie;

},{"../util":134,"./base":125}],128:[function(require,module,exports){
'use strict';

// typography speed
var TYPOGRAPHY_SPEED = 10;

var Util = require("./util");

var SerifManager = function () {
	this._timeoutID = null;

	// serif scenario
	this._script = null;

	// where serif has progressed
	this._progress = null;

	this._chara_id_list  = [];
	this._exp_id_list    = [];
	this._option = {};

	// which chara is talking, left or right
	this._pos = null;

	this._is_background_changed = false;
	this._background_image_name = null;

	this._char_list = "";
	this._char_idx = 0;

	this._is_enable_printing_message = true;

	// now printing message
	this._line_num = 0;
	this._printing_lines = [];
};

SerifManager.prototype.init = function (script) {
	if(!script) console.error("set script arguments to use serif_manager class");

	// serif scenario
	this._script = script;

	this._chara_id_list  = [];
	this._exp_id_list    = [];
	this._option = {};



	this._progress = -1;
	this._timeoutID = null;
	this._pos  = null;

	this._is_background_changed = false;
	this._background_image_name = null;


	this._char_list = "";
	this._char_idx = 0;

	this._is_enable_printing_message = true;

	this._line_num = 0;
	this._printing_lines = [];

	if(!this.is_end()) {
		this.next(); // start
	}
};

SerifManager.prototype.isEnd = function () {
	return this._progress === this._script.length - 1;
};

SerifManager.prototype.next = function () {
	this._progress++;

	var script = this._script[this._progress];

	this._showChara(script);

	this._showBackground(script);

	this._setOption(script);

	if(script.serif) {
		this._printMessage(script.serif);
	}
	else {
		// If serif is empty, show chara without talking and next
		this.next();
	}
};

SerifManager.prototype._showBackground = function(script) {
	this._is_background_changed = false;
	if(script.background && this._background_image_name !== script.background) {
		this._is_background_changed = true;
		this._background_image_name  = script.background;
	}
};

SerifManager.prototype._showChara = function(script) {
	var pos = script.pos;

	if (pos) {
		// NOTE: for deprecated pos setting
		if (pos === "left")  pos = 0;
		if (pos === "right") pos = 1;

		this._pos  = pos;

		this._chara_id_list[pos] = script.chara;
		this._exp_id_list[pos]   = script.exp;
	}
};

SerifManager.prototype._setOption = function(script) {
	this._option = script.option || {};

	// for deprecated script "font_color"
	if (script.font_color) {
		this._option = Util.shallowCopyHash(this.option);
		this._option.font_color = script.font_color;
	}
};

SerifManager.prototype._printMessage = function (message) {
	// cancel already started message
	this._cancelPrintMessage();

	// setup to show message
	this._char_list = message.split("");
	this._char_idx = 0;

	// clear showing message
	this._line_num = 0;
	this._printing_lines = [];

	this._startPrintMessage();
};
// is waiting to be called next?
SerifManager.prototype.isWaitingNext = function () {
	return this.isEndPrinting() && !this.isEnd();
};

SerifManager.prototype.isEndPrinting = function () {
	var char_length = this._char_list.length;
	return this._char_idx >= char_length ? true : false;
};

SerifManager.prototype._startPrintMessage = function () {
	var char_length = this._char_list.length;
	if (this._char_idx >= char_length) return;

	if(this._is_enable_printing_message) {
		var ch = this._char_list[this._char_idx];
		this._char_idx++;

		if (ch === "\n") {
			this._line_num++;
		}
		else {
			// initialize
			if(!this._printing_lines[this._line_num]) {
				this._printing_lines[this._line_num] = "";
			}

			// show A word
			this._printing_lines[this._line_num] = this._printing_lines[this._line_num] + ch;
		}
	}

	this._timeoutID = setTimeout(Util.bind(this._startPrintMessage, this), TYPOGRAPHY_SPEED);
};

SerifManager.prototype._cancelPrintMessage = function () {
	if(this._timeoutID !== null) {
		clearTimeout(this._timeoutID);
		this._timeoutID = null;
	}
};

SerifManager.prototype.startPrintMessage = function () {
	this._is_enable_printing_message = true;
};
SerifManager.prototype.cancelPrintMessage = function () {
	this._is_enable_printing_message = false;
};

SerifManager.prototype.isBackgroundChanged = function () {
	return this._is_background_changed;
};
SerifManager.prototype.getBackgroundImageName = function () {
	return this._background_image_name;
};

SerifManager.prototype.getImageName = function (pos) {
	pos = pos || 0;
	return(this._chara_id_list[pos] ? this._chara_id_list[pos] + "_" + this._exp_id_list[pos] : null);
};
SerifManager.prototype.isTalking = function (pos) {
	return this._pos === pos ? true : false;
};
SerifManager.prototype.getOption = function () {
	return this._option;
};
SerifManager.prototype.lines = function () {
	return this._printing_lines;
};



// NOTE: deprecated
SerifManager.prototype.right_image = function () {
	var pos = 1; // means right

	return this.getImageName(pos);
};
// NOTE: deprecated
SerifManager.prototype.left_image = function () {
	var pos = 0; // means left

	return this.getImageName(pos);
};
// NOTE: deprecated
SerifManager.prototype.is_right_talking = function () {
	var pos = 1; // means right

	return this.isTalking(pos);
};
// NOTE: deprecated
SerifManager.prototype.is_left_talking = function () {
	var pos = 0; // means left

	return this.isTalking(pos);
};
// NOTE: deprecated
SerifManager.prototype.font_color = function () {
	return this._option.font_color;
};
// NOTE: deprecated
SerifManager.prototype.is_end = function () {
	return this.isEnd();
};
// NOTE: deprecated
SerifManager.prototype.is_background_changed = function () {
	return this.isBackgroundChanged();
};
// NOTE: deprecated
SerifManager.prototype.background_image = function () {
	return this.getBackgroundImageName();
};

module.exports = SerifManager;

},{"./util":134}],129:[function(require,module,exports){
module.exports = "precision mediump float;\nuniform sampler2D uSampler;\nvarying vec2 vTextureCoordinates;\nvarying vec4 vColor;\n\nvoid main() {\n\tvec4 textureColor = texture2D(uSampler, vTextureCoordinates);\n\tgl_FragColor = textureColor * vColor;\n}\n\n";

},{}],130:[function(require,module,exports){
module.exports = "attribute vec3 aVertexPosition;\nattribute vec2 aTextureCoordinates;\nattribute vec4 aColor;\n\nuniform mat4 uMVMatrix;\nuniform mat4 uPMatrix;\nvarying vec2 vTextureCoordinates;\nvarying vec4 vColor;\n\nvoid main() {\n\tgl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);\n\tvTextureCoordinates = aTextureCoordinates;\n\tvColor = aColor;\n}\n\n";

},{}],131:[function(require,module,exports){
'use strict';
var glmat = require("gl-matrix");

var ShaderProgram = function(
	gl,
	vs_text,
	fs_text,
	attribute_variables,
	uniform_variables
) {
	if (!gl) throw new Error("arguments 1 must be WebGLRenderingContext instance");

	this.gl = gl;

	var vs_shader = this.createShader(gl, gl.VERTEX_SHADER, vs_text);
	var fs_shader = this.createShader(gl, gl.FRAGMENT_SHADER, fs_text);
	var shader_program = this.createShaderProgram(gl, vs_shader, fs_shader);

	var i;
	var attribute_locations = {};
	for (i=0; i < attribute_variables.length; i++) {
		attribute_locations[ attribute_variables[i] ] = gl.getAttribLocation(shader_program, attribute_variables[i]);
	}

	var uniform_locations = {};
	for (i=0; i < uniform_variables.length; i++) {
		uniform_locations[ uniform_variables[i] ] = gl.getUniformLocation(shader_program, uniform_variables[i]);
	}

	this.shader_program = shader_program;
	this.attribute_locations = attribute_locations;
	this.uniform_locations = uniform_locations;
};

ShaderProgram.prototype.createShader = function (gl, type, source_text) {
	if(type !== gl.VERTEX_SHADER && type !== gl.FRAGMENT_SHADER) {
		throw new Error ("type must be vertex or fragment");
	}

	var shader = gl.createShader(type);

	gl.shaderSource(shader, source_text);

	gl.compileShader(shader);

	if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {
		throw (
			(type === gl.VERTEX_SHADER ? "Vertex" : "Fragment") + " failed to compile:\n\n" + gl.getShaderInfoLog(shader));
	}

	return shader;
};

ShaderProgram.prototype.createShaderProgram = function(gl, vertex_shader, fragment_shader) {
	var shaderProgram = gl.createProgram();

	gl.attachShader(shaderProgram, vertex_shader);
	gl.attachShader(shaderProgram, fragment_shader);

	gl.linkProgram(shaderProgram);

	if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {
		throw new Error("Could not initialize shaders:\n\n" + gl.getProgramInfoLog(shaderProgram));
	}

	return shaderProgram;
};

module.exports = ShaderProgram;

},{"gl-matrix":108}],132:[function(require,module,exports){
'use strict';

/*
 * TODO: split load and save method by sync and async
 * TODO: compress save data
 * TODO: implement: defineColumnProperty method
 */

var Util = require("../util");

var DEFAULT_KEY = "hakurei_engine:default";

var StorageBase = function (data) {
	if(!data) data = {};
	this._data = data;
};

// save file unique key
// this constant must be overridden!
StorageBase.KEY = function() {
	return DEFAULT_KEY;
};

StorageBase.prototype.set = function(key, value) {
	this._data[key] = value;
};
StorageBase.prototype.get = function(key) {
	return this._data[key];
};
StorageBase.prototype.remove = function(key) {
	return delete this._data[key];
};
StorageBase.prototype.isEmpty = function(key) {
	return Object.keys(this._data).length === 0;
};
StorageBase.prototype.toHash = function() {
	return Util.shallowCopyHash(this._data);
};


// is Electron or NW.js ?
StorageBase.isLocalMode = function() {
	// this is Electron
	if (Util.isElectron()) {
		return true;
	}

	// TODO: NW.js
	return false;
};

StorageBase.prototype.save = function() {
	var Klass = this.constructor;
	if (Klass.isLocalMode()) {
		this._saveToLocalFile();
	}
	else {
		this._saveToWebStorage();

	}
};

StorageBase.prototype._saveToLocalFile = function() {
	var Klass = this.constructor;
	var fs = window.require('fs');

	var data = JSON.stringify(this._data);

	var dir_path = Klass._localFileDirectoryPath();

	var file_path = dir_path + Klass._localFileName(Klass.KEY());

	if (!fs.existsSync(dir_path)) {
		fs.mkdirSync(dir_path);
	}
	fs.writeFileSync(file_path, data);
};

// save file directory
StorageBase._localFileDirectoryPath = function() {
	var path = window.require('path');
	var app  = window.require('electron').remote.app;
	var base = app.getPath("appData");
	var app_name = app.getName();
	return path.join(base, app_name, 'save/');
};

StorageBase._localFileName = function(key) {
	return key + ".json";
};

StorageBase._localFilePath = function(key) {
	return this._localFileDirectoryPath() + this._localFileName(key);
};

StorageBase.prototype._saveToWebStorage = function() {
	var Klass = this.constructor;

	var key = Klass.KEY();
	var data = JSON.stringify(this._data);
	try {
		window.localStorage.setItem(key, data);
	}
	catch (e) {
	}
};

StorageBase.load = function() {
	var data;
	if (this.isLocalMode()) {
		data = this._loadFromLocalFile();
	}
	else {
		data = this._loadFromWebStorage();
	}

	var Klass = this;
	if (data) {
		// there is a storage data
		return new Klass(data);
	}
	else {
		// there is NOT a storage data
		return new Klass();
	}

};

StorageBase._loadFromLocalFile = function() {
	var fs = window.require('fs');

	var file_path = this._localFilePath(this.KEY());
	if (!fs.existsSync(file_path)) return null;

	var data = fs.readFileSync(file_path, { encoding: 'utf8' });

	var Klass = this;
	if (data) {
		return JSON.parse(data);
	}
	else {
		return null;
	}
};

StorageBase._loadFromWebStorage = function() {
	var key = this.KEY();
	var data;
	try {
		data = window.localStorage.getItem(key);
	}
	catch (e) {
	}

	var Klass = this;
	if (data) {
		return JSON.parse(data);
	}
	else {
		return null;
	}

};

StorageBase.prototype.del = function() {
	var Klass = this.constructor;
	if (Klass.isLocalMode()) {
		this._removeLocalFile();
	}
	else {
		this._removeWebStorage();
	}

	// reset this object properties
	this._data = {};
};

StorageBase.prototype._removeLocalFile = function() {
	var Klass = this.constructor;
	var fs = window.require('fs');
	var file_path = this._localFilePath(Klass.KEY());

	if (fs.existsSync(file_path)) {
		fs.unlinkSync(file_path);
	}
};

StorageBase.prototype._removeWebStorage = function() {
	var Klass = this.constructor;
	var key = Klass.KEY();
	try {
		window.localStorage.removeItem(key);
	}
	catch (e) {
	}
};

module.exports = StorageBase;

},{"../util":134}],133:[function(require,module,exports){
'use strict';
var base_class = require('./base');
var util = require('../util');

var StorageSave = function(scene) {
	base_class.apply(this, arguments);
};
util.inherit(StorageSave, base_class);

StorageSave.KEY = function(){
	var key = "hakurei_engine:save";
	if (!this.isLocalMode() && window && window.location) {
		return(key + ":" + window.location.pathname);
	}
	else {
		return "save";
	}
};

module.exports = StorageSave;

},{"../util":134,"./base":132}],134:[function(require,module,exports){
'use strict';
var Util = {
	inherit: function( child, parent ) {
		// inherit instance methods
		var getPrototype = function(p) {
			if(Object.create) return Object.create(p);

			var F = function() {};
			F.prototype = p;
			return new F();
		};
		child.prototype = getPrototype(parent.prototype);
		child.prototype.constructor = child;

		// inherit static methods
		for (var func_name in parent) {
			child[func_name] = parent[func_name];
		}
	},
	radianToTheta: function(radian) {
		return (radian * 180 / Math.PI) | 0;
	},
	thetaToRadian: function(theta) {
		return theta * Math.PI / 180;
	},
	calcMoveXByVelocity: function(velocity) {
		return velocity.magnitude * Math.cos(Util.thetaToRadian(velocity.theta));
	},
	calcMoveYByVelocity: function(velocity) {
		return velocity.magnitude * Math.sin(Util.thetaToRadian(velocity.theta));
	},
	hexToRGBString: function(h) {
		var hex16 = (h.charAt(0) === "#") ? h.substring(1, 7) : h;
		var r = parseInt(hex16.substring(0, 2), 16);
		var g = parseInt(hex16.substring(2, 4), 16);
		var b = parseInt(hex16.substring(4, 6), 16);

		return 'rgb(' + r + ', ' + g + ', ' + b + ')';
	},
	clamp: function(num, min, max) {
		return (num < min ? min : (num > max ? max : num));
	},
	isElectron: function() {
		if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {
			return true;
		}
		return false;
	},
	canPlayOgg: function () {
		var audio = document.createElement('audio');
		if (audio.canPlayType) {
			return audio.canPlayType('audio/ogg');
		}

		return false;
	},

	getRandomInt: function(min, max) {
		if (arguments.length === 1) {
			max = arguments[0];
			min = 1;
		}

		return Math.floor( Math.random() * (max - min + 1) ) + min;
	},
	shallowCopyHash: function (src_hash) {
		var dst_hash = {};
		for(var k in src_hash){
			dst_hash[k] = src_hash[k];
		}
		return dst_hash;
	},

	// for old browser
	assign: function assign(target, varArgs) { // .length of function is 2
		if (!target) { // TypeError if undefined or null
			throw new TypeError('Cannot convert undefined or null to object');
		}

		var to = Object(target);

		for (var index = 1; index < arguments.length; index++) {
			var nextSource = arguments[index];

			if (nextSource) { // Skip over if undefined or null
				for (var nextKey in nextSource) {
					// Avoid bugs when hasOwnProperty is shadowed
					if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {
						to[nextKey] = nextSource[nextKey];
					}
				}
			}
		}
		return to;
	},

	// for old browser
	bind: function(func, oThis) {
		if (typeof func !== 'function') {
			// closest thing possible to the ECMAScript 5
			// internal IsCallable function
			throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');
		}

		var aArgs   = Array.prototype.slice.call(arguments, 1),
		fToBind = func,
		FNOP    = function() {},
		fBound  = function() {
			return fToBind.apply(func instanceof FNOP ? func : oThis,
				aArgs.concat(Array.prototype.slice.call(arguments)));
		};

		if (func.prototype) {
			// Function.prototype doesn't have a prototype property
			FNOP.prototype = func.prototype;
		}
		fBound.prototype = new FNOP();

		return fBound;
	},
};

module.exports = Util;

},{}],135:[function(require,module,exports){
'use strict';
var Game = require('./game');
var CONSTANT = require('./constant');

var game;

window.onload = function() {
	// Canvas
	var mainCanvas = document.getElementById('mainCanvas');
	// Game オブジェクト
	game = new Game(mainCanvas);
	// 初期化
	game.init();
	// イベントハンドラの設定
	game.setupEvents();

	// デバッグ設定
	if (CONSTANT.DEBUG.ON) {
		var debugDOM = document.getElementById('debug');
		game.setupDebug(debugDOM);
	}

	// ゲーム起動
	game.startRun();

	// for phantomjs headless test
	window.game = game;
};
window.onerror = function (msg, file, line, column, err) {
	/*
	msg: error message
	file: file path
	line: row number
	column: column number
	err: error object
	*/ 
	//window.alert(msg + "\n" + line + ":" + column);
};
window.changeFullScreen = function () {
	game.fullscreen();
};

// Electron のレンダラプロセスならば
if(window.require) {
	window.require('electron').webFrame.setVisualZoomLevelLimits(1,1); //zoomさせない
}



},{"./constant":87,"./game":97}],136:[function(require,module,exports){
'use strict';
var base_object = require('../hakurei').object.sprite;
var Util = require('../hakurei').util;
var CONSTANT = require('../constant');

var ObjectEye = function(core) {
	base_object.apply(this, arguments);
};
Util.inherit(ObjectEye, base_object);

ObjectEye.prototype.init = function(){
	base_object.prototype.init.apply(this, arguments);
	this.setPosition();
};

ObjectEye.prototype.onCollision = function(obj){
	var stage = this.scene.mainStage();


	if (stage.isUsingEye()) {
		// サードアイOff
		stage.unUseEye();
	}
	else {
		this.core.playSound("use_3rdeye");

		// サードアイOn
		stage.useEye();
	}
};


ObjectEye.prototype.setPosition = function(){
	this.x(this.scene.mainStage().width - 48 - 20);
	this.y(this.scene.mainStage().height - 70);
};

ObjectEye.prototype.collisionWidth = function(){
	return 200;
};

ObjectEye.prototype.collisionHeight = function(){
	return 160;
};

ObjectEye.prototype.spriteName = function(){
	return "eye";
};
ObjectEye.prototype.spriteIndices = function(){
	return [{x: 0, y: 0}];
};
ObjectEye.prototype.spriteWidth = function(){
	return 260;
};
ObjectEye.prototype.spriteHeight = function(){
	return 180;
};
ObjectEye.prototype.scaleHeight = function(){
	return 0.8;
};
ObjectEye.prototype.scaleWidth = function(){
	return 0.8;
};
module.exports = ObjectEye;

},{"../constant":87,"../hakurei":98}],137:[function(require,module,exports){
'use strict';
var base_object = require('../hakurei').object.sprite;
var Util = require('../hakurei').util;
var CONSTANT = require('../constant');

var ObjectItemButton = function(core) {
	base_object.apply(this, arguments);
};
Util.inherit(ObjectItemButton, base_object);

ObjectItemButton.prototype.init = function(){
	base_object.prototype.init.apply(this, arguments);
	this.setPosition();
};

ObjectItemButton.prototype.setPosition = function(){
	this.x(48 + 32);
	this.y(this.scene.mainStage().height - 75);
};

ObjectItemButton.prototype.onCollision = function(obj){
	this.core.playSound("open_menu");

	var scene_name = this.scene.mainStage().current_scene;
	if (scene_name === "play") {
		// メニューを開く
		this.scene.mainStage().changeSubScene("menu");
	}
	else if (scene_name === "menu") {
		// メニューを閉じる
		this.scene.mainStage().changeSubScene("play");
	}
};

ObjectItemButton.prototype.collisionWidth = function(){
	return 128;
};

ObjectItemButton.prototype.collisionHeight = function(){
	return 128;
};

ObjectItemButton.prototype.spriteName = function(){
	return "tool";
};
ObjectItemButton.prototype.spriteIndices = function(){
	return [{x: 0, y: 0}];
};
ObjectItemButton.prototype.spriteWidth = function(){
	return 260;
};
ObjectItemButton.prototype.spriteHeight = function(){
	return 180;
};
ObjectItemButton.prototype.scaleHeight = function(){
	return 0.6;
};
ObjectItemButton.prototype.scaleWidth = function(){
	return 0.6;
};
module.exports = ObjectItemButton;

},{"../constant":87,"../hakurei":98}],138:[function(require,module,exports){
'use strict';

// こいしの歩く速度
var SPEED = 2;

var base_object = require('../hakurei').object.base;
var util = require('../hakurei').util;
var CONSTANT = require('../constant');


/* 使用用途	リピート	fps	フレーム	時間 */

// 	待機	可	30	45	1.5秒
var jsonDataOfWait = require('../anime/koishi/wait_anime_1');
//	歩き	可	30	30	1秒
var jsonDataOfWalk = require('../anime/koishi/walk_anime_1');
// 	サードアイ使用	不	30	15	0.5秒
var jsonDataOfReaction3rdeye = require('../anime/koishi/reaction_3rdeye_anime_1');
// 	下を見る	不	30	15	0.5秒
var jsonDataOfReactionLookBottom = require('../anime/koishi/reaction_look_bottom_anime_1');
// 	前を見る	不	30	15	0.5秒
var jsonDataOfReactionLookFront = require('../anime/koishi/reaction_look_front_anime_1');
//	上を見る	不	30	15	0.5秒
var jsonDataOfReactionLookTop = require('../anime/koishi/reaction_look_top_anime_1');
//	触る、物を取る	不	30	15	0.5秒
var jsonDataOfReactionTouch = require('../anime/koishi/reaction_touch_anime_1');
//	YES、うなずく	不	30	15	0.5秒
var jsonDataOfReactionYes = require('../anime/koishi/reaction_yes_anime_1');

var SS = require('../object/sprite_studio');


var Koishi = function (scene) {
	base_object.apply(this, arguments);

	this.sprite = new SS(this.scene);
};
util.inherit(Koishi, base_object);

Koishi.prototype.init = function() {
	base_object.prototype.init.apply(this, arguments);

	this._target_x = 0;
	this._target_y = 0;
	this._target_object = null;
	this._move_callback = null; // 歩いて止まった後の callback

	this.setVelocity({magnitude:0, theta:0});
};

Koishi.prototype.setPosition = function(x, y) {
	base_object.prototype.setPosition.apply(this, arguments);
	this.sprite.init(x, y, jsonDataOfWait, 0, {scale: 0.6});
};

Koishi.prototype.setWait = function() {
	this.sprite.changeAnimation(jsonDataOfWait);
};
Koishi.prototype.setWalk = function() {
	this.sprite.changeAnimation(jsonDataOfWalk);
};
Koishi.prototype.useEye = function(){
	this.stopMove();
	var self = this;

	var sprite = self.sprite;
	sprite.playAnimationOnce(jsonDataOfReaction3rdeye);
};
Koishi.prototype.unUseEye = function(){
	var self = this;

	if (!this.isMoving()) {
		this.setWait();
	}
};
Koishi.prototype.actionByName = function(action_name) {
	this.stopMove();
	var self = this;

	var sprite = self.sprite;
	sprite.playAnimationOnce(this._getAction(action_name));
};

Koishi.prototype._getAction = function(action_name) {
	// 下を見る
	if (action_name === "look_bottom") {
		return jsonDataOfReactionLookBottom;
	}
	// 前を見る
	else if (action_name === "look_front") {
		return jsonDataOfReactionLookFront;
	}
	// 上を見る
	else if (action_name === "look_top") {
		return jsonDataOfReactionLookTop;
	}
	// 触る
	else if (action_name === "touch") {
		return jsonDataOfReactionTouch;
	}
	else {
		throw new Error("action_name: " + action_name + "does not exists.");
	}
};



Koishi.prototype.setReflect = function(flag) {
	this.sprite.setReflect(flag);
};
Koishi.prototype.isReflect = function() {
	return this.sprite.isReflect();
};


Koishi.prototype.setAfterMoveCallback = function(cb) {
	this._move_callback = cb;
};




Koishi.prototype.beforeDraw = function(){
	base_object.prototype.beforeDraw.apply(this, arguments);

	// 足音
	if (this.isMoving()) {
		var walk_sound = this.scene.field().walk_sound;

		// 屋敷の廊下2は、病院の廊下の床と木の床の境なので、円判定で、音を切り替える
		if (this.scene.field().key === "chapter0_hospital_corridor2") {
			var arc_x = 860;
			var arc_y = 95;
			var r = 600;

			// 円と点の衝突判定
			if (Math.pow(arc_x-this.x(), 2) + Math.pow(arc_y-this.y(), 2) <= Math.pow(r, 2)) {
				walk_sound = "walking_bare_wood";
			}
		}

		if(this.sprite.sprite.getFrameNo() === 14) {
			this.core.playSound(walk_sound + "_right");
		}
		else if(this.sprite.sprite.getFrameNo() === 29) {
			this.core.playSound(walk_sound + "_left");
		}

	}

	// update sprite
	this.sprite.x(this.x());
	this.sprite.y(this.y());
	this.sprite.beforeDraw();

	// move
	if (this._target_x) {
		if (this.x() + SPEED >= this._target_x && this._target_x > this.x() - SPEED) {
			// end move
			this.stopMove();
		}
	}
	if (this._target_y) {
		if (this.y() + SPEED >= this._target_y && this._target_y > this.y() - SPEED) {
			// end move
			this.stopMove();
		}
	}
	// オブジェクトとぶつかったら止まる
	if (this.isMoving() && this.checkCollisionWithObjects(this.scene.walk_immovable_areas)) {
		this.stopMove();
	}

	// 一定以上の奥行きには移動できない
	if (this.y() < this.scene.height - CONSTANT.WALK_DEPTH_LIMIT) {
		this.y(this.scene.height - CONSTANT.WALK_DEPTH_LIMIT);
	}
};


Koishi.prototype.onCollision = function(obj) {
	/*
	// オブジェクトの下にこいし
	if(obj.y() < this.y() && obj.getCollisionDownY() > this.y()) {
		this.y(obj.getCollisionDownY());
	}
	// オブジェクトの上にこいし
	else if(obj.y() > this.y() && obj.getCollisionUpY() < this.y()) {
		this.y(obj.getCollisionDownY());
	}
	// オブジェクトの右にこいし
	if(obj.x() > this.x() && obj.getCollisionRightX() < this.x()) {
		this.x(obj.getCollisionRightX());
	}
	// オブジェクトの左にこいし
	else if(obj.x() < this.x() && obj.getCollisionLeftX() > this.x()) {
		this.x(obj.getCollisionLeftX());
	}
	*/
	this.moveBack();

	if (this._target_object && this._target_object.id !== obj.__id) {
		this._move_callback = null;
	}
};

Koishi.prototype.draw = function(){
	base_object.prototype.draw.apply(this, arguments);
	this.sprite.draw();
};





Koishi.prototype.setMoveTargetObject = function(point, obj) {
	this._target_object = obj;
	return this.setMoveTarget(point.x(), point.y());
};
Koishi.prototype.setMoveTarget = function(x, y) {
	base_object.prototype.beforeDraw.apply(this, arguments);
	var ax = x - this.x();
	var ay = y - this.y();

	var theta = util.radianToTheta(Math.atan2(ay, ax));

	this.setVelocity({magnitude:SPEED, theta:theta});

	this._target_x = x;
	this._target_y = y;

	this.setWalk();
	if (this._target_x > this.x()) {
		this.sprite.setReflect(false);
	}
	else {
		this.sprite.setReflect(true);
	}
};

Koishi.prototype.isMoving = function() {
	return this._target_x !== 0 && this._target_y !== 0;
};
Koishi.prototype.stopMoveWithoutCallBack = function() {
	if(!this.isMoving()) return;

	this._target_x = 0;
	this._target_y = 0;
	this._target_object = null;
	this.setVelocity({magnitude:0, theta:0});

	this.setWait();
};
Koishi.prototype.stopMove = function() {
	this.stopMoveWithoutCallBack();
	// 歩いたあとのコールバック
	if (this._move_callback) {
		var cb = this._move_callback;
		this._move_callback = null;
		cb();
	}
};

Koishi.prototype.collisionWidth = function(){
	return 1;
};

Koishi.prototype.collisionHeight = function(){
	return 1;
};




module.exports = Koishi;

},{"../anime/koishi/reaction_3rdeye_anime_1":78,"../anime/koishi/reaction_look_bottom_anime_1":79,"../anime/koishi/reaction_look_front_anime_1":80,"../anime/koishi/reaction_look_top_anime_1":81,"../anime/koishi/reaction_touch_anime_1":82,"../anime/koishi/reaction_yes_anime_1":83,"../anime/koishi/wait_anime_1":84,"../anime/koishi/walk_anime_1":85,"../constant":87,"../hakurei":98,"../object/sprite_studio":144}],139:[function(require,module,exports){
'use strict';
var base_object = require('../hakurei').object.sprite;
var Util = require('../hakurei').util;
var CONSTANT = require('../constant');

var ObjectLeftYajirushi = function(core) {
	base_object.apply(this, arguments);
};
Util.inherit(ObjectLeftYajirushi, base_object);

ObjectLeftYajirushi.prototype.init = function(){
	base_object.prototype.init.apply(this, arguments);
	this.setPosition();
};

ObjectLeftYajirushi.prototype.onCollision = function(obj){
	// フィールド遷移
	this.scene.mainStage().setFadeOut(30, "black");
	this.core.changeScene("stage", this.scene.mainStage().field().left_field, true);
};

ObjectLeftYajirushi.prototype.setPosition = function(){
	this.x(48);
	this.y(this.scene.mainStage().height/2);
};

ObjectLeftYajirushi.prototype.collisionWidth = function(){
	return 128;
};

ObjectLeftYajirushi.prototype.collisionHeight = function(){
	return 128;
};

ObjectLeftYajirushi.prototype.spriteName = function(){
	return "arrow";
};
ObjectLeftYajirushi.prototype.spriteIndices = function(){
	return [{x: 0, y: 0}];
};
ObjectLeftYajirushi.prototype.spriteWidth = function(){
	return 136;
};
ObjectLeftYajirushi.prototype.spriteHeight = function(){
	return 124;
};
ObjectLeftYajirushi.prototype.scaleHeight = function(){
	return 0.6;
};
ObjectLeftYajirushi.prototype.scaleWidth = function(){
	return 0.6;
};
ObjectLeftYajirushi.prototype.rotateAdjust = function(){
	return 180;
};


module.exports = ObjectLeftYajirushi;

},{"../constant":87,"../hakurei":98}],140:[function(require,module,exports){
'use strict';

/* メニューのアイテム */

var base_object = require('../hakurei').object.base;
var Util = require('../hakurei').util;
var CONSTANT = require('../constant');

var ObjectMenuItem = function(scene, item_id) {
	base_object.apply(this, arguments);

	this.item_id = item_id;
};
Util.inherit(ObjectMenuItem, base_object);

ObjectMenuItem.prototype.init = function(){
	base_object.prototype.init.apply(this, arguments);
};


ObjectMenuItem.prototype.onCollision = function(obj){
	this.core.playSound("select_item");
	this.scene.focus_item_id = this.item_id;
};

ObjectMenuItem.prototype.draw = function(){
	base_object.prototype.draw.apply(this, arguments);
	var ctx = this.core.ctx;
	ctx.save();

	// デバッグ用の仮描画する
	if (!CONSTANT.DEBUG.ON) return;


	// 仮で四角形を描画
	ctx.fillStyle = 'rgb( 255, 255, 255 )' ;
	//ctx.globalAlpha = 0.4;
	ctx.fillRect(this.getCollisionLeftX(), this.getCollisionUpY(), this.collisionWidth(), this.collisionHeight());

	// 選択しているアイテムなら
	if (this.scene.focus_item_id === this.item_id) {
		ctx.strokeStyle = "rgb(200, 0, 0)";
		ctx.lineWidth = 10;
		ctx.strokeRect(this.getCollisionLeftX(), this.getCollisionUpY(), this.collisionWidth(), this.collisionHeight());
	}

	// メニュー文字 表示
	ctx.font = "24px 'Migu'";
	ctx.textAlign = 'center';
	ctx.textBaseAlign = 'middle';
	ctx.fillStyle = 'rgb( 0, 0, 0 )';
	ctx.fillText("ITEM1", this.x() + 5, this.y() + 5);

	ctx.restore();
};



ObjectMenuItem.prototype.collisionWidth = function(){
	return 128;
};

ObjectMenuItem.prototype.collisionHeight = function(){
	return 128;
};


// アイテムが使用されたとき
ObjectMenuItem.prototype.use = function(){
	this.core.playSound("use_eyedrops");
	this.core.save_manager.increase3rdeyeGauge(100); // TODO:
};








module.exports = ObjectMenuItem;

},{"../constant":87,"../hakurei":98}],141:[function(require,module,exports){
'use strict';
var base_object = require('../../hakurei').object.base;
var Util = require('../../hakurei').util;
var SS = require('../sprite_studio');
var AnimeMap = require('../../anime');
var WalkImmovableArea = require('../walk_immovable_area');

var ObjectAnimeImage = function(core) {
	base_object.apply(this, arguments);

	// 拡縮
	this.scale = 1;

	this.before_anime = null;
	this.click_anime  = null;
	this.after_anime  = null;
	this.onmouseover_start_anime = null;
	this.onmouseover_anime       = null;
	this.onmouseover_end_anime   = null;


	this.serif = null;

	this._width  = null;
	this._height = null;

	this._action_name = null;

	this._sound_name  = null;
	this._sound_back_name  = null;

	// アニメ
	this.sprite = new SS(this.scene);

	this._is_touch = false;
	this._is_mouseover = false;
};
Util.inherit(ObjectAnimeImage, base_object);

ObjectAnimeImage.prototype.init = function(){
	base_object.prototype.init.apply(this, arguments);

	this.scale = 1;
	this.before_anime = null;
	this.click_anime  = null;
	this.after_anime  = null;
	this.onmouseover_start_anime = null;
	this.onmouseover_anime       = null;
	this.onmouseover_end_anime   = null;

	this.serif = null;

	this._width  = null;
	this._height = null;

	this._action_name = null;

	this._sound_name  = null;
	this._sound_back_name  = null;

	this._is_touch = false;
	this._is_mouseover = false;
};
ObjectAnimeImage.prototype.setPosition = function(x, y) {
	base_object.prototype.setPosition.apply(this, arguments);

	this.sprite.init(x, y, this.before_anime, 0, {scale: this.scale});

	// update sprite
	this.sprite.x(this.x());
	this.sprite.y(this.y());
};

ObjectAnimeImage.prototype.addAnime = function(before_anime, click_anime, after_anime, onmouseover_start_anime, onmouseover_anime, onmouseover_end_anime, scale){
	this.scale = scale || 1;
	this.before_anime = AnimeMap[before_anime];
	this.click_anime  = AnimeMap[click_anime];
	this.after_anime  = AnimeMap[after_anime];
	this.onmouseover_start_anime = AnimeMap[onmouseover_start_anime];
	this.onmouseover_anime       = AnimeMap[onmouseover_anime];
	this.onmouseover_end_anime   = AnimeMap[onmouseover_end_anime];
};
ObjectAnimeImage.prototype.addSerif = function(serif) {
	this.serif = serif;
};
ObjectAnimeImage.prototype.addSize = function(width, height){
	this._width  = width;
	this._height = height;
};
ObjectAnimeImage.prototype.addKoishiAction = function(action_name){
	this._action_name  = action_name;
};
ObjectAnimeImage.prototype.addSound = function(sound_name, sound_back_name){
	this._sound_name  = sound_name;
	this._sound_back_name  = sound_back_name;
};







ObjectAnimeImage.prototype.onCollision = function(obj){
	// クリックした場合
	if(this.core.input_manager.isLeftClickPush()) {
		// サードアイ使用中なら今のところ何もしない
		if (this.scene.mainStage().isUsingEye()) return;

		if (!this.scene.mainStage().koishi().isMoving()) {
			this.scene.mainStage().koishi().setMoveTargetObject(obj, this);
			this.scene.mainStage().koishi().setAfterMoveCallback(Util.bind(this.onCollisionAfterKoishiWalk, this));
		}
	}
	// マウスオーバーした場合
	else {
		this.onCollisionByMouseOver();
	}
};
ObjectAnimeImage.prototype.onCollisionAfterKoishiWalk = function(){
	var self = this;

	if (this._is_touch) return;
	// オブジェクトのアニメーション
	var sprite = self.sprite;
	var after_anime = self.after_anime;
	var click_anime = self.click_anime;
	sprite.playAnimationOnce(click_anime, function (){
		sprite.changeAnimation(after_anime);
	});

	// 会話するオブジェクトなので、クリックしたら会話する
	if (this.serif) {
		this.scene.mainStage().changeSubScene("talk", this.serif);
	}

	// こいしのアクション
	if (this._action_name) {
		this.scene.mainStage().koishi().actionByName(this._action_name);
	}

	// 音
	if (this._sound_name) {
		this.core.playSound(this._sound_name);
	}
	this._is_touch = true;
};


// マウスオーバーした場合
ObjectAnimeImage.prototype.onCollisionByMouseOver = function(){
	// サードアイを使用してなければ何もしない
	if (!this.scene.mainStage().isUsingEye()) return;

	// 既にマウスオーバーアニメ中なら何もしない
	if (this._is_mouseover) return;

	// マウスオーバーアニメが設定されてないオブジェクトなら何もしない
	if (!this.onmouseover_start_anime && !this.onmouseover_anime && !this.onmouseover_end_anime) return;

	// こいしの後ろにマウスカーソルがあるならアニメしない
	var x = this.core.input_manager.mousePositionX();
	if (this.scene.mainStage().koishi().isReflect()) {
		if (this.scene.mainStage().koishi().x() < x) {
			return;
		}
	}
	else {
		if (this.scene.mainStage().koishi().x() > x) {
			return;
		}
	}



	this._is_mouseover = true;

	var sprite = this.sprite;
	var onmouseover_anime = this.onmouseover_anime;
	sprite.playAnimationOnce(this.onmouseover_start_anime, function (){
		sprite.changeAnimation(onmouseover_anime);
	});

	// 音
	if (this._sound_back_name) {
		this.core.playSound(this._sound_back_name);
	}
};

ObjectAnimeImage.prototype.beforeDraw = function() {
	base_object.prototype.beforeDraw.apply(this, arguments);
	this.sprite.beforeDraw();

	if(this._is_mouseover) {
		// マウス位置したところを取得
		var x = this.core.input_manager.mousePositionX();
		var y = this.core.input_manager.mousePositionY();

		// マウスオーバーしてないなら解除
		if(!this.checkCollisionWithPosition(x, y)) {
			var sprite = this.sprite;
			var anime = this._is_touch ? this.after_anime : this.before_anime;
			sprite.playAnimationOnce(this.onmouseover_end_anime, function (){
				sprite.changeAnimation(anime);
			});


			this._is_mouseover = false;
		}
	}
};



ObjectAnimeImage.prototype.draw = function(){
	base_object.prototype.draw.apply(this, arguments);
	var ctx = this.core.ctx;

	this.sprite.draw();
};


ObjectAnimeImage.prototype.collisionWidth = function(){
	if(this._width) return this._width;
	// index = 0 のみ有効
	return this.before_anime[0].animation.MarginWidth * this.scale;
};

ObjectAnimeImage.prototype.collisionHeight = function(){
	if(this._height) return this._height;
	// index = 0 のみ有効
	return this.before_anime[0].animation.MarginHeight * this.scale;
};
ObjectAnimeImage.prototype.getImmovableArea = function() {
	var area = new WalkImmovableArea(this.scene);
	area.init();
	area.setPosition(this.x(), this.y() + this.collisionHeight()/4);
	area.setSize(this.collisionWidth(), this.collisionHeight()/2);
	area.setParentID(this.id);

	return area;
};


module.exports = ObjectAnimeImage;

},{"../../anime":1,"../../hakurei":98,"../sprite_studio":144,"../walk_immovable_area":145}],142:[function(require,module,exports){
'use strict';
var base_object = require('../../hakurei').object.base;
var Util = require('../../hakurei').util;
var WalkImmovableArea = require('../walk_immovable_area');

var ObjectStaticImage = function(core) {
	base_object.apply(this, arguments);

	// 画像オブジェクト
	this.image = null;

	// 画像の拡縮
	this.scale = 1;

	this.serif = null;

	this._width  = null;
	this._height = null;

	this._action_name = null;

	this._sound_name  = null;
};
Util.inherit(ObjectStaticImage, base_object);

ObjectStaticImage.prototype.init = function(){
	base_object.prototype.init.apply(this, arguments);

	this.image = null;
	this.scale = 1;
	this.serif = null;

	this._width  = null;
	this._height = null;

	this._action_name = null;

	this._sound_name  = null;
};
ObjectStaticImage.prototype.addImage = function(image_name, scale){
	this.image = this.core.image_loader.getImage(image_name);
	this.scale = scale || 1;
};
ObjectStaticImage.prototype.addSerif = function(serif) {
	this.serif = serif;
};
ObjectStaticImage.prototype.addSize = function(width, height){
	this._width  = width;
	this._height = height;
};
ObjectStaticImage.prototype.addKoishiAction = function(action_name){
	this._action_name  = action_name;
};
ObjectStaticImage.prototype.addSound = function(sound_name){
	this._sound_name  = sound_name;
};



ObjectStaticImage.prototype.onCollision = function(obj){
	// クリックした場合
	if(this.core.input_manager.isLeftClickPush()) {
		if (!this.scene.mainStage().koishi().isMoving()) {
			this.scene.mainStage().koishi().setMoveTargetObject(obj, this);
			this.scene.mainStage().koishi().setAfterMoveCallback(Util.bind(this.onCollisionAfterKoishiWalk, this));
		}
	}
	// マウスオーバーした場合
	else {

	}
};


ObjectStaticImage.prototype.onCollisionAfterKoishiWalk = function(){
	// 会話するオブジェクトなので、クリックしたら会話する
	this.scene.mainStage().changeSubScene("talk", this.serif);

	// こいしのアクション
	if (this._action_name) {
		this.scene.mainStage().koishi().actionByName(this._action_name);
	}

	// 音を再生
	if (this._sound_name) {
		this.core.playSound(this._sound_name);
	}
};

ObjectStaticImage.prototype.draw = function(){
	base_object.prototype.draw.apply(this, arguments);
	if (!this.image) return;
	var ctx = this.core.ctx;
	var image = this.image;

	// 背景描画
	ctx.save();
	ctx.translate(this.x(), this.y());
	ctx.drawImage(image,
					-image.width*this.scale/2,
					-image.height*this.scale/2,
					image.width * this.scale,
					image.height * this.scale);
	ctx.restore();
};



ObjectStaticImage.prototype.collisionWidth = function(){
	if(this._width) return this._width;
	return this.image.width * this.scale;
};

ObjectStaticImage.prototype.collisionHeight = function(){
	if(this._height) return this._height;
	return this.image.height * this.scale;
};
ObjectStaticImage.prototype.getImmovableArea = function() {
	var area = new WalkImmovableArea(this.scene);
	area.init();
	area.setPosition(this.x(), this.y() + this.collisionHeight()/4);
	area.setSize(this.collisionWidth(), this.collisionHeight()/2);
	area.setParentID(this.id);

	return area;
};


module.exports = ObjectStaticImage;

},{"../../hakurei":98,"../walk_immovable_area":145}],143:[function(require,module,exports){
'use strict';
var base_object = require('../hakurei').object.sprite;
var Util = require('../hakurei').util;
var CONSTANT = require('../constant');

var ObjectRightYajirushi = function(core) {
	base_object.apply(this, arguments);
};
Util.inherit(ObjectRightYajirushi, base_object);

ObjectRightYajirushi.prototype.init = function(){
	base_object.prototype.init.apply(this, arguments);
	this.setPosition();
};

ObjectRightYajirushi.prototype.setPosition = function(){
	this.x(this.scene.mainStage().width - 48);
	this.y(this.scene.mainStage().height/2);
};

ObjectRightYajirushi.prototype.onCollision = function(obj){
	// フィールド遷移
	this.scene.mainStage().setFadeOut(30, "black");
	this.core.changeScene("stage", this.scene.mainStage().field().right_field, false);
};

ObjectRightYajirushi.prototype.collisionWidth = function(){
	return 128;
};

ObjectRightYajirushi.prototype.collisionHeight = function(){
	return 128;
};

ObjectRightYajirushi.prototype.spriteName = function(){
	return "arrow";
};
ObjectRightYajirushi.prototype.spriteIndices = function(){
	return [{x: 0, y: 0}];
};
ObjectRightYajirushi.prototype.spriteWidth = function(){
	return 136;
};
ObjectRightYajirushi.prototype.spriteHeight = function(){
	return 124;
};

ObjectRightYajirushi.prototype.scaleHeight = function(){
	return 0.6;
};
ObjectRightYajirushi.prototype.scaleWidth = function(){
	return 0.6;
};

module.exports = ObjectRightYajirushi;

},{"../constant":87,"../hakurei":98}],144:[function(require,module,exports){
'use strict';

var base_object = require('../hakurei').object.base;
var util = require('../hakurei').util;
var CONSTANT = require('../hakurei').constant;

var SsaPlayer = require('../vendor/SsaPlayer');
var SsImageList = SsaPlayer.SsImageList;
var SsAnimation = SsaPlayer.SsAnimation;
var SsSprite = SsaPlayer.SsSprite;

var SpriteStudio = function(scene) {
	base_object.apply(this, arguments);
};
util.inherit(SpriteStudio, base_object);

SpriteStudio.prototype.init = function(x, y, jsonData, data_index, opt){
	base_object.prototype.init.apply(this, arguments);
	this.x(x);
	this.y(y);
	data_index = data_index || 0;

	this.scale_size = opt && opt.scale ? opt.scale : 1.0;
	this.width = jsonData[data_index].animation.CanvasWidth;
	this.height = jsonData[data_index].animation.CanvasHeight;

	this.is_reflect = false;

	// TODO: preload
	this.imageList = this._getImageList(jsonData[data_index].images);

	this.animation = new SsAnimation(jsonData[data_index].animation, this.imageList);

	var ss = new SsSprite(this.animation);

	this.sprite = ss;
};

SpriteStudio.prototype.changeAnimation = function(jsonData, loop){
	loop = loop || 0;
	var data_index = 0;
	this.width = jsonData[data_index].animation.CanvasWidth;
	this.height = jsonData[data_index].animation.CanvasHeight;

	this.animation = new SsAnimation(jsonData[data_index].animation, this.imageList);

	this.sprite.setLoop(loop);
	this.sprite.setAnimation(this.animation);

};

SpriteStudio.prototype.playAnimationOnce = function(jsonData, _callback){
	var self = this;
	var sprite = self.sprite;
	var max_loop = sprite.getLoop();

	// アニメーション後のコールバック
	if (_callback) {
		var callback = function () {
			sprite.setEndCallBack(null);
			sprite.setLoop(max_loop);
			_callback();
		};

		sprite.setEndCallBack(callback);
	}

	self.changeAnimation(jsonData, 1);
};

// sprite studio 用の SsImageList 代替オブジェクトを生成
SpriteStudio.prototype._getImageList = function (imageFiles) {
	var imageList = new SsImageList([], "");

	for (var i = 0; i < imageFiles.length; i++) {
		var image_name = imageFiles[i];

		imageList.imagePaths[i] = null;
		imageList.images[i] = this.core.image_loader.getImage(image_name);
	}

	return imageList;
};

SpriteStudio.prototype.beforeDraw = function(){
	base_object.prototype.beforeDraw.apply(this, arguments);

	// update ss state
	this.sprite.rootScaleX = this.scaleWidth();
	this.sprite.rootScaleY = this.scaleHeight();
	this.sprite.x = this.width/2;
	this.sprite.y = this.height/2;
};

// 画面更新
SpriteStudio.prototype.draw = function(){
	base_object.prototype.draw.apply(this, arguments);
	if (!this.isShow()) return;
	var ctx = this.core.ctx;

	// create canvas
	var canvas = document.createElement('canvas');
	canvas.width  = this.width;
	canvas.height = this.height;
	var ctx2 = canvas.getContext('2d');
	var t = new Date().getTime();
	this.sprite.draw(ctx2, t);


	// draw
	ctx.save();
	ctx.translate(this.x(), this.y());
	if (this.isReflect()) {
		ctx.transform(-1, 0, 0, 1, 0, 0);
	}
	ctx.drawImage(canvas, -this.width/2, -this.height/2);

	ctx.restore();
};

SpriteStudio.prototype.isShow = function(){
	return true;
};
SpriteStudio.prototype.scaleWidth = function(){
	return this.scale_size;
};
SpriteStudio.prototype.scaleHeight = function(){
	return this.scale_size;
};
SpriteStudio.prototype.isReflect = function(){
	return this.is_reflect;
};

SpriteStudio.prototype.setReflect = function(flag){
	this.is_reflect = flag;
};

// TODO:
SpriteStudio.prototype.alpha = function() {
	return 1.0;
};

module.exports = SpriteStudio;

},{"../hakurei":98,"../vendor/SsaPlayer":155}],145:[function(require,module,exports){
'use strict';
var base_object = require('../hakurei').object.base;
var Util = require('../hakurei').util;
var CONSTANT = require('../constant');

var WalkImmovableArea = function(core) {
	base_object.apply(this, arguments);
};
Util.inherit(WalkImmovableArea, base_object);

WalkImmovableArea.prototype.init = function(){
	base_object.prototype.init.apply(this, arguments);
	this._width  = null;
	this._height = null;
	this.__id    = null;
};

WalkImmovableArea.prototype.setSize = function(width, height) {
	this._width  = width;
	this._height = height;
};
WalkImmovableArea.prototype.setParentID = function(id) {
	this.__id  = id;
};

WalkImmovableArea.prototype.collisionWidth = function(){
	return this._width;
};

WalkImmovableArea.prototype.collisionHeight = function(){
	return this._height;
};

// オーバーライド
WalkImmovableArea.prototype.draw = function() {
	var ctx = this.core.ctx;

	// 移動不可能範囲のデバッグ表示
	if (this.core.debug_manager.get("is_show_immovable_area")) {
		this._drawCollisionArea("red");
	}

	for(var i = 0, len = this.objects.length; i < len; i++) {
		this.objects[i].draw();
	}
};


module.exports = WalkImmovableArea;

},{"../constant":87,"../hakurei":98}],146:[function(require,module,exports){
'use strict';

// セーブデータ
var base_class = require('./hakurei').storage.save;
var util = require('./hakurei').util;

var SaveManager = function(scene) {
	base_class.apply(this, arguments);
};
util.inherit(SaveManager, base_class);

// 取得しているアイテム一覧を取得
SaveManager.prototype.getItemList = function() {
	var list = this.get("item_list");

	if(!list) list = [];

	return list;
};

// 取得しているアイテム一覧を取得
SaveManager.prototype.getItem = function(index){
	var list = this.getItemList();

	return list[index];
};

// アイテムを追加(追加したアイテムのindexを返す)
SaveManager.prototype.addItem = function(item_id){
	var list = this.getItemList();

	list.push(item_id);
	this.set("item_list", list);
	return list.length - 1;
};

// 3rd eye ゲージの取得
SaveManager.prototype.get3rdeyeGauge = function(){
	var gauge = this.get("3rdeye_gauge") || 0;

	return gauge;
};
// 3rd eye ゲージの上昇
SaveManager.prototype.increase3rdeyeGauge = function(num){
	var gauge = this.get3rdeyeGauge();

	gauge += num;

	// TODO: 定数化
	if (gauge > 1000) gauge = 1000;

	this.set("3rdeye_gauge", gauge);
};

// 現在のフィールドを取得
SaveManager.prototype.getCurrentField = function() {
	var field_name = this.get("current_field");

	return field_name;
};
// 現在のフィールドを設定
SaveManager.prototype.setCurrentField = function(field_name) {
	this.set("current_field", field_name);
};







module.exports = SaveManager;

},{"./hakurei":98}],147:[function(require,module,exports){
'use strict';

// ローディングシーン

var base_scene = require('../hakurei').scene.base;
var Util = require('../hakurei').util;
var AssetsConfig = require('../assets_config');
var CONSTANT = require('../constant');

var SceneLoading = function(core) {
	base_scene.apply(this, arguments);
};
Util.inherit(SceneLoading, base_scene);

SceneLoading.prototype.init = function() {
	base_scene.prototype.init.apply(this, arguments);

	// ゲームで使用する画像一覧
	for (var key in AssetsConfig.images) {
		this.core.image_loader.loadImage(key, AssetsConfig.images[key]);
	}

	// ゲームで使用するSE一覧
	for (var key2 in AssetsConfig.sounds) {
		var conf2 = AssetsConfig.sounds[key2];
		this.core.audio_loader.loadSound(key2, conf2.path, conf2.volume);
	}

	// ゲームで使用するBGM一覧
	for (var key3 in AssetsConfig.bgms) {
		var conf3 = AssetsConfig.bgms[key3];
		this.core.audio_loader.loadBGM(key3, conf3.path, conf3.volume, conf3.loopStart, conf3.loopEnd);
	}
};

SceneLoading.prototype.beforeDraw = function() {
	base_scene.prototype.beforeDraw.apply(this, arguments);

	if (this.core.image_loader.isAllLoaded() && this.core.audio_loader.isAllLoaded() && this.core.font_loader.isAllLoaded()) {
		if (CONSTANT.DEBUG.START_SCENE) {
			// デバッグ用
			this.core.changeScene.apply(this.core, CONSTANT.DEBUG.START_SCENE);
		}
		else {
			// 本番
			this.core.changeScene("title");
		}
	}
};
SceneLoading.prototype.draw = function(){
	base_scene.prototype.draw.apply(this, arguments);
	var ctx = this.core.ctx;

	if(!ctx) return; // 2D context has been depricated in this game

	// 背景
	ctx.save();
	ctx.fillStyle = 'black';
	ctx.fillRect(0, 0, this.core.width, this.core.height);
	ctx.restore();

	// メッセージ
	var per_frame = this.frame_count % 60;
	var DOT_SPAN = 15;

	var dot = "";
	if (DOT_SPAN > per_frame && per_frame >= 0) {
		dot = "";
	}
	else if (DOT_SPAN*2 > per_frame && per_frame >= DOT_SPAN*1) {
		dot = ".";
	}
	else if (DOT_SPAN*3 > per_frame && per_frame >= DOT_SPAN*2) {
		dot = "..";
	}
	else {
		dot = "...";
	}

	ctx.save();
	ctx.fillStyle = "white";
	ctx.textAlign = 'left';
	ctx.font = "30px 'OradanoGSRR'";
	ctx.fillText('Now Loading' + dot, this.core.width - 250, this.core.height - 50);
	ctx.restore();


	// プログレスバー
	ctx.save();
	ctx.fillStyle = "white";
	ctx.fillRect(0, this.core.height - 20, this.core.width * this.progress(), 50);
	ctx.restore();
};


SceneLoading.prototype.progress = function(){
	var progress = (this.core.audio_loader.progress() + this.core.image_loader.progress() + this.core.font_loader.progress()) / 3;
	return progress;
};

module.exports = SceneLoading;

},{"../assets_config":86,"../constant":87,"../hakurei":98}],148:[function(require,module,exports){
'use strict';

var base_scene = require('./stage_base');

var util = require('../hakurei').util;
var CONSTANT = require('../constant');

var SceneSubStagePlay = require('./sub_stage/play');
var SceneSubStageTalk = require('./sub_stage/talk');
var SceneSubStageMenu = require('./sub_stage/menu');

var Koishi = require('../object/koishi');

var ObjectStaticImage = require('../object/object/static_image');
var ObjectAnimeImage = require('../object/object/anime_image');

var LeftYajirushi = require('../object/left_yajirushi');
var RightYajirushi = require('../object/right_yajirushi');
var ItemButton = require('../object/item_button');
var Eye = require('../object/eye');

var jsonDataOfBlackMist = require('../anime/black-mist_anime_1');
var SS = require('../object/sprite_studio');

var FieldMap = require('../field');

var SceneStage = function(core) {
	base_scene.apply(this, arguments);

	// フィールド一覧
	this._field_map = FieldMap;

	// 自機
	this._koishi = new Koishi(this);

	// ステージ上のオブジェクト一覧
	this.pieces = [];

	// 移動制限範囲
	this.walk_immovable_areas = [];

	// こいしとステージ上のオブジェクト(描画のZ軸ソートに使う)
	this._koishi_and_pieces = [];

	this.left_yajirushi  = new LeftYajirushi(this);
	this.right_yajirushi = new RightYajirushi(this);
	this.item_button     = new ItemButton(this);
	this.eye             = new Eye(this);

	this.black_mist = new SS(this);

	this.is_use_eye = false;
	/* sub scene 一覧
	調べてるオブジェクト(机の上、窓の外) →そこからさらにアイテム調べられるので、サブシーンのサブシーンができるように、各サブシーンを作っておかねば。
	アイテムを読んでいるサブシーン(ページ送り等)
	アニメーションサブシーン(オブジェクトが反応する、その間こいしは動けない)
	*/

	// 通常
	this.addSubScene("play", new SceneSubStagePlay(core));
	// 会話中
	this.addSubScene("talk", new SceneSubStageTalk(core));
	// メニュー
	this.addSubScene("menu", new SceneSubStageMenu(core));
};
util.inherit(SceneStage, base_scene);

SceneStage.prototype.init = function(field_name, is_right){
	base_scene.prototype.init.apply(this, arguments);

	// 現在のフィールド
	this.core.save_manager.setCurrentField(field_name);
	this.core.save_manager.save();

	this.is_use_eye = false;

	// フィールド移動時にフェードインする
	this.setFadeIn(30, "black");


	this._koishi.init();
	this.setupPiece();
	this._initOfMenuObject();


	// こいしとステージ上のオブジェクト(描画のZ軸ソートに使う)
	this._koishi_and_pieces = this.pieces.concat(this._koishi);

	// フィールド開始時の初期位置の決定
	// 右から来たか、左から来たかでこいしの初期位置が変わる
	var pos;
	if (is_right) {
		pos = this.field().right_start_position;
		this.koishi().setPosition(pos.x, pos.y);
		this.koishi().setReflect(true);
	}
	else {
		pos = this.field().left_start_position;
		this.koishi().setPosition(pos.x, pos.y);
	}

	// BGM 止める
	if(!this.core.audio_loader.isPlayingBGM(this.field().bgm)) {
		this.core.stopBGM();
	}

	this.black_mist.init(this.width/2, this.height/2, jsonDataOfBlackMist, 0, {scale: 2/3});

	this.changeSubScene("play");
};


SceneStage.prototype.isUsingEye = function() {
	return this.is_use_eye;
};
SceneStage.prototype.unUseEye = function() {
	this.koishi().unUseEye();
	this.is_use_eye = false;
};
SceneStage.prototype.useEye = function() {
	this.koishi().useEye();
	this.is_use_eye = true;
};

SceneStage.prototype.beforeDraw = function(){
	// BGM 再生
	if(this.frame_count === 60) {
		// メインBGM 再生
		this.core.changeBGM(this.field().bgm);

		// 既に再生していたサブBGMを止める
		this.core.audio_loader.stopBGMWithout(this.field().bgm);

		// サブBGM再生
		if (this.field().bgm2) {
			this.core.addBGM(this.field().bgm2);
		}
	}

	// ランダムノイズ再生
	// N秒ごとにN%の確率で再生
	if(this.core.frame_count % CONSTANT.NOISE_SOUND_INTERVAL_COUNT === 0) {
		if (util.getRandomInt(100) <= CONSTANT.NOISE_SOUND_PROB) {
			var sound_name = CONSTANT.NOISE_SOUND_LIST[ util.getRandomInt(0, CONSTANT.NOISE_SOUND_LIST.length - 1) ];
			this.core.playSound(sound_name);
		}
	}



	// y 軸(y が大きい方が z軸が大きい)の降順ソート
	this._koishi_and_pieces.sort(function(a,b){
		if(a.y() < b.y()) return -1;
		if(a.y() > b.y()) return 1;
		return 0;
	});
	var obj, i, len;
	for (i = 0, len = this._koishi_and_pieces.length; i < len; i++) {
		obj = this._koishi_and_pieces[i];
		obj.beforeDraw();
	}
	for (i = 0, len = this.walk_immovable_areas.length; i < len; i++) {
		obj = this.walk_immovable_areas[i];
		obj.beforeDraw();
	}



	this.black_mist.beforeDraw();

	this._beforeDrawOfMenuObject();

	base_scene.prototype.beforeDraw.apply(this, arguments);

	// クリック位置を出力
	if (CONSTANT.DEBUG.ON) {
		if(this.core.input_manager.isRightClickPush()) {
			var x = this.core.input_manager.mousePositionX();
			var y = this.core.input_manager.mousePositionY();

			console.log("x: " + x + ", y: " + y);
		}
	}
};


SceneStage.prototype._initOfMenuObject = function(){
	if (this.field().left_field) {
		this.left_yajirushi.init();
	}

	if (this.field().right_field) {
		this.right_yajirushi.init();
	}

	this.item_button.init();
};

SceneStage.prototype._beforeDrawOfMenuObject = function(){
	if (this.field().left_field) {
		this.left_yajirushi.beforeDraw();
	}

	if (this.field().right_field) {
		this.right_yajirushi.beforeDraw();
	}

	this.item_button.beforeDraw();
};
SceneStage.prototype._drawOfMenuObject = function(){
	if (this.field().left_field) {
		this.left_yajirushi.draw();
	}

	if (this.field().right_field) {
		this.right_yajirushi.draw();
	}

	this.item_button.draw();
};

// 画面更新
SceneStage.prototype.draw = function(){
	var ctx = this.core.ctx;

	// 背景描画
	var title_bg = this.core.image_loader.getImage(this.field().background);
	ctx.save();
	ctx.drawImage(title_bg,
					0,
					0,
					title_bg.width,
					title_bg.height,
					0,
					0,
					this.core.width,
					this.core.height);
	ctx.restore();

	// 移動不可能範囲のデバッグ表示
	if (this.core.debug_manager.get("is_show_immovable_area")) {
		this._drawImmovableArea();
	}

	// こいしとオブジェクトの描画
	var obj, i, len;
	for (i = 0, len = this._koishi_and_pieces.length; i < len; i++) {
		obj = this._koishi_and_pieces[i];
		obj.draw();
	}
	for (i = 0, len = this.walk_immovable_areas.length; i < len; i++) {
		obj = this.walk_immovable_areas[i];
		obj.draw();
	}


	if (this.isUsingEye()) {
		this._drawLight();
	}

	this.black_mist.draw();

	this._drawOfMenuObject();

	// サブシーン描画
	base_scene.prototype.draw.apply(this, arguments);
};
SceneStage.prototype._drawLight = function(){
	var ctx = this.core.ctx;

	// 背景
	ctx.save();
	ctx.fillStyle = 'black';
	ctx.globalAlpha = 0.3;
	ctx.fillRect(0, 0, this.width, this.height);
	ctx.restore();

	// 光 描画
	var light = this.core.image_loader.getImage("light");
	ctx.save();
	var x = this.core.input_manager.mousePositionX();
	var y = this.core.input_manager.mousePositionY();

	var ax = x - this.koishi().x();
	var ay = y - this.koishi().y();
	var rad = Math.atan2(ay, ax);

	if (this.koishi().isReflect()) {
		// ライトの稼働角度には制限がある
		if (-Math.PI*5/6 < rad && rad < 0) { rad = -Math.PI*5/6; }
		else if(0 <= rad && rad < Math.PI*4/6) { rad = Math.PI*4/6; }

		ctx.translate(this.koishi().x() - 60, this.koishi().y() - 100);
	}
	else {
		// ライトの稼働角度には制限がある
		if (rad < -Math.PI*2/6) rad = -Math.PI*2/6;
		else if (Math.PI*1/6 < rad) rad = Math.PI*1/6;

		ctx.translate(this.koishi().x() + 60, this.koishi().y() - 100);
	}

	// ライトの角度分
	//rad += 150*Math.PI/180;

	ctx.rotate(rad);

	if (this.core.debug_manager.get('light_global_composite')) {
		ctx.globalCompositeOperation = this.core.debug_manager.get('light_global_composite');
	}
	else {
		ctx.globalCompositeOperation = "overlay";
	}
	ctx.drawImage(light, -13, -336);

	ctx.restore();
};


SceneStage.prototype.koishi = function(){
	return this._koishi;
};

SceneStage.prototype.mainStage = function(){
	return this;
};

SceneStage.prototype.field = function(){
	return this._field_map[this.core.save_manager.getCurrentField()];
};



SceneStage.prototype.setupPiece = function() {
	this.pieces = [];
	this.walk_immovable_areas = [];
	var object_data_list = this.field().objects;

	for (var i = 0, len = object_data_list.length; i < len; i++) {
		var data = object_data_list[i];
		var object;
		if (data.type === CONSTANT.STATIC_IMAGE_TYPE) {
			object = new ObjectStaticImage(this);
			object.init();
			object.addSize(data.width, data.height);
			object.addSerif(data.serif);
			object.addSound(data.sound);
			object.addKoishiAction(data.action);
			object.addImage(data.image, data.scale);
			object.setPosition(data.x, data.y);

			this.pieces.push(object);

			this.walk_immovable_areas.push(object.getImmovableArea());
		}
		else if (data.type === CONSTANT.ANIME_IMAGE_TYPE) {
			object = new ObjectAnimeImage(this);
			object.init();
			object.addSize(data.width, data.height);
			object.addSerif(data.serif);
			object.addSound(data.sound, data.sound_back);
			object.addKoishiAction(data.action);
			object.addAnime(data.anime1, data.anime2, data.anime3, data.anime4, data.anime5, data.anime6, data.scale);
			object.setPosition(data.x, data.y);

			this.pieces.push(object);

			this.walk_immovable_areas.push(object.getImmovableArea());
		}

	}
};


SceneStage.prototype._drawImmovableArea = function() {
	var ctx = this.core.ctx;
	ctx.save();
	ctx.fillStyle = 'rgb( 255, 0, 0 )' ;
	ctx.globalAlpha = 0.4;

	// 奥行きの移動範囲制限
	ctx.fillRect(
		0,0, this.width, this.height - CONSTANT.WALK_DEPTH_LIMIT
	);
	ctx.restore();
};

module.exports = SceneStage;

},{"../anime/black-mist_anime_1":2,"../constant":87,"../field":89,"../hakurei":98,"../object/eye":136,"../object/item_button":137,"../object/koishi":138,"../object/left_yajirushi":139,"../object/object/anime_image":141,"../object/object/static_image":142,"../object/right_yajirushi":143,"../object/sprite_studio":144,"./stage_base":149,"./sub_stage/menu":151,"./sub_stage/play":152,"./sub_stage/talk":153}],149:[function(require,module,exports){
'use strict';
var base_scene = require('../hakurei').scene.base;
var Util = require('../hakurei').util;

var SceneStageBase = function(core) {
	base_scene.apply(this, arguments);
};
Util.inherit(SceneStageBase, base_scene);


SceneStageBase.prototype.koishi = function(){
	throw new Error("koishi method must be implemented");
};

SceneStageBase.prototype.mainStage = function(){
	throw new Error("mainStage method must be implemented");
};




module.exports = SceneStageBase;

},{"../hakurei":98}],150:[function(require,module,exports){
'use strict';
var base_scene = require('../stage_base');
var Util = require('../../hakurei').util;

var SceneSubStageBase = function(core, stage) { // stage は stage_base class を継承したオブジェクト
	base_scene.apply(this, arguments);
};
Util.inherit(SceneSubStageBase, base_scene);

SceneSubStageBase.prototype.koishi = function(){
	return this.parent.koishi();
};

SceneSubStageBase.prototype.mainStage = function(){
	return this.parent.mainStage();
};




module.exports = SceneSubStageBase;

},{"../../hakurei":98,"../stage_base":149}],151:[function(require,module,exports){
'use strict';
var base_scene = require('./base');
var Util = require('../../hakurei').util;
var MenuItem = require('../../object/menu_item');
var UIParts = require('../../hakurei').object.ui_parts;

var MESSAGE_WINDOW_OUTLINE_MARGIN = 10;

var SceneSubStageTalk = function(core, stage) {
	base_scene.apply(this, arguments);

	// テスト用アイテム
	// TODO: 削除
	this.core.save_manager.addItem(1);
	this.core.save_manager.addItem(2);
	this.core.save_manager.addItem(3);
	this.core.save_manager.addItem(4);
	this.core.save_manager.addItem(5);
	this.core.save_manager.addItem(6);
	this.core.save_manager.addItem(7);
	this.core.save_manager.addItem(8);
	this.core.save_manager.addItem(9);
	this.core.save_manager.addItem(10);
};
Util.inherit(SceneSubStageTalk, base_scene);

SceneSubStageTalk.prototype.init = function(){
	base_scene.prototype.init.apply(this, arguments);
	var self = this;

	this.focus_item_id = null;

	var item_list = this.core.save_manager.getItemList();

	self.removeAllObject();
	for (var i = 0, len = item_list.length; i<len; i++) {
		var item_id = item_list[i];
		var item = new MenuItem(this, item_id);
		item.init();
		item.setPosition(180 + (i%5)*160, 180 + 160*(Math.floor(i/5)));
		self.addObject(item);
	}

	// 使用ボタン
	// TODO: 調べる・組み合わせるの後に戻す
	//this.use_button = new UIParts(self, 160 + 250/3, self.mainStage().height - 150 + 105/3, 250*2/3, 105*2/3, function draw () {
	this.use_button = new UIParts(self, self.mainStage().width - 200 + 250/3, self.mainStage().height - 150 + 105/3, 250*2/3, 105*2/3, function draw () {
		var ctx = this.core.ctx;

		var button_window;
		if (this.onfocus) {
			button_window = this.core.image_loader.getImage('ui-common-btn-toolpu-blu2');
		}
		else {
			button_window = this.core.image_loader.getImage('ui-common-btn-toolpu-blu1');
		}

		ctx.save();
		ctx.drawImage(button_window,
			this.getCollisionLeftX(),
			this.getCollisionUpY(),
			button_window.width*2/3,
			button_window.height*2/3
		);

		// メニュー文字 表示
		ctx.font = "24px 'OradanoGSRR'";
		ctx.textAlign = 'center';
		ctx.textBaseAlign = 'middle';
		ctx.fillStyle = 'rgb( 255, 255, 255 )';
		ctx.fillText("使用",
			this.getCollisionLeftX() + 80,
			this.getCollisionUpY()   + 40
		);

		ctx.restore();
	});
	self.addObject(this.use_button);

};




SceneSubStageTalk.prototype.beforeDraw = function(){
	base_scene.prototype.beforeDraw.apply(this, arguments);

	var x = this.core.input_manager.mousePositionX();
	var y = this.core.input_manager.mousePositionY();

	if(this.core.input_manager.isLeftClickPush()) {
		// メニュー閉じる
		this.mainStage().item_button.checkCollisionWithPosition(x, y);

		// アイテム選択
		for (var i = 0, len = this.objects.length; i < len; i++) {
			var object = this.objects[i];
			object.checkCollisionWithPosition(x, y);
		}

		// 使用ボタン
		if(this.use_button.checkCollisionWithPosition(x, y)) {
			this._useItem();
		}

	}
	else {
		// マウスカーソルが当たったら
		if(this.use_button.checkCollisionWithPosition(x, y)) {
			this.use_button.setVariable("onfocus", true);
		}
		else {
			this.use_button.setVariable("onfocus", false);
		}
	}

/*
	if(this.core.input_manager.isLeftClickPush()) {
		if(this.serif.is_end()) {
			// セリフ終わり
			this.mainStage().changeSubScene("play");
		}
		else {
			// セリフを送る
			this.serif.next();
		}
	}
*/
};

SceneSubStageTalk.prototype.draw = function(){
	var ctx = this.core.ctx;

	ctx.save();

	// ウィンドウ表示
	this._showWindow();

	// アイテム表示
	base_scene.prototype.draw.apply(this, arguments);

	// ボタン表示
	//this._showButtons();

	// メッセージウィンドウ表示
	this._showMessageWindow();

	// メッセージ表示
	this._showMessage();

	ctx.restore();
};

SceneSubStageTalk.prototype._showWindow = function(){
	var ctx = this.core.ctx;

	var window_frame = this.core.image_loader.getImage('ui-common-frame-toolpu');

	ctx.drawImage(window_frame,
		0, 0,
		window_frame.width*2/3,
		window_frame.height*2/3
	);

};

SceneSubStageTalk.prototype._showButtons = function(){
	var ctx = this.core.ctx;

	var button_window = this.core.image_loader.getImage('ui-common-btn-toolpu-blu1');
	ctx.save();

	/* combine */
	ctx.drawImage(button_window,
		160*2 + 16*1,
		this.mainStage().height - 150,
		button_window.width*2/3,
		button_window.height*2/3
	);

	// メニュー文字 表示
	ctx.font = "24px 'OradanoGSRR'";
	ctx.textAlign = 'center';
	ctx.textBaseAlign = 'middle';
	ctx.fillStyle = 'rgb( 255, 255, 255 )';
	ctx.fillText("合成",
		160*2 + 16*1 + 80,
		this.mainStage().height - 150 + 40
	);

	/* examine */

	// 四角形
	ctx.drawImage(button_window,
		160*3 + 16*2,
		this.mainStage().height - 150,
		button_window.width*2/3,
		button_window.height*2/3
	);

	// メニュー文字 表示
	ctx.font = "24px 'OradanoGSRR'";
	ctx.textAlign = 'center';
	ctx.textBaseAlign = 'middle';
	ctx.fillStyle = 'rgb( 255, 255, 255 )';
	ctx.fillText("調べる",
		160*3 + 16*2 + 80,
		this.mainStage().height - 150 + 40
	);



	ctx.restore();



};

SceneSubStageTalk.prototype._showMessageWindow = function(){
	var ctx = this.core.ctx;

	ctx.save();

	var message_window = this.core.image_loader.getImage('ui-common-bg-toolpu-blk');

	ctx.drawImage(message_window,
		150,
		this.mainStage().height - 80,
		message_window.width*2/3,
		message_window.height*2/3
	);
	ctx.restore();

};

SceneSubStageTalk.prototype._showMessage = function(){
	var ctx = this.core.ctx;

	// メニュー文字 表示
	ctx.font = "24px 'OradanoGSRR'";
	ctx.textAlign = 'center';
	ctx.textBaseAlign = 'middle';
	ctx.fillStyle = 'rgb( 255, 255, 255 )';
	ctx.fillText("ITEM1 だ",
		MESSAGE_WINDOW_OUTLINE_MARGIN + 160 + 70,
		this.mainStage().height - 60 + 20
	);

};

SceneSubStageTalk.prototype._useItem = function(){
	// アイテムを選択してなければ何もしない
	if(!this.focus_item_id) return;

	for(var i = 0, len = this.objects.length; i < len; i++) {
		var obj = this.objects[i];
		if(obj.item_id === this.focus_item_id) {
			this.removeObject(obj);
			obj.use();
			break;
		}
	}

	this.focus_item_id = null;
};







module.exports = SceneSubStageTalk;

},{"../../hakurei":98,"../../object/menu_item":140,"./base":150}],152:[function(require,module,exports){
'use strict';
var base_scene = require('./base');
var Util = require('../../hakurei').util;

var SceneSubStagePlay = function(core, stage) {
	base_scene.apply(this, arguments);
};
Util.inherit(SceneSubStagePlay, base_scene);

SceneSubStagePlay.prototype.init = function(){
	base_scene.prototype.init.apply(this, arguments);
	this.mainStage().eye.init();
	this.mainStage().koishi().setWait();
};




SceneSubStagePlay.prototype.draw = function(){
	base_scene.prototype.draw.apply(this, arguments);
	this.mainStage().eye.draw();
};

SceneSubStagePlay.prototype.beforeDraw = function(){
	base_scene.prototype.beforeDraw.apply(this, arguments);

	this.mainStage().eye.beforeDraw();

	this._collisionCheck();
};

SceneSubStagePlay.prototype._collisionCheck = function(){
	// マウス位置したところを取得
	var x = this.core.input_manager.mousePositionX();
	var y = this.core.input_manager.mousePositionY();

	// クリックしたときに当たり判定するものたち
	if(this.core.input_manager.isLeftClickPush()) {
		// シーン遷移の当たり判定
		if(this.mainStage().field().left_field  && this.mainStage().left_yajirushi.checkCollisionWithPosition(x, y)) {
			return true;
		}

		// シーン遷移の当たり判定
		if(this.mainStage().field().right_field && this.mainStage().right_yajirushi.checkCollisionWithPosition(x, y)) {
			return true;
		}

		// アイテムボタンの当たり判定
		if(this.mainStage().item_button.checkCollisionWithPosition(x, y)) {
			return true;
		}

		// サードアイの当たり判定
		if(this.mainStage().eye.checkCollisionWithPosition(x, y)) {
			return true;
		}
	}


	// クリックする／しない関わらず当たり判定
	// フィールドの各種オブジェクトとの当たり判定
	for (var i = 0, len = this.mainStage().pieces.length; i < len; i++) {
		var piece = this.mainStage().pieces[i];
		if(piece.checkCollisionWithPosition(x, y)) {
			return true;
		}
	}

	// クリックしたときに当たり判定するものたち
	if(this.core.input_manager.isLeftClickPush()) {
		// どことも当たり判定しなかったら
		// こいしを移動
		// TODO: この関数でやらず、外でやったほうがいい？(この関数は当たり判定したら true or false 返す)
		if (!this.mainStage().koishi().isMoving()) {
			this.koishi().setMoveTarget(x, y);
		}
	}

	return false;
};


module.exports = SceneSubStagePlay;

},{"../../hakurei":98,"./base":150}],153:[function(require,module,exports){
'use strict';
var base_scene = require('./base');
var Util = require('../../hakurei').util;

var SerifManager = require('../../hakurei').serif_manager;

var SceneSubStageTalk = function(core, stage) {
	base_scene.apply(this, arguments);

	this.serif = new SerifManager();
};
Util.inherit(SceneSubStageTalk, base_scene);

SceneSubStageTalk.prototype.init = function(serif_list){
	base_scene.prototype.init.apply(this, arguments);

	// クリック待ちカーソルの状態
	this._cursor_y = 0;
	this._cursor_reverse = false;

	// セリフデータの生成
	var serif_script = [];
	for (var i = 0, len = serif_list.length; i < len; i++) {
		var serif = serif_list[i];

		serif_script.push({"chara":"koishi","serif": serif});
	}

	this.serif.init(serif_script);
};

SceneSubStageTalk.prototype.beforeDraw = function(){
	base_scene.prototype.beforeDraw.apply(this, arguments);

	if(this.core.input_manager.isLeftClickPush()) {
		if(this.serif.isEnd()) {
			// セリフ終わり
			this.mainStage().changeSubScene("play");
		}
		else {
			// セリフを送る
			this.serif.next();
		}
	}

};

SceneSubStageTalk.prototype.draw = function(){
	base_scene.prototype.draw.apply(this, arguments);
	var ctx = this.core.ctx;

	ctx.save();

	// メッセージウィンドウ表示
	this._showMessageWindow();

	// メッセージ表示
	this._showMessage();

	ctx.restore();
};

// セリフ表示を右に表示させるかどうか
SceneSubStageTalk.prototype._isShowRight = function(){
	var x = this.koishi().x();

	var scene_center_x = this.mainStage().width / 2;

	if (x > scene_center_x) {
		return true;
	}
	else {
		return false;
	}
};

// セリフウィンドウ表示
SceneSubStageTalk.prototype._showMessageWindow = function(){
	var ctx = this.core.ctx;
	ctx.save();

	var x,y;
	if(!this._isShowRight()) {
		x = this.koishi().x() - 550;
		y = this.koishi().y() - 330;
	}
	else {
		x = this.koishi().x() - 300;
		y = this.koishi().y() - 330;
	}

	var fukidashi = this.core.image_loader.getImage('fukidashi');

	if(!this._isShowRight()) {
		x = -x; // 反転
		ctx.transform(-1, 0, 0, 1, fukidashi.width, 0); // 左右反転
	}

	ctx.drawImage(fukidashi,
					x,
					y,
					fukidashi.width * 0.4,
					fukidashi.height * 0.4
	);
	ctx.restore();
};

// セリフ表示
SceneSubStageTalk.prototype._showMessage = function() {
	var ctx = this.core.ctx;
	ctx.save();

	// セリフの色
	var font_color = Util.hexToRGBString("#d4c9aa");

	ctx.fillStyle = font_color;
	ctx.font = "18px 'OradanoGSRR'";
	ctx.textAlign = 'left';
	ctx.textBaseAlign = 'middle';

	var x,y;
	if(!this._isShowRight()) {
		x = this.koishi().x() + 80;
		y = this.koishi().y() - 290;
	}
	else {
		x = this.koishi().x() - 220;
		y = this.koishi().y() - 290;
	}

	// セリフ表示
	var lines = this.serif.lines();
	if (lines.length) {
		for(var i = 0, len = lines.length; i < len; i++) {
			y+= 30;
			ctx.fillText(lines[i], x, y); // 1行表示

		}
		// クリック待ちカーソル
		if (this.serif.isWaitingNext()) {

			// カーソルを上下に移動させる
			if (this._cursor_reverse) {
				this._cursor_y-=0.25;
			}
			else {
				this._cursor_y+=0.25;
			}

			if (this._cursor_y > 6) {
				this._cursor_reverse = true;
			}
			else if (this._cursor_y === 0) {
				this._cursor_reverse = false;
			}

			var cursor = this.core.image_loader.getImage("fukidashi_arrow");
			ctx.drawImage(cursor,
				x + lines[lines.length-1].length*18,
				y - 18 + 2 + this._cursor_y,
				cursor.width*2/3,
				cursor.height*2/3
			);
		}
	}

	ctx.restore();
};

module.exports = SceneSubStageTalk;

},{"../../hakurei":98,"./base":150}],154:[function(require,module,exports){
'use strict';

var base_scene = require('../hakurei').scene.base;
var util = require('../hakurei').util;
var H_CONSTANT = require('../hakurei').constant;
var CONSTANT = require('../constant');

var UIParts = require('../hakurei').object.ui_parts;

var SHOW_TRANSITION_COUNT = 100;

var MENU = [
	["ui-titlepg-btn-ng", function (core) { return true; }, function (core) {
		core.save_manager.del();
		core.changeScene("stage", "chapter0_myroom");
	}],
	["ui-titlepg-btn-con", function (core) {
		return core.save_manager.getCurrentField() ? true : false;
	}, function (core) {
		core.changeScene("stage", core.save_manager.getCurrentField());
	}],
	/*
	["ui-titlepg-btn-opt", function (core) { return true; }, function (core) {
		core.changeScene("stage", "chapter0_myroom");
	}],
	*/
];

var SceneTitle = function(core) {
	base_scene.apply(this, arguments);

	var self = this;

	self.menu_ui = [];

	// メニュー一覧表示
	for(var i = 0, len = MENU.length; i < len; i++) {
		var menu = MENU[i];

		(function (menu) {
			self.menu_ui.push(new UIParts(self, 380 + i*200, 670, 190, 63, function draw () {
				var ctx = this.core.ctx;
				ctx.textAlign = 'center';
				ctx.textBaseline = 'middle';
				ctx.fillStyle = 'rgb( 255, 255, 255 )';

				var logo;
				if (this.is_big) {
					logo = this.core.image_loader.getImage(menu[0] + "-on");
				}
				else {
					logo = this.core.image_loader.getImage(menu[0] + "-off");
				}
				ctx.drawImage(logo, this.getCollisionLeftX(), this.getCollisionUpY(), logo.width*0.7, logo.height*0.7);
			}));
		})(menu);
	}
	self.addObjects(self.menu_ui);
};
util.inherit(SceneTitle, base_scene);

SceneTitle.prototype.init = function(){
	base_scene.prototype.init.apply(this, arguments);

	this.core.stopBGM();

	// フェードインする
	this.setFadeIn(SHOW_TRANSITION_COUNT);
	this.setFadeOut(30, "black");
};


SceneTitle.prototype.beforeDraw = function(){
	base_scene.prototype.beforeDraw.apply(this, arguments);

	if(this.frame_count === 60) {
		this.core.playBGM("title");
	}

	// マウスの位置を取得
	var x = this.core.input_manager.mousePositionX();
	var y = this.core.input_manager.mousePositionY();

	var self = this;
	if(this.core.input_manager.isLeftClickPush()) {
		this.menu_ui.forEach(function(menu, i) {
			// クリックしたら
			if(menu.checkCollisionWithPosition(x, y) && MENU[i][1](self.core)) {
				MENU[i][2](self.core);
			}
		});
	}
	else {
		this.menu_ui.forEach(function(menu, i) {
			// マウスカーソルが当たったら
			if(menu.checkCollisionWithPosition(x, y) && MENU[i][1](self.core)) {
				// マウスカーソルを乗せた瞬間に音を鳴らす
				if (!menu.is_big) {
					self.core.playSound("select_title");
				}
				menu.setVariable("is_big", true);
			}
			else {
				menu.setVariable("is_big", false);
			}
		});
	}
};

// 画面更新
SceneTitle.prototype.draw = function(){
	this.core.clearCanvas();
	var ctx = this.core.ctx;

	ctx.save();

	var title_bg = this.core.image_loader.getImage("ui-titlepg-bg-1");

	// 背景画像表示
	ctx.drawImage(title_bg,
					0,
					0,
					title_bg.width,
					title_bg.height,
					0,
					0,
					this.core.width,
					this.core.height);

	var logo = this.core.image_loader.getImage("ui-titlepg-img-logo-1");
	// ロゴ画像表示
		ctx.drawImage(logo,
		310,
		455,
		logo.width*0.6, logo.height*0.6);

	ctx.restore();

	base_scene.prototype.draw.apply(this, arguments);
};

module.exports = SceneTitle;

},{"../constant":87,"../hakurei":98}],155:[function(require,module,exports){
//-----------------------------------------------------------
// Ss5ConverterToSSAJSON v1.0.3
//
// Copyright(C) Web Technology Corp.
// http://www.webtech.co.jp/
//
// Ss5ConverterToSSAJSON
// https://github.com/SpriteStudio/Ss5ConverterToSSAJSON/wiki
// から出力したJSONファイルをHTML5で再生するサンプルプログラムです。
//
//-----------------------------------------------------------

////////////////////////////////////////////////////////////
// SsImageList
////////////////////////////////////////////////////////////

function SsImageList(imageFiles, aFileRoot, loadImmediately, aOnLoad) {

	this.fileRoot = aFileRoot;
	this.imagePaths = new Array();
	this.images = new Array();

	// ロード完了時に呼ばれるコールバック
	// Callback that is called when the load is finished.
	this.onLoad = aOnLoad;

	// 全部読み込まれた場合のみユーザーが設定したコールバックを呼ぶ
	// Only when it is all loaded, is called a callback set by the user.
	this.onLoad_ = function () {
		for (var i in this.images)
			if (i != null && i.complete == false)
				return;
		if (this.onLoad != null)
			this.onLoad();
	}

	for (var i = 0; i < imageFiles.length; i++) {
		var path = this.fileRoot + imageFiles[i];
//        console.log(path);
		this.imagePaths.push(path);
		var image = new Image();
		if (loadImmediately)
		{
			image.onload = this.onLoad_;
			image.src = path;
		}
		this.images.push(image);
	}
}

// 指定したインデックスのImageを返す
// Get image at specified index.
SsImageList.prototype.getImage = function (index) {
	if (index < 0 || index >= this.images.length) return null;
	return this.images[index];
}

// 指定したインデックスの画像をimagePathで差し替える。
// Replace image of specified index at imagePath.
SsImageList.prototype.setImage = function (index, imagePath) {
	if (index < 0 || index >= this.images.length) return null;
	this.imagePaths[index] = this.fileRoot + imagePath;
	this.images[index].onload = this.onLoad_;
	this.images[index].src = this.imagePaths[index];
}

// ロード完了時コールバックを設定する
// Set a callback when load is finished.
SsImageList.prototype.setOnLoad = function (cb) {
	this.onLoad = cb;
}


////////////////////////////////////////////////////////////
// SsPartState
////////////////////////////////////////////////////////////

function SsPartState(name) {

	// パーツ名
	// Parts name.
	this.name = name;
	// 現在の描画Xポジション
	// Current x position at drawing.
	this.x = 0;
	// 現在の描画Yポジション
	// Current x position at drawing.
	this.y = 0;
}


////////////////////////////////////////////////////////////
// SsAnimation
////////////////////////////////////////////////////////////

function SsAnimation(ssaData, imageList) {

	this.ssaData = ssaData;
	this.imageList = imageList;

	this.partsMap = new Array();
	this.parts = ssaData.parts;
	for (var i = 0; i < this.parts.length; i++) {
		this.partsMap[this.parts[i]] = i;
	}
}

// このアニメーションのFPS
// This animation FPS.
SsAnimation.prototype.getFPS = function () {
	return this.ssaData.fps;
}

// トータルフレーム数を返す
// Get total frame count.
SsAnimation.prototype.getFrameCount = function () {
	return this.ssaData.ssa.length;
}

// パーツリストを返す
// Get parts list.
SsAnimation.prototype.getParts = function () {
	return this.ssaData.parts;
}

// パーツ名からNoを取得するマップを返す
// Return the map, to get the parts from number.
SsAnimation.prototype.getPartsMap = function () {
	return this.partsMap;
}

// 描画メソッド
// Draw method.
SsAnimation.prototype.drawFunc = function (ctx, frameNo, x, y, flipH, flipV, partStates, rootScaleX, rootScaleY) {

	var iPartNo = 0;
	var iImageNo = 1;
	var iSouX = 2;
	var iSouY = 3;
	var iSouW = 4;
	var iSouH = 5;
	var iDstX = 6;
	var iDstY = 7;
	var iDstAngle = 8;
	var iDstScaleX = 9;
	var iDstScaleY = 10;
	var iOrgX = 11;
	var iOrgY = 12;
	var iFlipH = 13;
	var iFlipV = 14;
	var iAlpha = 15;
	var iBlend = 16;

	var blendOperations = new Array(
		"source-over",
		"source-over",
		"lighter",
		"source-over"
	);

	var frameData = this.ssaData.ssa[frameNo];
	for (var refNo = 0; refNo < frameData.length; refNo++) {

		var partData = frameData[refNo];
		var partDataLen = partData.length;

		var partNo = partData[iPartNo];
		var img = this.imageList.getImage(partData[iImageNo]);
		var sx = partData[iSouX];
		var sy = partData[iSouY];
		var sw = partData[iSouW];
		var sh = partData[iSouH];
		var dx = partData[iDstX] * rootScaleX;
		var dy = partData[iDstY] * rootScaleY;

		var vdw = sw;
		var vdh = sh;

		dx += x;
		dy += y;

		if (sw > 0 && sh > 0) {

			var dang = partData[iDstAngle];
			var scaleX = partData[iDstScaleX];
			var scaleY = partData[iDstScaleY];

			var ox = (partDataLen > iOrgX) ? partData[iOrgX] : 0;
			var oy = (partDataLen > iOrgY) ? partData[iOrgY] : 0;
			var fh = (partDataLen > iFlipH) ? (partData[iFlipH] != 0 ? -1 : 1) : (1);
			var fv = (partDataLen > iFlipV) ? (partData[iFlipV] != 0 ? -1 : 1) : (1);
			var alpha = (partDataLen > iAlpha) ? partData[iAlpha] : 1.0;
			var blend = (partDataLen > iBlend) ? partData[iBlend] : 0;

			ctx.globalCompositeOperation = blendOperations[blend];
			ctx.globalAlpha = alpha;
			//ctx.setTransform(1, 0, 0, 1, dx, dy); 		// 最終的な表示位置へ. To display the final position.
			ctx.setTransform(1 * rootScaleX, 0, 0, 1 * rootScaleY, dx, dy); 	// 最終的な表示位置へ. To display the final position.
			ctx.rotate(-dang);
			ctx.scale(scaleX, scaleY);
			ctx.translate(-ox + vdw / 2, -oy + vdh / 2); 	// パーツの原点へ. To the origin of the parts.
			ctx.scale(fh, fv); 						    	// パーツの中心点でフリップ. Flip at the center point of the parts.

			// check
			//
			//      console.log(sx, sy, sw, sh);
			//      sw = (sx + sw < img.width) ? sw : img.width - sx;
			//      sh = (sy + sh < img.height) ? sh : img.height - sy;
			//      sw = (sw < 0) ? 0 : sw;
			//      sh = (sh < 0) ? 0 : sh;
			//      sx = (sx < 0) ? 0 : sx;
			//      sy = (sy < 0) ? 0 : sy;
			//      console.log(sx, sy, sw, sh);

			ctx.drawImage(img, sx, sy, sw, sh, -vdw / 2, -vdh / 2, vdw, vdh);
		}

		var state = partStates[partNo];
		state.x = dx;
		state.y = dy;
	}
}


////////////////////////////////////////////////////////////
// SsSprite
////////////////////////////////////////////////////////////

function SsSprite(animation) {

	// プライベート変数
	// Private variables.
	this.inner = {
		animation: animation,
		playingFrame: 0,
		prevDrawnTime: 0,
		step: 1,
		loop: 0,
		loopCount: 0,
		endCallBack: null,    // draw end callback

		partStates: null,
		initPartStates: function () {
			this.partStates = null;
			if (this.animation != null) {
				var parts = this.animation.getParts();
				var states = new Array();
				for (var i = 0; i < parts.length; i++) {
					states.push(new SsPartState(parts[i]));
				}
				this.partStates = states;
			}
		}
	};

	this.inner.initPartStates();
}

// 描画Xポジション
// X position at drawing.
SsSprite.prototype.x = 0;

// 描画Yポジション
// Y position at drawing
SsSprite.prototype.y = 0;

// ※未実装
// *Not implemented.
SsSprite.prototype.flipH = false;
SsSprite.prototype.flipV = false;

// scale
SsSprite.prototype.rootScaleX = 1.0;
SsSprite.prototype.rootScaleY = 1.0;

// アニメーションの設定
// Set animation.
SsSprite.prototype.setAnimation = function (animation) {
	this.inner.animation = animation;
	this.inner.initPartStates();
	this.inner.playingFrame = 0;
	this.inner.prevDrawnTime = 0;
	this.clearLoopCount();
}

// アニメーションの取得
// Get animation.
SsSprite.prototype.getAnimation = function () {
	return this.inner.animation;
}

// 再生フレームNoを設定
// Set frame no of playing.
SsSprite.prototype.setFrameNo = function (frameNo) {
	this.inner.playingFrame = frameNo;
	this.inner.prevDrawnTime = 0;
}

// 再生フレームNoを取得
// Get frame no of playing.
SsSprite.prototype.getFrameNo = function () {
	return this.inner.playingFrame >> 0;
}

// 再生スピードを設定 (1:標準)
// Set speed to play. (1:normal speed)
SsSprite.prototype.setStep = function (step) {
	this.inner.step = step;
}

// 再生スピードを取得
// Get speed to play. (1:normal speed)
SsSprite.prototype.getStep = function () {
	return this.inner.step;
}

// ループ回数の設定 (0:無限)
// Set a playback loop count.  (0:infinite)
SsSprite.prototype.setLoop = function (loop) {
	if (loop < 0) return;
	this.inner.loop = loop;
}

// ループ回数の設定を取得
// Get a playback loop count of specified. (0:infinite)
SsSprite.prototype.getLoop = function () {
	return this.inner.loop;
}

// 現在の再生回数を取得
// Get repeat count a playback.
SsSprite.prototype.getLoopCount = function () {
	return this.inner.loopCount;
}

// 現在の再生回数をクリア
// Clear repeat count a playback.
SsSprite.prototype.clearLoopCount = function () {
	this.inner.loopCount = 0;
}

// アニメーション終了時のコールバックを設定
// Set the call back at the end of animation.
SsSprite.prototype.setEndCallBack = function (func) {
	this.inner.endCallBack = func;
}

// パーツの状態（現在のX,Y座標など）を取得
// Gets the state of the parts. (Current x and y positions)
SsSprite.prototype.getPartState = function (name) {
	if (this.inner.partStates == null) return null;

	var partsMap = this.inner.animation.getPartsMap();
	var partNo = partsMap[name];
	if (partNo == null) return null;
	return this.inner.partStates[partNo];
}

// 描画実行
// Drawing method.
SsSprite.prototype.draw = function (ctx, currentTime) {

	if (this.inner.animation == null) return;

	if (this.inner.loop == 0 || this.inner.loop > this.inner.loopCount) {
		// フレームを進める
		// To next frame.
		if (this.inner.prevDrawnTime > 0) {

			var s = (currentTime - this.inner.prevDrawnTime) / (1000 / this.inner.animation.getFPS());
			this.inner.playingFrame += s * this.inner.step;

			var c = (this.inner.playingFrame / this.inner.animation.getFrameCount()) >> 0;

			if (this.inner.step >= 0) {
				if (this.inner.playingFrame >= this.inner.animation.getFrameCount()) {
					// ループ回数更新
					// Update repeat count.
					this.inner.loopCount += c;
					if (this.inner.loop == 0 || this.inner.loopCount < this.inner.loop) {
						// フレーム番号更新、再生を続ける
						// Update frame no, and playing.
						this.inner.playingFrame %= this.inner.animation.getFrameCount();
					}
					else {
						// 再生停止、最終フレームへ
						// Stop animation, to last frame.
						this.inner.playingFrame = this.inner.animation.getFrameCount() - 1;
						// 停止時コールバック呼び出し
						// Call finished callback.
						if (this.inner.endCallBack != null) {
							this.inner.endCallBack();
						}
					}
				}
			}
			else {
				if (this.inner.playingFrame < 0) {
					// ループ回数更新
					// Update repeat count.
					this.inner.loopCount += 1 + -c;
					if (this.inner.loop == 0 || this.inner.loopCount < this.inner.loop) {
						// フレーム番号更新、再生を続ける
						// Update frame no, and playing.
						this.inner.playingFrame %= this.inner.animation.getFrameCount();
						if (this.inner.playingFrame < 0) this.inner.playingFrame += this.inner.animation.getFrameCount();
					}
					else {
						// 再生停止、先頭フレームへ
						// Stop animation, to first frame.
						this.inner.playingFrame = 0;
						// 停止時コールバック呼び出し
						// Call finished callback.
						if (this.inner.endCallBack != null) {
							this.inner.endCallBack();
						}
					}
				}
			}

		}
	}
	//else {
	//	// 再生停止
	//	// Stop animation.
	//	this.inner.playingFrame = 0;
	//}

	this.inner.prevDrawnTime = currentTime;

	this.inner.animation.drawFunc(ctx, this.getFrameNo(), this.x, this.y, this.flipH, this.flipV, this.inner.partStates, this.rootScaleX, this.rootScaleY);
}

module.exports = {
	SsImageList: SsImageList,
	SsAnimation: SsAnimation,
	SsSprite:    SsSprite,
};



},{}]},{},[135]);
