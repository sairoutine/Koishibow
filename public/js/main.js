(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var AssetsConfig = {};

AssetsConfig.images = {
	// HowTo 画像
	"howto":            "./image/howto.png",

	// マウスカーソル
	"ui_icon_pointer_01":            {
		image: "./image/ui_icon_pointer_01.png",
		scale_width: 2/3,
		scale_height: 2/3,
	},
	"ui_icon_pointer_02":            {
		image: "./image/ui_icon_pointer_02.png",
		scale_width: 2/3,
		scale_height: 2/3,
	},

	// こいし画像
	"koishi":                "./image/koishi.png",

	// 3rdeye 使用時のもや
	"black_mist":            "./image/black_mist.png",
	// 3rdeye 使用時の光
	"light":  "./image/light.png",

	// さとり邂逅イベント
	"bg01": "./image/chapter0/event/encounter_satori/bg01.jpg",
	"bg02": "./image/chapter0/event/encounter_satori/bg02.jpg",
	"str":  "./image/chapter0/event/encounter_satori/str.png",
	"black-mist": "./image/chapter0/event/encounter_satori/black-mist.png",

	// 帽子獲得イベント
	"get_hat":  "./image/chapter0/event/get_hat/bg.png",

	// こいしが落ちるイベント
	"bg01_for_falldown_koishi":  "./image/chapter0/event/falldown_koishi/bg01_for_falldown_koishi.jpg",
	"door":  "./image/chapter0/event/falldown_koishi/door.png",
	"shadow":  "./image/chapter0/event/falldown_koishi/shadow.png",

	// ジャーナル画像
	"journal001":  "./image/journal/001.png",
	"journal002":  "./image/journal/002.png",
	"journal003":  "./image/journal/003.png",
	"journal004":  "./image/journal/004.png",
	"journal005":  "./image/journal/005.png",

	// フィールドの画像とオブジェクト
	"chapter0-myroom-bg-001":    "./image/chapter0/myroom/chapter0-myroom-bg-001.jpg",
	"chapter0-myroom-obj-01-01": "./image/chapter0/myroom/chapter0-myroom-obj-01-01.png",
	"chapter0-myroom-obj-02-01": "./image/chapter0/myroom/chapter0-myroom-obj-02-01.png",
	"chapter0-myroom-obj-03-01": "./image/chapter0/myroom/chapter0-myroom-obj-03-01.png",
	"chapter0-myroom-obj-04-01": "./image/chapter0/myroom/chapter0-myroom-obj-04-01.png",
	"chapter0-myroom-obj-05-01": "./image/chapter0/myroom/chapter0-myroom-obj-05-01.png",

	"chapter0-hospital_corridor1-bg-001":    "./image/chapter0/hospital_corridor1/chapter0-hospital-bg-001.jpg",
	"chapter0-hospital_corridor1-obj-01-01": "./image/chapter0/hospital_corridor1/chapter0-hospital-obj-01-01.png",
	"chapter0-hospital_corridor1-obj-02-01": "./image/chapter0/hospital_corridor1/chapter0-hospital-obj-02-01.png",
	"chapter0-hospital_corridor1-obj-03-01": "./image/chapter0/hospital_corridor1/chapter0-hospital-obj-03-01.png",
	"chapter0-hospital_corridor1-obj-04-01": "./image/chapter0/hospital_corridor1/chapter0-hospital-obj-04-01.png",

	"chapter0-hospital2-bg-001":        "./image/chapter0/hospital_corridor2/chapter0-hospital2-bg-001.jpg",
	"chapter0-hospital2-obj-01-01": "./image/chapter0/hospital_corridor2/chapter0-hospital2-obj-01-01.png",
	"chapter0-hospital2-obj-02-01": "./image/chapter0/hospital_corridor2/chapter0-hospital2-obj-02-01.png",
	"chapter0-hospital2-obj-03-01": "./image/chapter0/hospital_corridor2/chapter0-hospital2-obj-03-01.png",

	"chapter0-mansionpas-001":          "./image/chapter0/mansion_corridor1/chapter0-mansionpas-001.jpg",
	"chapter0-mspassage-obj-01-01": "./image/chapter0/mansion_corridor1/chapter0-mspassage-obj-01-01.png",
	"chapter0-mspassage-obj-02-01": "./image/chapter0/mansion_corridor1/chapter0-mspassage-obj-02-01.png",
	"chapter0-mspassage-obj-03-01": "./image/chapter0/mansion_corridor1/chapter0-mspassage-obj-03-01.png",

	"chapter0-mansionpas-002":          "./image/chapter0/mansion_corridor2/chapter0-mspassage-bg-002.jpg",
	"chapter0-mspassage-obj-04-01": "./image/chapter0/mansion_corridor2/chapter0-mspassage-obj-04-01.png",
	"chapter0-mspassage-obj-05-01": "./image/chapter0/mansion_corridor2/chapter0-mspassage-obj-05-01.png",
	"chapter0-mspassage-obj-06-01": "./image/chapter0/mansion_corridor2/chapter0-mspassage-obj-06-01.png",

	"chapter0-mansionpas-003":          "./image/chapter0/mansion_corridor3/chapter0-mspassage-bg-003.jpg",
	"chapter0-mspassage-obj-07-01": "./image/chapter0/mansion_corridor3/chapter0-mspassage-obj-07-01.png",
	"chapter0-mspassage-obj-08-01": "./image/chapter0/mansion_corridor3/chapter0-mspassage-obj-08-01.png",
	"chapter0-mspassage-obj-09-01": "./image/chapter0/mansion_corridor3/chapter0-mspassage-obj-09-01.png",
	"chapter0-mspassage-obj-10-01": "./image/chapter0/mansion_corridor3/chapter0-mspassage-obj-10-01.png",
	"chapter0-mspassage-obj-11-01": "./image/chapter0/mansion_corridor3/chapter0-mspassage-obj-11-01.png",

	// アイテム 目薬
	item_01:            "./image/item/icon_item_eyedrops01.png",

	// 体験版時のコンティニュー画像
	tobecontinued:  "./image/tobecontinued.png",

	// フィールド上に落ちているジャーナル オブジェクト
	paper:              "./image/chapterall-obj-02-01.png",
	// フィールド上に落ちている目薬 オブジェクト
	eyedrops:           "./image/chapterall-obj-01-01.png",

	// 画面遷移用やじるし
	arrow:  "./image/ui-common-btn-arrow-wht.png",
	// アイテムボタン
	tool: "./image/ui-common-btn-tool-1.png",
	// 第三の目
	eye1:  "./image/ui-common-btn-eye-1.png",
	eye2:  "./image/ui-common-btn-eye-2.png",
	eye3:  "./image/ui-common-btn-eye-3.png",
	eye4:  "./image/ui-common-btn-eye-4.png",

	// ふきだし
	fukidashi:  "./image/ui-common-frame-talk1-brn.png",
	fukidashi_arrow:  "./image/ui-common-btn-arrow-brn.png",

	// メニュー
	"ui-common-bg-toolpu-blk":   "./image/menu/ui-common-bg-toolpu-blk.png",
	"ui-common-btn-toolpu-blu1": "./image/menu/ui-common-btn-toolpu-blu1.png",
	"ui-common-btn-toolpu-blu2": "./image/menu/ui-common-btn-toolpu-blu2.png",
	"ui-common-frame-toolpu":    "./image/menu/ui-common-frame-toolpu.png",

	// タイトル画面
	"ui-titlepg-bg-1":         "./image/title/ui-titlepg-bg-1.jpg",
	"ui-titlepg-btn-con-off":  "./image/title/ui-titlepg-btn-con-off.png",
	"ui-titlepg-btn-con-on":   "./image/title/ui-titlepg-btn-con-on.png",
	"ui-titlepg-btn-ng-off":   "./image/title/ui-titlepg-btn-ng-off.png",
	"ui-titlepg-btn-ng-on":    "./image/title/ui-titlepg-btn-ng-on.png",
	"ui-titlepg-btn-opt-off":  "./image/title/ui-titlepg-btn-opt-off.png",
	"ui-titlepg-btn-opt-on":   "./image/title/ui-titlepg-btn-opt-on.png",
	"ui-titlepg-img-logo-1":   "./image/title/ui-titlepg-img-logo-1.png",

	// 1枚絵
	"picture_use_eyedrops":   "./image/picture/illust_02.png",

	// 不要
	//paper_clip:  "./image/ui-common-frame-paper_clip.png",
	//paper_close_button: "./image/ui-common-btn-close.png",
	//paper_open:         "./image/ui-common-frame-paper.png",
};

AssetsConfig.sounds = {
	show_journal:    {
		path: "./sound/show_journal.ogg",
		volume: 1.0,
	},
	open_menu:    {
		path: "./sound/open_menu.ogg",
		volume: 1.0,
	},
	select_item:    {
		path: "./sound/select_item.ogg",
		volume: 1.0,
	},
	select_title:    {
		path: "./sound/select_title.ogg",
		volume: 1.0,
	},
	focuson_title:    {
		path: "./sound/focuson_title.ogg",
		volume: 1.0,
	},
	use_3rdeye:    {
		path: "./sound/use_3rdeye.ogg",
		volume: 1.0,
	},
	use_eyedrops:    {
		path: "./sound/use_eyedrops.ogg",
		volume: 1.0,
	},

	"chapter0_myroom-get_hat":    {
		path: "./sound/chapter0/myroom/get_hat.ogg",
		volume: 1.0,
	},
	"chapter0-myroom-door_open":    {
		path: "./sound/chapter0/myroom/door_open.ogg",
		volume: 1.0,
	},

	"chapter0-myroom-open_book":    {
		path: "./sound/chapter0/myroom/open_book.ogg",
		volume: 1.0,
	},
	"chapter0-myroom-move_crayon":    {
		path: "./sound/chapter0/myroom/move_crayon.ogg",
		volume: 0.7,
	},
	"chapter0-myroom-sound_window":    {
		path: "./sound/chapter0/myroom/sound_window.ogg",
		volume: 1.0,
	},
	"chapter0-myroom-sound_window_for_kokoro":    {
		path: "./sound/chapter0/myroom/sound_window_for_kokoro.ogg",
		volume: 1.0,
	},
	"chapter0-hospital_corridor1-sound_aidkit":    {
		path: "./sound/chapter0/hospital_corridor1/sound_aidkit.ogg",
		volume: 1.0,
	},
	"chapter0-hospital_corridor1-sound_strecher":    {
		path: "./sound/chapter0/hospital_corridor1/sound_strecher.ogg",
		volume: 1.0,
	},
	"chapter0-hospital_corridor2-move_wheelchair":    {
		path: "./sound/chapter0/hospital_corridor2/move_wheelchair.ogg",
		volume: 1.0,
	},
	"chapter0-mansion_corridor1-lamp_back":    {
		path: "./sound/chapter0/mansion_corridor1/lamp_back.ogg",
		volume: 1.0,
	},
	"chapter0-mansion_corridor1-lamp_front":    {
		path: "./sound/chapter0/mansion_corridor1/lamp_front.ogg",
		volume: 1.0,
	},
	"chapter0-mansion_corridor1-move_tricycle":    {
		path: "./sound/chapter0/mansion_corridor1/move_tricycle.ogg",
		volume: 1.0,
	},
	"chapter0-mansion_corridor1-open_curtain":    {
		path: "./sound/chapter0/mansion_corridor1/open_curtain.ogg",
		volume: 1.0,
	},
	"chapter0-mansion_corridor2-flower_back":    {
		path: "./sound/chapter0/mansion_corridor2/flower_back.ogg",
		volume: 1.0,
	},
	"chapter0-mansion_corridor2-flower_front":    {
		path: "./sound/chapter0/mansion_corridor2/flower_front.ogg",
		volume: 1.0,
	},
	"chapter0-mansion_corridor2-open_door":    {
		path: "./sound/chapter0/mansion_corridor2/open_door.ogg",
		volume: 1.0,
	},

	"chapter0-mansion_corridor2-event_out":    {
		path: "./sound/chapter0/mansion_corridor2/event/event_out.ogg",
		volume: 1.0,
	},
	"chapter0-mansion_corridor2-event_in":    {
		path: "./sound/chapter0/mansion_corridor2/event/event_in.ogg",
		volume: 1.0,
	},
	"chapter0-mansion_corridor3-open_door":    {
		path: "./sound/chapter0/mansion_corridor3/open_door.ogg",
		volume: 1.0,
	},
	"chapter0-mansion_corridor3-ring_clock_back":    {
		path: "./sound/chapter0/mansion_corridor3/ring_clock_back.ogg",
		volume: 1.0,
	},
	"chapter0-mansion_corridor3-ring_clock_front":    {
		path: "./sound/chapter0/mansion_corridor3/ring_clock_front.ogg",
		volume: 1.0,
	},
	"chapter0-mansion_corridor3-sound_vase_back":    {
		path: "./sound/chapter0/mansion_corridor3/sound_vase_back.ogg",
		volume: 1.0,
	},
	"chapter0-mansion_corridor3-smile_kokoro_back":    {
		path: "./sound/chapter0/mansion_corridor3/smile_kokoro_back.ogg",
		volume: 1.0,
	},
	"chapter0-mansion_corridor3-open_and_falldown":    {
		path: "./sound/chapter0/mansion_corridor3/open_and_falldown.ogg",
		volume: 1.0,
	},
	touch:    {
		path: "./sound/touch.ogg",
		volume: 1.0,
	},
	walking_bare_default_left:    {
		path: "./sound/walking/bare_default_left.ogg",
		volume: 1.0,
	},
	walking_bare_default_right:    {
		path: "./sound/walking/bare_default_right.ogg",
		volume: 1.0,
	},
	walking_bare_wood_left:    {
		path: "./sound/walking/bare_wood_left.ogg",
		volume: 1.0,
	},
	walking_bare_wood_right:    {
		path: "./sound/walking/bare_wood_right.ogg",
		volume: 1.0,
	},

	noise1:    {
		path: "./sound/noise/noise1.ogg",
		volume: 1.0,
	},
	noise2:    {
		path: "./sound/noise/noise2.ogg",
		volume: 1.0,
	},
	noise3:    {
		path: "./sound/noise/noise3.ogg",
		volume: 1.0,
	},
	noise4:    {
		path: "./sound/noise/noise4.ogg",
		volume: 1.0,
	},
	noise5:    {
		path: "./sound/noise/noise5.ogg",
		volume: 1.0,
	},
};

AssetsConfig.bgms = {
	using_3rdeye: {
		path: "./bgm/using_3rdeye.ogg",
		loopStart: 0*60 + 0 + 0.000,
		//loopEnd: 1*60 + 47 + 0.027,
		volume: 1.0,
	},
	title: {
		path: "./bgm/title1.ogg",
		loopStart: 0*60 + 0 + 0.000,
		//loopEnd: 1*60 + 47 + 0.027,
		volume: 0.9,
	},

	field1: {
		path: "./bgm/field1.ogg",
		loopStart: 0*60 + 0 + 0.000,
		//loopEnd: 1*60 + 47 + 0.027,
		volume: 0.9,
	},
	field2: {
		path: "./bgm/field2.ogg",
		loopStart: 0*60 + 0 + 0.000,
		//loopEnd: 1*60 + 47 + 0.027,
		volume: 0.9,
	},
	"chapter0-event-encounter_satori": {
		path: "./bgm/chapter0/event/encounter_satori.ogg",
		volume: 0.6,
	},
	"chapter0-mansion_corridor1-tricycle": {
		path: "./bgm/chapter0/mansion_corridor1/tricycle.ogg",
		loopStart: 0*60 + 0 + 0.000,
		//loopEnd: 1*60 + 47 + 0.027,
		volume: 1.0,
	},
	"chapter0-mansion_corridor1-wind": {
		path: "./bgm/chapter0/mansion_corridor1/wind.ogg",
		loopStart: 0*60 + 0 + 0.000,
		//loopEnd: 1*60 + 47 + 0.027,
		volume: 1.0,
	},
	"chapter0-mansion_corridor3-clock": {
		path: "./bgm/chapter0/mansion_corridor3/clock.ogg",
		loopStart: 0*60 + 0 + 0.000,
		//loopEnd: 1*60 + 47 + 0.027,
		volume: 1.0,
	},

};


module.exports = AssetsConfig;

},{}],2:[function(require,module,exports){
'use strict';
var CONSTANT = require('../constant');
var field_list = [
	require("../data/field/chapter0/myroom"),
	require("../data/field/chapter0/hospital_corridor1"),
	require("../data/field/chapter0/hospital_corridor2"),
	require("../data/field/chapter0/mansion_corridor1"),
	require("../data/field/chapter0/mansion_corridor2"),
	require("../data/field/chapter0/mansion_corridor3"),
];

var field_map = {};

for (var i = 0, len = field_list.length; i < len; i++) {
	var field = field_list[i];

	// key 名が被ってたらデバッグではエラー
	if(CONSTANT.DEBUG.ON) {
		if(field_map[field.key]) {
			throw new Error("duplicate field key name: ". field.key);
		}
	}

	field_map[field.key] = field;
}
module.exports = field_map;


},{"../constant":5,"../data/field/chapter0/hospital_corridor1":92,"../data/field/chapter0/hospital_corridor2":93,"../data/field/chapter0/mansion_corridor1":94,"../data/field/chapter0/mansion_corridor2":95,"../data/field/chapter0/mansion_corridor3":96,"../data/field/chapter0/myroom":97}],3:[function(require,module,exports){
'use strict';
var CONSTANT = require('../constant');

var Item = {};

Item[CONSTANT.ITEM.EYEDROPS] = {
	name: "目薬",
	image_name: "item_01",
	description: "使うと目の充血がやわらぐ",
};



module.exports = Item;


},{"../constant":5}],4:[function(require,module,exports){
'use strict';
var anime_map = {
	"chapter0-myroom-obj-02-01-obj01": require('../data/anime/chapter0/myroom/obj-02-01/obj01_anime_1'),
	"chapter0-myroom-obj-02-01-obj02": require('../data/anime/chapter0/myroom/obj-02-01/obj02_anime_1'),
	"chapter0-myroom-obj-02-01-obj03": require('../data/anime/chapter0/myroom/obj-02-01/obj03_anime_1'),
	"chapter0-myroom-obj-03-01-obj01": require('../data/anime/chapter0/myroom/obj-03-01/obj01_anime_1'),
	"chapter0-myroom-obj-03-01-obj02": require('../data/anime/chapter0/myroom/obj-03-01/obj02_anime_1'),
	"chapter0-myroom-obj-03-01-obj03": require('../data/anime/chapter0/myroom/obj-03-01/obj03_anime_1'),
	"chapter0-myroom-obj-04-01-obj01": require('../data/anime/chapter0/myroom/obj-04-01/obj01_anime_1'),
	"chapter0-myroom-obj-04-01-obj02": require('../data/anime/chapter0/myroom/obj-04-01/obj02_anime_1'),
	"chapter0-myroom-obj-04-01-obj03": require('../data/anime/chapter0/myroom/obj-04-01/obj03_anime_1'),
	"chapter0-hospital_corridor2-obj-01-01-obj01": require('../data/anime/chapter0/hospital_corridor2/obj-01-01/obj01_anime_1'),
	"chapter0-hospital_corridor2-obj-01-01-obj02": require('../data/anime/chapter0/hospital_corridor2/obj-01-01/obj02_anime_1'),
	"chapter0-hospital_corridor2-obj-01-01-obj03": require('../data/anime/chapter0/hospital_corridor2/obj-01-01/obj03_anime_1'),
	"chapter0-mansion_corridor1-obj-01-01-obj01":  require('../data/anime/chapter0/mansion_corridor1/obj-01-01/obj01_anime_1'),
	"chapter0-mansion_corridor1-obj-01-01-obj02":  require('../data/anime/chapter0/mansion_corridor1/obj-01-01/obj02_anime_1'),
	"chapter0-mansion_corridor1-obj-01-01-obj03":  require('../data/anime/chapter0/mansion_corridor1/obj-01-01/obj03_anime_1'),
	"chapter0-mansion_corridor1-obj-01-01-obj04":  require('../data/anime/chapter0/mansion_corridor1/obj-01-01/obj04_anime_1'),
	"chapter0-mansion_corridor1-obj-01-01-obj05":  require('../data/anime/chapter0/mansion_corridor1/obj-01-01/obj05_anime_1'),
	"chapter0-mansion_corridor1-obj-01-01-obj06":  require('../data/anime/chapter0/mansion_corridor1/obj-01-01/obj06_anime_1'),
	"chapter0-mansion_corridor1-obj-02-01-obj01":  require('../data/anime/chapter0/mansion_corridor1/obj-02-01/obj01_anime_1'),
	"chapter0-mansion_corridor1-obj-02-01-obj02":  require('../data/anime/chapter0/mansion_corridor1/obj-02-01/obj02_anime_1'),
	"chapter0-mansion_corridor1-obj-02-01-obj03":  require('../data/anime/chapter0/mansion_corridor1/obj-02-01/obj03_anime_1'),
	"chapter0-mansion_corridor1-obj-02-01-obj04":  require('../data/anime/chapter0/mansion_corridor1/obj-02-01/obj04_anime_1'),
	"chapter0-mansion_corridor1-obj-02-01-obj05":  require('../data/anime/chapter0/mansion_corridor1/obj-02-01/obj05_anime_1'),
	"chapter0-mansion_corridor1-obj-02-01-obj06":  require('../data/anime/chapter0/mansion_corridor1/obj-02-01/obj06_anime_1'),
	"chapter0-mansion_corridor1-obj-03-01-obj01":  require('../data/anime/chapter0/mansion_corridor1/obj-03-01/obj01_anime_1'),
	"chapter0-mansion_corridor1-obj-03-01-obj02":  require('../data/anime/chapter0/mansion_corridor1/obj-03-01/obj02_anime_1'),
	"chapter0-mansion_corridor1-obj-03-01-obj03":  require('../data/anime/chapter0/mansion_corridor1/obj-03-01/obj03_anime_1'),
	"chapter0-mansion_corridor1-obj-03-01-obj04":  require('../data/anime/chapter0/mansion_corridor1/obj-03-01/obj04_anime_1'),
	"chapter0-mansion_corridor1-obj-03-01-obj05":  require('../data/anime/chapter0/mansion_corridor1/obj-03-01/obj05_anime_1'),
	"chapter0-mansion_corridor1-obj-03-01-obj06":  require('../data/anime/chapter0/mansion_corridor1/obj-03-01/obj06_anime_1'),

	"chapter0-mansion_corridor2-obj-04-01-obj01":  require('../data/anime/chapter0/mansion_corridor2/obj-04-01/obj01_anime_1'),
	"chapter0-mansion_corridor2-obj-04-01-obj02":  require('../data/anime/chapter0/mansion_corridor2/obj-04-01/obj02_anime_1'),
	"chapter0-mansion_corridor2-obj-04-01-obj03":  require('../data/anime/chapter0/mansion_corridor2/obj-04-01/obj03_anime_1'),
	"chapter0-mansion_corridor2-obj-04-01-obj04":  require('../data/anime/chapter0/mansion_corridor2/obj-04-01/obj04_anime_1'),
	"chapter0-mansion_corridor2-obj-04-01-obj05":  require('../data/anime/chapter0/mansion_corridor2/obj-04-01/obj05_anime_1'),
	"chapter0-mansion_corridor2-obj-04-01-obj06":  require('../data/anime/chapter0/mansion_corridor2/obj-04-01/obj06_anime_1'),
	"chapter0-mansion_corridor2-obj-05-01-obj01":  require('../data/anime/chapter0/mansion_corridor2/obj-05-01/obj01_anime_1'),
	"chapter0-mansion_corridor2-obj-05-01-obj02":  require('../data/anime/chapter0/mansion_corridor2/obj-05-01/obj02_anime_1'),
	"chapter0-mansion_corridor2-obj-05-01-obj03":  require('../data/anime/chapter0/mansion_corridor2/obj-05-01/obj03_anime_1'),
	"chapter0-mansion_corridor2-obj-05-01-obj04":  require('../data/anime/chapter0/mansion_corridor2/obj-05-01/obj04_anime_1'),
	"chapter0-mansion_corridor2-obj-05-01-obj05":  require('../data/anime/chapter0/mansion_corridor2/obj-05-01/obj05_anime_1'),
	"chapter0-mansion_corridor2-obj-05-01-obj06":  require('../data/anime/chapter0/mansion_corridor2/obj-05-01/obj06_anime_1'),
	"chapter0-mansion_corridor2-obj-06-01-obj01":  require('../data/anime/chapter0/mansion_corridor2/obj-06-01/obj01_anime_1'),
	"chapter0-mansion_corridor2-obj-06-01-obj02":  require('../data/anime/chapter0/mansion_corridor2/obj-06-01/obj02_anime_1'),
	"chapter0-mansion_corridor2-obj-06-01-obj03":  require('../data/anime/chapter0/mansion_corridor2/obj-06-01/obj03_anime_1'),

	"chapter0-mansion_corridor3-obj-07-01-obj01":  require('../data/anime/chapter0/mansion_corridor3/obj-07-01/obj01_anime_1'),
	"chapter0-mansion_corridor3-obj-07-01-obj02":  require('../data/anime/chapter0/mansion_corridor3/obj-07-01/obj02_anime_1'),
	"chapter0-mansion_corridor3-obj-07-01-obj03":  require('../data/anime/chapter0/mansion_corridor3/obj-07-01/obj03_anime_1'),
	"chapter0-mansion_corridor3-obj-07-01-obj04":  require('../data/anime/chapter0/mansion_corridor3/obj-07-01/obj04_anime_1'),
	"chapter0-mansion_corridor3-obj-07-01-obj05":  require('../data/anime/chapter0/mansion_corridor3/obj-07-01/obj05_anime_1'),
	"chapter0-mansion_corridor3-obj-07-01-obj06":  require('../data/anime/chapter0/mansion_corridor3/obj-07-01/obj06_anime_1'),
	"chapter0-mansion_corridor3-obj-08-01-obj01":  require('../data/anime/chapter0/mansion_corridor3/obj-08-01/obj01_anime_1'),
	"chapter0-mansion_corridor3-obj-08-01-obj02":  require('../data/anime/chapter0/mansion_corridor3/obj-08-01/obj02_anime_1'),
	"chapter0-mansion_corridor3-obj-08-01-obj03":  require('../data/anime/chapter0/mansion_corridor3/obj-08-01/obj03_anime_1'),
	"chapter0-mansion_corridor3-obj-08-01-obj04":  require('../data/anime/chapter0/mansion_corridor3/obj-08-01/obj04_anime_1'),
	"chapter0-mansion_corridor3-obj-08-01-obj05":  require('../data/anime/chapter0/mansion_corridor3/obj-08-01/obj05_anime_1'),
	"chapter0-mansion_corridor3-obj-08-01-obj06":  require('../data/anime/chapter0/mansion_corridor3/obj-08-01/obj06_anime_1'),
	"chapter0-mansion_corridor3-obj-09-01-obj01":  require('../data/anime/chapter0/mansion_corridor3/obj-09-01/obj01_anime_1'),
	"chapter0-mansion_corridor3-obj-09-01-obj02":  require('../data/anime/chapter0/mansion_corridor3/obj-09-01/obj02_anime_1'),
	"chapter0-mansion_corridor3-obj-09-01-obj03":  require('../data/anime/chapter0/mansion_corridor3/obj-09-01/obj03_anime_1'),
	"chapter0-mansion_corridor3-obj-09-01-obj04":  require('../data/anime/chapter0/mansion_corridor3/obj-09-01/obj04_anime_1'),
	"chapter0-mansion_corridor3-obj-09-01-obj05":  require('../data/anime/chapter0/mansion_corridor3/obj-09-01/obj05_anime_1'),
	"chapter0-mansion_corridor3-obj-09-01-obj06":  require('../data/anime/chapter0/mansion_corridor3/obj-09-01/obj06_anime_1'),
	"chapter0-mansion_corridor3-obj-10-01-obj01":  require('../data/anime/chapter0/mansion_corridor3/obj-10-01/obj01_anime_1'),
	"chapter0-mansion_corridor3-obj-10-01-obj02":  require('../data/anime/chapter0/mansion_corridor3/obj-10-01/obj02_anime_1'),
	"chapter0-mansion_corridor3-obj-10-01-obj03":  require('../data/anime/chapter0/mansion_corridor3/obj-10-01/obj03_anime_1'),
	"chapter0-mansion_corridor3-obj-10-01-obj04":  require('../data/anime/chapter0/mansion_corridor3/obj-10-01/obj04_anime_1'),
	"chapter0-mansion_corridor3-obj-10-01-obj05":  require('../data/anime/chapter0/mansion_corridor3/obj-10-01/obj05_anime_1'),
	"chapter0-mansion_corridor3-obj-10-01-obj06":  require('../data/anime/chapter0/mansion_corridor3/obj-10-01/obj06_anime_1'),
	"chapter0-mansion_corridor3-obj-11-01-obj01":  require('../data/anime/chapter0/mansion_corridor3/obj-11-01/obj01_anime_1'),
	"chapter0-mansion_corridor3-obj-11-01-obj02":  require('../data/anime/chapter0/mansion_corridor3/obj-11-01/obj02_anime_1'),
	"chapter0-mansion_corridor3-obj-11-01-obj03":  require('../data/anime/chapter0/mansion_corridor3/obj-11-01/obj03_anime_1'),
	"chapter0-mansion_corridor3-obj-11-01-obj04":  require('../data/anime/chapter0/mansion_corridor3/obj-11-01/obj04_anime_1'),
	"chapter0-mansion_corridor3-obj-11-01-obj05":  require('../data/anime/chapter0/mansion_corridor3/obj-11-01/obj05_anime_1'),
	"chapter0-mansion_corridor3-obj-11-01-obj06":  require('../data/anime/chapter0/mansion_corridor3/obj-11-01/obj06_anime_1'),
};

module.exports = anime_map;


},{"../data/anime/chapter0/hospital_corridor2/obj-01-01/obj01_anime_1":9,"../data/anime/chapter0/hospital_corridor2/obj-01-01/obj02_anime_1":10,"../data/anime/chapter0/hospital_corridor2/obj-01-01/obj03_anime_1":11,"../data/anime/chapter0/mansion_corridor1/obj-01-01/obj01_anime_1":12,"../data/anime/chapter0/mansion_corridor1/obj-01-01/obj02_anime_1":13,"../data/anime/chapter0/mansion_corridor1/obj-01-01/obj03_anime_1":14,"../data/anime/chapter0/mansion_corridor1/obj-01-01/obj04_anime_1":15,"../data/anime/chapter0/mansion_corridor1/obj-01-01/obj05_anime_1":16,"../data/anime/chapter0/mansion_corridor1/obj-01-01/obj06_anime_1":17,"../data/anime/chapter0/mansion_corridor1/obj-02-01/obj01_anime_1":18,"../data/anime/chapter0/mansion_corridor1/obj-02-01/obj02_anime_1":19,"../data/anime/chapter0/mansion_corridor1/obj-02-01/obj03_anime_1":20,"../data/anime/chapter0/mansion_corridor1/obj-02-01/obj04_anime_1":21,"../data/anime/chapter0/mansion_corridor1/obj-02-01/obj05_anime_1":22,"../data/anime/chapter0/mansion_corridor1/obj-02-01/obj06_anime_1":23,"../data/anime/chapter0/mansion_corridor1/obj-03-01/obj01_anime_1":24,"../data/anime/chapter0/mansion_corridor1/obj-03-01/obj02_anime_1":25,"../data/anime/chapter0/mansion_corridor1/obj-03-01/obj03_anime_1":26,"../data/anime/chapter0/mansion_corridor1/obj-03-01/obj04_anime_1":27,"../data/anime/chapter0/mansion_corridor1/obj-03-01/obj05_anime_1":28,"../data/anime/chapter0/mansion_corridor1/obj-03-01/obj06_anime_1":29,"../data/anime/chapter0/mansion_corridor2/obj-04-01/obj01_anime_1":30,"../data/anime/chapter0/mansion_corridor2/obj-04-01/obj02_anime_1":31,"../data/anime/chapter0/mansion_corridor2/obj-04-01/obj03_anime_1":32,"../data/anime/chapter0/mansion_corridor2/obj-04-01/obj04_anime_1":33,"../data/anime/chapter0/mansion_corridor2/obj-04-01/obj05_anime_1":34,"../data/anime/chapter0/mansion_corridor2/obj-04-01/obj06_anime_1":35,"../data/anime/chapter0/mansion_corridor2/obj-05-01/obj01_anime_1":36,"../data/anime/chapter0/mansion_corridor2/obj-05-01/obj02_anime_1":37,"../data/anime/chapter0/mansion_corridor2/obj-05-01/obj03_anime_1":38,"../data/anime/chapter0/mansion_corridor2/obj-05-01/obj04_anime_1":39,"../data/anime/chapter0/mansion_corridor2/obj-05-01/obj05_anime_1":40,"../data/anime/chapter0/mansion_corridor2/obj-05-01/obj06_anime_1":41,"../data/anime/chapter0/mansion_corridor2/obj-06-01/obj01_anime_1":42,"../data/anime/chapter0/mansion_corridor2/obj-06-01/obj02_anime_1":43,"../data/anime/chapter0/mansion_corridor2/obj-06-01/obj03_anime_1":44,"../data/anime/chapter0/mansion_corridor3/obj-07-01/obj01_anime_1":45,"../data/anime/chapter0/mansion_corridor3/obj-07-01/obj02_anime_1":46,"../data/anime/chapter0/mansion_corridor3/obj-07-01/obj03_anime_1":47,"../data/anime/chapter0/mansion_corridor3/obj-07-01/obj04_anime_1":48,"../data/anime/chapter0/mansion_corridor3/obj-07-01/obj05_anime_1":49,"../data/anime/chapter0/mansion_corridor3/obj-07-01/obj06_anime_1":50,"../data/anime/chapter0/mansion_corridor3/obj-08-01/obj01_anime_1":51,"../data/anime/chapter0/mansion_corridor3/obj-08-01/obj02_anime_1":52,"../data/anime/chapter0/mansion_corridor3/obj-08-01/obj03_anime_1":53,"../data/anime/chapter0/mansion_corridor3/obj-08-01/obj04_anime_1":54,"../data/anime/chapter0/mansion_corridor3/obj-08-01/obj05_anime_1":55,"../data/anime/chapter0/mansion_corridor3/obj-08-01/obj06_anime_1":56,"../data/anime/chapter0/mansion_corridor3/obj-09-01/obj01_anime_1":57,"../data/anime/chapter0/mansion_corridor3/obj-09-01/obj02_anime_1":58,"../data/anime/chapter0/mansion_corridor3/obj-09-01/obj03_anime_1":59,"../data/anime/chapter0/mansion_corridor3/obj-09-01/obj04_anime_1":60,"../data/anime/chapter0/mansion_corridor3/obj-09-01/obj05_anime_1":61,"../data/anime/chapter0/mansion_corridor3/obj-09-01/obj06_anime_1":62,"../data/anime/chapter0/mansion_corridor3/obj-10-01/obj01_anime_1":63,"../data/anime/chapter0/mansion_corridor3/obj-10-01/obj02_anime_1":64,"../data/anime/chapter0/mansion_corridor3/obj-10-01/obj03_anime_1":65,"../data/anime/chapter0/mansion_corridor3/obj-10-01/obj04_anime_1":66,"../data/anime/chapter0/mansion_corridor3/obj-10-01/obj05_anime_1":67,"../data/anime/chapter0/mansion_corridor3/obj-10-01/obj06_anime_1":68,"../data/anime/chapter0/mansion_corridor3/obj-11-01/obj01_anime_1":69,"../data/anime/chapter0/mansion_corridor3/obj-11-01/obj02_anime_1":70,"../data/anime/chapter0/mansion_corridor3/obj-11-01/obj03_anime_1":71,"../data/anime/chapter0/mansion_corridor3/obj-11-01/obj04_anime_1":72,"../data/anime/chapter0/mansion_corridor3/obj-11-01/obj05_anime_1":73,"../data/anime/chapter0/mansion_corridor3/obj-11-01/obj06_anime_1":74,"../data/anime/chapter0/myroom/obj-02-01/obj01_anime_1":75,"../data/anime/chapter0/myroom/obj-02-01/obj02_anime_1":76,"../data/anime/chapter0/myroom/obj-02-01/obj03_anime_1":77,"../data/anime/chapter0/myroom/obj-03-01/obj01_anime_1":78,"../data/anime/chapter0/myroom/obj-03-01/obj02_anime_1":79,"../data/anime/chapter0/myroom/obj-03-01/obj03_anime_1":80,"../data/anime/chapter0/myroom/obj-04-01/obj01_anime_1":81,"../data/anime/chapter0/myroom/obj-04-01/obj02_anime_1":82,"../data/anime/chapter0/myroom/obj-04-01/obj03_anime_1":83}],5:[function(require,module,exports){
'use strict';
var DEBUG = require("./debug_constant");

var CONSTANT = {
	DEBUG: {},

	// オブジェクトの種類
	STATIC_IMAGE_TYPE:      1,
	ANIME_IMAGE_TYPE:       2,
	JOURNAL_TYPE:           3,
	ANIME_EVENT_IMAGE_TYPE: 4, // chapter0 最後のカーペット
	ITEM_TYPE:              5,

	// アイテムの種類
	ITEM: {
		EYEDROPS: "01",

	},

	// こいしの歩ける範囲の上 上限(px)
	WALK_DEPTH_LIMIT: 300,

	// 3rd eye の最大値
	MAX_3RDEYE_GAUGE: 3600,
	// 目薬 1回での3rd eye の回復値
	EYEDROPS_RECOVER_3RDEYE_GAUGE: 3600,
	// 3rd eye の自然消耗値(1フレームごと)
	ABRASION_3RDEYE_GAUGE: 1,



	// フィールドでランダムに流れるノイズ
	CHAPTER0: {
		NOISE_SOUND_LIST: ["noise1", "noise2", "noise3", "noise4", "noise5"],
		NOISE_SOUND_INTERVAL_COUNT: 1200,
		NOISE_SOUND_PROB: 50,
	}
};

if (DEBUG.ON) {
	CONSTANT.DEBUG = DEBUG;
}
module.exports = CONSTANT;

},{"./debug_constant":98}],6:[function(require,module,exports){
module.exports=[
{
"images":["black_mist.png"],
"name": "eff01_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 1440,
"CanvasHeight": 1080,
"MarginWidth": 728,
"MarginHeight": 548,
"parts": ["root","01"],
"ssa": [
[
[0,0,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[0,0,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
]
]
}
}
]

},{}],7:[function(require,module,exports){
module.exports=[
{
"images":["black_mist.png"],
"name": "eff02_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 1440,
"CanvasHeight": 1080,
"MarginWidth": 728,
"MarginHeight": 548,
"parts": ["root","01"],
"ssa": [
[
[0,0,257,0,255,512,0.0,0.0,-3.141593,5.680000,2.130000,127,256]
],
[
[0,0,257,0,255,512,0.0,0.0,-3.141593,5.683333,2.132000,127,256]
],
[
[0,0,257,0,255,512,0.0,0.0,-3.141593,5.686666,2.134000,127,256]
],
[
[0,0,257,0,255,512,0.0,0.0,-3.141593,5.690000,2.136000,127,256]
],
[
[0,0,257,0,255,512,0.0,0.0,-3.141593,5.693333,2.138000,127,256]
],
[
[0,0,257,0,255,512,0.0,0.0,-3.141593,5.696667,2.140000,127,256]
],
[
[0,0,257,0,255,512,0.0,0.0,-3.141593,5.700000,2.142000,127,256]
],
[
[0,0,257,0,255,512,0.0,0.0,-3.141593,5.703333,2.144000,127,256]
],
[
[0,0,257,0,255,512,0.0,0.0,-3.141593,5.706666,2.146000,127,256]
],
[
[0,0,257,0,255,512,0.0,0.0,-3.141593,5.710000,2.148000,127,256]
],
[
[0,0,257,0,255,512,0.0,0.0,-3.141593,5.713333,2.150000,127,256]
],
[
[0,0,257,0,255,512,0.0,0.0,-3.141593,5.716667,2.152000,127,256]
],
[
[0,0,257,0,255,512,0.0,0.0,-3.141593,5.720000,2.154000,127,256]
],
[
[0,0,257,0,255,512,0.0,0.0,-3.141593,5.723333,2.156000,127,256]
],
[
[0,0,257,0,255,512,0.0,0.0,-3.141593,5.726666,2.158000,127,256]
],
[
[0,0,257,0,255,512,0.0,0.0,-3.141593,5.730000,2.160000,127,256]
],
[
[0,0,257,0,255,512,0.0,0.0,-3.141593,5.726429,2.157857,127,256]
],
[
[0,0,257,0,255,512,0.0,0.0,-3.141593,5.722857,2.155714,127,256]
],
[
[0,0,257,0,255,512,0.0,0.0,-3.141593,5.719285,2.153572,127,256]
],
[
[0,0,257,0,255,512,0.0,0.0,-3.141593,5.715714,2.151429,127,256]
],
[
[0,0,257,0,255,512,0.0,0.0,-3.141593,5.712143,2.149286,127,256]
],
[
[0,0,257,0,255,512,0.0,0.0,-3.141593,5.708571,2.147143,127,256]
],
[
[0,0,257,0,255,512,0.0,0.0,-3.141593,5.705000,2.145000,127,256]
],
[
[0,0,257,0,255,512,0.0,0.0,-3.141593,5.701428,2.142857,127,256]
],
[
[0,0,257,0,255,512,0.0,0.0,-3.141593,5.697857,2.140714,127,256]
],
[
[0,0,257,0,255,512,0.0,0.0,-3.141593,5.694285,2.138572,127,256]
],
[
[0,0,257,0,255,512,0.0,0.0,-3.141593,5.690714,2.136429,127,256]
],
[
[0,0,257,0,255,512,0.0,0.0,-3.141593,5.687143,2.134286,127,256]
],
[
[0,0,257,0,255,512,0.0,0.0,-3.141593,5.683571,2.132143,127,256]
],
[
[0,0,257,0,255,512,0.0,0.0,-3.141593,5.680000,2.130000,127,256]
]
]
}
}
]

},{}],8:[function(require,module,exports){
module.exports=[
{
"images":["bg01_for_falldown_koishi.jpg","black_mist.png","chapter0-mspassage-obj-10-01.png","door.png","koishi.png","shadow.png"],
"name": "event01_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 1440,
"CanvasHeight": 1080,
"MarginWidth": 728,
"MarginHeight": 548,
"parts": ["root","event","blk","shadow","black-mist","bg01","Chara","koishi0_bottom0","koishi0_thighs_l0","koishi0_calf_l0","koishi0_foot_l0","koishi0_thighs_r0","koishi0_calf_r0","koishi0_foot_r0","koishi0_body","koishi0_arm0_r0","koishi0_arm0_l0","koishi0_head0","koishi0_hear_b0","koishi0_hear_f1","koishi0_hear_f0","koishi0_mouth0","koishi0_eye0_l0","koishi0_eye0_l1","koishi0_eye0_l2","koishi0_eye1_l0","koishi0_eye0_r0","koishi0_eye0_r1","koishi0_eye0_r2","koishi0_eye1_r0","koishi0_hat0_f0","koishi0_hat0_b0","koishi0_hat0_obj0","3rdeye0_all","3rdeye0_cord_b0","3rdeye0_cord_f0","3rdeye0_body0","3rdeye0_eye0","3rdeye0_light0","3rdeye0_eye1","door_all","door01","door","bg","clock","01_omote","02_omote","03"],
"ssa": [
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.017453,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-440.0,135.0,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-452.0,16.0,0.0,1.0,1.0,133,40],
[17,4,214,2,174,170,-469.0,8.0,0.0,1.0,1.0,62,27],
[15,4,554,100,70,140,-416.0,103.0,0.0,1.0,1.0,20,13],
[13,4,2,2,210,176,-450.0,174.0,0.0,1.0,1.0,104,104],
[14,4,926,2,74,142,-482.0,107.0,-0.104720,1.0,1.0,40,13],
[16,4,658,84,138,126,-451.0,98.0,0.0,1.0,1.0,60,120],
[21,4,336,202,20,26,-391.0,38.0,0.0,1.0,1.0,10,13],
[25,4,278,202,34,28,-447.0,45.0,0.0,1.0,1.0,17,14],
[20,4,414,202,22,6,-425.0,99.0,0.0,1.0,1.0,11,3],
[22,4,1014,92,4,6,-387.0,38.0,0.0,1.0,1.0,2,3],
[26,4,1012,84,6,6,-441.0,45.0,0.0,1.0,1.0,3,3],
[23,4,650,100,4,4,-393.0,40.0,0.0,1.0,1.0,2,2],
[27,4,1002,96,10,4,-450.0,47.0,0.0,1.0,1.0,5,2],
[18,4,798,84,106,150,-502.0,38.0,0.0,1.0,1.0,58,34],
[19,4,390,100,162,78,-440.0,8.0,0.0,1.0,1.0,81,39],
[34,4,2,180,236,30,-460.0,150.0,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,-342.0,140.0,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,-336.0,137.0,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,-340.0,138.0,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-452.0,2.0,0.0,1.0,1.0,133,48],
[31,4,906,146,76,96,-506.0,14.0,0.0,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.015583,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-440.068970,135.068970,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-451.991577,16.068966,0.000602,1.0,1.0,133,40],
[17,4,214,2,174,170,-469.0,8.068970,0.000602,1.0,1.0,62,27],
[15,4,554,100,70,140,-416.0,103.068970,0.001204,1.0,1.0,20,13],
[13,4,2,2,210,176,-450.0,174.068970,0.0,1.0,1.0,104,104],
[14,4,926,2,74,142,-482.0,107.068970,-0.105923,1.0,1.0,40,13],
[16,4,658,84,138,126,-451.0,98.068970,0.0,1.0,1.0,60,120],
[21,4,336,202,20,26,-391.0,38.068970,0.0,1.0,1.0,10,13],
[25,4,278,202,34,28,-447.0,45.068970,0.0,1.0,1.0,17,14],
[20,4,414,202,22,6,-425.0,99.068970,0.0,1.0,1.0,11,3],
[22,4,1014,92,4,6,-387.0,38.068970,0.0,1.0,1.0,2,3],
[26,4,1012,84,6,6,-441.0,45.068970,0.0,1.0,1.0,3,3],
[23,4,650,100,4,4,-393.0,40.068970,0.0,1.0,1.0,2,2],
[27,4,1002,96,10,4,-450.0,47.068970,0.0,1.0,1.0,5,2],
[18,4,798,84,106,150,-502.0,38.068970,-0.001204,1.0,1.0,58,34],
[19,4,390,100,162,78,-440.0,8.068970,0.0,1.0,1.0,81,39],
[34,4,2,180,236,30,-460.068970,150.068970,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,-342.068970,140.068970,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,-336.068970,137.068970,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,-340.068970,138.068970,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-452.0,2.068970,0.000602,1.0,1.0,133,48],
[31,4,906,146,76,96,-505.992767,14.101467,0.000602,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.950000]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.013713,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-440.137939,135.137924,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-451.983154,16.137913,0.001204,1.0,1.0,133,40],
[17,4,214,2,174,170,-469.0,8.137924,0.001204,1.0,1.0,62,27],
[15,4,554,100,70,140,-416.0,103.137924,0.002407,1.0,1.0,20,13],
[13,4,2,2,210,176,-450.0,174.137924,0.0,1.0,1.0,104,104],
[14,4,926,2,74,142,-482.0,107.137924,-0.107127,1.0,1.0,40,13],
[16,4,658,84,138,126,-451.0,98.137924,0.0,1.0,1.0,60,120],
[21,4,336,202,20,26,-391.0,38.137924,0.0,1.0,1.0,10,13],
[25,4,278,202,34,28,-447.0,45.137924,0.0,1.0,1.0,17,14],
[20,4,414,202,22,6,-425.0,99.137924,0.0,1.0,1.0,11,3],
[22,4,1014,92,4,6,-387.0,38.137924,0.0,1.0,1.0,2,3],
[26,4,1012,84,6,6,-441.0,45.137924,0.0,1.0,1.0,3,3],
[23,4,650,100,4,4,-393.0,40.137924,0.0,1.0,1.0,2,2],
[27,4,1002,96,10,4,-450.0,47.137924,0.0,1.0,1.0,5,2],
[18,4,798,84,106,150,-502.0,38.137924,-0.002407,1.0,1.0,58,34],
[19,4,390,100,162,78,-440.0,8.137924,0.0,1.0,1.0,81,39],
[34,4,2,180,236,30,-460.137939,150.137924,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,-342.137939,140.137924,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,-336.137939,137.137924,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,-340.137939,138.137924,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-452.0,2.137924,0.001204,1.0,1.0,133,48],
[31,4,906,146,76,96,-505.985504,14.202914,0.001204,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.900000]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.011843,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-440.206909,135.206894,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-451.974731,16.206871,0.001806,1.0,1.0,133,40],
[17,4,214,2,174,170,-469.0,8.206894,0.001806,1.0,1.0,62,27],
[15,4,554,100,70,140,-416.0,103.206894,0.003611,1.0,1.0,20,13],
[13,4,2,2,210,176,-450.0,174.206894,0.0,1.0,1.0,104,104],
[14,4,926,2,74,142,-482.0,107.206894,-0.108331,1.0,1.0,40,13],
[16,4,658,84,138,126,-451.0,98.206894,0.0,1.0,1.0,60,120],
[21,4,336,202,20,26,-391.0,38.206894,0.0,1.0,1.0,10,13],
[25,4,278,202,34,28,-447.0,45.206894,0.0,1.0,1.0,17,14],
[20,4,414,202,22,6,-425.0,99.206894,0.0,1.0,1.0,11,3],
[22,4,1014,92,4,6,-387.0,38.206894,0.0,1.0,1.0,2,3],
[26,4,1012,84,6,6,-441.0,45.206894,0.0,1.0,1.0,3,3],
[23,4,650,100,4,4,-393.0,40.206894,0.0,1.0,1.0,2,2],
[27,4,1002,96,10,4,-450.0,47.206894,0.0,1.0,1.0,5,2],
[18,4,798,84,106,150,-502.0,38.206894,-0.003611,1.0,1.0,58,34],
[19,4,390,100,162,78,-440.0,8.206894,0.0,1.0,1.0,81,39],
[34,4,2,180,236,30,-460.206909,150.206894,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,-342.206909,140.206894,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,-336.206909,137.206894,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,-340.206909,138.206894,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-452.0,2.206894,0.001806,1.0,1.0,133,48],
[31,4,906,146,76,96,-505.978241,14.304372,0.001806,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.850000]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.009973,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-440.275848,135.275864,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-451.966309,16.275822,0.002407,1.0,1.0,133,40],
[17,4,214,2,174,170,-469.0,8.275864,0.002407,1.0,1.0,62,27],
[15,4,554,100,70,140,-416.0,103.275864,0.004815,1.0,1.0,20,13],
[13,4,2,2,210,176,-450.0,174.275864,0.0,1.0,1.0,104,104],
[14,4,926,2,74,142,-482.0,107.275864,-0.109534,1.0,1.0,40,13],
[16,4,658,84,138,126,-451.0,98.275864,0.0,1.0,1.0,60,120],
[21,4,336,202,20,26,-391.0,38.275864,0.0,1.0,1.0,10,13],
[25,4,278,202,34,28,-447.0,45.275864,0.0,1.0,1.0,17,14],
[20,4,414,202,22,6,-425.0,99.275864,0.0,1.0,1.0,11,3],
[22,4,1014,92,4,6,-387.0,38.275864,0.0,1.0,1.0,2,3],
[26,4,1012,84,6,6,-441.0,45.275864,0.0,1.0,1.0,3,3],
[23,4,650,100,4,4,-393.0,40.275864,0.0,1.0,1.0,2,2],
[27,4,1002,96,10,4,-450.0,47.275864,0.0,1.0,1.0,5,2],
[18,4,798,84,106,150,-502.0,38.275864,-0.004815,1.0,1.0,58,34],
[19,4,390,100,162,78,-440.0,8.275864,0.0,1.0,1.0,81,39],
[34,4,2,180,236,30,-460.275848,150.275864,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,-342.275848,140.275864,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,-336.275848,137.275864,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,-340.275848,138.275864,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-452.0,2.275864,0.002407,1.0,1.0,133,48],
[31,4,906,146,76,96,-505.970947,14.405826,0.002407,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.800000]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.008103,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-440.344818,135.344833,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-451.957886,16.344770,0.003009,1.0,1.0,133,40],
[17,4,214,2,174,170,-469.0,8.344833,0.003009,1.0,1.0,62,27],
[15,4,554,100,70,140,-416.0,103.344833,0.006018,1.0,1.0,20,13],
[13,4,2,2,210,176,-450.0,174.344833,0.0,1.0,1.0,104,104],
[14,4,926,2,74,142,-482.0,107.344833,-0.110738,1.0,1.0,40,13],
[16,4,658,84,138,126,-451.0,98.344833,0.0,1.0,1.0,60,120],
[21,4,336,202,20,26,-391.0,38.344833,0.0,1.0,1.0,10,13],
[25,4,278,202,34,28,-447.0,45.344833,0.0,1.0,1.0,17,14],
[20,4,414,202,22,6,-425.0,99.344833,0.0,1.0,1.0,11,3],
[22,4,1014,92,4,6,-387.0,38.344833,0.0,1.0,1.0,2,3],
[26,4,1012,84,6,6,-441.0,45.344833,0.0,1.0,1.0,3,3],
[23,4,650,100,4,4,-393.0,40.344833,0.0,1.0,1.0,2,2],
[27,4,1002,96,10,4,-450.0,47.344833,0.0,1.0,1.0,5,2],
[18,4,798,84,106,150,-502.0,38.344833,-0.006018,1.0,1.0,58,34],
[19,4,390,100,162,78,-440.0,8.344833,0.0,1.0,1.0,81,39],
[34,4,2,180,236,30,-460.344818,150.344833,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,-342.344818,140.344833,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,-336.344818,137.344833,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,-340.344818,138.344833,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-452.0,2.344833,0.003009,1.0,1.0,133,48],
[31,4,906,146,76,96,-505.963654,14.507275,0.003009,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.750000]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.006233,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-440.413788,135.413788,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-451.949432,16.413696,0.003611,1.0,1.0,133,40],
[17,4,214,2,174,170,-469.0,8.413788,0.003611,1.0,1.0,62,27],
[15,4,554,100,70,140,-416.0,103.413788,0.007222,1.0,1.0,20,13],
[13,4,2,2,210,176,-450.0,174.413788,0.0,1.0,1.0,104,104],
[14,4,926,2,74,142,-482.0,107.413788,-0.111942,1.0,1.0,40,13],
[16,4,658,84,138,126,-451.0,98.413788,0.0,1.0,1.0,60,120],
[21,4,336,202,20,26,-391.0,38.413788,0.0,1.0,1.0,10,13],
[25,4,278,202,34,28,-447.0,45.413788,0.0,1.0,1.0,17,14],
[20,4,414,202,22,6,-425.0,99.413788,0.0,1.0,1.0,11,3],
[22,4,1014,92,4,6,-387.0,38.413788,0.0,1.0,1.0,2,3],
[26,4,1012,84,6,6,-441.0,45.413788,0.0,1.0,1.0,3,3],
[23,4,650,100,4,4,-393.0,40.413788,0.0,1.0,1.0,2,2],
[27,4,1002,96,10,4,-450.0,47.413788,0.0,1.0,1.0,5,2],
[18,4,798,84,106,150,-502.0,38.413788,-0.007222,1.0,1.0,58,34],
[19,4,390,100,162,78,-440.0,8.413788,0.0,1.0,1.0,81,39],
[34,4,2,180,236,30,-460.413788,150.413788,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,-342.413788,140.413788,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,-336.413788,137.413788,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,-340.413788,138.413788,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-452.0,2.413788,0.003611,1.0,1.0,133,48],
[31,4,906,146,76,96,-505.956299,14.608705,0.003611,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.700000]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.004363,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-440.482758,135.482758,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-451.941010,16.482634,0.004213,1.0,1.0,133,40],
[17,4,214,2,174,170,-469.0,8.482758,0.004213,1.0,1.0,62,27],
[15,4,554,100,70,140,-416.0,103.482758,0.008426,1.0,1.0,20,13],
[13,4,2,2,210,176,-450.0,174.482758,0.0,1.0,1.0,104,104],
[14,4,926,2,74,142,-482.0,107.482758,-0.113145,1.0,1.0,40,13],
[16,4,658,84,138,126,-451.0,98.482758,0.0,1.0,1.0,60,120],
[21,4,336,202,20,26,-391.0,38.482758,0.0,1.0,1.0,10,13],
[25,4,278,202,34,28,-447.0,45.482758,0.0,1.0,1.0,17,14],
[20,4,414,202,22,6,-425.0,99.482758,0.0,1.0,1.0,11,3],
[22,4,1014,92,4,6,-387.0,38.482758,0.0,1.0,1.0,2,3],
[26,4,1012,84,6,6,-441.0,45.482758,0.0,1.0,1.0,3,3],
[23,4,650,100,4,4,-393.0,40.482758,0.0,1.0,1.0,2,2],
[27,4,1002,96,10,4,-450.0,47.482758,0.0,1.0,1.0,5,2],
[18,4,798,84,106,150,-502.0,38.482758,-0.008426,1.0,1.0,58,34],
[19,4,390,100,162,78,-440.0,8.482758,0.0,1.0,1.0,81,39],
[34,4,2,180,236,30,-460.482758,150.482758,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,-342.482758,140.482758,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,-336.482758,137.482758,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,-340.482758,138.482758,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-452.0,2.482758,0.004213,1.0,1.0,133,48],
[31,4,906,146,76,96,-505.948975,14.710145,0.004213,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.650000]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.002493,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-440.551727,135.551727,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-451.932587,16.551565,0.004815,1.0,1.0,133,40],
[17,4,214,2,174,170,-469.0,8.551727,0.004815,1.0,1.0,62,27],
[15,4,554,100,70,140,-416.0,103.551727,0.009629,1.0,1.0,20,13],
[13,4,2,2,210,176,-450.0,174.551727,0.0,1.0,1.0,104,104],
[14,4,926,2,74,142,-482.0,107.551727,-0.114349,1.0,1.0,40,13],
[16,4,658,84,138,126,-451.0,98.551727,0.0,1.0,1.0,60,120],
[21,4,336,202,20,26,-391.0,38.551727,0.0,1.0,1.0,10,13],
[25,4,278,202,34,28,-447.0,45.551727,0.0,1.0,1.0,17,14],
[20,4,414,202,22,6,-425.0,99.551727,0.0,1.0,1.0,11,3],
[22,4,1014,92,4,6,-387.0,38.551727,0.0,1.0,1.0,2,3],
[26,4,1012,84,6,6,-441.0,45.551727,0.0,1.0,1.0,3,3],
[23,4,650,100,4,4,-393.0,40.551727,0.0,1.0,1.0,2,2],
[27,4,1002,96,10,4,-450.0,47.551727,0.0,1.0,1.0,5,2],
[18,4,798,84,106,150,-502.0,38.551727,-0.009629,1.0,1.0,58,34],
[19,4,390,100,162,78,-440.0,8.551727,0.0,1.0,1.0,81,39],
[34,4,2,180,236,30,-460.551727,150.551727,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,-342.551727,140.551727,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,-336.551727,137.551727,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,-340.551727,138.551727,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-452.0,2.551727,0.004815,1.0,1.0,133,48],
[31,4,906,146,76,96,-505.941589,14.811581,0.004815,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.600000]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.000623,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-440.620697,135.620697,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-451.924164,16.620491,0.005417,1.0,1.0,133,40],
[17,4,214,2,174,170,-469.0,8.620697,0.005417,1.0,1.0,62,27],
[15,4,554,100,70,140,-416.0,103.620697,0.010833,1.0,1.0,20,13],
[13,4,2,2,210,176,-450.0,174.620697,0.0,1.0,1.0,104,104],
[14,4,926,2,74,142,-482.0,107.620697,-0.115553,1.0,1.0,40,13],
[16,4,658,84,138,126,-451.0,98.620697,0.0,1.0,1.0,60,120],
[21,4,336,202,20,26,-391.0,38.620697,0.0,1.0,1.0,10,13],
[25,4,278,202,34,28,-447.0,45.620697,0.0,1.0,1.0,17,14],
[20,4,414,202,22,6,-425.0,99.620697,0.0,1.0,1.0,11,3],
[22,4,1014,92,4,6,-387.0,38.620697,0.0,1.0,1.0,2,3],
[26,4,1012,84,6,6,-441.0,45.620697,0.0,1.0,1.0,3,3],
[23,4,650,100,4,4,-393.0,40.620697,0.0,1.0,1.0,2,2],
[27,4,1002,96,10,4,-450.0,47.620697,0.0,1.0,1.0,5,2],
[18,4,798,84,106,150,-502.0,38.620697,-0.010833,1.0,1.0,58,34],
[19,4,390,100,162,78,-440.0,8.620697,0.0,1.0,1.0,81,39],
[34,4,2,180,236,30,-460.620697,150.620697,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,-342.620697,140.620697,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,-336.620697,137.620697,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,-340.620697,138.620697,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-452.0,2.620697,0.005417,1.0,1.0,133,48],
[31,4,906,146,76,96,-505.934204,14.913013,0.005417,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.550000]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.001247,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-440.689667,135.689651,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-451.915741,16.689398,0.006018,1.0,1.0,133,40],
[17,4,214,2,174,170,-469.0,8.689651,0.006018,1.0,1.0,62,27],
[15,4,554,100,70,140,-416.0,103.689651,0.012037,1.0,1.0,20,13],
[13,4,2,2,210,176,-450.0,174.689651,0.0,1.0,1.0,104,104],
[14,4,926,2,74,142,-482.0,107.689651,-0.116757,1.0,1.0,40,13],
[16,4,658,84,138,126,-451.0,98.689651,0.0,1.0,1.0,60,120],
[21,4,336,202,20,26,-391.0,38.689651,0.0,1.0,1.0,10,13],
[25,4,278,202,34,28,-447.0,45.689651,0.0,1.0,1.0,17,14],
[20,4,414,202,22,6,-425.0,99.689651,0.0,1.0,1.0,11,3],
[22,4,1014,92,4,6,-387.0,38.689651,0.0,1.0,1.0,2,3],
[26,4,1012,84,6,6,-441.0,45.689651,0.0,1.0,1.0,3,3],
[23,4,650,100,4,4,-393.0,40.689651,0.0,1.0,1.0,2,2],
[27,4,1002,96,10,4,-450.0,47.689651,0.0,1.0,1.0,5,2],
[18,4,798,84,106,150,-502.0,38.689651,-0.012037,1.0,1.0,58,34],
[19,4,390,100,162,78,-440.0,8.689651,0.0,1.0,1.0,81,39],
[34,4,2,180,236,30,-460.689667,150.689651,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,-342.689667,140.689651,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,-336.689667,137.689651,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,-340.689667,138.689651,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-452.0,2.689651,0.006018,1.0,1.0,133,48],
[31,4,906,146,76,96,-505.926819,15.014424,0.006018,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.500000]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.003117,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-440.758606,135.758621,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-451.907318,16.758314,0.006620,1.0,1.0,133,40],
[17,4,214,2,174,170,-469.0,8.758621,0.006620,1.0,1.0,62,27],
[15,4,554,100,70,140,-416.0,103.758621,0.013240,1.0,1.0,20,13],
[13,4,2,2,210,176,-450.0,174.758621,0.0,1.0,1.0,104,104],
[14,4,926,2,74,142,-482.0,107.758621,-0.117960,1.0,1.0,40,13],
[16,4,658,84,138,126,-451.0,98.758621,0.0,1.0,1.0,60,120],
[21,4,336,202,20,26,-391.0,38.758621,0.0,1.0,1.0,10,13],
[25,4,278,202,34,28,-447.0,45.758621,0.0,1.0,1.0,17,14],
[20,4,414,202,22,6,-425.0,99.758621,0.0,1.0,1.0,11,3],
[22,4,1014,92,4,6,-387.0,38.758621,0.0,1.0,1.0,2,3],
[26,4,1012,84,6,6,-441.0,45.758621,0.0,1.0,1.0,3,3],
[23,4,650,100,4,4,-393.0,40.758621,0.0,1.0,1.0,2,2],
[27,4,1002,96,10,4,-450.0,47.758621,0.0,1.0,1.0,5,2],
[18,4,798,84,106,150,-502.0,38.758621,-0.013240,1.0,1.0,58,34],
[19,4,390,100,162,78,-440.0,8.758621,0.0,1.0,1.0,81,39],
[34,4,2,180,236,30,-460.758606,150.758621,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,-342.758606,140.758621,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,-336.758606,137.758621,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,-340.758606,138.758621,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-452.0,2.758621,0.006620,1.0,1.0,133,48],
[31,4,906,146,76,96,-505.919373,15.115848,0.006620,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.450000]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.004987,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-440.827576,135.827591,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-451.898895,16.827225,0.007222,1.0,1.0,133,40],
[17,4,214,2,174,170,-469.0,8.827591,0.007222,1.0,1.0,62,27],
[15,4,554,100,70,140,-416.0,103.827591,0.014444,1.0,1.0,20,13],
[13,4,2,2,210,176,-450.0,174.827591,0.0,1.0,1.0,104,104],
[14,4,926,2,74,142,-482.0,107.827591,-0.119164,1.0,1.0,40,13],
[16,4,658,84,138,126,-451.0,98.827591,0.0,1.0,1.0,60,120],
[21,4,336,202,20,26,-391.0,38.827591,0.0,1.0,1.0,10,13],
[25,4,278,202,34,28,-447.0,45.827591,0.0,1.0,1.0,17,14],
[20,4,414,202,22,6,-425.0,99.827591,0.0,1.0,1.0,11,3],
[22,4,1014,92,4,6,-387.0,38.827591,0.0,1.0,1.0,2,3],
[26,4,1012,84,6,6,-441.0,45.827591,0.0,1.0,1.0,3,3],
[23,4,650,100,4,4,-393.0,40.827591,0.0,1.0,1.0,2,2],
[27,4,1002,96,10,4,-450.0,47.827591,0.0,1.0,1.0,5,2],
[18,4,798,84,106,150,-502.0,38.827591,-0.014444,1.0,1.0,58,34],
[19,4,390,100,162,78,-440.0,8.827591,0.0,1.0,1.0,81,39],
[34,4,2,180,236,30,-460.827576,150.827591,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,-342.827576,140.827591,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,-336.827576,137.827591,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,-340.827576,138.827591,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-452.0,2.827591,0.007222,1.0,1.0,133,48],
[31,4,906,146,76,96,-505.911926,15.217265,0.007222,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.400000]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.006857,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-440.896545,135.896545,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-451.890472,16.896118,0.007824,1.0,1.0,133,40],
[17,4,214,2,174,170,-469.0,8.896545,0.007824,1.0,1.0,62,27],
[15,4,554,100,70,140,-416.0,103.896545,0.015648,1.0,1.0,20,13],
[13,4,2,2,210,176,-450.0,174.896545,0.0,1.0,1.0,104,104],
[14,4,926,2,74,142,-482.0,107.896545,-0.120368,1.0,1.0,40,13],
[16,4,658,84,138,126,-451.0,98.896545,0.0,1.0,1.0,60,120],
[21,4,336,202,20,26,-391.0,38.896545,0.0,1.0,1.0,10,13],
[25,4,278,202,34,28,-447.0,45.896545,0.0,1.0,1.0,17,14],
[20,4,414,202,22,6,-425.0,99.896545,0.0,1.0,1.0,11,3],
[22,4,1014,92,4,6,-387.0,38.896545,0.0,1.0,1.0,2,3],
[26,4,1012,84,6,6,-441.0,45.896545,0.0,1.0,1.0,3,3],
[23,4,650,100,4,4,-393.0,40.896545,0.0,1.0,1.0,2,2],
[27,4,1002,96,10,4,-450.0,47.896545,0.0,1.0,1.0,5,2],
[18,4,798,84,106,150,-502.0,38.896545,-0.015648,1.0,1.0,58,34],
[19,4,390,100,162,78,-440.0,8.896545,0.0,1.0,1.0,81,39],
[34,4,2,180,236,30,-460.896545,150.896545,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,-342.896545,140.896545,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,-336.896545,137.896545,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,-340.896545,138.896545,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-452.0,2.896545,0.007824,1.0,1.0,133,48],
[31,4,906,146,76,96,-505.904449,15.318664,0.007824,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.350000]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.008727,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-440.965515,135.965515,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-451.882050,16.965019,0.008426,1.0,1.0,133,40],
[17,4,214,2,174,170,-469.0,8.965515,0.008426,1.0,1.0,62,27],
[15,4,554,100,70,140,-416.0,103.965515,0.016851,1.0,1.0,20,13],
[13,4,2,2,210,176,-450.0,174.965515,0.0,1.0,1.0,104,104],
[14,4,926,2,74,142,-482.0,107.965515,-0.121571,1.0,1.0,40,13],
[16,4,658,84,138,126,-451.0,98.965515,0.0,1.0,1.0,60,120],
[21,4,336,202,20,26,-391.0,38.965515,0.0,1.0,1.0,10,13],
[25,4,278,202,34,28,-447.0,45.965515,0.0,1.0,1.0,17,14],
[20,4,414,202,22,6,-425.0,99.965515,0.0,1.0,1.0,11,3],
[22,4,1014,92,4,6,-387.0,38.965515,0.0,1.0,1.0,2,3],
[26,4,1012,84,6,6,-441.0,45.965515,0.0,1.0,1.0,3,3],
[23,4,650,100,4,4,-393.0,40.965515,0.0,1.0,1.0,2,2],
[27,4,1002,96,10,4,-450.0,47.965515,0.0,1.0,1.0,5,2],
[18,4,798,84,106,150,-502.0,38.965515,-0.016851,1.0,1.0,58,34],
[19,4,390,100,162,78,-440.0,8.965515,0.0,1.0,1.0,81,39],
[34,4,2,180,236,30,-460.965515,150.965515,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,-342.965515,140.965515,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,-336.965515,137.965515,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,-340.965515,138.965515,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-452.0,2.965515,0.008426,1.0,1.0,133,48],
[31,4,906,146,76,96,-505.896973,15.420074,0.008426,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.300000]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.010597,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-441.034485,136.034485,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-451.873627,17.033915,0.009028,1.0,1.0,133,40],
[17,4,214,2,174,170,-469.0,9.034485,0.009028,1.0,1.0,62,27],
[15,4,554,100,70,140,-416.0,104.034485,0.018055,1.0,1.0,20,13],
[13,4,2,2,210,176,-450.0,175.034485,0.0,1.0,1.0,104,104],
[14,4,926,2,74,142,-482.0,108.034485,-0.122775,1.0,1.0,40,13],
[16,4,658,84,138,126,-451.0,99.034485,0.0,1.0,1.0,60,120],
[21,4,336,202,20,26,-391.0,39.034485,0.0,1.0,1.0,10,13],
[25,4,278,202,34,28,-447.0,46.034485,0.0,1.0,1.0,17,14],
[20,4,414,202,22,6,-425.0,100.034485,0.0,1.0,1.0,11,3],
[22,4,1014,92,4,6,-387.0,39.034485,0.0,1.0,1.0,2,3],
[26,4,1012,84,6,6,-441.0,46.034485,0.0,1.0,1.0,3,3],
[23,4,650,100,4,4,-393.0,41.034485,0.0,1.0,1.0,2,2],
[27,4,1002,96,10,4,-450.0,48.034485,0.0,1.0,1.0,5,2],
[18,4,798,84,106,150,-502.0,39.034485,-0.018055,1.0,1.0,58,34],
[19,4,390,100,162,78,-440.0,9.034485,0.0,1.0,1.0,81,39],
[34,4,2,180,236,30,-461.034485,151.034485,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,-343.034485,141.034485,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,-337.034485,138.034485,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,-341.034485,139.034485,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-452.0,3.034485,0.009028,1.0,1.0,133,48],
[31,4,906,146,76,96,-505.889465,15.521478,0.009028,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.250000]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.012467,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-441.103455,136.103455,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-451.865204,17.102806,0.009629,1.0,1.0,133,40],
[17,4,214,2,174,170,-469.0,9.103455,0.009629,1.0,1.0,62,27],
[15,4,554,100,70,140,-416.0,104.103455,0.019259,1.0,1.0,20,13],
[13,4,2,2,210,176,-450.0,175.103455,0.0,1.0,1.0,104,104],
[14,4,926,2,74,142,-482.0,108.103455,-0.123979,1.0,1.0,40,13],
[16,4,658,84,138,126,-451.0,99.103455,0.0,1.0,1.0,60,120],
[21,4,336,202,20,26,-391.0,39.103455,0.0,1.0,1.0,10,13],
[25,4,278,202,34,28,-447.0,46.103455,0.0,1.0,1.0,17,14],
[20,4,414,202,22,6,-425.0,100.103455,0.0,1.0,1.0,11,3],
[22,4,1014,92,4,6,-387.0,39.103455,0.0,1.0,1.0,2,3],
[26,4,1012,84,6,6,-441.0,46.103455,0.0,1.0,1.0,3,3],
[23,4,650,100,4,4,-393.0,41.103455,0.0,1.0,1.0,2,2],
[27,4,1002,96,10,4,-450.0,48.103455,0.0,1.0,1.0,5,2],
[18,4,798,84,106,150,-502.0,39.103455,-0.019259,1.0,1.0,58,34],
[19,4,390,100,162,78,-440.0,9.103455,0.0,1.0,1.0,81,39],
[34,4,2,180,236,30,-461.103455,151.103455,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,-343.103455,141.103455,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,-337.103455,138.103455,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,-341.103455,139.103455,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-452.0,3.103455,0.009629,1.0,1.0,133,48],
[31,4,906,146,76,96,-505.881958,15.622878,0.009629,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.200000]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.014337,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-441.172424,136.172409,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-451.856750,17.171677,0.010231,1.0,1.0,133,40],
[17,4,214,2,174,170,-469.0,9.172409,0.010231,1.0,1.0,62,27],
[15,4,554,100,70,140,-416.0,104.172409,0.020462,1.0,1.0,20,13],
[13,4,2,2,210,176,-450.0,175.172409,0.0,1.0,1.0,104,104],
[14,4,926,2,74,142,-482.0,108.172409,-0.125182,1.0,1.0,40,13],
[16,4,658,84,138,126,-451.0,99.172409,0.0,1.0,1.0,60,120],
[21,4,336,202,20,26,-391.0,39.172409,0.0,1.0,1.0,10,13],
[25,4,278,202,34,28,-447.0,46.172409,0.0,1.0,1.0,17,14],
[20,4,414,202,22,6,-425.0,100.172409,0.0,1.0,1.0,11,3],
[22,4,1014,92,4,6,-387.0,39.172409,0.0,1.0,1.0,2,3],
[26,4,1012,84,6,6,-441.0,46.172409,0.0,1.0,1.0,3,3],
[23,4,650,100,4,4,-393.0,41.172409,0.0,1.0,1.0,2,2],
[27,4,1002,96,10,4,-450.0,48.172409,0.0,1.0,1.0,5,2],
[18,4,798,84,106,150,-502.0,39.172409,-0.020462,1.0,1.0,58,34],
[19,4,390,100,162,78,-440.0,9.172409,0.0,1.0,1.0,81,39],
[34,4,2,180,236,30,-461.172424,151.172409,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,-343.172424,141.172409,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,-337.172424,138.172409,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,-341.172424,139.172409,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-452.0,3.172409,0.010231,1.0,1.0,133,48],
[31,4,906,146,76,96,-505.874390,15.724258,0.010231,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.150000]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.016207,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-441.241394,136.241379,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-451.848328,17.240559,0.010833,1.0,1.0,133,40],
[17,4,214,2,174,170,-469.0,9.241379,0.010833,1.0,1.0,62,27],
[15,4,554,100,70,140,-416.0,104.241379,0.021666,1.0,1.0,20,13],
[13,4,2,2,210,176,-450.0,175.241379,0.0,1.0,1.0,104,104],
[14,4,926,2,74,142,-482.0,108.241379,-0.126386,1.0,1.0,40,13],
[16,4,658,84,138,126,-451.0,99.241379,0.0,1.0,1.0,60,120],
[21,4,336,202,20,26,-391.0,39.241379,0.0,1.0,1.0,10,13],
[25,4,278,202,34,28,-447.0,46.241379,0.0,1.0,1.0,17,14],
[20,4,414,202,22,6,-425.0,100.241379,0.0,1.0,1.0,11,3],
[22,4,1014,92,4,6,-387.0,39.241379,0.0,1.0,1.0,2,3],
[26,4,1012,84,6,6,-441.0,46.241379,0.0,1.0,1.0,3,3],
[23,4,650,100,4,4,-393.0,41.241379,0.0,1.0,1.0,2,2],
[27,4,1002,96,10,4,-450.0,48.241379,0.0,1.0,1.0,5,2],
[18,4,798,84,106,150,-502.0,39.241379,-0.021666,1.0,1.0,58,34],
[19,4,390,100,162,78,-440.0,9.241379,0.0,1.0,1.0,81,39],
[34,4,2,180,236,30,-461.241394,151.241379,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,-343.241394,141.241379,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,-337.241394,138.241379,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,-341.241394,139.241379,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-452.0,3.241379,0.010833,1.0,1.0,133,48],
[31,4,906,146,76,96,-505.866821,15.825649,0.010833,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.100000]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.018077,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-441.310333,136.310349,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-451.839905,17.309433,0.011435,1.0,1.0,133,40],
[17,4,214,2,174,170,-469.0,9.310349,0.011435,1.0,1.0,62,27],
[15,4,554,100,70,140,-416.0,104.310349,0.022870,1.0,1.0,20,13],
[13,4,2,2,210,176,-450.0,175.310349,0.0,1.0,1.0,104,104],
[14,4,926,2,74,142,-482.0,108.310349,-0.127590,1.0,1.0,40,13],
[16,4,658,84,138,126,-451.0,99.310349,0.0,1.0,1.0,60,120],
[21,4,336,202,20,26,-391.0,39.310349,0.0,1.0,1.0,10,13],
[25,4,278,202,34,28,-447.0,46.310349,0.0,1.0,1.0,17,14],
[20,4,414,202,22,6,-425.0,100.310349,0.0,1.0,1.0,11,3],
[22,4,1014,92,4,6,-387.0,39.310349,0.0,1.0,1.0,2,3],
[26,4,1012,84,6,6,-441.0,46.310349,0.0,1.0,1.0,3,3],
[23,4,650,100,4,4,-393.0,41.310349,0.0,1.0,1.0,2,2],
[27,4,1002,96,10,4,-450.0,48.310349,0.0,1.0,1.0,5,2],
[18,4,798,84,106,150,-502.0,39.310349,-0.022870,1.0,1.0,58,34],
[19,4,390,100,162,78,-440.0,9.310349,0.0,1.0,1.0,81,39],
[34,4,2,180,236,30,-461.310333,151.310349,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,-343.310333,141.310349,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,-337.310333,138.310349,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,-341.310333,139.310349,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-452.0,3.310349,0.011435,1.0,1.0,133,48],
[31,4,906,146,76,96,-505.859253,15.927036,0.011435,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.050000]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.019947,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-441.379303,136.379303,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-451.831482,17.378288,0.012037,1.0,1.0,133,40],
[17,4,214,2,174,170,-469.0,9.379303,0.012037,1.0,1.0,62,27],
[15,4,554,100,70,140,-416.0,104.379303,0.024074,1.0,1.0,20,13],
[13,4,2,2,210,176,-450.0,175.379303,0.0,1.0,1.0,104,104],
[14,4,926,2,74,142,-482.0,108.379303,-0.128793,1.0,1.0,40,13],
[16,4,658,84,138,126,-451.0,99.379303,0.0,1.0,1.0,60,120],
[21,4,336,202,20,26,-391.0,39.379303,0.0,1.0,1.0,10,13],
[25,4,278,202,34,28,-447.0,46.379303,0.0,1.0,1.0,17,14],
[20,4,414,202,22,6,-425.0,100.379303,0.0,1.0,1.0,11,3],
[22,4,1014,92,4,6,-387.0,39.379303,0.0,1.0,1.0,2,3],
[26,4,1012,84,6,6,-441.0,46.379303,0.0,1.0,1.0,3,3],
[23,4,650,100,4,4,-393.0,41.379303,0.0,1.0,1.0,2,2],
[27,4,1002,96,10,4,-450.0,48.379303,0.0,1.0,1.0,5,2],
[18,4,798,84,106,150,-502.0,39.379303,-0.024074,1.0,1.0,58,34],
[19,4,390,100,162,78,-440.0,9.379303,0.0,1.0,1.0,81,39],
[34,4,2,180,236,30,-461.379303,151.379303,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,-343.379303,141.379303,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,-337.379303,138.379303,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,-341.379303,139.379303,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-452.0,3.379303,0.012037,1.0,1.0,133,48],
[31,4,906,146,76,96,-505.851654,16.028402,0.012037,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.021817,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-441.448273,136.448273,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-451.823059,17.447155,0.012639,1.0,1.0,133,40],
[17,4,214,2,174,170,-469.0,9.448273,0.012639,1.0,1.0,62,27],
[15,4,554,100,70,140,-416.0,104.448273,0.025277,1.0,1.0,20,13],
[13,4,2,2,210,176,-450.0,175.448273,0.0,1.0,1.0,104,104],
[14,4,926,2,74,142,-482.0,108.448273,-0.129997,1.0,1.0,40,13],
[16,4,658,84,138,126,-451.0,99.448273,0.0,1.0,1.0,60,120],
[21,4,336,202,20,26,-391.0,39.448273,0.0,1.0,1.0,10,13],
[25,4,278,202,34,28,-447.0,46.448273,0.0,1.0,1.0,17,14],
[20,4,414,202,22,6,-425.0,100.448273,0.0,1.0,1.0,11,3],
[22,4,1014,92,4,6,-387.0,39.448273,0.0,1.0,1.0,2,3],
[26,4,1012,84,6,6,-441.0,46.448273,0.0,1.0,1.0,3,3],
[23,4,650,100,4,4,-393.0,41.448273,0.0,1.0,1.0,2,2],
[27,4,1002,96,10,4,-450.0,48.448273,0.0,1.0,1.0,5,2],
[18,4,798,84,106,150,-502.0,39.448273,-0.025277,1.0,1.0,58,34],
[19,4,390,100,162,78,-440.0,9.448273,0.0,1.0,1.0,81,39],
[34,4,2,180,236,30,-461.448273,151.448273,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,-343.448273,141.448273,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,-337.448273,138.448273,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,-341.448273,139.448273,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-452.0,3.448273,0.012639,1.0,1.0,133,48],
[31,4,906,146,76,96,-505.844025,16.129780,0.012639,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.023687,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-441.517242,136.517242,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-451.814636,17.516014,0.013240,1.0,1.0,133,40],
[17,4,214,2,174,170,-469.0,9.517242,0.013240,1.0,1.0,62,27],
[15,4,554,100,70,140,-416.0,104.517242,0.026481,1.0,1.0,20,13],
[13,4,2,2,210,176,-450.0,175.517242,0.0,1.0,1.0,104,104],
[14,4,926,2,74,142,-482.0,108.517242,-0.131201,1.0,1.0,40,13],
[16,4,658,84,138,126,-451.0,99.517242,0.0,1.0,1.0,60,120],
[21,4,336,202,20,26,-391.0,39.517242,0.0,1.0,1.0,10,13],
[25,4,278,202,34,28,-447.0,46.517242,0.0,1.0,1.0,17,14],
[20,4,414,202,22,6,-425.0,100.517242,0.0,1.0,1.0,11,3],
[22,4,1014,92,4,6,-387.0,39.517242,0.0,1.0,1.0,2,3],
[26,4,1012,84,6,6,-441.0,46.517242,0.0,1.0,1.0,3,3],
[23,4,650,100,4,4,-393.0,41.517242,0.0,1.0,1.0,2,2],
[27,4,1002,96,10,4,-450.0,48.517242,0.0,1.0,1.0,5,2],
[18,4,798,84,106,150,-502.0,39.517242,-0.026481,1.0,1.0,58,34],
[19,4,390,100,162,78,-440.0,9.517242,0.0,1.0,1.0,81,39],
[34,4,2,180,236,30,-461.517242,151.517242,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,-343.517242,141.517242,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,-337.517242,138.517242,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,-341.517242,139.517242,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-452.0,3.517242,0.013240,1.0,1.0,133,48],
[31,4,906,146,76,96,-505.836395,16.231152,0.013240,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.025557,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-441.586212,136.586212,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-451.806213,17.584871,0.013842,1.0,1.0,133,40],
[17,4,214,2,174,170,-469.0,9.586212,0.013842,1.0,1.0,62,27],
[15,4,554,100,70,140,-416.0,104.586212,0.027685,1.0,1.0,20,13],
[13,4,2,2,210,176,-450.0,175.586212,0.0,1.0,1.0,104,104],
[14,4,926,2,74,142,-482.0,108.586212,-0.132404,1.0,1.0,40,13],
[16,4,658,84,138,126,-451.0,99.586212,0.0,1.0,1.0,60,120],
[21,4,336,202,20,26,-391.0,39.586212,0.0,1.0,1.0,10,13],
[25,4,278,202,34,28,-447.0,46.586212,0.0,1.0,1.0,17,14],
[20,4,414,202,22,6,-425.0,100.586212,0.0,1.0,1.0,11,3],
[22,4,1014,92,4,6,-387.0,39.586212,0.0,1.0,1.0,2,3],
[26,4,1012,84,6,6,-441.0,46.586212,0.0,1.0,1.0,3,3],
[23,4,650,100,4,4,-393.0,41.586212,0.0,1.0,1.0,2,2],
[27,4,1002,96,10,4,-450.0,48.586212,0.0,1.0,1.0,5,2],
[18,4,798,84,106,150,-502.0,39.586212,-0.027685,1.0,1.0,58,34],
[19,4,390,100,162,78,-440.0,9.586212,0.0,1.0,1.0,81,39],
[34,4,2,180,236,30,-461.586212,151.586212,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,-343.586212,141.586212,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,-337.586212,138.586212,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,-341.586212,139.586212,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-452.0,3.586212,0.013842,1.0,1.0,133,48],
[31,4,906,146,76,96,-505.828735,16.332521,0.013842,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.027427,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-441.655182,136.655167,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-451.797791,17.653706,0.014444,1.0,1.0,133,40],
[17,4,214,2,174,170,-469.0,9.655167,0.014444,1.0,1.0,62,27],
[15,4,554,100,70,140,-416.0,104.655167,0.028888,1.0,1.0,20,13],
[13,4,2,2,210,176,-450.0,175.655167,0.0,1.0,1.0,104,104],
[14,4,926,2,74,142,-482.0,108.655167,-0.133608,1.0,1.0,40,13],
[16,4,658,84,138,126,-451.0,99.655167,0.0,1.0,1.0,60,120],
[21,4,336,202,20,26,-391.0,39.655167,0.0,1.0,1.0,10,13],
[25,4,278,202,34,28,-447.0,46.655167,0.0,1.0,1.0,17,14],
[20,4,414,202,22,6,-425.0,100.655167,0.0,1.0,1.0,11,3],
[22,4,1014,92,4,6,-387.0,39.655167,0.0,1.0,1.0,2,3],
[26,4,1012,84,6,6,-441.0,46.655167,0.0,1.0,1.0,3,3],
[23,4,650,100,4,4,-393.0,41.655167,0.0,1.0,1.0,2,2],
[27,4,1002,96,10,4,-450.0,48.655167,0.0,1.0,1.0,5,2],
[18,4,798,84,106,150,-502.0,39.655167,-0.028888,1.0,1.0,58,34],
[19,4,390,100,162,78,-440.0,9.655167,0.0,1.0,1.0,81,39],
[34,4,2,180,236,30,-461.655182,151.655167,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,-343.655182,141.655167,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,-337.655182,138.655167,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,-341.655182,139.655167,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-452.0,3.655167,0.014444,1.0,1.0,133,48],
[31,4,906,146,76,96,-505.821045,16.433868,0.014444,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135,0,0,0.950000],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.019000,1.019000,209,135,0,0,0.050000],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.029297,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-441.724152,136.724136,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-451.789368,17.722551,0.015046,1.0,1.0,133,40],
[17,4,214,2,174,170,-469.0,9.724136,0.015046,1.0,1.0,62,27],
[15,4,554,100,70,140,-416.0,104.724136,0.030092,1.0,1.0,20,13],
[13,4,2,2,210,176,-450.0,175.724136,0.0,1.0,1.0,104,104],
[14,4,926,2,74,142,-482.0,108.724136,-0.134812,1.0,1.0,40,13],
[16,4,658,84,138,126,-451.0,99.724136,0.0,1.0,1.0,60,120],
[21,4,336,202,20,26,-391.0,39.724136,0.0,1.0,1.0,10,13],
[25,4,278,202,34,28,-447.0,46.724136,0.0,1.0,1.0,17,14],
[20,4,414,202,22,6,-425.0,100.724136,0.0,1.0,1.0,11,3],
[22,4,1014,92,4,6,-387.0,39.724136,0.0,1.0,1.0,2,3],
[26,4,1012,84,6,6,-441.0,46.724136,0.0,1.0,1.0,3,3],
[23,4,650,100,4,4,-393.0,41.724136,0.0,1.0,1.0,2,2],
[27,4,1002,96,10,4,-450.0,48.724136,0.0,1.0,1.0,5,2],
[18,4,798,84,106,150,-502.0,39.724136,-0.030092,1.0,1.0,58,34],
[19,4,390,100,162,78,-440.0,9.724136,0.0,1.0,1.0,81,39],
[34,4,2,180,236,30,-461.724152,151.724136,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,-343.057495,141.724136,-0.011636,1.0,1.0,20,27],
[36,4,1002,84,8,10,-336.781738,139.547012,-0.011636,1.0,1.0,4,5],
[37,4,1014,100,6,2,-341.034363,139.747543,-0.011636,1.0,1.0,3,1],
[29,4,390,2,266,96,-452.0,3.724136,0.015046,1.0,1.0,133,48],
[31,4,906,146,76,96,-505.813354,16.535229,0.015046,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135,0,0,0.900000],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.018000,1.018000,209,135,0,0,0.100000],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.031167,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-441.793091,136.793106,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-451.780945,17.791393,0.015648,1.0,1.0,133,40],
[17,4,214,2,174,170,-469.0,9.793106,0.015648,1.0,1.0,62,27],
[15,4,554,100,70,140,-416.0,104.793106,0.031296,1.0,1.0,20,13],
[13,4,2,2,210,176,-450.0,175.793106,0.0,1.0,1.0,104,104],
[14,4,926,2,74,142,-482.0,108.793106,-0.136015,1.0,1.0,40,13],
[16,4,658,84,138,126,-451.0,99.793106,0.0,1.0,1.0,60,120],
[21,4,336,202,20,26,-391.0,39.793106,0.0,1.0,1.0,10,13],
[25,4,278,202,34,28,-447.0,46.793106,0.0,1.0,1.0,17,14],
[20,4,414,202,22,6,-425.0,100.793106,0.0,1.0,1.0,11,3],
[22,4,1014,92,4,6,-387.0,39.793106,0.0,1.0,1.0,2,3],
[26,4,1012,84,6,6,-441.0,46.793106,0.0,1.0,1.0,3,3],
[23,4,650,100,4,4,-393.0,41.793106,0.0,1.0,1.0,2,2],
[27,4,1002,96,10,4,-450.0,48.793106,0.0,1.0,1.0,5,2],
[18,4,798,84,106,150,-502.0,39.793106,-0.031296,1.0,1.0,58,34],
[19,4,390,100,162,78,-440.0,9.793106,0.0,1.0,1.0,81,39],
[34,4,2,180,236,30,-461.793091,151.793106,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,-342.459747,141.793106,-0.023271,1.0,1.0,20,27],
[36,4,1002,84,8,10,-335.926605,140.444763,-0.023271,1.0,1.0,4,5],
[37,4,1014,100,6,2,-340.413757,139.840179,-0.023271,1.0,1.0,3,1],
[29,4,390,2,266,96,-452.0,3.793106,0.015648,1.0,1.0,133,48],
[31,4,906,146,76,96,-505.805634,16.636581,0.015648,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135,0,0,0.850000],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.017000,1.017000,209,135,0,0,0.150000],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.033037,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-441.862061,136.862076,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-451.772522,17.860228,0.016250,1.0,1.0,133,40],
[17,4,214,2,174,170,-469.0,9.862076,0.016250,1.0,1.0,62,27],
[15,4,554,100,70,140,-416.0,104.862076,0.032499,1.0,1.0,20,13],
[13,4,2,2,210,176,-450.0,175.862076,0.0,1.0,1.0,104,104],
[14,4,926,2,74,142,-482.0,108.862076,-0.137219,1.0,1.0,40,13],
[16,4,658,84,138,126,-451.0,99.862076,0.0,1.0,1.0,60,120],
[21,4,336,202,20,26,-391.0,39.862076,0.0,1.0,1.0,10,13],
[25,4,278,202,34,28,-447.0,46.862076,0.0,1.0,1.0,17,14],
[20,4,414,202,22,6,-425.0,100.862076,0.0,1.0,1.0,11,3],
[22,4,1014,92,4,6,-387.0,39.862076,0.0,1.0,1.0,2,3],
[26,4,1012,84,6,6,-441.0,46.862076,0.0,1.0,1.0,3,3],
[23,4,650,100,4,4,-393.0,41.862076,0.0,1.0,1.0,2,2],
[27,4,1002,96,10,4,-450.0,48.862076,0.0,1.0,1.0,5,2],
[18,4,798,84,106,150,-502.0,39.862076,-0.032499,1.0,1.0,58,34],
[19,4,390,100,162,78,-440.0,9.862076,0.0,1.0,1.0,81,39],
[34,4,2,180,236,30,-461.862061,151.862076,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,-341.862061,141.862076,-0.034907,1.0,1.0,20,27],
[36,4,1002,84,8,10,-335.089996,141.348099,-0.034907,1.0,1.0,4,5],
[37,4,1014,100,6,2,-339.793488,139.933090,-0.034907,1.0,1.0,3,1],
[29,4,390,2,266,96,-452.0,3.862076,0.016250,1.0,1.0,133,48],
[31,4,906,146,76,96,-505.797882,16.737932,0.016250,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135,0,0,0.800000],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.016000,1.016000,209,135,0,0,0.200000],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.034907,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-441.931030,136.931030,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-451.764099,17.929043,0.016851,1.0,1.0,133,40],
[17,4,214,2,174,170,-469.0,9.931030,0.016851,1.0,1.0,62,27],
[15,4,554,100,70,140,-416.0,104.931030,0.033703,1.0,1.0,20,13],
[13,4,2,2,210,176,-450.0,175.931030,0.0,1.0,1.0,104,104],
[14,4,926,2,74,142,-482.0,108.931030,-0.138423,1.0,1.0,40,13],
[16,4,658,84,138,126,-451.0,99.931030,0.0,1.0,1.0,60,120],
[21,4,336,202,20,26,-391.0,39.931030,0.0,1.0,1.0,10,13],
[25,4,278,202,34,28,-447.0,46.931030,0.0,1.0,1.0,17,14],
[20,4,414,202,22,6,-425.0,100.931030,0.0,1.0,1.0,11,3],
[22,4,1014,92,4,6,-387.0,39.931030,0.0,1.0,1.0,2,3],
[26,4,1012,84,6,6,-441.0,46.931030,0.0,1.0,1.0,3,3],
[23,4,650,100,4,4,-393.0,41.931030,0.0,1.0,1.0,2,2],
[27,4,1002,96,10,4,-450.0,48.931030,0.0,1.0,1.0,5,2],
[18,4,798,84,106,150,-502.0,39.931030,-0.033703,1.0,1.0,58,34],
[19,4,390,100,162,78,-440.0,9.931030,0.0,1.0,1.0,81,39],
[34,4,2,180,236,30,-461.931030,151.931030,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,-341.264374,141.931030,-0.046542,1.0,1.0,20,27],
[36,4,1002,84,8,10,-334.271942,142.256714,-0.046542,1.0,1.0,4,5],
[37,4,1014,100,6,2,-339.173492,140.026245,-0.046542,1.0,1.0,3,1],
[29,4,390,2,266,96,-452.0,3.931030,0.016851,1.0,1.0,133,48],
[31,4,906,146,76,96,-505.790131,16.839262,0.016851,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135,0,0,0.750000],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.015000,1.015000,209,135,0,0,0.250000],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.031416,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-442.0,137.0,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-451.755676,17.997868,0.017453,1.0,1.0,133,40],
[17,4,214,2,174,170,-469.0,10.0,0.017453,1.0,1.0,62,27],
[15,4,554,100,70,140,-416.0,105.0,0.034907,1.0,1.0,20,13],
[13,4,2,2,210,176,-450.0,176.0,0.0,1.0,1.0,104,104],
[14,4,926,2,74,142,-482.0,109.0,-0.139626,1.0,1.0,40,13],
[16,4,658,84,138,126,-451.0,100.0,0.0,1.0,1.0,60,120],
[21,4,336,202,20,26,-391.0,40.0,0.0,1.0,1.0,10,13],
[25,4,278,202,34,28,-447.0,47.0,0.0,1.0,1.0,17,14],
[20,4,414,202,22,6,-425.0,101.0,0.0,1.0,1.0,11,3],
[22,4,1014,92,4,6,-387.0,40.0,0.0,1.0,1.0,2,3],
[26,4,1012,84,6,6,-441.0,47.0,0.0,1.0,1.0,3,3],
[23,4,650,100,4,4,-393.0,42.0,0.0,1.0,1.0,2,2],
[27,4,1002,96,10,4,-450.0,49.0,0.0,1.0,1.0,5,2],
[18,4,798,84,106,150,-502.0,40.0,-0.034907,1.0,1.0,58,34],
[19,4,390,100,162,78,-440.0,10.0,0.0,1.0,1.0,81,39],
[34,4,2,180,236,30,-462.0,152.0,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,-340.666656,142.0,-0.058178,1.0,1.0,20,27],
[36,4,1002,84,8,10,-333.678497,142.407013,-0.058178,1.0,1.0,4,5],
[37,4,1014,100,6,2,-338.553741,140.119675,-0.058178,1.0,1.0,3,1],
[29,4,390,2,266,96,-452.0,4.0,0.017453,1.0,1.0,133,48],
[31,4,906,146,76,96,-505.782349,16.940601,0.017453,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135,0,0,0.700000],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.014000,1.014000,209,135,0,0,0.300000],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.027925,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-440.0,135.0,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-452.0,16.0,0.0,1.0,1.0,133,40],
[17,4,214,2,174,170,-469.0,8.0,0.0,1.0,1.0,62,27],
[15,4,554,100,70,140,-416.0,103.0,0.0,1.0,1.0,20,13],
[13,4,2,2,210,176,-450.0,174.0,0.0,1.0,1.0,104,104],
[14,4,926,2,74,142,-482.0,107.0,-0.104720,1.0,1.0,40,13],
[16,4,658,84,138,126,-451.0,98.0,0.0,1.0,1.0,60,120],
[21,4,336,202,20,26,-391.0,38.0,0.0,1.0,1.0,10,13],
[25,4,278,202,34,28,-447.0,45.0,0.0,1.0,1.0,17,14],
[20,4,414,202,22,6,-425.0,99.0,0.0,1.0,1.0,11,3],
[22,4,1014,92,4,6,-387.0,38.0,0.0,1.0,1.0,2,3],
[26,4,1012,84,6,6,-441.0,45.0,0.0,1.0,1.0,3,3],
[23,4,650,100,4,4,-393.0,40.0,0.0,1.0,1.0,2,2],
[27,4,1002,96,10,4,-450.0,47.0,0.0,1.0,1.0,5,2],
[18,4,798,84,106,150,-502.0,38.0,0.0,1.0,1.0,58,34],
[19,4,390,100,162,78,-440.0,8.0,0.0,1.0,1.0,81,39],
[34,4,2,180,236,30,-460.0,150.0,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,-338.0,140.0,-0.069813,1.0,1.0,20,27],
[36,4,1002,84,8,10,-331.017059,140.488297,-0.069813,1.0,1.0,4,5],
[37,4,1014,100,6,2,-335.865356,138.144379,-0.069813,1.0,1.0,3,1],
[29,4,390,2,266,96,-452.0,2.0,0.0,1.0,1.0,133,48],
[31,4,906,146,76,96,-506.0,14.0,0.0,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135,0,0,0.650000],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.013000,1.013000,209,135,0,0,0.350000],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.024435,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-438.936035,135.083252,-0.005818,1.0,1.0,135,10],
[30,4,658,2,266,80,-448.886047,16.082458,0.008727,1.0,1.0,133,40],
[17,4,214,2,174,170,-465.758209,8.082993,0.004363,1.0,1.0,62,27],
[15,4,554,100,70,140,-414.099396,103.604195,0.0,1.0,1.0,20,13],
[13,4,2,2,210,176,-449.333344,174.0,-0.017453,1.0,1.0,104,104],
[14,4,926,2,74,142,-480.159149,106.451729,-0.148353,1.0,1.0,40,13],
[16,4,658,84,138,126,-448.008209,98.082993,-0.000000,1.0,1.0,60,120],
[21,4,336,202,20,26,-388.008209,38.082993,-0.000000,1.0,1.0,10,13],
[25,4,278,202,34,28,-444.008209,45.082993,-0.000000,1.0,1.0,17,14],
[20,4,414,202,22,6,-423.758209,99.582993,-0.000000,1.0,1.0,11,3],
[22,4,1014,92,4,6,-383.758209,39.082993,-0.000000,1.0,1.0,2,3],
[26,4,1012,84,6,6,-437.508209,45.832993,-0.000000,1.0,1.0,3,3],
[23,4,650,100,4,4,-390.008209,40.082993,-0.000000,1.0,1.0,2,2],
[27,4,1002,96,10,4,-447.008209,47.082993,-0.000000,1.0,1.0,5,2],
[18,4,798,84,106,150,-499.258209,38.082993,-0.008727,1.0,1.0,58,34],
[19,4,390,100,162,78,-437.008209,8.082993,-0.000000,1.0,1.0,81,39],
[34,4,2,180,236,30,-459.022980,149.966644,-0.005818,1.0,1.0,118,15],
[35,4,512,180,40,54,-337.038269,140.676163,-0.075631,1.0,1.0,20,27],
[36,4,1002,84,8,10,-330.058289,141.205078,-0.075631,1.0,1.0,4,5],
[37,4,1014,100,6,2,-334.892883,138.832993,-0.075631,1.0,1.0,3,1],
[29,4,390,2,266,96,-449.008209,2.082993,0.008727,1.0,1.0,133,48],
[31,4,906,146,76,96,-502.901428,14.553768,0.022689,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135,0,0,0.600000],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.012000,1.012000,209,135,0,0,0.400000],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.020944,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-437.872162,135.166870,-0.011636,1.0,1.0,135,10],
[30,4,658,2,266,80,-445.775574,16.221836,0.017453,1.0,1.0,133,40],
[17,4,214,2,174,170,-462.519897,8.223969,0.008727,1.0,1.0,62,27],
[15,4,554,100,70,140,-412.209503,104.229836,0.0,1.0,1.0,20,13],
[13,4,2,2,210,176,-448.666656,174.0,-0.034907,1.0,1.0,104,104],
[14,4,926,2,74,142,-478.308899,105.924034,-0.191986,1.0,1.0,40,13],
[16,4,658,84,138,126,-445.019897,98.223969,-0.000000,1.0,1.0,60,120],
[21,4,336,202,20,26,-385.019897,38.223969,-0.000000,1.0,1.0,10,13],
[25,4,278,202,34,28,-441.019897,45.223969,-0.000000,1.0,1.0,17,14],
[20,4,414,202,22,6,-422.519897,100.223969,-0.000000,1.0,1.0,11,3],
[22,4,1014,92,4,6,-380.519897,40.223969,-0.000000,1.0,1.0,2,3],
[26,4,1012,84,6,6,-434.019897,46.723969,-0.000000,1.0,1.0,3,3],
[23,4,650,100,4,4,-387.019897,40.223969,-0.000000,1.0,1.0,2,2],
[27,4,1002,96,10,4,-444.019897,47.223969,-0.000000,1.0,1.0,5,2],
[18,4,798,84,106,150,-496.519897,38.223969,-0.017453,1.0,1.0,58,34],
[19,4,390,100,162,78,-434.019897,8.223969,-0.000000,1.0,1.0,81,39],
[34,4,2,180,236,30,-458.045319,149.933151,-0.011636,1.0,1.0,118,15],
[35,4,512,180,40,54,-336.080078,141.351669,-0.081449,1.0,1.0,20,27],
[36,4,1002,84,8,10,-329.103271,141.921173,-0.081449,1.0,1.0,4,5],
[37,4,1014,100,6,2,-333.923981,139.521011,-0.081449,1.0,1.0,3,1],
[29,4,390,2,266,96,-446.019897,2.223969,0.017453,1.0,1.0,133,48],
[31,4,906,146,76,96,-499.802246,15.164571,0.045379,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135,0,0,0.550000],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.011000,1.011000,209,135,0,0,0.450000],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.017453,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-436.808319,135.250854,-0.017453,1.0,1.0,135,10],
[30,4,658,2,266,80,-442.669952,16.418024,0.026180,1.0,1.0,133,40],
[17,4,214,2,174,170,-459.286438,8.422821,0.013090,1.0,1.0,62,27],
[15,4,554,100,70,140,-410.330750,104.876724,0.000000,1.0,1.0,20,13],
[13,4,2,2,210,176,-448.0,174.0,-0.052360,1.0,1.0,104,104],
[14,4,926,2,74,142,-476.449646,105.417068,-0.235619,1.0,1.0,40,13],
[16,4,658,84,138,126,-442.036438,98.422821,0.0,1.0,1.0,60,120],
[21,4,336,202,20,26,-382.036438,38.422821,0.0,1.0,1.0,10,13],
[25,4,278,202,34,28,-438.036438,45.422821,0.0,1.0,1.0,17,14],
[20,4,414,202,22,6,-421.286438,100.922821,0.0,1.0,1.0,11,3],
[22,4,1014,92,4,6,-377.286438,41.422821,0.0,1.0,1.0,2,3],
[26,4,1012,84,6,6,-430.536438,47.672821,0.0,1.0,1.0,3,3],
[23,4,650,100,4,4,-384.036438,40.422821,0.0,1.0,1.0,2,2],
[27,4,1002,96,10,4,-441.036438,47.422821,0.0,1.0,1.0,5,2],
[18,4,798,84,106,150,-493.786438,38.422821,-0.026180,1.0,1.0,58,34],
[19,4,390,100,162,78,-431.036438,8.422821,0.0,1.0,1.0,81,39],
[34,4,2,180,236,30,-457.067078,149.899521,-0.017453,1.0,1.0,118,15],
[35,4,512,180,40,54,-335.125366,142.026505,-0.087266,1.0,1.0,20,27],
[36,4,1002,84,8,10,-328.152008,142.636597,-0.087266,1.0,1.0,4,5],
[37,4,1014,100,6,2,-332.958679,140.208420,-0.087266,1.0,1.0,3,1],
[29,4,390,2,266,96,-443.036438,2.422821,0.026180,1.0,1.0,133,48],
[31,4,906,146,76,96,-496.703796,15.832264,0.068068,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135,0,0,0.500000],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.010000,1.010000,209,135,0,0,0.500000],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.013963,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-435.744568,135.335236,-0.023271,1.0,1.0,135,10],
[30,4,658,2,266,80,-439.570496,16.670891,0.034907,1.0,1.0,133,40],
[17,4,214,2,174,170,-456.059082,8.679420,0.017453,1.0,1.0,62,27],
[15,4,554,100,70,140,-408.463440,105.544670,0.0,1.0,1.0,20,13],
[13,4,2,2,210,176,-447.333344,174.0,-0.069813,1.0,1.0,104,104],
[14,4,926,2,74,142,-474.581696,104.931000,-0.279253,1.0,1.0,40,13],
[16,4,658,84,138,126,-439.059082,98.679420,-0.000000,1.0,1.0,60,120],
[21,4,336,202,20,26,-379.059082,38.679420,-0.000000,1.0,1.0,10,13],
[25,4,278,202,34,28,-435.059082,45.679420,-0.000000,1.0,1.0,17,14],
[20,4,414,202,22,6,-420.059082,101.679420,-0.000000,1.0,1.0,11,3],
[22,4,1014,92,4,6,-374.059082,42.679420,-0.000000,1.0,1.0,2,3],
[26,4,1012,84,6,6,-427.059082,48.679420,-0.000000,1.0,1.0,3,3],
[23,4,650,100,4,4,-381.059082,40.679420,-0.000000,1.0,1.0,2,2],
[27,4,1002,96,10,4,-438.059082,47.679420,-0.000000,1.0,1.0,5,2],
[18,4,798,84,106,150,-491.059082,38.679420,-0.034907,1.0,1.0,58,34],
[19,4,390,100,162,78,-428.059082,8.679420,-0.000000,1.0,1.0,81,39],
[34,4,2,180,236,30,-456.088196,149.865799,-0.023271,1.0,1.0,118,15],
[35,4,512,180,40,54,-334.174194,142.700668,-0.093084,1.0,1.0,20,27],
[36,4,1002,84,8,10,-327.204498,143.351318,-0.093084,1.0,1.0,4,5],
[37,4,1014,100,6,2,-331.996948,140.895233,-0.093084,1.0,1.0,3,1],
[29,4,390,2,266,96,-440.059082,2.679420,0.034907,1.0,1.0,133,48],
[31,4,906,146,76,96,-493.607391,16.556683,0.090757,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135,0,0,0.450000],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.009000,1.009000,209,135,0,0,0.550000],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.010472,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-434.680908,135.419968,-0.029089,1.0,1.0,135,10],
[30,4,658,2,266,80,-436.313934,16.893539,0.013963,1.0,1.0,133,40],
[17,4,214,2,174,170,-452.778320,8.611847,-0.002909,1.0,1.0,62,27],
[15,4,554,100,70,140,-406.607971,106.233475,0.000000,1.0,1.0,20,13],
[13,4,2,2,210,176,-446.666656,174.0,-0.087266,1.0,1.0,104,104],
[14,4,926,2,74,142,-472.705444,104.465973,-0.322886,1.0,1.0,40,13],
[16,4,658,84,138,126,-437.184998,98.897736,-0.017453,1.0,1.0,60,120],
[21,4,336,202,20,26,-376.147003,39.954018,-0.017453,1.0,1.0,10,13],
[25,4,278,202,34,28,-432.260620,45.975616,-0.017453,1.0,1.0,17,14],
[20,4,414,202,22,6,-418.138519,102.130638,-0.017453,1.0,1.0,11,3],
[22,4,1014,92,4,6,-371.217560,44.040672,-0.017453,1.0,1.0,2,3],
[26,4,1012,84,6,6,-424.314209,49.114780,-0.017453,1.0,1.0,3,3],
[23,4,650,100,4,4,-378.181610,41.918808,-0.017453,1.0,1.0,2,2],
[27,4,1002,96,10,4,-435.295074,47.922955,-0.017453,1.0,1.0,5,2],
[18,4,798,84,106,150,-487.963287,38.002258,-0.046542,1.0,1.0,58,34],
[19,4,390,100,162,78,-424.615967,9.103416,-0.017453,1.0,1.0,81,39],
[34,4,2,180,236,30,-455.108734,149.831924,-0.029089,1.0,1.0,118,15],
[35,4,512,180,40,54,-333.226471,143.374115,-0.098902,1.0,1.0,20,27],
[36,4,1002,84,8,10,-326.260681,144.065308,-0.098902,1.0,1.0,4,5],
[37,4,1014,100,6,2,-331.038757,141.581375,-0.098902,1.0,1.0,3,1],
[29,4,390,2,266,96,-436.509399,2.894905,0.013963,1.0,1.0,133,48],
[31,4,906,146,76,96,-490.336578,15.647693,0.083776,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135,0,0,0.400000],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.008000,1.008000,209,135,0,0,0.600000],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.006981,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-433.617310,135.505066,-0.034907,1.0,1.0,135,10],
[30,4,658,2,266,80,-433.062775,17.158480,-0.006981,1.0,1.0,133,40],
[17,4,214,2,174,170,-449.497803,8.585136,-0.023271,1.0,1.0,62,27],
[15,4,554,100,70,140,-404.764740,106.942917,0.000000,1.0,1.0,20,13],
[13,4,2,2,210,176,-446.0,174.0,-0.104720,1.0,1.0,104,104],
[14,4,926,2,74,142,-470.821289,104.022125,-0.366519,1.0,1.0,40,13],
[16,4,658,84,138,126,-435.315979,99.135239,-0.034907,1.0,1.0,60,120],
[21,4,336,202,20,26,-373.258545,41.265759,-0.034907,1.0,1.0,10,13],
[25,4,278,202,34,28,-429.468750,46.307121,-0.034907,1.0,1.0,17,14],
[20,4,414,202,22,6,-416.225403,102.603607,-0.034907,1.0,1.0,11,3],
[22,4,1014,92,4,6,-368.401184,45.437820,-0.034907,1.0,1.0,2,3],
[26,4,1012,84,6,6,-421.578308,49.584488,-0.034907,1.0,1.0,3,3],
[23,4,650,100,4,4,-375.327118,43.194740,-0.034907,1.0,1.0,2,2],
[27,4,1002,96,10,4,-432.536713,48.201206,-0.034907,1.0,1.0,5,2],
[18,4,798,84,106,150,-484.857208,37.368649,-0.058178,1.0,1.0,58,34],
[19,4,390,100,162,78,-421.181732,9.573959,-0.034907,1.0,1.0,81,39],
[34,4,2,180,236,30,-454.128632,149.797943,-0.034907,1.0,1.0,118,15],
[35,4,512,180,40,54,-332.282288,144.046814,-0.104720,1.0,1.0,20,27],
[36,4,1002,84,8,10,-325.320648,144.778519,-0.104720,1.0,1.0,4,5],
[37,4,1014,100,6,2,-330.084198,142.266830,-0.104720,1.0,1.0,3,1],
[29,4,390,2,266,96,-432.965027,3.158821,-0.006981,1.0,1.0,133,48],
[31,4,906,146,76,96,-487.047485,14.781541,0.048869,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135,0,0,0.350000],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.007000,1.007000,209,135,0,0,0.650000],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.003491,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-433.867310,135.576508,-0.034907,1.0,1.0,135,10],
[30,4,658,2,266,80,-433.218536,17.343639,-0.010472,1.0,1.0,133,40],
[17,4,214,2,174,170,-449.771271,8.764908,-0.026180,1.0,1.0,62,27],
[15,4,554,100,70,140,-404.764740,107.067917,0.017453,1.0,1.0,20,13],
[13,4,2,2,210,176,-446.0,174.125000,-0.104720,1.0,1.0,104,104],
[14,4,926,2,74,142,-470.821289,104.147125,-0.392699,1.0,1.0,40,13],
[16,4,658,84,138,126,-435.422882,99.320824,-0.034907,1.0,1.0,60,120],
[21,4,336,202,20,26,-373.365479,41.451344,-0.034907,1.0,1.0,10,13],
[25,4,278,202,34,28,-429.575653,46.492706,-0.034907,1.0,1.0,17,14],
[20,4,414,202,22,6,-416.228882,102.692741,-0.034907,1.0,1.0,11,3],
[22,4,1014,92,4,6,-368.508118,45.623405,-0.034907,1.0,1.0,2,3],
[26,4,1012,84,6,6,-421.685211,49.770073,-0.034907,1.0,1.0,3,3],
[23,4,650,100,4,4,-375.434052,43.380325,-0.034907,1.0,1.0,2,2],
[27,4,1002,96,10,4,-432.643616,48.386791,-0.034907,1.0,1.0,5,2],
[18,4,798,84,106,150,-484.797546,37.560051,-0.052360,1.0,1.0,58,34],
[19,4,390,100,162,78,-421.288635,9.759544,-0.034907,1.0,1.0,81,39],
[34,4,2,180,236,30,-454.378632,149.869370,-0.034907,1.0,1.0,118,15],
[35,4,512,180,40,54,-332.603638,144.115753,-0.104720,1.0,1.0,20,27],
[36,4,1002,84,8,10,-325.641998,144.847458,-0.104720,1.0,1.0,4,5],
[37,4,1014,100,6,2,-330.405548,142.335770,-0.104720,1.0,1.0,3,1],
[29,4,390,2,266,96,-433.071930,3.344406,-0.010472,1.0,1.0,133,48],
[31,4,906,146,76,96,-487.194641,14.778272,0.031416,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135,0,0,0.300000],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.006000,1.006000,209,135,0,0,0.700000],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.000000,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-434.117310,135.647919,-0.034907,1.0,1.0,135,10],
[30,4,658,2,266,80,-433.374329,17.528625,-0.013963,1.0,1.0,133,40],
[17,4,214,2,174,170,-450.044769,8.944679,-0.029089,1.0,1.0,62,27],
[15,4,554,100,70,140,-404.764740,107.192917,0.034907,1.0,1.0,20,13],
[13,4,2,2,210,176,-446.0,174.250000,-0.104720,1.0,1.0,104,104],
[14,4,926,2,74,142,-470.821289,104.272125,-0.418879,1.0,1.0,40,13],
[16,4,658,84,138,126,-435.529816,99.506409,-0.034907,1.0,1.0,60,120],
[21,4,336,202,20,26,-373.472412,41.636929,-0.034907,1.0,1.0,10,13],
[25,4,278,202,34,28,-429.682587,46.678291,-0.034907,1.0,1.0,17,14],
[20,4,414,202,22,6,-416.232361,102.781876,-0.034907,1.0,1.0,11,3],
[22,4,1014,92,4,6,-368.615051,45.808990,-0.034907,1.0,1.0,2,3],
[26,4,1012,84,6,6,-421.792145,49.955658,-0.034907,1.0,1.0,3,3],
[23,4,650,100,4,4,-375.540985,43.565910,-0.034907,1.0,1.0,2,2],
[27,4,1002,96,10,4,-432.750549,48.572376,-0.034907,1.0,1.0,5,2],
[18,4,798,84,106,150,-484.737915,37.751450,-0.046542,1.0,1.0,58,34],
[19,4,390,100,162,78,-421.395569,9.945129,-0.034907,1.0,1.0,81,39],
[34,4,2,180,236,30,-454.628632,149.940796,-0.034907,1.0,1.0,118,15],
[35,4,512,180,40,54,-332.925049,144.184692,-0.104720,1.0,1.0,20,27],
[36,4,1002,84,8,10,-325.963409,144.916397,-0.104720,1.0,1.0,4,5],
[37,4,1014,100,6,2,-330.726959,142.404709,-0.104720,1.0,1.0,3,1],
[29,4,390,2,266,96,-433.178864,3.529991,-0.013963,1.0,1.0,133,48],
[31,4,906,146,76,96,-487.341156,14.774863,0.013963,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135,0,0,0.250000],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.005000,1.005000,209,135,0,0,0.750000],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.003491,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-434.367310,135.719360,-0.034907,1.0,1.0,135,10],
[30,4,658,2,266,80,-433.530090,17.713444,-0.017453,1.0,1.0,133,40],
[17,4,214,2,174,170,-450.318237,9.124443,-0.031998,1.0,1.0,62,27],
[15,4,554,100,70,140,-404.764740,107.317917,0.052360,1.0,1.0,20,13],
[13,4,2,2,210,176,-446.0,174.375000,-0.104720,1.0,1.0,104,104],
[14,4,926,2,74,142,-470.821289,104.397125,-0.445059,1.0,1.0,40,13],
[16,4,658,84,138,126,-435.636719,99.691994,-0.034907,1.0,1.0,60,120],
[21,4,336,202,20,26,-373.579285,41.822514,-0.034907,1.0,1.0,10,13],
[25,4,278,202,34,28,-429.789490,46.863876,-0.034907,1.0,1.0,17,14],
[20,4,414,202,22,6,-416.235840,102.871010,-0.034907,1.0,1.0,11,3],
[22,4,1014,92,4,6,-368.721924,45.994576,-0.034907,1.0,1.0,2,3],
[26,4,1012,84,6,6,-421.899048,50.141243,-0.034907,1.0,1.0,3,3],
[23,4,650,100,4,4,-375.647858,43.751495,-0.034907,1.0,1.0,2,2],
[27,4,1002,96,10,4,-432.857452,48.757961,-0.034907,1.0,1.0,5,2],
[18,4,798,84,106,150,-484.678253,37.942852,-0.040724,1.0,1.0,58,34],
[19,4,390,100,162,78,-421.502472,10.130714,-0.034907,1.0,1.0,81,39],
[34,4,2,180,236,30,-454.878632,150.012222,-0.034907,1.0,1.0,118,15],
[35,4,512,180,40,54,-333.246429,144.253616,-0.104720,1.0,1.0,20,27],
[36,4,1002,84,8,10,-326.284790,144.985321,-0.104720,1.0,1.0,4,5],
[37,4,1014,100,6,2,-331.048340,142.473633,-0.104720,1.0,1.0,3,1],
[29,4,390,2,266,96,-433.285767,3.715576,-0.017453,1.0,1.0,133,48],
[31,4,906,146,76,96,-487.486969,14.771318,-0.003491,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135,0,0,0.200000],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.004000,1.004000,209,135,0,0,0.800000],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.006981,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-434.617310,135.790771,-0.034907,1.0,1.0,135,10],
[30,4,658,2,266,80,-433.685883,17.898090,-0.020944,1.0,1.0,133,40],
[17,4,214,2,174,170,-450.591736,9.304214,-0.034907,1.0,1.0,62,27],
[15,4,554,100,70,140,-404.764740,107.442917,0.069813,1.0,1.0,20,13],
[13,4,2,2,210,176,-446.0,174.500000,-0.104720,1.0,1.0,104,104],
[14,4,926,2,74,142,-470.821289,104.522125,-0.471239,1.0,1.0,40,13],
[16,4,658,84,138,126,-435.743652,99.877579,-0.034907,1.0,1.0,60,120],
[21,4,336,202,20,26,-373.686218,42.008099,-0.034907,1.0,1.0,10,13],
[25,4,278,202,34,28,-429.896423,47.049461,-0.034907,1.0,1.0,17,14],
[20,4,414,202,22,6,-416.239349,102.960144,-0.034907,1.0,1.0,11,3],
[22,4,1014,92,4,6,-368.828857,46.180161,-0.034907,1.0,1.0,2,3],
[26,4,1012,84,6,6,-422.005981,50.326828,-0.034907,1.0,1.0,3,3],
[23,4,650,100,4,4,-375.754791,43.937080,-0.034907,1.0,1.0,2,2],
[27,4,1002,96,10,4,-432.964386,48.943546,-0.034907,1.0,1.0,5,2],
[18,4,798,84,106,150,-484.618622,38.134254,-0.034907,1.0,1.0,58,34],
[19,4,390,100,162,78,-421.609406,10.316299,-0.034907,1.0,1.0,81,39],
[34,4,2,180,236,30,-455.128632,150.083649,-0.034907,1.0,1.0,118,15],
[35,4,512,180,40,54,-333.567810,144.322556,-0.104720,1.0,1.0,20,27],
[36,4,1002,84,8,10,-326.606171,145.054260,-0.104720,1.0,1.0,4,5],
[37,4,1014,100,6,2,-331.369720,142.542572,-0.104720,1.0,1.0,3,1],
[29,4,390,2,266,96,-433.392700,3.901161,-0.020944,1.0,1.0,133,48],
[31,4,906,146,76,96,-487.632172,14.767638,-0.020944,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135,0,0,0.150000],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.003000,1.003000,209,135,0,0,0.850000],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.010472,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-434.867310,135.862213,-0.034907,1.0,1.0,135,10],
[30,4,658,2,266,80,-433.841644,18.082567,-0.024435,1.0,1.0,133,40],
[17,4,214,2,174,170,-450.698639,9.489799,-0.034409,1.0,1.0,62,27],
[15,4,554,100,70,140,-404.764740,107.567917,0.065825,1.0,1.0,20,13],
[13,4,2,2,210,176,-446.0,174.625000,-0.104720,1.0,1.0,104,104],
[14,4,926,2,74,142,-470.775543,104.715431,-0.464755,1.0,1.0,40,13],
[16,4,658,84,138,126,-435.850555,100.063164,-0.034907,1.0,1.0,60,120],
[21,4,336,202,20,26,-373.793152,42.193684,-0.034907,1.0,1.0,10,13],
[25,4,278,202,34,28,-430.003326,47.235046,-0.034907,1.0,1.0,17,14],
[20,4,414,202,22,6,-416.242828,103.049286,-0.034907,1.0,1.0,11,3],
[22,4,1014,92,4,6,-368.935791,46.365746,-0.034907,1.0,1.0,2,3],
[26,4,1012,84,6,6,-422.112885,50.512413,-0.034907,1.0,1.0,3,3],
[23,4,650,100,4,4,-375.861725,44.122665,-0.034907,1.0,1.0,2,2],
[27,4,1002,96,10,4,-433.071289,49.129131,-0.034907,1.0,1.0,5,2],
[18,4,798,84,106,150,-484.725525,38.319839,-0.035906,1.0,1.0,58,34],
[19,4,390,100,162,78,-421.716309,10.501884,-0.034907,1.0,1.0,81,39],
[34,4,2,180,236,30,-455.378632,150.155090,-0.034907,1.0,1.0,118,15],
[35,4,512,180,40,54,-333.889191,144.391510,-0.104720,1.0,1.0,20,27],
[36,4,1002,84,8,10,-326.927551,145.123215,-0.104720,1.0,1.0,4,5],
[37,4,1014,100,6,2,-331.691101,142.611526,-0.104720,1.0,1.0,3,1],
[29,4,390,2,266,96,-433.499603,4.086746,-0.024435,1.0,1.0,133,48],
[31,4,906,146,76,96,-487.776672,14.763826,-0.023091,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135,0,0,0.100000],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.002000,1.002000,209,135,0,0,0.900000],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.013963,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-435.117310,135.933655,-0.034907,1.0,1.0,135,10],
[30,4,658,2,266,80,-433.997437,18.266865,-0.027925,1.0,1.0,133,40],
[17,4,214,2,174,170,-450.805573,9.675377,-0.033912,1.0,1.0,62,27],
[15,4,554,100,70,140,-404.764740,107.692917,0.061837,1.0,1.0,20,13],
[13,4,2,2,210,176,-446.0,174.750000,-0.104720,1.0,1.0,104,104],
[14,4,926,2,74,142,-470.729797,104.908745,-0.458271,1.0,1.0,40,13],
[16,4,658,84,138,126,-435.957489,100.248741,-0.034907,1.0,1.0,60,120],
[21,4,336,202,20,26,-373.900085,42.379261,-0.034907,1.0,1.0,10,13],
[25,4,278,202,34,28,-430.110260,47.420624,-0.034907,1.0,1.0,17,14],
[20,4,414,202,22,6,-416.246338,103.138412,-0.034907,1.0,1.0,11,3],
[22,4,1014,92,4,6,-369.042725,46.551323,-0.034907,1.0,1.0,2,3],
[26,4,1012,84,6,6,-422.219818,50.697990,-0.034907,1.0,1.0,3,3],
[23,4,650,100,4,4,-375.968658,44.308243,-0.034907,1.0,1.0,2,2],
[27,4,1002,96,10,4,-433.178223,49.314709,-0.034907,1.0,1.0,5,2],
[18,4,798,84,106,150,-484.832458,38.505417,-0.036905,1.0,1.0,58,34],
[19,4,390,100,162,78,-421.823242,10.687462,-0.034907,1.0,1.0,81,39],
[34,4,2,180,236,30,-455.628632,150.226517,-0.034907,1.0,1.0,118,15],
[35,4,512,180,40,54,-334.210571,144.460434,-0.104720,1.0,1.0,20,27],
[36,4,1002,84,8,10,-327.248932,145.192139,-0.104720,1.0,1.0,4,5],
[37,4,1014,100,6,2,-332.012482,142.680450,-0.104720,1.0,1.0,3,1],
[29,4,390,2,266,96,-433.606537,4.272324,-0.027925,1.0,1.0,133,48],
[31,4,906,146,76,96,-487.920532,14.759876,-0.025237,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[40,3,0,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135,0,0,0.050000],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.001000,1.001000,209,135,0,0,0.950000],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.017453,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-435.367310,136.005066,-0.034907,1.0,1.0,135,10],
[30,4,658,2,266,80,-434.153198,18.451008,-0.031416,1.0,1.0,133,40],
[17,4,214,2,174,170,-450.912476,9.860970,-0.033414,1.0,1.0,62,27],
[15,4,554,100,70,140,-404.764740,107.817917,0.057849,1.0,1.0,20,13],
[13,4,2,2,210,176,-446.0,174.875000,-0.104720,1.0,1.0,104,104],
[14,4,926,2,74,142,-470.684082,105.102066,-0.451787,1.0,1.0,40,13],
[16,4,658,84,138,126,-436.064392,100.434334,-0.034907,1.0,1.0,60,120],
[21,4,336,202,20,26,-374.006958,42.564854,-0.034907,1.0,1.0,10,13],
[25,4,278,202,34,28,-430.217163,47.606216,-0.034907,1.0,1.0,17,14],
[20,4,414,202,22,6,-416.249817,103.227554,-0.034907,1.0,1.0,11,3],
[22,4,1014,92,4,6,-369.149597,46.736916,-0.034907,1.0,1.0,2,3],
[26,4,1012,84,6,6,-422.326721,50.883583,-0.034907,1.0,1.0,3,3],
[23,4,650,100,4,4,-376.075531,44.493835,-0.034907,1.0,1.0,2,2],
[27,4,1002,96,10,4,-433.285126,49.500301,-0.034907,1.0,1.0,5,2],
[18,4,798,84,106,150,-484.939362,38.691010,-0.037904,1.0,1.0,58,34],
[19,4,390,100,162,78,-421.930145,10.873055,-0.034907,1.0,1.0,81,39],
[34,4,2,180,236,30,-455.878632,150.297943,-0.034907,1.0,1.0,118,15],
[35,4,512,180,40,54,-334.531982,144.529373,-0.104720,1.0,1.0,20,27],
[36,4,1002,84,8,10,-327.570343,145.261078,-0.104720,1.0,1.0,4,5],
[37,4,1014,100,6,2,-332.333893,142.749390,-0.104720,1.0,1.0,3,1],
[29,4,390,2,266,96,-433.713440,4.457916,-0.031416,1.0,1.0,133,48],
[31,4,906,146,76,96,-488.063721,14.755814,-0.027384,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.013713,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-435.617310,136.076508,-0.034907,1.0,1.0,135,10],
[30,4,658,2,266,80,-434.308960,18.634964,-0.034907,1.0,1.0,133,40],
[17,4,214,2,174,170,-451.019409,10.046547,-0.032917,1.0,1.0,62,27],
[15,4,554,100,70,140,-404.764740,107.942917,0.053861,1.0,1.0,20,13],
[13,4,2,2,210,176,-446.0,175.0,-0.104720,1.0,1.0,104,104],
[14,4,926,2,74,142,-470.638336,105.295380,-0.445303,1.0,1.0,40,13],
[16,4,658,84,138,126,-436.171326,100.619911,-0.034907,1.0,1.0,60,120],
[21,4,336,202,20,26,-374.113892,42.750431,-0.034907,1.0,1.0,10,13],
[25,4,278,202,34,28,-430.324097,47.791794,-0.034907,1.0,1.0,17,14],
[20,4,414,202,22,6,-416.253296,103.316681,-0.034907,1.0,1.0,11,3],
[22,4,1014,92,4,6,-369.256531,46.922493,-0.034907,1.0,1.0,2,3],
[26,4,1012,84,6,6,-422.433655,51.069160,-0.034907,1.0,1.0,3,3],
[23,4,650,100,4,4,-376.182465,44.679413,-0.034907,1.0,1.0,2,2],
[27,4,1002,96,10,4,-433.392059,49.685879,-0.034907,1.0,1.0,5,2],
[18,4,798,84,106,150,-485.046295,38.876587,-0.038903,1.0,1.0,58,34],
[19,4,390,100,162,78,-422.037079,11.058632,-0.034907,1.0,1.0,81,39],
[34,4,2,180,236,30,-456.128632,150.369370,-0.034907,1.0,1.0,118,15],
[35,4,512,180,40,54,-334.853333,144.598297,-0.104720,1.0,1.0,20,27],
[36,4,1002,84,8,10,-327.891693,145.330002,-0.104720,1.0,1.0,4,5],
[37,4,1014,100,6,2,-332.655243,142.818314,-0.104720,1.0,1.0,3,1],
[29,4,390,2,266,96,-433.820374,4.643494,-0.034907,1.0,1.0,133,48],
[31,4,906,146,76,96,-488.206268,14.751611,-0.029531,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.009973,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-435.617310,136.076508,-0.034907,1.0,1.0,135,10],
[30,4,658,2,266,80,-434.308960,18.634964,-0.034907,1.0,1.0,133,40],
[17,4,214,2,174,170,-451.019409,10.046547,-0.032917,1.0,1.0,62,27],
[15,4,554,100,70,140,-404.764740,107.942917,0.053861,1.0,1.0,20,13],
[13,4,2,2,210,176,-446.0,175.0,-0.104720,1.0,1.0,104,104],
[14,4,926,2,74,142,-470.592590,105.363686,-0.445303,1.0,1.0,40,13],
[16,4,658,84,138,126,-436.171326,100.619911,-0.034907,1.0,1.0,60,120],
[21,4,336,202,20,26,-374.113892,42.750431,-0.034907,1.0,1.0,10,13],
[25,4,278,202,34,28,-430.324097,47.791794,-0.034907,1.0,1.0,17,14],
[20,4,414,202,22,6,-416.253296,103.316681,-0.034907,1.0,1.0,11,3],
[22,4,1014,92,4,6,-369.256531,46.922493,-0.034907,1.0,1.0,2,3],
[26,4,1012,84,6,6,-422.433655,51.069160,-0.034907,1.0,1.0,3,3],
[23,4,650,100,4,4,-376.182465,44.679413,-0.034907,1.0,1.0,2,2],
[27,4,1002,96,10,4,-433.392059,49.685879,-0.034907,1.0,1.0,5,2],
[18,4,798,84,106,150,-485.046295,38.876587,-0.038903,1.0,1.0,58,34],
[19,4,390,100,162,78,-422.037079,11.058632,-0.034907,1.0,1.0,81,39],
[34,4,2,180,236,30,-456.128632,150.369370,-0.034907,1.0,1.0,118,15],
[35,4,512,180,40,54,-334.853333,144.598297,-0.104720,1.0,1.0,20,27],
[36,4,1002,84,8,10,-327.891693,145.330002,-0.104720,1.0,1.0,4,5],
[37,4,1014,100,6,2,-332.655243,142.818314,-0.104720,1.0,1.0,3,1],
[29,4,390,2,266,96,-433.820374,4.643494,-0.034907,1.0,1.0,133,48],
[31,4,906,146,76,96,-488.206268,14.751611,-0.029531,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.006233,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-435.617310,136.076508,-0.034907,1.0,1.0,135,10],
[30,4,658,2,266,80,-434.308960,18.634964,-0.034907,1.0,1.0,133,40],
[17,4,214,2,174,170,-451.019409,10.046547,-0.032917,1.0,1.0,62,27],
[15,4,554,100,70,140,-404.764740,107.942917,0.053861,1.0,1.0,20,13],
[13,4,2,2,210,176,-446.0,175.0,-0.104720,1.0,1.0,104,104],
[14,4,926,2,74,142,-470.546844,105.431999,-0.445303,1.0,1.0,40,13],
[16,4,658,84,138,126,-436.171326,100.619911,-0.034907,1.0,1.0,60,120],
[21,4,336,202,20,26,-374.113892,42.750431,-0.034907,1.0,1.0,10,13],
[25,4,278,202,34,28,-430.324097,47.791794,-0.034907,1.0,1.0,17,14],
[20,4,414,202,22,6,-416.253296,103.316681,-0.034907,1.0,1.0,11,3],
[22,4,1014,92,4,6,-369.256531,46.922493,-0.034907,1.0,1.0,2,3],
[26,4,1012,84,6,6,-422.433655,51.069160,-0.034907,1.0,1.0,3,3],
[23,4,650,100,4,4,-376.182465,44.679413,-0.034907,1.0,1.0,2,2],
[27,4,1002,96,10,4,-433.392059,49.685879,-0.034907,1.0,1.0,5,2],
[18,4,798,84,106,150,-485.046295,38.876587,-0.038903,1.0,1.0,58,34],
[19,4,390,100,162,78,-422.037079,11.058632,-0.034907,1.0,1.0,81,39],
[34,4,2,180,236,30,-456.128632,150.369370,-0.034907,1.0,1.0,118,15],
[35,4,512,180,40,54,-334.853333,144.598297,-0.104720,1.0,1.0,20,27],
[36,4,1002,84,8,10,-327.891693,145.330002,-0.104720,1.0,1.0,4,5],
[37,4,1014,100,6,2,-332.655243,142.818314,-0.104720,1.0,1.0,3,1],
[29,4,390,2,266,96,-433.820374,4.643494,-0.034907,1.0,1.0,133,48],
[31,4,906,146,76,96,-488.206268,14.751611,-0.029531,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.002493,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-435.617310,136.076508,-0.034907,1.0,1.0,135,10],
[30,4,658,2,266,80,-434.308960,18.634964,-0.034907,1.0,1.0,133,40],
[17,4,214,2,174,170,-451.019409,10.046547,-0.032917,1.0,1.0,62,27],
[15,4,554,100,70,140,-404.764740,107.942917,0.053861,1.0,1.0,20,13],
[13,4,2,2,210,176,-446.0,175.0,-0.104720,1.0,1.0,104,104],
[14,4,926,2,74,142,-470.501099,105.500320,-0.445303,1.0,1.0,40,13],
[16,4,658,84,138,126,-436.171326,100.619911,-0.034907,1.0,1.0,60,120],
[21,4,336,202,20,26,-374.113892,42.750431,-0.034907,1.0,1.0,10,13],
[25,4,278,202,34,28,-430.324097,47.791794,-0.034907,1.0,1.0,17,14],
[20,4,414,202,22,6,-416.253296,103.316681,-0.034907,1.0,1.0,11,3],
[22,4,1014,92,4,6,-369.256531,46.922493,-0.034907,1.0,1.0,2,3],
[26,4,1012,84,6,6,-422.433655,51.069160,-0.034907,1.0,1.0,3,3],
[23,4,650,100,4,4,-376.182465,44.679413,-0.034907,1.0,1.0,2,2],
[27,4,1002,96,10,4,-433.392059,49.685879,-0.034907,1.0,1.0,5,2],
[18,4,798,84,106,150,-485.046295,38.876587,-0.038903,1.0,1.0,58,34],
[19,4,390,100,162,78,-422.037079,11.058632,-0.034907,1.0,1.0,81,39],
[34,4,2,180,236,30,-456.128632,150.369370,-0.034907,1.0,1.0,118,15],
[35,4,512,180,40,54,-334.853333,144.598297,-0.104720,1.0,1.0,20,27],
[36,4,1002,84,8,10,-327.891693,145.330002,-0.104720,1.0,1.0,4,5],
[37,4,1014,100,6,2,-332.655243,142.818314,-0.104720,1.0,1.0,3,1],
[29,4,390,2,266,96,-433.820374,4.643494,-0.034907,1.0,1.0,133,48],
[31,4,906,146,76,96,-488.206268,14.751611,-0.029531,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.001247,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-435.617310,136.076508,-0.034907,1.0,1.0,135,10],
[30,4,658,2,266,80,-434.308960,18.634964,-0.034907,1.0,1.0,133,40],
[17,4,214,2,174,170,-451.019409,10.046547,-0.032917,1.0,1.0,62,27],
[15,4,554,100,70,140,-404.764740,107.942917,0.053861,1.0,1.0,20,13],
[13,4,2,2,210,176,-446.0,175.0,-0.104720,1.0,1.0,104,104],
[14,4,926,2,74,142,-470.455353,105.568634,-0.445303,1.0,1.0,40,13],
[16,4,658,84,138,126,-436.171326,100.619911,-0.034907,1.0,1.0,60,120],
[21,4,336,202,20,26,-374.113892,42.750431,-0.034907,1.0,1.0,10,13],
[25,4,278,202,34,28,-430.324097,47.791794,-0.034907,1.0,1.0,17,14],
[20,4,414,202,22,6,-416.253296,103.316681,-0.034907,1.0,1.0,11,3],
[22,4,1014,92,4,6,-369.256531,46.922493,-0.034907,1.0,1.0,2,3],
[26,4,1012,84,6,6,-422.433655,51.069160,-0.034907,1.0,1.0,3,3],
[23,4,650,100,4,4,-376.182465,44.679413,-0.034907,1.0,1.0,2,2],
[27,4,1002,96,10,4,-433.392059,49.685879,-0.034907,1.0,1.0,5,2],
[18,4,798,84,106,150,-485.046295,38.876587,-0.038903,1.0,1.0,58,34],
[19,4,390,100,162,78,-422.037079,11.058632,-0.034907,1.0,1.0,81,39],
[34,4,2,180,236,30,-456.128632,150.369370,-0.034907,1.0,1.0,118,15],
[35,4,512,180,40,54,-334.853333,144.598297,-0.104720,1.0,1.0,20,27],
[36,4,1002,84,8,10,-327.891693,145.330002,-0.104720,1.0,1.0,4,5],
[37,4,1014,100,6,2,-332.655243,142.818314,-0.104720,1.0,1.0,3,1],
[29,4,390,2,266,96,-433.820374,4.643494,-0.034907,1.0,1.0,133,48],
[31,4,906,146,76,96,-488.206268,14.751611,-0.029531,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.004987,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-435.617310,136.076508,-0.034907,1.0,1.0,135,10],
[30,4,658,2,266,80,-434.308960,18.634964,-0.034907,1.0,1.0,133,40],
[17,4,214,2,174,170,-451.019409,10.046547,-0.032917,1.0,1.0,62,27],
[15,4,554,100,70,140,-404.764740,107.942917,0.053861,1.0,1.0,20,13],
[13,4,2,2,210,176,-446.0,175.0,-0.104720,1.0,1.0,104,104],
[14,4,926,2,74,142,-470.409607,105.636940,-0.445303,1.0,1.0,40,13],
[16,4,658,84,138,126,-436.171326,100.619911,-0.034907,1.0,1.0,60,120],
[21,4,336,202,20,26,-374.113892,42.750431,-0.034907,1.0,1.0,10,13],
[25,4,278,202,34,28,-430.324097,47.791794,-0.034907,1.0,1.0,17,14],
[20,4,414,202,22,6,-416.253296,103.316681,-0.034907,1.0,1.0,11,3],
[22,4,1014,92,4,6,-369.256531,46.922493,-0.034907,1.0,1.0,2,3],
[26,4,1012,84,6,6,-422.433655,51.069160,-0.034907,1.0,1.0,3,3],
[23,4,650,100,4,4,-376.182465,44.679413,-0.034907,1.0,1.0,2,2],
[27,4,1002,96,10,4,-433.392059,49.685879,-0.034907,1.0,1.0,5,2],
[18,4,798,84,106,150,-485.046295,38.876587,-0.038903,1.0,1.0,58,34],
[19,4,390,100,162,78,-422.037079,11.058632,-0.034907,1.0,1.0,81,39],
[34,4,2,180,236,30,-456.128632,150.369370,-0.034907,1.0,1.0,118,15],
[35,4,512,180,40,54,-334.853333,144.598297,-0.104720,1.0,1.0,20,27],
[36,4,1002,84,8,10,-327.891693,145.330002,-0.104720,1.0,1.0,4,5],
[37,4,1014,100,6,2,-332.655243,142.818314,-0.104720,1.0,1.0,3,1],
[29,4,390,2,266,96,-433.820374,4.643494,-0.034907,1.0,1.0,133,48],
[31,4,906,146,76,96,-488.206268,14.751611,-0.029531,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.008727,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-435.617310,136.076508,-0.034907,1.0,1.0,135,10],
[30,4,658,2,266,80,-434.308960,18.634964,-0.034907,1.0,1.0,133,40],
[17,4,214,2,174,170,-451.019409,10.046547,-0.032917,1.0,1.0,62,27],
[15,4,554,100,70,140,-404.764740,107.942917,0.053861,1.0,1.0,20,13],
[13,4,2,2,210,176,-446.0,175.0,-0.104720,1.0,1.0,104,104],
[14,4,926,2,74,142,-470.363892,105.705254,-0.445303,1.0,1.0,40,13],
[16,4,658,84,138,126,-436.171326,100.619911,-0.034907,1.0,1.0,60,120],
[21,4,336,202,20,26,-374.113892,42.750431,-0.034907,1.0,1.0,10,13],
[25,4,278,202,34,28,-430.324097,47.791794,-0.034907,1.0,1.0,17,14],
[20,4,414,202,22,6,-416.253296,103.316681,-0.034907,1.0,1.0,11,3],
[22,4,1014,92,4,6,-369.256531,46.922493,-0.034907,1.0,1.0,2,3],
[26,4,1012,84,6,6,-422.433655,51.069160,-0.034907,1.0,1.0,3,3],
[23,4,650,100,4,4,-376.182465,44.679413,-0.034907,1.0,1.0,2,2],
[27,4,1002,96,10,4,-433.392059,49.685879,-0.034907,1.0,1.0,5,2],
[18,4,798,84,106,150,-485.046295,38.876587,-0.038903,1.0,1.0,58,34],
[19,4,390,100,162,78,-422.037079,11.058632,-0.034907,1.0,1.0,81,39],
[34,4,2,180,236,30,-456.128632,150.369370,-0.034907,1.0,1.0,118,15],
[35,4,512,180,40,54,-334.853333,144.598297,-0.104720,1.0,1.0,20,27],
[36,4,1002,84,8,10,-327.891693,145.330002,-0.104720,1.0,1.0,4,5],
[37,4,1014,100,6,2,-332.655243,142.818314,-0.104720,1.0,1.0,3,1],
[29,4,390,2,266,96,-433.820374,4.643494,-0.034907,1.0,1.0,133,48],
[31,4,906,146,76,96,-488.206268,14.751611,-0.029531,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.012467,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-435.617310,136.076508,-0.034907,1.0,1.0,135,10],
[30,4,658,2,266,80,-434.308960,18.634964,-0.034907,1.0,1.0,133,40],
[17,4,214,2,174,170,-451.019409,10.046547,-0.032917,1.0,1.0,62,27],
[15,4,554,100,70,140,-404.764740,107.942917,0.053861,1.0,1.0,20,13],
[13,4,2,2,210,176,-446.0,175.0,-0.104720,1.0,1.0,104,104],
[14,4,926,2,74,142,-470.318146,105.773575,-0.445303,1.0,1.0,40,13],
[16,4,658,84,138,126,-436.171326,100.619911,-0.034907,1.0,1.0,60,120],
[21,4,336,202,20,26,-374.113892,42.750431,-0.034907,1.0,1.0,10,13],
[25,4,278,202,34,28,-430.324097,47.791794,-0.034907,1.0,1.0,17,14],
[20,4,414,202,22,6,-416.253296,103.316681,-0.034907,1.0,1.0,11,3],
[22,4,1014,92,4,6,-369.256531,46.922493,-0.034907,1.0,1.0,2,3],
[26,4,1012,84,6,6,-422.433655,51.069160,-0.034907,1.0,1.0,3,3],
[23,4,650,100,4,4,-376.182465,44.679413,-0.034907,1.0,1.0,2,2],
[27,4,1002,96,10,4,-433.392059,49.685879,-0.034907,1.0,1.0,5,2],
[18,4,798,84,106,150,-485.046295,38.876587,-0.038903,1.0,1.0,58,34],
[19,4,390,100,162,78,-422.037079,11.058632,-0.034907,1.0,1.0,81,39],
[34,4,2,180,236,30,-456.128632,150.369370,-0.034907,1.0,1.0,118,15],
[35,4,512,180,40,54,-334.853333,144.598297,-0.104720,1.0,1.0,20,27],
[36,4,1002,84,8,10,-327.891693,145.330002,-0.104720,1.0,1.0,4,5],
[37,4,1014,100,6,2,-332.655243,142.818314,-0.104720,1.0,1.0,3,1],
[29,4,390,2,266,96,-433.820374,4.643494,-0.034907,1.0,1.0,133,48],
[31,4,906,146,76,96,-488.206268,14.751611,-0.029531,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.016207,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-435.617310,136.076508,-0.034907,1.0,1.0,135,10],
[30,4,658,2,266,80,-434.308960,18.634964,-0.034907,1.0,1.0,133,40],
[17,4,214,2,174,170,-451.019409,10.046547,-0.032917,1.0,1.0,62,27],
[15,4,554,100,70,140,-404.764740,107.942917,0.053861,1.0,1.0,20,13],
[13,4,2,2,210,176,-446.0,175.0,-0.104720,1.0,1.0,104,104],
[14,4,926,2,74,142,-470.272400,105.841888,-0.445303,1.0,1.0,40,13],
[16,4,658,84,138,126,-436.171326,100.619911,-0.034907,1.0,1.0,60,120],
[21,4,336,202,20,26,-374.113892,42.750431,-0.034907,1.0,1.0,10,13],
[25,4,278,202,34,28,-430.324097,47.791794,-0.034907,1.0,1.0,17,14],
[20,4,414,202,22,6,-416.253296,103.316681,-0.034907,1.0,1.0,11,3],
[22,4,1014,92,4,6,-369.256531,46.922493,-0.034907,1.0,1.0,2,3],
[26,4,1012,84,6,6,-422.433655,51.069160,-0.034907,1.0,1.0,3,3],
[23,4,650,100,4,4,-376.182465,44.679413,-0.034907,1.0,1.0,2,2],
[27,4,1002,96,10,4,-433.392059,49.685879,-0.034907,1.0,1.0,5,2],
[18,4,798,84,106,150,-485.046295,38.876587,-0.038903,1.0,1.0,58,34],
[19,4,390,100,162,78,-422.037079,11.058632,-0.034907,1.0,1.0,81,39],
[34,4,2,180,236,30,-456.128632,150.369370,-0.034907,1.0,1.0,118,15],
[35,4,512,180,40,54,-334.853333,144.598297,-0.104720,1.0,1.0,20,27],
[36,4,1002,84,8,10,-327.891693,145.330002,-0.104720,1.0,1.0,4,5],
[37,4,1014,100,6,2,-332.655243,142.818314,-0.104720,1.0,1.0,3,1],
[29,4,390,2,266,96,-433.820374,4.643494,-0.034907,1.0,1.0,133,48],
[31,4,906,146,76,96,-488.206268,14.751611,-0.029531,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.019947,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-435.617310,136.076508,-0.034907,1.0,1.0,135,10],
[30,4,658,2,266,80,-434.308960,18.634964,-0.034907,1.0,1.0,133,40],
[17,4,214,2,174,170,-451.019409,10.046547,-0.032917,1.0,1.0,62,27],
[15,4,554,100,70,140,-404.764740,107.942917,0.053861,1.0,1.0,20,13],
[13,4,2,2,210,176,-446.0,175.0,-0.104720,1.0,1.0,104,104],
[14,4,926,2,74,142,-470.226654,105.910194,-0.445303,1.0,1.0,40,13],
[16,4,658,84,138,126,-436.171326,100.619911,-0.034907,1.0,1.0,60,120],
[21,4,336,202,20,26,-374.113892,42.750431,-0.034907,1.0,1.0,10,13],
[25,4,278,202,34,28,-430.324097,47.791794,-0.034907,1.0,1.0,17,14],
[20,4,414,202,22,6,-416.253296,103.316681,-0.034907,1.0,1.0,11,3],
[22,4,1014,92,4,6,-369.256531,46.922493,-0.034907,1.0,1.0,2,3],
[26,4,1012,84,6,6,-422.433655,51.069160,-0.034907,1.0,1.0,3,3],
[23,4,650,100,4,4,-376.182465,44.679413,-0.034907,1.0,1.0,2,2],
[27,4,1002,96,10,4,-433.392059,49.685879,-0.034907,1.0,1.0,5,2],
[18,4,798,84,106,150,-485.046295,38.876587,-0.038903,1.0,1.0,58,34],
[19,4,390,100,162,78,-422.037079,11.058632,-0.034907,1.0,1.0,81,39],
[34,4,2,180,236,30,-456.128632,150.369370,-0.034907,1.0,1.0,118,15],
[35,4,512,180,40,54,-334.853333,144.598297,-0.104720,1.0,1.0,20,27],
[36,4,1002,84,8,10,-327.891693,145.330002,-0.104720,1.0,1.0,4,5],
[37,4,1014,100,6,2,-332.655243,142.818314,-0.104720,1.0,1.0,3,1],
[29,4,390,2,266,96,-433.820374,4.643494,-0.034907,1.0,1.0,133,48],
[31,4,906,146,76,96,-488.206268,14.751611,-0.029531,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.023687,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-435.617310,136.076508,-0.034907,1.0,1.0,135,10],
[30,4,658,2,266,80,-434.308960,18.634964,-0.034907,1.0,1.0,133,40],
[17,4,214,2,174,170,-451.019409,10.046547,-0.032917,1.0,1.0,62,27],
[15,4,554,100,70,140,-404.764740,107.942917,0.053861,1.0,1.0,20,13],
[13,4,2,2,210,176,-446.0,175.0,-0.104720,1.0,1.0,104,104],
[14,4,926,2,74,142,-470.180908,105.978508,-0.445303,1.0,1.0,40,13],
[16,4,658,84,138,126,-436.171326,100.619911,-0.034907,1.0,1.0,60,120],
[21,4,336,202,20,26,-374.113892,42.750431,-0.034907,1.0,1.0,10,13],
[25,4,278,202,34,28,-430.324097,47.791794,-0.034907,1.0,1.0,17,14],
[20,4,414,202,22,6,-416.253296,103.316681,-0.034907,1.0,1.0,11,3],
[22,4,1014,92,4,6,-369.256531,46.922493,-0.034907,1.0,1.0,2,3],
[26,4,1012,84,6,6,-422.433655,51.069160,-0.034907,1.0,1.0,3,3],
[23,4,650,100,4,4,-376.182465,44.679413,-0.034907,1.0,1.0,2,2],
[27,4,1002,96,10,4,-433.392059,49.685879,-0.034907,1.0,1.0,5,2],
[18,4,798,84,106,150,-485.046295,38.876587,-0.038903,1.0,1.0,58,34],
[19,4,390,100,162,78,-422.037079,11.058632,-0.034907,1.0,1.0,81,39],
[34,4,2,180,236,30,-456.128632,150.369370,-0.034907,1.0,1.0,118,15],
[35,4,512,180,40,54,-334.853333,144.598297,-0.104720,1.0,1.0,20,27],
[36,4,1002,84,8,10,-327.891693,145.330002,-0.104720,1.0,1.0,4,5],
[37,4,1014,100,6,2,-332.655243,142.818314,-0.104720,1.0,1.0,3,1],
[29,4,390,2,266,96,-433.820374,4.643494,-0.034907,1.0,1.0,133,48],
[31,4,906,146,76,96,-488.206268,14.751611,-0.029531,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.027427,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-435.617310,136.076508,-0.034907,1.0,1.0,135,10],
[30,4,658,2,266,80,-434.308960,18.634964,-0.034907,1.0,1.0,133,40],
[17,4,214,2,174,170,-451.019409,10.046547,-0.032917,1.0,1.0,62,27],
[15,4,554,100,70,140,-404.764740,107.942917,0.053861,1.0,1.0,20,13],
[13,4,2,2,210,176,-446.0,175.0,-0.104720,1.0,1.0,104,104],
[14,4,926,2,74,142,-470.135162,106.046822,-0.445303,1.0,1.0,40,13],
[16,4,658,84,138,126,-436.171326,100.619911,-0.034907,1.0,1.0,60,120],
[21,4,336,202,20,26,-374.113892,42.750431,-0.034907,1.0,1.0,10,13],
[25,4,278,202,34,28,-430.324097,47.791794,-0.034907,1.0,1.0,17,14],
[20,4,414,202,22,6,-416.253296,103.316681,-0.034907,1.0,1.0,11,3],
[22,4,1014,92,4,6,-369.256531,46.922493,-0.034907,1.0,1.0,2,3],
[26,4,1012,84,6,6,-422.433655,51.069160,-0.034907,1.0,1.0,3,3],
[23,4,650,100,4,4,-376.182465,44.679413,-0.034907,1.0,1.0,2,2],
[27,4,1002,96,10,4,-433.392059,49.685879,-0.034907,1.0,1.0,5,2],
[18,4,798,84,106,150,-485.046295,38.876587,-0.038903,1.0,1.0,58,34],
[19,4,390,100,162,78,-422.037079,11.058632,-0.034907,1.0,1.0,81,39],
[34,4,2,180,236,30,-456.128632,150.369370,-0.034907,1.0,1.0,118,15],
[35,4,512,180,40,54,-334.853333,144.598297,-0.104720,1.0,1.0,20,27],
[36,4,1002,84,8,10,-327.891693,145.330002,-0.104720,1.0,1.0,4,5],
[37,4,1014,100,6,2,-332.655243,142.818314,-0.104720,1.0,1.0,3,1],
[29,4,390,2,266,96,-433.820374,4.643494,-0.034907,1.0,1.0,133,48],
[31,4,906,146,76,96,-488.206268,14.751611,-0.029531,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.031167,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-435.617310,136.076508,-0.034907,1.0,1.0,135,10],
[30,4,658,2,266,80,-434.308960,18.634964,-0.034907,1.0,1.0,133,40],
[17,4,214,2,174,170,-451.019409,10.046547,-0.032917,1.0,1.0,62,27],
[15,4,554,100,70,140,-404.764740,107.942917,0.053861,1.0,1.0,20,13],
[13,4,2,2,210,176,-446.0,175.0,-0.104720,1.0,1.0,104,104],
[14,4,926,2,74,142,-470.089417,106.115135,-0.445303,1.0,1.0,40,13],
[16,4,658,84,138,126,-436.171326,100.619911,-0.034907,1.0,1.0,60,120],
[21,4,336,202,20,26,-374.113892,42.750431,-0.034907,1.0,1.0,10,13],
[25,4,278,202,34,28,-430.324097,47.791794,-0.034907,1.0,1.0,17,14],
[20,4,414,202,22,6,-416.253296,103.316681,-0.034907,1.0,1.0,11,3],
[22,4,1014,92,4,6,-369.256531,46.922493,-0.034907,1.0,1.0,2,3],
[26,4,1012,84,6,6,-422.433655,51.069160,-0.034907,1.0,1.0,3,3],
[23,4,650,100,4,4,-376.182465,44.679413,-0.034907,1.0,1.0,2,2],
[27,4,1002,96,10,4,-433.392059,49.685879,-0.034907,1.0,1.0,5,2],
[18,4,798,84,106,150,-485.046295,38.876587,-0.038903,1.0,1.0,58,34],
[19,4,390,100,162,78,-422.037079,11.058632,-0.034907,1.0,1.0,81,39],
[34,4,2,180,236,30,-456.128632,150.369370,-0.034907,1.0,1.0,118,15],
[35,4,512,180,40,54,-334.853333,144.598297,-0.104720,1.0,1.0,20,27],
[36,4,1002,84,8,10,-327.891693,145.330002,-0.104720,1.0,1.0,4,5],
[37,4,1014,100,6,2,-332.655243,142.818314,-0.104720,1.0,1.0,3,1],
[29,4,390,2,266,96,-433.820374,4.643494,-0.034907,1.0,1.0,133,48],
[31,4,906,146,76,96,-488.206268,14.751611,-0.029531,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.034907,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-435.617310,136.076508,-0.034907,1.0,1.0,135,10],
[30,4,658,2,266,80,-434.308960,18.634964,-0.034907,1.0,1.0,133,40],
[17,4,214,2,174,170,-451.019409,10.046547,-0.032917,1.0,1.0,62,27],
[15,4,554,100,70,140,-404.764740,107.942917,0.053861,1.0,1.0,20,13],
[13,4,2,2,210,176,-446.0,175.0,-0.104720,1.0,1.0,104,104],
[14,4,926,2,74,142,-470.043701,106.183449,-0.445303,1.0,1.0,40,13],
[16,4,658,84,138,126,-436.171326,100.619911,-0.034907,1.0,1.0,60,120],
[21,4,336,202,20,26,-374.113892,42.750431,-0.034907,1.0,1.0,10,13],
[25,4,278,202,34,28,-430.324097,47.791794,-0.034907,1.0,1.0,17,14],
[20,4,414,202,22,6,-416.253296,103.316681,-0.034907,1.0,1.0,11,3],
[22,4,1014,92,4,6,-369.256531,46.922493,-0.034907,1.0,1.0,2,3],
[26,4,1012,84,6,6,-422.433655,51.069160,-0.034907,1.0,1.0,3,3],
[23,4,650,100,4,4,-376.182465,44.679413,-0.034907,1.0,1.0,2,2],
[27,4,1002,96,10,4,-433.392059,49.685879,-0.034907,1.0,1.0,5,2],
[18,4,798,84,106,150,-485.046295,38.876587,-0.038903,1.0,1.0,58,34],
[19,4,390,100,162,78,-422.037079,11.058632,-0.034907,1.0,1.0,81,39],
[34,4,2,180,236,30,-456.128632,150.369370,-0.034907,1.0,1.0,118,15],
[35,4,512,180,40,54,-334.853333,144.598297,-0.104720,1.0,1.0,20,27],
[36,4,1002,84,8,10,-327.891693,145.330002,-0.104720,1.0,1.0,4,5],
[37,4,1014,100,6,2,-332.655243,142.818314,-0.104720,1.0,1.0,3,1],
[29,4,390,2,266,96,-433.820374,4.643494,-0.034907,1.0,1.0,133,48],
[31,4,906,146,76,96,-488.206268,14.751611,-0.029531,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.031416,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-435.617310,136.076508,-0.034907,1.0,1.0,135,10],
[30,4,658,2,266,80,-434.308960,18.634964,-0.034907,1.0,1.0,133,40],
[17,4,214,2,174,170,-451.019409,10.046547,-0.032917,1.0,1.0,62,27],
[15,4,554,100,70,140,-404.764740,107.942917,0.053861,1.0,1.0,20,13],
[13,4,2,2,210,176,-446.0,175.0,-0.104720,1.0,1.0,104,104],
[14,4,926,2,74,142,-469.997955,106.251762,-0.445303,1.0,1.0,40,13],
[16,4,658,84,138,126,-436.171326,100.619911,-0.034907,1.0,1.0,60,120],
[21,4,336,202,20,26,-374.113892,42.750431,-0.034907,1.0,1.0,10,13],
[25,4,278,202,34,28,-430.324097,47.791794,-0.034907,1.0,1.0,17,14],
[20,4,414,202,22,6,-416.253296,103.316681,-0.034907,1.0,1.0,11,3],
[22,4,1014,92,4,6,-369.256531,46.922493,-0.034907,1.0,1.0,2,3],
[26,4,1012,84,6,6,-422.433655,51.069160,-0.034907,1.0,1.0,3,3],
[23,4,650,100,4,4,-376.182465,44.679413,-0.034907,1.0,1.0,2,2],
[27,4,1002,96,10,4,-433.392059,49.685879,-0.034907,1.0,1.0,5,2],
[18,4,798,84,106,150,-485.046295,38.876587,-0.038903,1.0,1.0,58,34],
[19,4,390,100,162,78,-422.037079,11.058632,-0.034907,1.0,1.0,81,39],
[34,4,2,180,236,30,-456.128632,150.369370,-0.034907,1.0,1.0,118,15],
[35,4,512,180,40,54,-334.853333,144.598297,-0.104720,1.0,1.0,20,27],
[36,4,1002,84,8,10,-327.891693,145.330002,-0.104720,1.0,1.0,4,5],
[37,4,1014,100,6,2,-332.655243,142.818314,-0.104720,1.0,1.0,3,1],
[29,4,390,2,266,96,-433.820374,4.643494,-0.034907,1.0,1.0,133,48],
[31,4,906,146,76,96,-488.206268,14.751611,-0.029531,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.027925,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-435.617310,136.076508,-0.034907,1.0,1.0,135,10],
[30,4,658,2,266,80,-434.308960,18.634964,-0.034907,1.0,1.0,133,40],
[17,4,214,2,174,170,-451.019409,10.046547,-0.032917,1.0,1.0,62,27],
[15,4,554,100,70,140,-404.764740,107.942917,0.053861,1.0,1.0,20,13],
[13,4,2,2,210,176,-446.0,175.0,-0.104720,1.0,1.0,104,104],
[14,4,926,2,74,142,-469.952209,106.320076,-0.445303,1.0,1.0,40,13],
[16,4,658,84,138,126,-436.171326,100.619911,-0.034907,1.0,1.0,60,120],
[21,4,336,202,20,26,-374.113892,42.750431,-0.034907,1.0,1.0,10,13],
[25,4,278,202,34,28,-430.324097,47.791794,-0.034907,1.0,1.0,17,14],
[20,4,414,202,22,6,-416.253296,103.316681,-0.034907,1.0,1.0,11,3],
[22,4,1014,92,4,6,-369.256531,46.922493,-0.034907,1.0,1.0,2,3],
[26,4,1012,84,6,6,-422.433655,51.069160,-0.034907,1.0,1.0,3,3],
[23,4,650,100,4,4,-376.182465,44.679413,-0.034907,1.0,1.0,2,2],
[27,4,1002,96,10,4,-433.392059,49.685879,-0.034907,1.0,1.0,5,2],
[18,4,798,84,106,150,-485.046295,38.876587,-0.038903,1.0,1.0,58,34],
[19,4,390,100,162,78,-422.037079,11.058632,-0.034907,1.0,1.0,81,39],
[34,4,2,180,236,30,-456.128632,150.369370,-0.034907,1.0,1.0,118,15],
[35,4,512,180,40,54,-334.853333,144.598297,-0.104720,1.0,1.0,20,27],
[36,4,1002,84,8,10,-327.891693,145.330002,-0.104720,1.0,1.0,4,5],
[37,4,1014,100,6,2,-332.655243,142.818314,-0.104720,1.0,1.0,3,1],
[29,4,390,2,266,96,-433.820374,4.643494,-0.034907,1.0,1.0,133,48],
[31,4,906,146,76,96,-488.206268,14.751611,-0.029531,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.024435,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-420.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-417.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-425.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-470.0,255.0,0.0,1.0,1.0,8,9],
[10,4,626,100,22,68,-473.0,223.0,0.0,1.0,1.0,8,11],
[12,4,358,202,26,14,-464.0,298.0,0.0,1.0,1.0,4,5],
[33,4,240,180,270,20,-435.617310,136.076508,-0.034907,1.0,1.0,135,10],
[30,4,658,2,266,80,-434.308960,18.634964,-0.034907,1.0,1.0,133,40],
[17,4,214,2,174,170,-451.019409,10.046547,-0.032917,1.0,1.0,62,27],
[15,4,554,100,70,140,-404.764740,107.942917,0.053861,1.0,1.0,20,13],
[13,4,2,2,210,176,-446.0,175.0,-0.104720,1.0,1.0,104,104],
[14,4,926,2,74,142,-469.906464,106.388390,-0.445303,1.0,1.0,40,13],
[16,4,658,84,138,126,-436.171326,100.619911,-0.034907,1.0,1.0,60,120],
[21,4,336,202,20,26,-374.113892,42.750431,-0.034907,1.0,1.0,10,13],
[25,4,278,202,34,28,-430.324097,47.791794,-0.034907,1.0,1.0,17,14],
[20,4,414,202,22,6,-416.253296,103.316681,-0.034907,1.0,1.0,11,3],
[22,4,1014,92,4,6,-369.256531,46.922493,-0.034907,1.0,1.0,2,3],
[26,4,1012,84,6,6,-422.433655,51.069160,-0.034907,1.0,1.0,3,3],
[23,4,650,100,4,4,-376.182465,44.679413,-0.034907,1.0,1.0,2,2],
[27,4,1002,96,10,4,-433.392059,49.685879,-0.034907,1.0,1.0,5,2],
[24,4,314,202,20,26,-372.184906,44.819012,-0.034907,1.0,1.0,10,13],
[28,4,240,202,36,28,-427.395721,49.895275,-0.034907,1.0,1.0,18,14],
[18,4,798,84,106,150,-485.046295,38.876587,-0.038903,1.0,1.0,58,34],
[19,4,390,100,162,78,-422.037079,11.058632,-0.034907,1.0,1.0,81,39],
[34,4,2,180,236,30,-456.128632,150.369370,-0.034907,1.0,1.0,118,15],
[35,4,512,180,40,54,-334.853333,144.598297,-0.104720,1.0,1.0,20,27],
[36,4,1002,84,8,10,-327.891693,145.330002,-0.104720,1.0,1.0,4,5],
[37,4,1014,100,6,2,-332.655243,142.818314,-0.104720,1.0,1.0,3,1],
[29,4,390,2,266,96,-433.820374,4.643494,-0.034907,1.0,1.0,133,48],
[31,4,906,146,76,96,-488.206268,14.751611,-0.029531,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.020944,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-418.557739,253.764481,-0.025340,1.0,1.0,11,7],
[7,4,984,146,24,62,-414.757141,222.214279,-0.025340,1.0,1.0,14,8],
[9,4,386,202,26,14,-424.645630,296.623993,-0.025340,1.0,1.0,4,5],
[11,4,1002,2,18,60,-461.436707,253.921448,-0.037746,1.0,1.0,8,9],
[10,4,626,100,22,68,-466.399994,222.166672,0.061569,1.0,1.0,8,11],
[12,4,358,202,26,14,-457.063660,297.117249,-0.037746,1.0,1.0,4,5],
[33,4,240,180,270,20,-432.826813,136.589127,-0.040143,1.0,1.0,135,10],
[30,4,658,2,266,80,-430.973511,18.477221,-0.039561,1.0,1.0,133,40],
[17,4,214,2,174,170,-447.643799,9.811127,-0.037571,1.0,1.0,62,27],
[15,4,554,100,70,140,-401.853088,107.992706,0.056720,1.0,1.0,20,13],
[13,4,2,2,210,176,-443.399994,174.857147,-0.109374,1.0,1.0,104,104],
[14,4,926,2,74,142,-466.941437,106.203545,-0.456058,1.0,1.0,40,13],
[16,4,658,84,138,126,-433.217438,100.452614,-0.039561,1.0,1.0,60,120],
[21,4,336,202,20,26,-370.891357,42.872589,-0.039561,1.0,1.0,10,13],
[25,4,278,202,34,28,-427.124390,47.652283,-0.039561,1.0,1.0,17,14],
[20,4,414,202,22,6,-413.312195,103.242058,-0.039561,1.0,1.0,11,3],
[22,4,1014,92,4,6,-366.053467,47.067211,-0.039561,1.0,1.0,2,3],
[26,4,1012,84,6,6,-419.249298,50.966339,-0.039561,1.0,1.0,3,3],
[23,4,650,100,4,4,-372.968903,44.791924,-0.039561,1.0,1.0,2,2],
[27,4,1002,96,10,4,-430.201141,49.532066,-0.039561,1.0,1.0,5,2],
[24,4,314,202,20,26,-368.972015,44.950127,-0.039561,1.0,1.0,10,13],
[28,4,240,202,36,28,-424.205841,49.769371,-0.039561,1.0,1.0,18,14],
[18,4,798,84,106,150,-481.804504,38.482483,-0.043558,1.0,1.0,58,34],
[19,4,390,100,162,78,-418.666504,10.958084,-0.039561,1.0,1.0,81,39],
[34,4,2,180,236,30,-453.412689,150.774399,-0.040143,1.0,1.0,118,15],
[35,4,512,180,40,54,-332.108856,145.638412,-0.109956,1.0,1.0,20,27],
[36,4,1002,84,8,10,-325.151123,146.406555,-0.109956,1.0,1.0,4,5],
[37,4,1014,100,6,2,-329.901459,143.869965,-0.109956,1.0,1.0,3,1],
[29,4,390,2,266,96,-430.419800,4.488174,-0.039561,1.0,1.0,133,48],
[31,4,906,146,76,96,-484.852142,14.343060,-0.034185,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.017453,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-417.094635,253.509171,-0.050679,1.0,1.0,11,7],
[7,4,984,146,24,62,-412.514282,222.428574,-0.050679,1.0,1.0,14,8],
[9,4,386,202,26,14,-424.266510,296.200684,-0.050679,1.0,1.0,4,5],
[11,4,1002,2,18,60,-452.892212,252.722534,-0.075491,1.0,1.0,8,9],
[10,4,626,100,22,68,-459.799988,221.333328,0.123139,1.0,1.0,8,11],
[12,4,358,202,26,14,-450.152344,296.052582,-0.075491,1.0,1.0,4,5],
[33,4,240,180,270,20,-430.036377,137.102051,-0.045379,1.0,1.0,135,10],
[30,4,658,2,266,80,-427.637695,18.322910,-0.044215,1.0,1.0,133,40],
[17,4,214,2,174,170,-444.267487,9.579323,-0.042225,1.0,1.0,62,27],
[15,4,554,100,70,140,-398.942322,108.043930,0.059579,1.0,1.0,20,13],
[13,4,2,2,210,176,-440.799988,174.714279,-0.114028,1.0,1.0,104,104],
[14,4,926,2,74,142,-463.976563,106.020584,-0.466813,1.0,1.0,40,13],
[16,4,658,84,138,126,-430.263123,100.286972,-0.044215,1.0,1.0,60,120],
[21,4,336,202,20,26,-367.669739,42.997646,-0.044215,1.0,1.0,10,13],
[25,4,278,202,34,28,-423.924408,47.515572,-0.044215,1.0,1.0,17,14],
[20,4,414,202,22,6,-410.371063,103.169029,-0.044215,1.0,1.0,11,3],
[22,4,1014,92,4,6,-362.851440,47.214741,-0.044215,1.0,1.0,2,3],
[26,4,1012,84,6,6,-416.064819,50.866245,-0.044215,1.0,1.0,3,3],
[23,4,650,100,4,4,-369.756195,44.907291,-0.044215,1.0,1.0,2,2],
[27,4,1002,96,10,4,-427.009888,49.381016,-0.044215,1.0,1.0,5,2],
[24,4,314,202,20,26,-365.760101,45.084091,-0.044215,1.0,1.0,10,13],
[28,4,240,202,36,28,-421.015747,49.646217,-0.044215,1.0,1.0,18,14],
[18,4,798,84,106,150,-478.561249,38.091381,-0.048212,1.0,1.0,58,34],
[19,4,390,100,162,78,-415.295807,10.861137,-0.044215,1.0,1.0,81,39],
[34,4,2,180,236,30,-450.696259,151.179352,-0.045379,1.0,1.0,118,15],
[35,4,512,180,40,54,-329.367188,146.678558,-0.115192,1.0,1.0,20,27],
[36,4,1002,84,8,10,-322.413574,147.483124,-0.115192,1.0,1.0,4,5],
[37,4,1014,100,6,2,-327.150574,144.921692,-0.115192,1.0,1.0,3,1],
[29,4,390,2,266,96,-427.018890,4.336594,-0.044215,1.0,1.0,133,48],
[31,4,906,146,76,96,-481.496521,13.938033,-0.038839,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.013963,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-415.610199,253.234833,-0.076019,1.0,1.0,11,7],
[7,4,984,146,24,62,-410.271454,222.642853,-0.076019,1.0,1.0,14,8],
[9,4,386,202,26,14,-423.861420,295.730927,-0.076019,1.0,1.0,4,5],
[11,4,1002,2,18,60,-444.373932,251.404694,-0.113237,1.0,1.0,8,9],
[10,4,626,100,22,68,-453.200012,220.500000,0.184708,1.0,1.0,8,11],
[12,4,358,202,26,14,-443.271149,294.807281,-0.113237,1.0,1.0,4,5],
[33,4,240,180,270,20,-427.246063,137.615265,-0.050615,1.0,1.0,135,10],
[30,4,658,2,266,80,-424.301544,18.172083,-0.048869,1.0,1.0,133,40],
[17,4,214,2,174,170,-440.890442,9.351189,-0.046880,1.0,1.0,62,27],
[15,4,554,100,70,140,-396.032501,108.096611,0.062437,1.0,1.0,20,13],
[13,4,2,2,210,176,-438.200012,174.571426,-0.118682,1.0,1.0,104,104],
[14,4,926,2,74,142,-461.011841,105.839554,-0.477567,1.0,1.0,40,13],
[16,4,658,84,138,126,-427.308411,100.123039,-0.048869,1.0,1.0,60,120],
[21,4,336,202,20,26,-364.449066,43.125656,-0.048869,1.0,1.0,10,13],
[25,4,278,202,34,28,-420.724152,47.381714,-0.048869,1.0,1.0,17,14],
[20,4,414,202,22,6,-407.429993,103.097649,-0.048869,1.0,1.0,11,3],
[22,4,1014,92,4,6,-359.650421,47.365128,-0.048869,1.0,1.0,2,3],
[26,4,1012,84,6,6,-412.880249,50.768929,-0.048869,1.0,1.0,3,3],
[23,4,650,100,4,4,-366.544373,45.025570,-0.048869,1.0,1.0,2,2],
[27,4,1002,96,10,4,-423.818268,49.232777,-0.048869,1.0,1.0,5,2],
[24,4,314,202,20,26,-362.549164,45.220966,-0.048869,1.0,1.0,10,13],
[28,4,240,202,36,28,-417.825439,49.525875,-0.048869,1.0,1.0,18,14],
[18,4,798,84,106,150,-475.316528,37.703331,-0.052866,1.0,1.0,58,34],
[19,4,390,100,162,78,-411.925049,10.767838,-0.048869,1.0,1.0,81,39],
[34,4,2,180,236,30,-447.979340,151.584198,-0.050615,1.0,1.0,118,15],
[35,4,512,180,40,54,-326.628357,147.718750,-0.120428,1.0,1.0,20,27],
[36,4,1002,84,8,10,-319.679047,148.559708,-0.120428,1.0,1.0,4,5],
[37,4,1014,100,6,2,-324.402557,145.973511,-0.120428,1.0,1.0,3,1],
[29,4,390,2,266,96,-423.617645,4.188797,-0.048869,1.0,1.0,133,48],
[31,4,906,146,76,96,-478.139374,13.536583,-0.043494,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.010472,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-414.103912,252.942276,-0.101359,1.0,1.0,11,7],
[7,4,984,146,24,62,-408.028564,222.857147,-0.101359,1.0,1.0,14,8],
[9,4,386,202,26,14,-423.429230,295.215668,-0.101359,1.0,1.0,4,5],
[11,4,1002,2,18,60,-435.889069,249.969742,-0.150983,1.0,1.0,8,9],
[10,4,626,100,22,68,-446.600006,219.666672,0.246278,1.0,1.0,8,11],
[12,4,358,202,26,14,-436.424927,293.383026,-0.150983,1.0,1.0,4,5],
[33,4,240,180,270,20,-424.455750,138.128799,-0.055851,1.0,1.0,135,10],
[30,4,658,2,266,80,-420.964966,18.024729,-0.053523,1.0,1.0,133,40],
[17,4,214,2,174,170,-437.512665,9.126724,-0.051534,1.0,1.0,62,27],
[15,4,554,100,70,140,-393.123566,108.150734,0.065296,1.0,1.0,20,13],
[13,4,2,2,210,176,-435.600006,174.428574,-0.123337,1.0,1.0,104,104],
[14,4,926,2,74,142,-458.047211,105.660431,-0.488322,1.0,1.0,40,13],
[16,4,658,84,138,126,-424.353241,99.960800,-0.053523,1.0,1.0,60,120],
[21,4,336,202,20,26,-361.229279,43.256596,-0.053523,1.0,1.0,10,13],
[25,4,278,202,34,28,-417.523590,47.250690,-0.053523,1.0,1.0,17,14],
[20,4,414,202,22,6,-404.488892,103.027893,-0.053523,1.0,1.0,11,3],
[22,4,1014,92,4,6,-356.450439,47.518356,-0.053523,1.0,1.0,2,3],
[26,4,1012,84,6,6,-409.695526,50.674377,-0.053523,1.0,1.0,3,3],
[23,4,650,100,4,4,-363.333405,45.146736,-0.053523,1.0,1.0,2,2],
[27,4,1002,96,10,4,-420.626282,49.087334,-0.053523,1.0,1.0,5,2],
[18,4,798,84,106,150,-472.070343,37.318329,-0.057520,1.0,1.0,58,34],
[19,4,390,100,162,78,-408.554199,10.678162,-0.053523,1.0,1.0,81,39],
[34,4,2,180,236,30,-445.261902,151.988983,-0.055851,1.0,1.0,118,15],
[35,4,512,180,40,54,-323.892365,148.758972,-0.125664,1.0,1.0,20,27],
[36,4,1002,84,8,10,-316.947571,149.636307,-0.125664,1.0,1.0,4,5],
[37,4,1014,100,6,2,-321.657471,147.025406,-0.125664,1.0,1.0,3,1],
[29,4,390,2,266,96,-420.216003,4.044777,-0.053523,1.0,1.0,133,48],
[31,4,906,146,76,96,-474.780640,13.138707,-0.048148,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.006981,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-412.575439,252.632248,-0.126698,1.0,1.0,11,7],
[7,4,984,146,24,62,-405.785706,223.071426,-0.126698,1.0,1.0,14,8],
[9,4,386,202,26,14,-422.968842,294.655792,-0.126698,1.0,1.0,4,5],
[11,4,1002,2,18,60,-427.444794,248.419922,-0.188728,1.0,1.0,8,9],
[10,4,626,100,22,68,-440.0,218.833328,0.307847,1.0,1.0,8,11],
[12,4,358,202,26,14,-429.618561,291.782043,-0.188728,1.0,1.0,4,5],
[33,4,240,180,270,20,-421.665527,138.642609,-0.061087,1.0,1.0,135,10],
[30,4,658,2,266,80,-417.628082,17.880848,-0.058178,1.0,1.0,133,40],
[17,4,214,2,174,170,-434.134155,8.905922,-0.056188,1.0,1.0,62,27],
[15,4,554,100,70,140,-390.215546,108.206291,0.068155,1.0,1.0,20,13],
[13,4,2,2,210,176,-433.0,174.285721,-0.127991,1.0,1.0,104,104],
[14,4,926,2,74,142,-455.082764,105.483208,-0.499077,1.0,1.0,40,13],
[16,4,658,84,138,126,-421.397644,99.800262,-0.058178,1.0,1.0,60,120],
[21,4,336,202,20,26,-358.010468,43.390461,-0.058178,1.0,1.0,10,13],
[25,4,278,202,34,28,-414.322723,47.122509,-0.058178,1.0,1.0,17,14],
[20,4,414,202,22,6,-401.547760,102.959778,-0.058178,1.0,1.0,11,3],
[22,4,1014,92,4,6,-353.251495,47.674419,-0.058178,1.0,1.0,2,3],
[26,4,1012,84,6,6,-406.510681,50.582592,-0.058178,1.0,1.0,3,3],
[23,4,650,100,4,4,-360.123383,45.270786,-0.058178,1.0,1.0,2,2],
[27,4,1002,96,10,4,-417.433929,48.944691,-0.058178,1.0,1.0,5,2],
[18,4,798,84,106,150,-468.822662,36.936386,-0.062174,1.0,1.0,58,34],
[19,4,390,100,162,78,-405.183228,10.592125,-0.058178,1.0,1.0,81,39],
[34,4,2,180,236,30,-442.543976,152.393661,-0.061087,1.0,1.0,118,15],
[35,4,512,180,40,54,-321.159180,149.799194,-0.130900,1.0,1.0,20,27],
[36,4,1002,84,8,10,-314.219055,150.712875,-0.130900,1.0,1.0,4,5],
[37,4,1014,100,6,2,-318.915253,148.077362,-0.130900,1.0,1.0,3,1],
[29,4,390,2,266,96,-416.814056,3.904533,-0.058178,1.0,1.0,133,48],
[31,4,906,146,76,96,-471.420441,12.744411,-0.052802,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.003491,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-411.024292,252.305573,-0.152038,1.0,1.0,11,7],
[7,4,984,146,24,62,-403.542847,223.285721,-0.152038,1.0,1.0,14,8],
[9,4,386,202,26,14,-422.479095,294.052277,-0.152038,1.0,1.0,4,5],
[11,4,1002,2,18,60,-419.048096,246.758011,-0.226474,1.0,1.0,8,9],
[10,4,626,100,22,68,-433.399994,218.0,0.369416,1.0,1.0,8,11],
[12,4,358,202,26,14,-422.856659,290.007233,-0.226474,1.0,1.0,4,5],
[33,4,240,180,270,20,-418.875397,139.156738,-0.066323,1.0,1.0,135,10],
[30,4,658,2,266,80,-414.290833,17.740402,-0.062832,1.0,1.0,133,40],
[17,4,214,2,174,170,-430.754974,8.688751,-0.060842,1.0,1.0,62,27],
[15,4,554,100,70,140,-387.308472,108.263268,0.071014,1.0,1.0,20,13],
[13,4,2,2,210,176,-430.399994,174.142853,-0.132645,1.0,1.0,104,104],
[14,4,926,2,74,142,-452.118500,105.307869,-0.509832,1.0,1.0,40,13],
[16,4,658,84,138,126,-418.441650,99.641388,-0.062832,1.0,1.0,60,120],
[21,4,336,202,20,26,-354.792603,43.527214,-0.062832,1.0,1.0,10,13],
[25,4,278,202,34,28,-411.121643,46.997135,-0.062832,1.0,1.0,17,14],
[20,4,414,202,22,6,-398.606689,102.893250,-0.062832,1.0,1.0,11,3],
[22,4,1014,92,4,6,-350.053619,47.833275,-0.062832,1.0,1.0,2,3],
[26,4,1012,84,6,6,-403.325806,50.493538,-0.062832,1.0,1.0,3,3],
[23,4,650,100,4,4,-356.914246,45.397686,-0.062832,1.0,1.0,2,2],
[27,4,1002,96,10,4,-414.241302,48.804817,-0.062832,1.0,1.0,5,2],
[18,4,798,84,106,150,-465.573578,36.557468,-0.066829,1.0,1.0,58,34],
[19,4,390,100,162,78,-401.812195,10.509682,-0.062832,1.0,1.0,81,39],
[34,4,2,180,236,30,-439.825531,152.798279,-0.066323,1.0,1.0,118,15],
[35,4,512,180,40,54,-318.428802,150.839401,-0.136136,1.0,1.0,20,27],
[36,4,1002,84,8,10,-311.493561,151.789413,-0.136136,1.0,1.0,4,5],
[37,4,1014,100,6,2,-316.175873,149.129333,-0.136136,1.0,1.0,3,1],
[29,4,390,2,266,96,-413.411774,3.768028,-0.062832,1.0,1.0,133,48],
[31,4,906,146,76,96,-468.058716,12.353661,-0.057456,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.000000,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-409.450134,251.963043,-0.177378,1.0,1.0,11,7],
[7,4,984,146,24,62,-401.299988,223.500000,-0.177378,1.0,1.0,14,8],
[9,4,386,202,26,14,-421.958984,293.406128,-0.177378,1.0,1.0,4,5],
[11,4,1002,2,18,60,-419.101135,247.491425,-0.199399,1.0,1.0,8,9],
[10,4,626,100,22,68,-432.799988,218.416672,0.346833,1.0,1.0,8,11],
[12,4,358,202,26,14,-421.737488,290.827881,-0.199399,1.0,1.0,4,5],
[33,4,240,180,270,20,-416.085327,139.671143,-0.071558,1.0,1.0,135,10],
[30,4,658,2,266,80,-410.953339,17.603470,-0.067486,1.0,1.0,133,40],
[17,4,214,2,174,170,-427.375153,8.475288,-0.065496,1.0,1.0,62,27],
[15,4,554,100,70,140,-384.402313,108.321686,0.073873,1.0,1.0,20,13],
[13,4,2,2,210,176,-427.799988,174.0,-0.137299,1.0,1.0,104,104],
[14,4,926,2,74,142,-449.154388,105.134445,-0.520586,1.0,1.0,40,13],
[16,4,658,84,138,126,-415.485260,99.484245,-0.067486,1.0,1.0,60,120],
[21,4,336,202,20,26,-351.575745,43.666916,-0.067486,1.0,1.0,10,13],
[25,4,278,202,34,28,-407.920319,46.874630,-0.067486,1.0,1.0,17,14],
[20,4,414,202,22,6,-395.665649,102.828392,-0.067486,1.0,1.0,11,3],
[22,4,1014,92,4,6,-346.856873,47.994984,-0.067486,1.0,1.0,2,3],
[26,4,1012,84,6,6,-400.140839,50.407280,-0.067486,1.0,1.0,3,3],
[23,4,650,100,4,4,-353.706055,45.527493,-0.067486,1.0,1.0,2,2],
[27,4,1002,96,10,4,-411.048370,48.667774,-0.067486,1.0,1.0,5,2],
[18,4,798,84,106,150,-462.323090,36.181648,-0.071483,1.0,1.0,58,34],
[19,4,390,100,162,78,-398.441162,10.430901,-0.067486,1.0,1.0,81,39],
[34,4,2,180,236,30,-437.106598,153.202805,-0.071558,1.0,1.0,118,15],
[35,4,512,180,40,54,-315.701294,151.879593,-0.141372,1.0,1.0,20,27],
[36,4,1002,84,8,10,-308.771118,152.865906,-0.141372,1.0,1.0,4,5],
[37,4,1014,100,6,2,-313.439453,150.181351,-0.141372,1.0,1.0,3,1],
[29,4,390,2,266,96,-410.009247,3.635338,-0.067486,1.0,1.0,133,48],
[31,4,906,146,76,96,-464.695557,11.966539,-0.062110,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.003491,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-407.852661,251.605499,-0.202718,1.0,1.0,11,7],
[7,4,984,146,24,62,-399.057159,223.714279,-0.202718,1.0,1.0,14,8],
[9,4,386,202,26,14,-421.407562,292.718323,-0.202718,1.0,1.0,4,5],
[11,4,1002,2,18,60,-419.161194,248.210007,-0.172325,1.0,1.0,8,9],
[10,4,626,100,22,68,-432.200012,218.833328,0.324250,1.0,1.0,8,11],
[12,4,358,202,26,14,-420.623413,291.601959,-0.172325,1.0,1.0,4,5],
[33,4,240,180,270,20,-413.295319,140.185852,-0.076794,1.0,1.0,135,10],
[30,4,658,2,266,80,-407.615540,17.470016,-0.072140,1.0,1.0,133,40],
[17,4,214,2,174,170,-423.994690,8.265503,-0.070151,1.0,1.0,62,27],
[15,4,554,100,70,140,-381.497131,108.381523,0.076732,1.0,1.0,20,13],
[13,4,2,2,210,176,-425.200012,173.857147,-0.141953,1.0,1.0,104,104],
[14,4,926,2,74,142,-446.190491,104.962921,-0.531341,1.0,1.0,40,13],
[16,4,658,84,138,126,-412.528503,99.328812,-0.072140,1.0,1.0,60,120],
[21,4,336,202,20,26,-348.359894,43.809536,-0.072140,1.0,1.0,10,13],
[25,4,278,202,34,28,-404.718781,46.754974,-0.072140,1.0,1.0,17,14],
[20,4,414,202,22,6,-392.724670,102.765167,-0.072140,1.0,1.0,11,3],
[22,4,1014,92,4,6,-343.661224,48.159519,-0.072140,1.0,1.0,2,3],
[26,4,1012,84,6,6,-396.955811,50.323792,-0.072140,1.0,1.0,3,3],
[23,4,650,100,4,4,-350.498840,45.660179,-0.072140,1.0,1.0,2,2],
[27,4,1002,96,10,4,-407.855133,48.533539,-0.072140,1.0,1.0,5,2],
[18,4,798,84,106,150,-459.071198,35.808907,-0.076137,1.0,1.0,58,34],
[19,4,390,100,162,78,-395.070129,10.355759,-0.072140,1.0,1.0,81,39],
[34,4,2,180,236,30,-434.387146,153.607269,-0.076794,1.0,1.0,118,15],
[35,4,512,180,40,54,-312.976593,152.919739,-0.146608,1.0,1.0,20,27],
[36,4,1002,84,8,10,-306.051697,153.942322,-0.146608,1.0,1.0,4,5],
[37,4,1014,100,6,2,-310.705872,151.233353,-0.146608,1.0,1.0,3,1],
[29,4,390,2,266,96,-406.606445,3.506432,-0.072140,1.0,1.0,133,48],
[31,4,906,146,76,96,-461.330933,11.583022,-0.066765,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.006981,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-406.231445,251.233765,-0.228057,1.0,1.0,11,7],
[7,4,984,146,24,62,-396.814301,223.928574,-0.228057,1.0,1.0,14,8],
[9,4,386,202,26,14,-420.823669,291.989960,-0.228057,1.0,1.0,4,5],
[11,4,1002,2,18,60,-419.227875,248.913620,-0.145251,1.0,1.0,8,9],
[10,4,626,100,22,68,-431.600006,219.250000,0.301667,1.0,1.0,8,11],
[12,4,358,202,26,14,-419.514893,292.329254,-0.145251,1.0,1.0,4,5],
[33,4,240,180,270,20,-410.505402,140.700867,-0.082030,1.0,1.0,135,10],
[30,4,658,2,266,80,-404.277405,17.340010,-0.076794,1.0,1.0,133,40],
[17,4,214,2,174,170,-420.613556,8.059364,-0.074805,1.0,1.0,62,27],
[15,4,554,100,70,140,-378.592834,108.442764,0.079591,1.0,1.0,20,13],
[13,4,2,2,210,176,-422.600006,173.714279,-0.146608,1.0,1.0,104,104],
[14,4,926,2,74,142,-443.226776,104.793274,-0.542096,1.0,1.0,40,13],
[16,4,658,84,138,126,-409.571320,99.175056,-0.076794,1.0,1.0,60,120],
[21,4,336,202,20,26,-345.145020,43.955032,-0.076794,1.0,1.0,10,13],
[25,4,278,202,34,28,-401.516998,46.638138,-0.076794,1.0,1.0,17,14],
[20,4,414,202,22,6,-389.783691,102.703545,-0.076794,1.0,1.0,11,3],
[22,4,1014,92,4,6,-340.466644,48.326839,-0.076794,1.0,1.0,2,3],
[26,4,1012,84,6,6,-393.770721,50.243050,-0.076794,1.0,1.0,3,3],
[23,4,650,100,4,4,-347.292572,45.795700,-0.076794,1.0,1.0,2,2],
[27,4,1002,96,10,4,-404.661591,48.402084,-0.076794,1.0,1.0,5,2],
[18,4,798,84,106,150,-455.817871,35.439220,-0.080791,1.0,1.0,58,34],
[19,4,390,100,162,78,-391.699036,10.284218,-0.076794,1.0,1.0,81,39],
[34,4,2,180,236,30,-431.667236,154.011658,-0.082030,1.0,1.0,118,15],
[35,4,512,180,40,54,-310.254700,153.959839,-0.151844,1.0,1.0,20,27],
[36,4,1002,84,8,10,-303.335236,155.018661,-0.151844,1.0,1.0,4,5],
[37,4,1014,100,6,2,-307.975189,152.285370,-0.151844,1.0,1.0,3,1],
[29,4,390,2,266,96,-403.203339,3.381271,-0.076794,1.0,1.0,133,48],
[31,4,906,146,76,96,-457.964813,11.203076,-0.071419,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.010472,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-404.586243,250.848663,-0.253397,1.0,1.0,11,7],
[7,4,984,146,24,62,-394.571442,224.142853,-0.253397,1.0,1.0,14,8],
[9,4,386,202,26,14,-420.206421,291.222046,-0.253397,1.0,1.0,4,5],
[11,4,1002,2,18,60,-419.300873,249.602112,-0.118176,1.0,1.0,8,9],
[10,4,626,100,22,68,-431.0,219.666672,0.279084,1.0,1.0,8,11],
[12,4,358,202,26,14,-418.412476,293.009613,-0.118176,1.0,1.0,4,5],
[33,4,240,180,270,20,-407.715546,141.216171,-0.087266,1.0,1.0,135,10],
[30,4,658,2,266,80,-400.939026,17.213522,-0.081449,1.0,1.0,133,40],
[17,4,214,2,174,170,-417.231812,7.856941,-0.079459,1.0,1.0,62,27],
[15,4,554,100,70,140,-375.689545,108.505440,0.082449,1.0,1.0,20,13],
[13,4,2,2,210,176,-420.0,173.571426,-0.151262,1.0,1.0,104,104],
[14,4,926,2,74,142,-440.263275,104.625534,-0.552850,1.0,1.0,40,13],
[16,4,658,84,138,126,-406.613770,99.023041,-0.081449,1.0,1.0,60,120],
[21,4,336,202,20,26,-341.931152,44.103466,-0.081449,1.0,1.0,10,13],
[25,4,278,202,34,28,-398.315033,46.524178,-0.081449,1.0,1.0,17,14],
[20,4,414,202,22,6,-386.842773,102.643585,-0.081449,1.0,1.0,11,3],
[22,4,1014,92,4,6,-337.273163,48.496998,-0.081449,1.0,1.0,2,3],
[26,4,1012,84,6,6,-390.585632,50.165100,-0.081449,1.0,1.0,3,3],
[23,4,650,100,4,4,-344.087250,45.934120,-0.081449,1.0,1.0,2,2],
[27,4,1002,96,10,4,-401.467804,48.273472,-0.081449,1.0,1.0,5,2],
[18,4,798,84,106,150,-452.563171,35.072655,-0.085446,1.0,1.0,58,34],
[19,4,390,100,162,78,-388.327942,10.216347,-0.081449,1.0,1.0,81,39],
[34,4,2,180,236,30,-428.946777,154.415970,-0.087266,1.0,1.0,118,15],
[35,4,512,180,40,54,-307.535675,154.999878,-0.157080,1.0,1.0,20,27],
[36,4,1002,84,8,10,-300.621857,156.094925,-0.157080,1.0,1.0,4,5],
[37,4,1014,100,6,2,-305.247437,153.337372,-0.157080,1.0,1.0,3,1],
[29,4,390,2,266,96,-399.800018,3.259933,-0.081449,1.0,1.0,133,48],
[31,4,906,146,76,96,-454.597290,10.826784,-0.076073,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.013963,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-402.916718,250.451035,-0.278737,1.0,1.0,11,7],
[7,4,984,146,24,62,-392.328552,224.357147,-0.278737,1.0,1.0,14,8],
[9,4,386,202,26,14,-419.554810,290.415680,-0.278737,1.0,1.0,4,5],
[11,4,1002,2,18,60,-419.379822,250.275314,-0.091102,1.0,1.0,8,9],
[10,4,626,100,22,68,-430.399994,220.083328,0.256501,1.0,1.0,8,11],
[12,4,358,202,26,14,-417.316650,293.642853,-0.091102,1.0,1.0,4,5],
[33,4,240,180,270,20,-404.925781,141.731766,-0.092502,1.0,1.0,135,10],
[30,4,658,2,266,80,-397.600433,17.090508,-0.086103,1.0,1.0,133,40],
[17,4,214,2,174,170,-413.849487,7.658211,-0.084113,1.0,1.0,62,27],
[15,4,554,100,70,140,-372.787170,108.569519,0.085308,1.0,1.0,20,13],
[13,4,2,2,210,176,-417.399994,173.428574,-0.155916,1.0,1.0,104,104],
[14,4,926,2,74,142,-437.299957,104.459686,-0.563605,1.0,1.0,40,13],
[16,4,658,84,138,126,-403.655853,98.872734,-0.086103,1.0,1.0,60,120],
[21,4,336,202,20,26,-338.718323,44.254803,-0.086103,1.0,1.0,10,13],
[25,4,278,202,34,28,-395.112854,46.413063,-0.086103,1.0,1.0,17,14],
[20,4,414,202,22,6,-383.901947,102.585258,-0.086103,1.0,1.0,11,3],
[22,4,1014,92,4,6,-334.080841,48.669968,-0.086103,1.0,1.0,2,3],
[26,4,1012,84,6,6,-387.400482,50.089920,-0.086103,1.0,1.0,3,3],
[23,4,650,100,4,4,-340.882904,46.075401,-0.086103,1.0,1.0,2,2],
[27,4,1002,96,10,4,-398.273743,48.147663,-0.086103,1.0,1.0,5,2],
[18,4,798,84,106,150,-449.307129,34.709183,-0.090100,1.0,1.0,58,34],
[19,4,390,100,162,78,-384.956909,10.152107,-0.086103,1.0,1.0,81,39],
[34,4,2,180,236,30,-426.225830,154.820221,-0.092502,1.0,1.0,118,15],
[35,4,512,180,40,54,-304.819458,156.039825,-0.162316,1.0,1.0,20,27],
[36,4,1002,84,8,10,-297.911469,157.171051,-0.162316,1.0,1.0,4,5],
[37,4,1014,100,6,2,-302.522552,154.389328,-0.162316,1.0,1.0,3,1],
[29,4,390,2,266,96,-396.396484,3.142372,-0.086103,1.0,1.0,133,48],
[31,4,906,146,76,96,-451.228394,10.454103,-0.080727,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.017453,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-401.423737,250.682236,-0.304076,1.0,1.0,11,7],
[7,4,984,146,24,62,-390.085693,224.571426,-0.304076,1.0,1.0,14,8],
[9,4,386,202,26,14,-419.069061,290.212494,-0.304076,1.0,1.0,4,5],
[11,4,1002,2,18,60,-419.464386,250.933136,-0.064027,1.0,1.0,8,9],
[10,4,626,100,22,68,-429.799988,220.500000,0.233918,1.0,1.0,8,11],
[12,4,358,202,26,14,-416.227966,294.228943,-0.064027,1.0,1.0,4,5],
[33,4,240,180,270,20,-402.136108,142.247665,-0.097738,1.0,1.0,135,10],
[30,4,658,2,266,80,-394.261597,16.971001,-0.090757,1.0,1.0,133,40],
[17,4,214,2,174,170,-410.466553,7.463173,-0.088767,1.0,1.0,62,27],
[15,4,554,100,70,140,-369.885803,108.635010,0.088167,1.0,1.0,20,13],
[13,4,2,2,210,176,-414.799988,173.285721,-0.160570,1.0,1.0,104,104],
[14,4,926,2,74,142,-434.336884,104.295715,-0.574360,1.0,1.0,40,13],
[16,4,658,84,138,126,-400.697571,98.724152,-0.090757,1.0,1.0,60,120],
[21,4,336,202,20,26,-335.506561,44.409042,-0.090757,1.0,1.0,10,13],
[25,4,278,202,34,28,-391.910492,46.304810,-0.090757,1.0,1.0,17,14],
[20,4,414,202,22,6,-380.961151,102.528572,-0.090757,1.0,1.0,11,3],
[22,4,1014,92,4,6,-330.889679,48.845741,-0.090757,1.0,1.0,2,3],
[26,4,1012,84,6,6,-384.215302,50.017525,-0.090757,1.0,1.0,3,3],
[23,4,650,100,4,4,-337.679596,46.219547,-0.090757,1.0,1.0,2,2],
[27,4,1002,96,10,4,-395.079407,48.024681,-0.090757,1.0,1.0,5,2],
[18,4,798,84,106,150,-446.049713,34.348824,-0.094754,1.0,1.0,58,34],
[19,4,390,100,162,78,-381.585907,10.091515,-0.090757,1.0,1.0,81,39],
[34,4,2,180,236,30,-423.504395,155.224411,-0.097738,1.0,1.0,118,15],
[35,4,512,180,40,54,-302.106079,157.079681,-0.167552,1.0,1.0,20,27],
[36,4,1002,84,8,10,-295.204102,158.247055,-0.167552,1.0,1.0,4,5],
[37,4,1014,100,6,2,-299.800537,155.441223,-0.167552,1.0,1.0,3,1],
[29,4,390,2,266,96,-392.992737,3.028618,-0.090757,1.0,1.0,133,48],
[31,4,906,146,76,96,-447.858093,10.085072,-0.085382,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.013713,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-399.938354,250.892029,-0.329416,1.0,1.0,11,7],
[7,4,984,146,24,62,-387.842865,224.785721,-0.329416,1.0,1.0,14,8],
[9,4,386,202,26,14,-418.579590,289.962524,-0.329416,1.0,1.0,4,5],
[11,4,1002,2,18,60,-419.554260,251.575439,-0.036953,1.0,1.0,8,9],
[10,4,626,100,22,68,-429.200012,220.916672,0.211335,1.0,1.0,8,11],
[12,4,358,202,26,14,-415.146973,294.767761,-0.036953,1.0,1.0,4,5],
[33,4,240,180,270,20,-399.346558,142.763855,-0.102974,1.0,1.0,135,10],
[30,4,658,2,266,80,-390.922577,16.854950,-0.095411,1.0,1.0,133,40],
[17,4,214,2,174,170,-407.083130,7.271805,-0.093422,1.0,1.0,62,27],
[15,4,554,100,70,140,-366.985413,108.701881,0.091026,1.0,1.0,20,13],
[13,4,2,2,210,176,-412.200012,173.142853,-0.165225,1.0,1.0,104,104],
[14,4,926,2,74,142,-431.374084,104.133629,-0.585115,1.0,1.0,40,13],
[16,4,658,84,138,126,-397.738983,98.577263,-0.095411,1.0,1.0,60,120],
[21,4,336,202,20,26,-332.295868,44.566154,-0.095411,1.0,1.0,10,13],
[25,4,278,202,34,28,-388.708038,46.199383,-0.095411,1.0,1.0,17,14],
[20,4,414,202,22,6,-378.020477,102.473495,-0.095411,1.0,1.0,11,3],
[22,4,1014,92,4,6,-327.699677,49.024296,-0.095411,1.0,1.0,2,3],
[26,4,1012,84,6,6,-381.030212,49.947872,-0.095411,1.0,1.0,3,3],
[23,4,650,100,4,4,-334.477295,46.366524,-0.095411,1.0,1.0,2,2],
[27,4,1002,96,10,4,-391.884918,47.904488,-0.095411,1.0,1.0,5,2],
[18,4,798,84,106,150,-442.791016,33.991554,-0.099408,1.0,1.0,58,34],
[19,4,390,100,162,78,-378.215027,10.034538,-0.095411,1.0,1.0,81,39],
[34,4,2,180,236,30,-420.782501,155.628540,-0.102974,1.0,1.0,118,15],
[35,4,512,180,40,54,-299.395538,158.119415,-0.172788,1.0,1.0,20,27],
[36,4,1002,84,8,10,-292.499786,159.322922,-0.172788,1.0,1.0,4,5],
[37,4,1014,100,6,2,-297.081451,156.493057,-0.172788,1.0,1.0,3,1],
[29,4,390,2,266,96,-389.588837,2.918625,-0.095411,1.0,1.0,133,48],
[31,4,906,146,76,96,-444.486450,9.719647,-0.090036,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.009973,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-398.459961,251.079987,-0.354756,1.0,1.0,11,7],
[7,4,984,146,24,62,-385.600006,225.0,-0.354756,1.0,1.0,14,8],
[9,4,386,202,26,14,-418.085144,289.665619,-0.354756,1.0,1.0,4,5],
[11,4,1002,2,18,60,-419.649048,252.202087,-0.009879,1.0,1.0,8,9],
[10,4,626,100,22,68,-428.600006,221.333328,0.188752,1.0,1.0,8,11],
[12,4,358,202,26,14,-414.074097,295.259247,-0.009879,1.0,1.0,4,5],
[33,4,240,180,270,20,-396.557037,143.280334,-0.108210,1.0,1.0,135,10],
[30,4,658,2,266,80,-387.583344,16.742420,-0.100066,1.0,1.0,133,40],
[17,4,214,2,174,170,-403.699097,7.084160,-0.098076,1.0,1.0,62,27],
[15,4,554,100,70,140,-364.085968,108.770164,0.093885,1.0,1.0,20,13],
[13,4,2,2,210,176,-409.600006,173.0,-0.169879,1.0,1.0,104,104],
[14,4,926,2,74,142,-428.411499,103.973427,-0.595869,1.0,1.0,40,13],
[16,4,658,84,138,126,-394.780029,98.432121,-0.100066,1.0,1.0,60,120],
[21,4,336,202,20,26,-329.086243,44.726181,-0.100066,1.0,1.0,10,13],
[25,4,278,202,34,28,-385.505402,46.096844,-0.100066,1.0,1.0,17,14],
[20,4,414,202,22,6,-375.079865,102.420090,-0.100066,1.0,1.0,11,3],
[22,4,1014,92,4,6,-324.510864,49.205666,-0.100066,1.0,1.0,2,3],
[26,4,1012,84,6,6,-377.845123,49.881027,-0.100066,1.0,1.0,3,3],
[23,4,650,100,4,4,-331.276031,46.516380,-0.100066,1.0,1.0,2,2],
[27,4,1002,96,10,4,-388.690186,47.787144,-0.100066,1.0,1.0,5,2],
[18,4,798,84,106,150,-439.531006,33.637436,-0.104062,1.0,1.0,58,34],
[19,4,390,100,162,78,-374.844177,9.981224,-0.100066,1.0,1.0,81,39],
[34,4,2,180,236,30,-418.060059,156.032608,-0.108210,1.0,1.0,118,15],
[35,4,512,180,40,54,-296.687805,159.159027,-0.178024,1.0,1.0,20,27],
[36,4,1002,84,8,10,-289.798431,160.398621,-0.178024,1.0,1.0,4,5],
[37,4,1014,100,6,2,-294.365234,157.544800,-0.178024,1.0,1.0,3,1],
[29,4,390,2,266,96,-386.184753,2.812454,-0.100066,1.0,1.0,133,48],
[31,4,906,146,76,96,-441.113403,9.357899,-0.094690,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.006233,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-394.523438,251.511841,-0.319280,1.0,1.0,11,7],
[7,4,984,146,24,62,-382.500000,224.699997,-0.319280,1.0,1.0,14,8],
[9,4,386,202,26,14,-412.767731,290.769287,-0.319280,1.0,1.0,4,5],
[11,4,1002,2,18,60,-419.748383,252.813004,0.017196,1.0,1.0,8,9],
[10,4,626,100,22,68,-428.0,221.750000,0.166168,1.0,1.0,8,11],
[12,4,358,202,26,14,-413.009888,295.703491,0.017196,1.0,1.0,4,5],
[33,4,240,180,270,20,-393.767609,143.797119,-0.113446,1.0,1.0,135,10],
[30,4,658,2,266,80,-384.606110,17.522999,-0.104720,1.0,1.0,133,40],
[17,4,214,2,174,170,-400.676758,7.789841,-0.102730,1.0,1.0,62,27],
[15,4,554,100,70,140,-361.812500,109.420189,0.096744,1.0,1.0,20,13],
[13,4,2,2,210,176,-407.625000,173.437500,-0.174533,1.0,1.0,104,104],
[14,4,926,2,74,142,-426.074158,104.395462,-0.606624,1.0,1.0,40,13],
[16,4,658,84,138,126,-392.182922,99.178322,-0.104720,1.0,1.0,60,120],
[21,4,336,202,20,26,-326.239899,45.778717,-0.104720,1.0,1.0,10,13],
[25,4,278,202,34,28,-382.664825,46.886776,-0.104720,1.0,1.0,17,14],
[20,4,414,202,22,6,-372.501526,103.257935,-0.104720,1.0,1.0,11,3],
[22,4,1014,92,4,6,-321.685394,50.279446,-0.104720,1.0,1.0,2,3],
[26,4,1012,84,6,6,-375.022247,50.706570,-0.104720,1.0,1.0,3,3],
[23,4,650,100,4,4,-328.437988,47.558704,-0.104720,1.0,1.0,2,2],
[27,4,1002,96,10,4,-385.857452,48.562233,-0.104720,1.0,1.0,5,2],
[18,4,798,84,106,150,-436.631836,34.176056,-0.108717,1.0,1.0,58,34],
[19,4,390,100,162,78,-371.835632,10.821167,-0.104720,1.0,1.0,81,39],
[34,4,2,180,236,30,-415.337097,156.436630,-0.113446,1.0,1.0,118,15],
[35,4,512,180,40,54,-293.982880,160.198502,-0.183260,1.0,1.0,20,27],
[36,4,1002,84,8,10,-287.100098,161.474152,-0.183260,1.0,1.0,4,5],
[37,4,1014,100,6,2,-291.651886,158.596466,-0.183260,1.0,1.0,3,1],
[29,4,390,2,266,96,-383.142700,3.599693,-0.104720,1.0,1.0,133,48],
[31,4,906,146,76,96,-438.101227,9.889420,-0.099344,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.002493,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-390.551056,251.916809,-0.283805,1.0,1.0,11,7],
[7,4,984,146,24,62,-379.399994,224.399994,-0.283805,1.0,1.0,14,8],
[9,4,386,202,26,14,-407.391479,291.796631,-0.283805,1.0,1.0,4,5],
[11,4,1002,2,18,60,-419.851898,253.408096,0.044270,1.0,1.0,8,9],
[10,4,626,100,22,68,-427.399994,222.166672,0.143585,1.0,1.0,8,11],
[12,4,358,202,26,14,-411.954773,296.100433,0.044270,1.0,1.0,4,5],
[33,4,240,180,270,20,-390.978302,144.314194,-0.118682,1.0,1.0,135,10],
[30,4,658,2,266,80,-381.631622,18.309517,-0.109374,1.0,1.0,133,40],
[17,4,214,2,174,170,-397.656769,8.501671,-0.107384,1.0,1.0,62,27],
[15,4,554,100,70,140,-359.540039,110.071602,0.099602,1.0,1.0,20,13],
[13,4,2,2,210,176,-405.649994,173.875000,-0.179187,1.0,1.0,104,104],
[14,4,926,2,74,142,-423.737091,104.819366,-0.617379,1.0,1.0,40,13],
[16,4,658,84,138,126,-389.588379,99.928696,-0.109374,1.0,1.0,60,120],
[21,4,336,202,20,26,-323.397522,46.836582,-0.109374,1.0,1.0,10,13],
[25,4,278,202,34,28,-379.826996,47.682014,-0.109374,1.0,1.0,17,14],
[20,4,414,202,22,6,-369.926208,104.099869,-0.109374,1.0,1.0,11,3],
[22,4,1014,92,4,6,-318.864014,51.358459,-0.109374,1.0,1.0,2,3],
[26,4,1012,84,6,6,-372.202271,51.537338,-0.109374,1.0,1.0,3,3],
[23,4,650,100,4,4,-325.603882,48.606319,-0.109374,1.0,1.0,2,2],
[27,4,1002,96,10,4,-383.027374,49.342594,-0.109374,1.0,1.0,5,2],
[18,4,798,84,106,150,-433.734283,34.720261,-0.113371,1.0,1.0,58,34],
[19,4,390,100,162,78,-368.830078,11.667198,-0.109374,1.0,1.0,81,39],
[34,4,2,180,236,30,-412.613647,156.840591,-0.118682,1.0,1.0,118,15],
[35,4,512,180,40,54,-291.280792,161.237823,-0.188496,1.0,1.0,20,27],
[36,4,1002,84,8,10,-284.404785,162.549500,-0.188496,1.0,1.0,4,5],
[37,4,1014,100,6,2,-288.941467,159.648010,-0.188496,1.0,1.0,3,1],
[29,4,390,2,266,96,-380.103424,4.393173,-0.109374,1.0,1.0,133,48],
[31,4,906,146,76,96,-435.090637,10.427042,-0.103998,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.001247,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-386.543671,252.293259,-0.248329,1.0,1.0,11,7],
[7,4,984,146,24,62,-376.299988,224.100006,-0.248329,1.0,1.0,14,8],
[9,4,386,202,26,14,-401.959015,292.745300,-0.248329,1.0,1.0,4,5],
[11,4,1002,2,18,60,-419.959290,253.987228,0.071345,1.0,1.0,8,9],
[10,4,626,100,22,68,-426.799988,222.583328,0.121002,1.0,1.0,8,11],
[12,4,358,202,26,14,-410.909332,296.450134,0.071345,1.0,1.0,4,5],
[33,4,240,180,270,20,-388.189056,144.831558,-0.123918,1.0,1.0,135,10],
[30,4,658,2,266,80,-378.659882,19.101952,-0.114028,1.0,1.0,133,40],
[17,4,214,2,174,170,-394.639252,9.219627,-0.112039,1.0,1.0,62,27],
[15,4,554,100,70,140,-357.268585,110.724396,0.102461,1.0,1.0,20,13],
[13,4,2,2,210,176,-403.674988,174.312500,-0.183841,1.0,1.0,104,104],
[14,4,926,2,74,142,-421.400269,105.245155,-0.628134,1.0,1.0,40,13],
[16,4,658,84,138,126,-386.996460,100.683212,-0.114028,1.0,1.0,60,120],
[21,4,336,202,20,26,-320.559235,47.899738,-0.114028,1.0,1.0,10,13],
[25,4,278,202,34,28,-376.992035,48.482529,-0.114028,1.0,1.0,17,14],
[20,4,414,202,22,6,-367.353912,104.945847,-0.114028,1.0,1.0,11,3],
[22,4,1014,92,4,6,-316.046844,52.442669,-0.114028,1.0,1.0,2,3],
[26,4,1012,84,6,6,-369.385345,52.373295,-0.114028,1.0,1.0,3,3],
[23,4,650,100,4,4,-322.773804,49.659187,-0.114028,1.0,1.0,2,2],
[27,4,1002,96,10,4,-380.200104,50.128197,-0.114028,1.0,1.0,5,2],
[18,4,798,84,106,150,-430.838379,35.270020,-0.118025,1.0,1.0,58,34],
[19,4,390,100,162,78,-365.827576,12.519279,-0.114028,1.0,1.0,81,39],
[34,4,2,180,236,30,-409.889709,157.244507,-0.123918,1.0,1.0,118,15],
[35,4,512,180,40,54,-288.581543,162.276962,-0.193732,1.0,1.0,20,27],
[36,4,1002,84,8,10,-281.712494,163.624619,-0.193732,1.0,1.0,4,5],
[37,4,1014,100,6,2,-286.233917,160.699417,-0.193732,1.0,1.0,3,1],
[29,4,390,2,266,96,-377.066956,5.192871,-0.114028,1.0,1.0,133,48],
[31,4,906,146,76,96,-432.081635,10.970755,-0.108653,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.004987,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-382.502289,252.639587,-0.212853,1.0,1.0,11,7],
[7,4,984,146,24,62,-373.200012,223.800003,-0.212853,1.0,1.0,14,8],
[9,4,386,202,26,14,-396.473175,293.612915,-0.212853,1.0,1.0,4,5],
[11,4,1002,2,18,60,-420.070190,254.550369,0.098419,1.0,1.0,8,9],
[10,4,626,100,22,68,-426.200012,223.0,0.098419,1.0,1.0,8,11],
[12,4,358,202,26,14,-409.874023,296.752716,0.098419,1.0,1.0,4,5],
[33,4,240,180,270,20,-385.399933,145.349213,-0.129154,1.0,1.0,135,10],
[30,4,658,2,266,80,-375.690979,19.900295,-0.118682,1.0,1.0,133,40],
[17,4,214,2,174,170,-391.624146,9.943703,-0.116693,1.0,1.0,62,27],
[15,4,554,100,70,140,-354.998169,111.378571,0.105320,1.0,1.0,20,13],
[13,4,2,2,210,176,-401.700012,174.750000,-0.188496,1.0,1.0,104,104],
[14,4,926,2,74,142,-419.063782,105.672806,-0.638888,1.0,1.0,40,13],
[16,4,658,84,138,126,-384.407135,101.441872,-0.118682,1.0,1.0,60,120],
[21,4,336,202,20,26,-317.724976,48.968178,-0.118682,1.0,1.0,10,13],
[25,4,278,202,34,28,-374.159851,49.288315,-0.118682,1.0,1.0,17,14],
[20,4,414,202,22,6,-364.784637,105.795883,-0.118682,1.0,1.0,11,3],
[22,4,1014,92,4,6,-313.233765,53.532059,-0.118682,1.0,1.0,2,3],
[26,4,1012,84,6,6,-366.571350,53.214443,-0.118682,1.0,1.0,3,3],
[23,4,650,100,4,4,-319.947723,50.717300,-0.118682,1.0,1.0,2,2],
[27,4,1002,96,10,4,-377.375549,50.919033,-0.118682,1.0,1.0,5,2],
[18,4,798,84,106,150,-427.944153,35.825340,-0.122679,1.0,1.0,58,34],
[19,4,390,100,162,78,-362.828156,13.377419,-0.118682,1.0,1.0,81,39],
[34,4,2,180,236,30,-407.165283,157.648361,-0.129154,1.0,1.0,118,15],
[35,4,512,180,40,54,-285.885132,163.315918,-0.198968,1.0,1.0,20,27],
[36,4,1002,84,8,10,-279.023224,164.699524,-0.198968,1.0,1.0,4,5],
[37,4,1014,100,6,2,-283.529266,161.750687,-0.198968,1.0,1.0,3,1],
[29,4,390,2,266,96,-374.033325,5.998779,-0.118682,1.0,1.0,133,48],
[31,4,906,146,76,96,-429.074310,11.520551,-0.113307,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.008727,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-378.427856,252.954239,-0.177378,1.0,1.0,11,7],
[7,4,984,146,24,62,-370.100006,223.500000,-0.177378,1.0,1.0,14,8],
[9,4,386,202,26,14,-390.936707,294.397308,-0.177378,1.0,1.0,4,5],
[11,4,1002,2,18,60,-418.128357,254.671143,0.077599,1.0,1.0,8,9],
[10,4,626,100,22,68,-423.600006,223.0,0.077599,1.0,1.0,8,11],
[12,4,358,202,26,14,-408.813019,297.076630,0.077599,1.0,1.0,4,5],
[33,4,240,180,270,20,-382.610870,145.867157,-0.134390,1.0,1.0,135,10],
[30,4,658,2,266,80,-372.724884,20.704527,-0.123337,1.0,1.0,133,40],
[17,4,214,2,174,170,-388.611542,10.673882,-0.121347,1.0,1.0,62,27],
[15,4,554,100,70,140,-352.728729,112.034119,0.108179,1.0,1.0,20,13],
[13,4,2,2,210,176,-399.725006,175.187500,-0.193150,1.0,1.0,104,104],
[14,4,926,2,74,142,-416.727570,106.102325,-0.649643,1.0,1.0,40,13],
[16,4,658,84,138,126,-381.820435,102.204651,-0.123337,1.0,1.0,60,120],
[21,4,336,202,20,26,-314.894775,50.041878,-0.123337,1.0,1.0,10,13],
[25,4,278,202,34,28,-371.330536,50.099354,-0.123337,1.0,1.0,17,14],
[20,4,414,202,22,6,-362.218414,106.649940,-0.123337,1.0,1.0,11,3],
[22,4,1014,92,4,6,-310.424866,54.626614,-0.123337,1.0,1.0,2,3],
[26,4,1012,84,6,6,-363.760376,54.060757,-0.123337,1.0,1.0,3,3],
[23,4,650,100,4,4,-317.125641,51.780636,-0.123337,1.0,1.0,2,2],
[27,4,1002,96,10,4,-374.553802,51.715088,-0.123337,1.0,1.0,5,2],
[18,4,798,84,106,150,-425.051575,36.386200,-0.127333,1.0,1.0,58,34],
[19,4,390,100,162,78,-359.831818,14.241585,-0.123337,1.0,1.0,81,39],
[34,4,2,180,236,30,-404.440308,158.052185,-0.134390,1.0,1.0,118,15],
[35,4,512,180,40,54,-283.191498,164.354675,-0.204204,1.0,1.0,20,27],
[36,4,1002,84,8,10,-276.336945,165.774185,-0.204204,1.0,1.0,4,5],
[37,4,1014,100,6,2,-280.827484,162.801804,-0.204204,1.0,1.0,3,1],
[29,4,390,2,266,96,-371.002533,6.810875,-0.123337,1.0,1.0,133,48],
[31,4,906,146,76,96,-426.068634,12.076415,-0.117961,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.012467,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-374.321442,253.235672,-0.141902,1.0,1.0,11,7],
[7,4,984,146,24,62,-367.0,223.199997,-0.141902,1.0,1.0,14,8],
[9,4,386,202,26,14,-385.352539,295.096344,-0.141902,1.0,1.0,4,5],
[11,4,1002,2,18,60,-416.188904,254.778183,0.056778,1.0,1.0,8,9],
[10,4,626,100,22,68,-421.0,223.0,0.056778,1.0,1.0,8,11],
[12,4,358,202,26,14,-407.758423,297.368408,0.056778,1.0,1.0,4,5],
[33,4,240,180,270,20,-379.821899,146.385391,-0.139626,1.0,1.0,135,10],
[30,4,658,2,266,80,-369.761597,21.514620,-0.127991,1.0,1.0,133,40],
[17,4,214,2,174,170,-385.601410,11.410149,-0.126001,1.0,1.0,62,27],
[15,4,554,100,70,140,-350.460297,112.691025,0.111038,1.0,1.0,20,13],
[13,4,2,2,210,176,-397.750000,175.625000,-0.197804,1.0,1.0,104,104],
[14,4,926,2,74,142,-414.391663,106.533707,-0.660398,1.0,1.0,40,13],
[16,4,658,84,138,126,-379.236389,102.971527,-0.127991,1.0,1.0,60,120],
[21,4,336,202,20,26,-312.068665,51.120804,-0.127991,1.0,1.0,10,13],
[25,4,278,202,34,28,-368.504089,50.915615,-0.127991,1.0,1.0,17,14],
[20,4,414,202,22,6,-359.655273,107.508003,-0.127991,1.0,1.0,11,3],
[22,4,1014,92,4,6,-307.620117,55.726295,-0.127991,1.0,1.0,2,3],
[26,4,1012,84,6,6,-360.952454,54.912209,-0.127991,1.0,1.0,3,3],
[23,4,650,100,4,4,-314.307587,52.849163,-0.127991,1.0,1.0,2,2],
[27,4,1002,96,10,4,-371.734833,52.516331,-0.127991,1.0,1.0,5,2],
[18,4,798,84,106,150,-422.160736,36.952583,-0.131988,1.0,1.0,58,34],
[19,4,390,100,162,78,-356.838623,15.111755,-0.127991,1.0,1.0,81,39],
[34,4,2,180,236,30,-401.714874,158.455963,-0.139626,1.0,1.0,118,15],
[35,4,512,180,40,54,-280.500702,165.393219,-0.209440,1.0,1.0,20,27],
[36,4,1002,84,8,10,-273.653656,166.848602,-0.209440,1.0,1.0,4,5],
[37,4,1014,100,6,2,-278.128571,163.852753,-0.209440,1.0,1.0,3,1],
[29,4,390,2,266,96,-367.974609,7.629135,-0.127991,1.0,1.0,133,48],
[31,4,906,146,76,96,-423.064606,12.638330,-0.122615,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.016207,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-370.184204,253.482407,-0.106427,1.0,1.0,11,7],
[7,4,984,146,24,62,-363.899994,222.899994,-0.106427,1.0,1.0,14,8],
[9,4,386,202,26,14,-379.723633,295.707977,-0.106427,1.0,1.0,4,5],
[11,4,1002,2,18,60,-414.251526,254.871460,0.035958,1.0,1.0,8,9],
[10,4,626,100,22,68,-418.399994,223.0,0.035958,1.0,1.0,8,11],
[12,4,358,202,26,14,-406.709534,297.627960,0.035958,1.0,1.0,4,5],
[33,4,240,180,270,20,-377.033051,146.903931,-0.144862,1.0,1.0,135,10],
[30,4,658,2,266,80,-366.801239,22.330555,-0.132645,1.0,1.0,133,40],
[17,4,214,2,174,170,-382.593842,12.152473,-0.130655,1.0,1.0,62,27],
[15,4,554,100,70,140,-348.192902,113.349304,0.113897,1.0,1.0,20,13],
[13,4,2,2,210,176,-395.774994,176.062500,-0.202458,1.0,1.0,104,104],
[14,4,926,2,74,142,-412.056061,106.966949,-0.671152,1.0,1.0,40,13],
[16,4,658,84,138,126,-376.655029,103.742485,-0.132645,1.0,1.0,60,120],
[21,4,336,202,20,26,-309.246704,52.204937,-0.132645,1.0,1.0,10,13],
[25,4,278,202,34,28,-365.680573,51.737087,-0.132645,1.0,1.0,17,14],
[20,4,414,202,22,6,-357.095245,108.370041,-0.132645,1.0,1.0,11,3],
[22,4,1014,92,4,6,-304.819641,56.831081,-0.132645,1.0,1.0,2,3],
[26,4,1012,84,6,6,-358.147614,55.768784,-0.132645,1.0,1.0,3,3],
[23,4,650,100,4,4,-311.493652,53.922855,-0.132645,1.0,1.0,2,2],
[27,4,1002,96,10,4,-368.918732,53.322750,-0.132645,1.0,1.0,5,2],
[18,4,798,84,106,150,-419.271637,37.524475,-0.136642,1.0,1.0,58,34],
[19,4,390,100,162,78,-353.848572,15.987907,-0.132645,1.0,1.0,81,39],
[34,4,2,180,236,30,-398.988892,158.859695,-0.144862,1.0,1.0,118,15],
[35,4,512,180,40,54,-277.812714,166.431534,-0.214675,1.0,1.0,20,27],
[36,4,1002,84,8,10,-270.973389,167.922745,-0.214675,1.0,1.0,4,5],
[37,4,1014,100,6,2,-275.432556,164.903503,-0.214675,1.0,1.0,3,1],
[29,4,390,2,266,96,-364.949646,8.453537,-0.132645,1.0,1.0,133,48],
[31,4,906,146,76,96,-420.062378,13.206280,-0.127269,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.019947,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-366.017334,253.692978,-0.070951,1.0,1.0,11,7],
[7,4,984,146,24,62,-360.799988,222.600006,-0.070951,1.0,1.0,14,8],
[9,4,386,202,26,14,-374.053101,296.230347,-0.070951,1.0,1.0,4,5],
[11,4,1002,2,18,60,-412.315948,254.950928,0.015138,1.0,1.0,8,9],
[10,4,626,100,22,68,-415.799988,223.0,0.015138,1.0,1.0,8,11],
[12,4,358,202,26,14,-405.665741,297.855164,0.015138,1.0,1.0,4,5],
[33,4,240,180,270,20,-374.244263,147.422745,-0.150098,1.0,1.0,135,10],
[30,4,658,2,266,80,-363.843750,23.152323,-0.137299,1.0,1.0,133,40],
[17,4,214,2,174,170,-379.588806,12.900848,-0.135310,1.0,1.0,62,27],
[15,4,554,100,70,140,-345.926544,114.008942,0.116756,1.0,1.0,20,13],
[13,4,2,2,210,176,-393.799988,176.500000,-0.207112,1.0,1.0,104,104],
[14,4,926,2,74,142,-409.720764,107.402061,-0.681907,1.0,1.0,40,13],
[16,4,658,84,138,126,-374.076355,104.517509,-0.137299,1.0,1.0,60,120],
[21,4,336,202,20,26,-306.428894,53.294250,-0.137299,1.0,1.0,10,13],
[25,4,278,202,34,28,-362.859985,52.563751,-0.137299,1.0,1.0,17,14],
[20,4,414,202,22,6,-354.538300,109.236053,-0.137299,1.0,1.0,11,3],
[22,4,1014,92,4,6,-302.023407,57.940948,-0.137299,1.0,1.0,2,3],
[26,4,1012,84,6,6,-355.345886,56.630466,-0.137299,1.0,1.0,3,3],
[23,4,650,100,4,4,-308.683807,55.001694,-0.137299,1.0,1.0,2,2],
[27,4,1002,96,10,4,-366.105499,54.134323,-0.137299,1.0,1.0,5,2],
[18,4,798,84,106,150,-416.384308,38.101875,-0.141296,1.0,1.0,58,34],
[19,4,390,100,162,78,-350.861725,16.870026,-0.137299,1.0,1.0,81,39],
[34,4,2,180,236,30,-396.262421,159.263382,-0.150098,1.0,1.0,118,15],
[35,4,512,180,40,54,-275.127563,167.469604,-0.219911,1.0,1.0,20,27],
[36,4,1002,84,8,10,-268.296143,168.996613,-0.219911,1.0,1.0,4,5],
[37,4,1014,100,6,2,-272.739441,165.954056,-0.219911,1.0,1.0,3,1],
[29,4,390,2,266,96,-361.927582,9.284073,-0.137299,1.0,1.0,133,48],
[31,4,906,146,76,96,-417.061829,13.780257,-0.131924,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.023687,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-361.822205,253.865967,-0.035476,1.0,1.0,11,7],
[7,4,984,146,24,62,-357.700012,222.300003,-0.035476,1.0,1.0,14,8],
[9,4,386,202,26,14,-368.344177,296.661560,-0.035476,1.0,1.0,4,5],
[11,4,1002,2,18,60,-410.381897,255.016525,-0.005682,1.0,1.0,8,9],
[10,4,626,100,22,68,-413.200012,223.0,-0.005682,1.0,1.0,8,11],
[12,4,358,202,26,14,-404.626343,298.049927,-0.005682,1.0,1.0,4,5],
[33,4,240,180,270,20,-371.455597,147.941864,-0.155334,1.0,1.0,135,10],
[30,4,658,2,266,80,-360.889282,23.979900,-0.141953,1.0,1.0,133,40],
[17,4,214,2,174,170,-376.586456,13.655258,-0.139964,1.0,1.0,62,27],
[15,4,554,100,70,140,-343.661224,114.669930,0.119614,1.0,1.0,20,13],
[13,4,2,2,210,176,-391.825012,176.937500,-0.211767,1.0,1.0,104,104],
[14,4,926,2,74,142,-407.385834,107.839020,-0.692662,1.0,1.0,40,13],
[16,4,658,84,138,126,-371.500458,105.296585,-0.141953,1.0,1.0,60,120],
[21,4,336,202,20,26,-303.615326,54.388725,-0.141953,1.0,1.0,10,13],
[25,4,278,202,34,28,-360.042389,53.395592,-0.141953,1.0,1.0,17,14],
[20,4,414,202,22,6,-351.984589,110.106010,-0.141953,1.0,1.0,11,3],
[22,4,1014,92,4,6,-299.231537,59.055878,-0.141953,1.0,1.0,2,3],
[26,4,1012,84,6,6,-352.547302,57.497234,-0.141953,1.0,1.0,3,3],
[23,4,650,100,4,4,-305.878174,56.085655,-0.141953,1.0,1.0,2,2],
[27,4,1002,96,10,4,-363.295166,54.951042,-0.141953,1.0,1.0,5,2],
[18,4,798,84,106,150,-413.498840,38.684761,-0.145950,1.0,1.0,58,34],
[19,4,390,100,162,78,-347.878143,17.758095,-0.141953,1.0,1.0,81,39],
[34,4,2,180,236,30,-393.535461,159.667053,-0.155334,1.0,1.0,118,15],
[35,4,512,180,40,54,-272.445190,168.507416,-0.225147,1.0,1.0,20,27],
[36,4,1002,84,8,10,-265.621857,170.070160,-0.225147,1.0,1.0,4,5],
[37,4,1014,100,6,2,-270.049164,167.004395,-0.225147,1.0,1.0,3,1],
[29,4,390,2,266,96,-358.908600,10.120720,-0.141953,1.0,1.0,133,48],
[31,4,906,146,76,96,-414.063171,14.360250,-0.136578,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.027427,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-357.600006,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-354.600006,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-362.600006,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-408.449036,255.068268,-0.026503,1.0,1.0,8,9],
[10,4,626,100,22,68,-410.600006,223.0,-0.026503,1.0,1.0,8,11],
[12,4,358,202,26,14,-403.590637,298.212158,-0.026503,1.0,1.0,4,5],
[33,4,240,180,270,20,-368.667023,148.461258,-0.160570,1.0,1.0,135,10],
[30,4,658,2,266,80,-357.937775,24.813274,-0.146608,1.0,1.0,133,40],
[17,4,214,2,174,170,-373.586731,14.415688,-0.144618,1.0,1.0,62,27],
[15,4,554,100,70,140,-341.396942,115.332268,0.122473,1.0,1.0,20,13],
[13,4,2,2,210,176,-389.850006,177.375000,-0.216421,1.0,1.0,104,104],
[14,4,926,2,74,142,-405.051208,108.277832,-0.703417,1.0,1.0,40,13],
[16,4,658,84,138,126,-368.927307,106.079689,-0.146608,1.0,1.0,60,120],
[21,4,336,202,20,26,-300.805969,55.488331,-0.146608,1.0,1.0,10,13],
[25,4,278,202,34,28,-357.227814,54.232586,-0.146608,1.0,1.0,17,14],
[20,4,414,202,22,6,-349.434021,110.979897,-0.146608,1.0,1.0,11,3],
[22,4,1014,92,4,6,-296.443939,60.175835,-0.146608,1.0,1.0,2,3],
[26,4,1012,84,6,6,-349.751892,58.369068,-0.146608,1.0,1.0,3,3],
[23,4,650,100,4,4,-303.076691,57.174709,-0.146608,1.0,1.0,2,2],
[27,4,1002,96,10,4,-360.487793,55.772881,-0.146608,1.0,1.0,5,2],
[18,4,798,84,106,150,-410.615204,39.273117,-0.150604,1.0,1.0,58,34],
[19,4,390,100,162,78,-344.897827,18.652092,-0.146608,1.0,1.0,81,39],
[34,4,2,180,236,30,-390.807983,160.070679,-0.160570,1.0,1.0,118,15],
[35,4,512,180,40,54,-269.765686,169.544952,-0.230383,1.0,1.0,20,27],
[36,4,1002,84,8,10,-262.950623,171.143402,-0.230383,1.0,1.0,4,5],
[37,4,1014,100,6,2,-267.361816,168.054489,-0.230383,1.0,1.0,3,1],
[29,4,390,2,266,96,-355.892609,10.963463,-0.146608,1.0,1.0,133,48],
[31,4,906,146,76,96,-411.066315,14.946247,-0.141232,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.031167,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-355.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-352.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-360.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-406.517120,255.106094,-0.047323,1.0,1.0,8,9],
[10,4,626,100,22,68,-408.0,223.0,-0.047323,1.0,1.0,8,11],
[12,4,358,202,26,14,-402.557983,298.341797,-0.047323,1.0,1.0,4,5],
[33,4,240,180,270,20,-365.878571,148.980957,-0.165806,1.0,1.0,135,10],
[30,4,658,2,266,80,-354.989288,25.652416,-0.151262,1.0,1.0,133,40],
[17,4,214,2,174,170,-370.589691,15.182098,-0.149272,1.0,1.0,62,27],
[15,4,554,100,70,140,-339.133698,115.995956,0.125332,1.0,1.0,20,13],
[13,4,2,2,210,176,-387.875000,177.812500,-0.221075,1.0,1.0,104,104],
[14,4,926,2,74,142,-402.716949,108.718491,-0.714171,1.0,1.0,40,13],
[16,4,658,84,138,126,-366.356934,106.866798,-0.151262,1.0,1.0,60,120],
[21,4,336,202,20,26,-298.000885,56.593037,-0.151262,1.0,1.0,10,13],
[25,4,278,202,34,28,-354.416260,55.074711,-0.151262,1.0,1.0,17,14],
[20,4,414,202,22,6,-346.886658,111.857674,-0.151262,1.0,1.0,11,3],
[22,4,1014,92,4,6,-293.660706,61.300793,-0.151262,1.0,1.0,2,3],
[26,4,1012,84,6,6,-346.959656,59.245941,-0.151262,1.0,1.0,3,3],
[23,4,650,100,4,4,-300.279419,58.268829,-0.151262,1.0,1.0,2,2],
[27,4,1002,96,10,4,-357.683380,56.599815,-0.151262,1.0,1.0,5,2],
[18,4,798,84,106,150,-407.733459,39.866920,-0.155259,1.0,1.0,58,34],
[19,4,390,100,162,78,-341.920807,19.551987,-0.151262,1.0,1.0,81,39],
[34,4,2,180,236,30,-388.079987,160.474289,-0.165806,1.0,1.0,118,15],
[35,4,512,180,40,54,-267.088959,170.582184,-0.235619,1.0,1.0,20,27],
[36,4,1002,84,8,10,-260.282379,172.216309,-0.235619,1.0,1.0,4,5],
[37,4,1014,100,6,2,-264.677338,169.104340,-0.235619,1.0,1.0,3,1],
[29,4,390,2,266,96,-352.879700,11.812271,-0.151262,1.0,1.0,133,48],
[31,4,906,146,76,96,-408.071350,15.538223,-0.145886,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.034907,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-352.399994,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-349.399994,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-357.399994,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-404.585846,255.130005,-0.068143,1.0,1.0,8,9],
[10,4,626,100,22,68,-405.399994,223.0,-0.068143,1.0,1.0,8,11],
[12,4,358,202,26,14,-401.527679,298.438751,-0.068143,1.0,1.0,4,5],
[33,4,240,180,270,20,-363.090210,149.500931,-0.171042,1.0,1.0,135,10],
[30,4,658,2,266,80,-352.043823,26.497297,-0.155916,1.0,1.0,133,40],
[17,4,214,2,174,170,-367.595337,15.954491,-0.153926,1.0,1.0,62,27],
[15,4,554,100,70,140,-336.871521,116.660973,0.128191,1.0,1.0,20,13],
[13,4,2,2,210,176,-385.899994,178.250000,-0.225729,1.0,1.0,104,104],
[14,4,926,2,74,142,-400.383057,109.160995,-0.724926,1.0,1.0,40,13],
[16,4,658,84,138,126,-363.789337,107.657898,-0.155916,1.0,1.0,60,120],
[21,4,336,202,20,26,-295.200043,57.702824,-0.155916,1.0,1.0,10,13],
[25,4,278,202,34,28,-351.607758,55.921944,-0.155916,1.0,1.0,17,14],
[20,4,414,202,22,6,-344.342529,112.739342,-0.155916,1.0,1.0,11,3],
[22,4,1014,92,4,6,-290.881836,62.430729,-0.155916,1.0,1.0,2,3],
[26,4,1012,84,6,6,-344.170654,60.127834,-0.155916,1.0,1.0,3,3],
[23,4,650,100,4,4,-297.486359,59.367992,-0.155916,1.0,1.0,2,2],
[27,4,1002,96,10,4,-354.881927,57.431828,-0.155916,1.0,1.0,5,2],
[18,4,798,84,106,150,-404.853577,40.466171,-0.159913,1.0,1.0,58,34],
[19,4,390,100,162,78,-338.947113,20.457764,-0.155916,1.0,1.0,81,39],
[34,4,2,180,236,30,-385.351501,160.877853,-0.171042,1.0,1.0,118,15],
[35,4,512,180,40,54,-264.415039,171.619125,-0.240855,1.0,1.0,20,27],
[36,4,1002,84,8,10,-257.617096,173.288864,-0.240855,1.0,1.0,4,5],
[37,4,1014,100,6,2,-261.995697,170.153931,-0.240855,1.0,1.0,3,1],
[29,4,390,2,266,96,-349.869843,12.667122,-0.155916,1.0,1.0,133,48],
[31,4,906,146,76,96,-405.078217,16.136160,-0.150540,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.031416,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-349.799988,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-346.799988,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-354.799988,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-402.654938,255.139984,-0.088964,1.0,1.0,8,9],
[10,4,626,100,22,68,-402.799988,223.0,-0.088964,1.0,1.0,8,11],
[12,4,358,202,26,14,-400.499054,298.503021,-0.088964,1.0,1.0,4,5],
[33,4,240,180,270,20,-360.301941,150.021194,-0.176278,1.0,1.0,135,10],
[30,4,658,2,266,80,-349.101501,27.347923,-0.160570,1.0,1.0,133,40],
[17,4,214,2,174,170,-364.603760,16.732857,-0.158581,1.0,1.0,62,27],
[15,4,554,100,70,140,-334.610382,117.327332,0.131050,1.0,1.0,20,13],
[13,4,2,2,210,176,-383.924988,178.687500,-0.230383,1.0,1.0,104,104],
[14,4,926,2,74,142,-398.049530,109.605347,-0.735681,1.0,1.0,40,13],
[16,4,658,84,138,126,-361.224609,108.452980,-0.160570,1.0,1.0,60,120],
[21,4,336,202,20,26,-292.403564,58.817677,-0.160570,1.0,1.0,10,13],
[25,4,278,202,34,28,-348.802368,56.774284,-0.160570,1.0,1.0,17,14],
[20,4,414,202,22,6,-341.801636,113.624878,-0.160570,1.0,1.0,11,3],
[22,4,1014,92,4,6,-288.107422,63.565628,-0.160570,1.0,1.0,2,3],
[26,4,1012,84,6,6,-341.384918,61.014744,-0.160570,1.0,1.0,3,3],
[23,4,650,100,4,4,-294.697601,60.472187,-0.160570,1.0,1.0,2,2],
[27,4,1002,96,10,4,-352.083527,58.268913,-0.160570,1.0,1.0,5,2],
[18,4,798,84,106,150,-401.975677,41.070862,-0.164567,1.0,1.0,58,34],
[19,4,390,100,162,78,-335.976807,21.369408,-0.160570,1.0,1.0,81,39],
[34,4,2,180,236,30,-382.622498,161.281418,-0.176278,1.0,1.0,118,15],
[35,4,512,180,40,54,-261.743958,172.655746,-0.246091,1.0,1.0,20,27],
[36,4,1002,84,8,10,-254.954849,174.361053,-0.246091,1.0,1.0,4,5],
[37,4,1014,100,6,2,-259.316986,171.203232,-0.246091,1.0,1.0,3,1],
[29,4,390,2,266,96,-346.863159,13.528015,-0.160570,1.0,1.0,133,48],
[31,4,906,146,76,96,-402.087097,16.740067,-0.155195,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.027925,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-347.200012,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-344.200012,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-352.200012,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-400.724121,255.136047,-0.109784,1.0,1.0,8,9],
[10,4,626,100,22,68,-400.200012,223.0,-0.109784,1.0,1.0,8,11],
[12,4,358,202,26,14,-399.471497,298.534546,-0.109784,1.0,1.0,4,5],
[33,4,240,180,270,20,-357.513824,150.541748,-0.181514,1.0,1.0,135,10],
[30,4,658,2,266,80,-346.162292,28.204262,-0.165224,1.0,1.0,133,40],
[17,4,214,2,174,170,-361.614990,17.517159,-0.163235,1.0,1.0,62,27],
[15,4,554,100,70,140,-332.350372,117.995010,0.133909,1.0,1.0,20,13],
[13,4,2,2,210,176,-381.950012,179.125000,-0.235038,1.0,1.0,104,104],
[14,4,926,2,74,142,-395.716400,110.051537,-0.746435,1.0,1.0,40,13],
[16,4,658,84,138,126,-358.662750,109.252014,-0.165224,1.0,1.0,60,120],
[21,4,336,202,20,26,-289.611450,59.937553,-0.165224,1.0,1.0,10,13],
[25,4,278,202,34,28,-346.000122,57.631691,-0.165224,1.0,1.0,17,14],
[20,4,414,202,22,6,-339.264069,114.514252,-0.165224,1.0,1.0,11,3],
[22,4,1014,92,4,6,-285.337433,64.705444,-0.165224,1.0,1.0,2,3],
[26,4,1012,84,6,6,-338.602478,61.906624,-0.165224,1.0,1.0,3,3],
[23,4,650,100,4,4,-291.913147,61.581367,-0.165224,1.0,1.0,2,2],
[27,4,1002,96,10,4,-349.288208,59.111034,-0.165224,1.0,1.0,5,2],
[18,4,798,84,106,150,-399.099792,41.680962,-0.169221,1.0,1.0,58,34],
[19,4,390,100,162,78,-333.009918,22.286896,-0.165224,1.0,1.0,81,39],
[34,4,2,180,236,30,-379.893036,161.684937,-0.181514,1.0,1.0,118,15],
[35,4,512,180,40,54,-259.075684,173.692047,-0.251327,1.0,1.0,20,27],
[36,4,1002,84,8,10,-252.295609,175.432877,-0.251327,1.0,1.0,4,5],
[37,4,1014,100,6,2,-256.641144,172.252258,-0.251327,1.0,1.0,3,1],
[29,4,390,2,266,96,-343.859650,14.394920,-0.165224,1.0,1.0,133,48],
[31,4,906,146,76,96,-399.097931,17.349915,-0.159849,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.024435,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-344.600006,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-341.600006,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-349.600006,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-398.793030,255.118164,-0.130604,1.0,1.0,8,9],
[10,4,626,100,22,68,-397.600006,223.0,-0.130604,1.0,1.0,8,11],
[12,4,358,202,26,14,-398.444183,298.533356,-0.130604,1.0,1.0,4,5],
[33,4,240,180,270,20,-354.725769,151.062592,-0.186750,1.0,1.0,135,10],
[30,4,658,2,266,80,-343.226196,29.066280,-0.169879,1.0,1.0,133,40],
[17,4,214,2,174,170,-358.628967,18.307373,-0.167889,1.0,1.0,62,27],
[15,4,554,100,70,140,-330.091400,118.664017,0.136767,1.0,1.0,20,13],
[13,4,2,2,210,176,-379.975006,179.562500,-0.239692,1.0,1.0,104,104],
[14,4,926,2,74,142,-393.383636,110.499557,-0.757190,1.0,1.0,40,13],
[16,4,658,84,138,126,-356.103729,110.054977,-0.169879,1.0,1.0,60,120],
[21,4,336,202,20,26,-286.823639,61.062431,-0.169879,1.0,1.0,10,13],
[25,4,278,202,34,28,-343.200989,58.494148,-0.169879,1.0,1.0,17,14],
[20,4,414,202,22,6,-336.729736,115.407448,-0.169879,1.0,1.0,11,3],
[22,4,1014,92,4,6,-282.571869,65.850166,-0.169879,1.0,1.0,2,3],
[26,4,1012,84,6,6,-335.823334,62.803467,-0.169879,1.0,1.0,3,3],
[23,4,650,100,4,4,-289.132965,62.695515,-0.169879,1.0,1.0,2,2],
[27,4,1002,96,10,4,-346.495941,59.958172,-0.169879,1.0,1.0,5,2],
[18,4,798,84,106,150,-396.225830,42.296455,-0.173876,1.0,1.0,58,34],
[19,4,390,100,162,78,-330.046417,23.210190,-0.169879,1.0,1.0,81,39],
[34,4,2,180,236,30,-377.163025,162.088455,-0.186750,1.0,1.0,118,15],
[35,4,512,180,40,54,-256.410217,174.727982,-0.256563,1.0,1.0,20,27],
[36,4,1002,84,8,10,-249.639343,176.504288,-0.256563,1.0,1.0,4,5],
[37,4,1014,100,6,2,-253.968170,173.300964,-0.256563,1.0,1.0,3,1],
[29,4,390,2,266,96,-340.859314,15.267807,-0.169879,1.0,1.0,133,48],
[31,4,906,146,76,96,-396.110748,17.965679,-0.164503,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.020944,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-351.937836,151.583725,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-340.293274,29.933975,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-355.645844,19.103500,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-327.833496,119.334351,0.139626,1.0,1.0,20,13],
[13,4,2,2,210,176,-378.0,180.0,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-391.051239,110.949409,-0.767945,1.0,1.0,40,13],
[16,4,658,84,138,126,-353.547638,110.861862,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-284.040283,62.192287,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-340.405060,59.361645,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-334.198792,116.304443,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-279.810852,66.999756,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-333.047546,63.705254,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-286.357208,63.814606,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-343.706787,60.810314,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-393.353943,42.917343,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-327.086426,24.139297,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-374.432526,162.491943,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-253.747543,175.763565,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-246.986069,177.575302,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-251.298050,174.349350,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-337.862213,16.146667,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-393.125610,18.587358,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.017453,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-351.652130,151.726578,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-340.098389,30.091988,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-355.450958,19.261513,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-327.690643,119.405777,0.140873,1.0,1.0,20,13],
[13,4,2,2,210,176,-377.857147,180.071426,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-390.872620,111.094856,-0.769192,1.0,1.0,40,13],
[16,4,658,84,138,126,-353.352753,111.019875,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-283.845398,62.350300,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-340.210175,59.519657,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-334.003906,116.462456,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-279.615967,67.157768,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-332.852661,63.863266,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-286.162323,63.972618,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-343.511902,60.968327,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-393.159058,43.075356,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-326.891541,24.297310,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-374.146820,162.634796,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-253.461838,175.906418,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-246.700363,177.718155,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-251.012344,174.492203,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-337.667328,16.304680,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-392.930725,18.745371,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.013963,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-351.366394,151.869446,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-339.903503,30.250008,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-355.256073,19.419533,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-327.547791,119.477203,0.142120,1.0,1.0,20,13],
[13,4,2,2,210,176,-377.714294,180.142853,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-390.693970,111.240295,-0.770438,1.0,1.0,40,13],
[16,4,658,84,138,126,-353.157867,111.177895,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-283.650513,62.508320,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-340.015289,59.677677,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-333.809021,116.620476,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-279.421082,67.315788,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-332.657776,64.021286,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-285.967438,64.130638,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-343.317017,61.126347,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-392.964172,43.233376,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-326.696655,24.455330,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-373.861084,162.777664,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-253.176102,176.049286,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-246.414627,177.861023,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-250.726608,174.635071,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-337.472443,16.462700,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-392.735840,18.903391,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.010472,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-351.080688,152.012299,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-339.708618,30.408035,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-355.061188,19.577560,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-327.404938,119.548645,0.143366,1.0,1.0,20,13],
[13,4,2,2,210,176,-377.571442,180.214294,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-390.515320,111.385757,-0.771685,1.0,1.0,40,13],
[16,4,658,84,138,126,-352.962982,111.335922,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-283.455627,62.666348,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-339.820404,59.835705,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-333.614136,116.778503,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-279.226196,67.473816,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-332.462891,64.179314,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-285.772552,64.288666,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-343.122131,61.284374,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-392.769287,43.391403,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-326.501770,24.613358,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-373.575378,162.920517,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-252.890396,176.192139,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-246.128922,178.003876,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-250.440903,174.777924,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-337.277557,16.620728,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-392.540955,19.061419,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.006981,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-350.794983,152.155151,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-339.513733,30.566032,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-354.866302,19.735558,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-327.262054,119.620056,0.144613,1.0,1.0,20,13],
[13,4,2,2,210,176,-377.428558,180.285706,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-390.336639,111.531181,-0.772932,1.0,1.0,40,13],
[16,4,658,84,138,126,-352.768097,111.493919,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-283.260742,62.824345,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-339.625519,59.993702,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-333.419250,116.936501,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-279.031311,67.631813,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-332.268005,64.337311,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-285.577667,64.446663,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-342.927246,61.442371,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-392.574402,43.549400,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-326.306885,24.771355,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-373.289673,163.063370,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-252.604691,176.334991,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-245.843216,178.146729,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-250.155197,174.920776,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-337.082672,16.778725,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-392.346069,19.219416,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.003491,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-350.509277,152.298004,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-339.318848,30.724060,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-354.671417,19.893585,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-327.119202,119.691498,0.145860,1.0,1.0,20,13],
[13,4,2,2,210,176,-377.285706,180.357147,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-390.158020,111.676636,-0.774178,1.0,1.0,40,13],
[16,4,658,84,138,126,-352.573212,111.651947,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-283.065857,62.982372,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-339.430634,60.151730,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-333.224365,117.094528,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-278.836426,67.789841,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-332.073120,64.495338,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-285.382782,64.604691,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-342.732361,61.600399,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-392.379517,43.707428,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-326.112000,24.929382,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-373.003967,163.206223,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-252.318985,176.477844,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-245.557510,178.289581,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-249.869492,175.063629,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-336.887787,16.936752,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-392.151184,19.377443,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.000000,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-350.223541,152.440872,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-339.123962,30.882072,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-354.476532,20.051598,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-326.976349,119.762924,0.147106,1.0,1.0,20,13],
[13,4,2,2,210,176,-377.142853,180.428574,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-389.979370,111.822075,-0.775425,1.0,1.0,40,13],
[16,4,658,84,138,126,-352.378326,111.809959,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-282.870972,63.140385,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-339.235748,60.309742,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-333.029480,117.252541,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-278.641541,67.947853,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-331.878235,64.653351,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-285.187897,64.762703,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-342.537476,61.758411,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-392.184631,43.865440,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-325.917114,25.087395,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-372.718231,163.349091,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-252.033249,176.620712,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-245.271774,178.432449,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-249.583755,175.206497,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-336.692902,17.094765,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-391.956299,19.535456,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.003491,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-349.937836,152.583725,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-338.929077,31.040085,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-354.281647,20.209610,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-326.833496,119.834351,0.148353,1.0,1.0,20,13],
[13,4,2,2,210,176,-377.0,180.500000,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-389.800720,111.967514,-0.776672,1.0,1.0,40,13],
[16,4,658,84,138,126,-352.183441,111.967972,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-282.676086,63.298397,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-339.040863,60.467754,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-332.834595,117.410553,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-278.446655,68.105865,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-331.683350,64.811363,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-284.993011,64.920715,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-342.342590,61.916424,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-391.989746,44.023453,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-325.722229,25.245407,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-372.432526,163.491943,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-251.747543,176.763565,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-244.986069,178.575302,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-249.298050,175.349350,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-336.498016,17.252777,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-391.761414,19.693468,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.006981,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-349.652130,152.726578,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-338.734192,31.198097,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-354.086761,20.367622,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-326.690643,119.905777,0.149600,1.0,1.0,20,13],
[13,4,2,2,210,176,-376.857147,180.571426,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-389.622101,112.112961,-0.777918,1.0,1.0,40,13],
[16,4,658,84,138,126,-351.988556,112.125984,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-282.481201,63.456409,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-338.845978,60.625767,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-332.639709,117.568565,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-278.251770,68.263878,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-331.488464,64.969376,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-284.798126,65.078728,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-342.147705,62.074436,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-391.794861,44.181465,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-325.527344,25.403419,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-372.146820,163.634796,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-251.461838,176.906418,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-244.700363,178.718155,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-249.012344,175.492203,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-336.303131,17.410789,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-391.566528,19.851480,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.010472,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-349.366394,152.869446,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-338.539337,31.356117,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-353.891907,20.525642,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-326.547791,119.977203,0.150846,1.0,1.0,20,13],
[13,4,2,2,210,176,-376.714294,180.642853,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-389.443451,112.258400,-0.779165,1.0,1.0,40,13],
[16,4,658,84,138,126,-351.793701,112.284004,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-282.286346,63.614429,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-338.651123,60.783787,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-332.444855,117.726585,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-278.056915,68.421898,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-331.293610,65.127396,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-284.603271,65.236748,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-341.952850,62.232456,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-391.600006,44.339485,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-325.332489,25.561440,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-371.861084,163.777664,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-251.176102,177.049286,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-244.414627,178.861023,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-248.726608,175.635071,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-336.108276,17.568810,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-391.371674,20.009501,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.013963,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-349.080688,153.012299,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-338.344452,31.514145,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-353.697021,20.683670,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-326.404938,120.048645,0.152093,1.0,1.0,20,13],
[13,4,2,2,210,176,-376.571442,180.714294,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-389.264801,112.403854,-0.780412,1.0,1.0,40,13],
[16,4,658,84,138,126,-351.598816,112.442032,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-282.091461,63.772457,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-338.456238,60.941814,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-332.249969,117.884613,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-277.862030,68.579926,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-331.098724,65.285423,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-284.408386,65.394775,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-341.757965,62.390484,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-391.405121,44.497513,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-325.137604,25.719467,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-371.575378,163.920517,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-250.890396,177.192139,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-244.128922,179.003876,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-248.440903,175.777924,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-335.913391,17.726837,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-391.176788,20.167528,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.017453,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-348.794983,153.155151,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-338.149536,31.672142,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-353.502106,20.841667,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-326.262054,120.120056,0.153340,1.0,1.0,20,13],
[13,4,2,2,210,176,-376.428558,180.785706,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-389.086121,112.549278,-0.781658,1.0,1.0,40,13],
[16,4,658,84,138,126,-351.403900,112.600029,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-281.896545,63.930454,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-338.261322,61.099812,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-332.055054,118.042610,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-277.667114,68.737923,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-330.903809,65.443420,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-284.213470,65.552773,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-341.563049,62.548481,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-391.210205,44.655510,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-324.942688,25.877464,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-371.289673,164.063370,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-250.604691,177.334991,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-243.843216,179.146729,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-248.155197,175.920776,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-335.718475,17.884834,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-390.981873,20.325525,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.013713,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-348.509277,153.298004,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-337.954651,31.830170,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-353.307220,20.999695,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-326.119202,120.191498,0.154586,1.0,1.0,20,13],
[13,4,2,2,210,176,-376.285706,180.857147,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-388.907501,112.694740,-0.782905,1.0,1.0,40,13],
[16,4,658,84,138,126,-351.209015,112.758057,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-281.701660,64.088486,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-338.066437,61.257839,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-331.860168,118.200638,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-277.472229,68.895958,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-330.708923,65.601448,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-284.018585,65.710808,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-341.368164,62.706509,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-391.015320,44.813538,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-324.747803,26.035492,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-371.003967,164.206223,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-250.318985,177.477844,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-243.557510,179.289581,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-247.869492,176.063629,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-335.523590,18.042862,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-390.786987,20.483553,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.009973,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-348.223541,153.440872,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-337.759766,31.988182,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-353.112335,21.157707,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-325.976349,120.262924,0.155833,1.0,1.0,20,13],
[13,4,2,2,210,176,-376.142853,180.928574,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-388.728851,112.840179,-0.784151,1.0,1.0,40,13],
[16,4,658,84,138,126,-351.014130,112.916069,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-281.506775,64.246490,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-337.871552,61.415852,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-331.665283,118.358650,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-277.277344,69.053963,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-330.514038,65.759460,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-283.823700,65.868813,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-341.173279,62.864521,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-390.820435,44.971550,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-324.552917,26.193504,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-370.718231,164.349091,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-250.033249,177.620712,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-243.271774,179.432449,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-247.583755,176.206497,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-335.328705,18.200874,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-390.592102,20.641565,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.006233,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-347.937836,153.583725,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-337.564880,32.146194,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-352.917450,21.315720,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-325.833496,120.334351,0.157080,1.0,1.0,20,13],
[13,4,2,2,210,176,-376.0,181.0,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-388.550201,112.985619,-0.785398,1.0,1.0,40,13],
[16,4,658,84,138,126,-350.819244,113.074081,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-281.311890,64.404510,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-337.676666,61.573864,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-331.470398,118.516663,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-277.082458,69.211983,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-330.319153,65.917473,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-283.628815,66.026833,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-340.978394,63.022533,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-390.625549,45.129562,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-324.358032,26.351517,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-370.432526,164.491943,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-249.747543,177.763565,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-242.986069,179.575302,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-247.298050,176.349350,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-335.133820,18.358887,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-390.397217,20.799578,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.002493,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-347.937836,153.583725,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-337.564880,32.146194,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-352.917450,21.315720,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-325.833496,120.334351,0.157080,1.0,1.0,20,13],
[13,4,2,2,210,176,-376.0,181.0,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-388.514404,113.059631,-0.785398,1.0,1.0,40,13],
[16,4,658,84,138,126,-350.819244,113.074081,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-281.311890,64.404510,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-337.676666,61.573864,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-331.470398,118.516663,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-277.082458,69.211983,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-330.319153,65.917473,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-283.628815,66.026833,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-340.978394,63.022533,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-390.625549,45.129562,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-324.358032,26.351517,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-370.432526,164.491943,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-249.747543,177.763565,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-242.986069,179.575302,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-247.298050,176.349350,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-335.133820,18.358887,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-390.397217,20.799578,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.001247,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-347.937836,153.583725,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-337.564880,32.146194,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-352.917450,21.315720,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-325.833496,120.334351,0.157080,1.0,1.0,20,13],
[13,4,2,2,210,176,-376.0,181.0,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-388.478638,113.133652,-0.785398,1.0,1.0,40,13],
[16,4,658,84,138,126,-350.819244,113.074081,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-281.311890,64.404510,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-337.676666,61.573864,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-331.470398,118.516663,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-277.082458,69.211983,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-330.319153,65.917473,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-283.628815,66.026833,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-340.978394,63.022533,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-390.625549,45.129562,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-324.358032,26.351517,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-370.432526,164.491943,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-249.747543,177.763565,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-242.986069,179.575302,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-247.298050,176.349350,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-335.133820,18.358887,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-390.397217,20.799578,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.004987,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-347.937836,153.583725,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-337.564880,32.146194,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-352.917450,21.315720,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-325.833496,120.334351,0.157080,1.0,1.0,20,13],
[13,4,2,2,210,176,-376.0,181.0,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-388.442841,113.207664,-0.785398,1.0,1.0,40,13],
[16,4,658,84,138,126,-350.819244,113.074081,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-281.311890,64.404510,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-337.676666,61.573864,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-331.470398,118.516663,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-277.082458,69.211983,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-330.319153,65.917473,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-283.628815,66.026833,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-340.978394,63.022533,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-390.625549,45.129562,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-324.358032,26.351517,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-370.432526,164.491943,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-249.747543,177.763565,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-242.986069,179.575302,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-247.298050,176.349350,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-335.133820,18.358887,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-390.397217,20.799578,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.008727,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-347.937836,153.583725,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-337.564880,32.146194,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-352.917450,21.315720,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-325.833496,120.334351,0.157080,1.0,1.0,20,13],
[13,4,2,2,210,176,-376.0,181.0,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-388.407043,113.281677,-0.785398,1.0,1.0,40,13],
[16,4,658,84,138,126,-350.819244,113.074081,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-281.311890,64.404510,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-337.676666,61.573864,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-331.470398,118.516663,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-277.082458,69.211983,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-330.319153,65.917473,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-283.628815,66.026833,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-340.978394,63.022533,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-390.625549,45.129562,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-324.358032,26.351517,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-370.432526,164.491943,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-249.747543,177.763565,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-242.986069,179.575302,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-247.298050,176.349350,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-335.133820,18.358887,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-390.397217,20.799578,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.012467,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-347.937836,153.583725,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-337.564880,32.146194,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-352.917450,21.315720,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-325.833496,120.334351,0.157080,1.0,1.0,20,13],
[13,4,2,2,210,176,-376.0,181.0,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-388.371277,113.355690,-0.785398,1.0,1.0,40,13],
[16,4,658,84,138,126,-350.819244,113.074081,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-281.311890,64.404510,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-337.676666,61.573864,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-331.470398,118.516663,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-277.082458,69.211983,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-330.319153,65.917473,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-283.628815,66.026833,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-340.978394,63.022533,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-390.625549,45.129562,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-324.358032,26.351517,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-370.432526,164.491943,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-249.747543,177.763565,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-242.986069,179.575302,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-247.298050,176.349350,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-335.133820,18.358887,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-390.397217,20.799578,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.016207,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-347.937836,153.583725,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-337.564880,32.146194,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-352.917450,21.315720,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-325.833496,120.334351,0.157080,1.0,1.0,20,13],
[13,4,2,2,210,176,-376.0,181.0,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-388.335480,113.429703,-0.785398,1.0,1.0,40,13],
[16,4,658,84,138,126,-350.819244,113.074081,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-281.311890,64.404510,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-337.676666,61.573864,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-331.470398,118.516663,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-277.082458,69.211983,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-330.319153,65.917473,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-283.628815,66.026833,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-340.978394,63.022533,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-390.625549,45.129562,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-324.358032,26.351517,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-370.432526,164.491943,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-249.747543,177.763565,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-242.986069,179.575302,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-247.298050,176.349350,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-335.133820,18.358887,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-390.397217,20.799578,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.019947,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-347.937836,153.583725,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-337.564880,32.146194,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-352.917450,21.315720,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-325.833496,120.334351,0.157080,1.0,1.0,20,13],
[13,4,2,2,210,176,-376.0,181.0,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-388.299683,113.503723,-0.785398,1.0,1.0,40,13],
[16,4,658,84,138,126,-350.819244,113.074081,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-281.311890,64.404510,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-337.676666,61.573864,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-331.470398,118.516663,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-277.082458,69.211983,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-330.319153,65.917473,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-283.628815,66.026833,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-340.978394,63.022533,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-390.625549,45.129562,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-324.358032,26.351517,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-370.432526,164.491943,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-249.747543,177.763565,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-242.986069,179.575302,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-247.298050,176.349350,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-335.133820,18.358887,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-390.397217,20.799578,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.023687,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-347.937836,153.583725,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-337.564880,32.146194,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-352.917450,21.315720,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-325.833496,120.334351,0.157080,1.0,1.0,20,13],
[13,4,2,2,210,176,-376.0,181.0,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-388.263885,113.577736,-0.785398,1.0,1.0,40,13],
[16,4,658,84,138,126,-350.819244,113.074081,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-281.311890,64.404510,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-337.676666,61.573864,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-331.470398,118.516663,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-277.082458,69.211983,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-330.319153,65.917473,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-283.628815,66.026833,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-340.978394,63.022533,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-390.625549,45.129562,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-324.358032,26.351517,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-370.432526,164.491943,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-249.747543,177.763565,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-242.986069,179.575302,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-247.298050,176.349350,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-335.133820,18.358887,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-390.397217,20.799578,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.027427,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-347.937836,153.583725,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-337.564880,32.146194,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-352.917450,21.315720,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-325.833496,120.334351,0.157080,1.0,1.0,20,13],
[13,4,2,2,210,176,-376.0,181.0,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-388.228119,113.651749,-0.785398,1.0,1.0,40,13],
[16,4,658,84,138,126,-350.819244,113.074081,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-281.311890,64.404510,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-337.676666,61.573864,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-331.470398,118.516663,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-277.082458,69.211983,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-330.319153,65.917473,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-283.628815,66.026833,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-340.978394,63.022533,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-390.625549,45.129562,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-324.358032,26.351517,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-370.432526,164.491943,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-249.747543,177.763565,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-242.986069,179.575302,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-247.298050,176.349350,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-335.133820,18.358887,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-390.397217,20.799578,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.031167,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-347.937836,153.583725,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-337.564880,32.146194,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-352.917450,21.315720,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-325.833496,120.334351,0.157080,1.0,1.0,20,13],
[13,4,2,2,210,176,-376.0,181.0,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-388.192322,113.725761,-0.785398,1.0,1.0,40,13],
[16,4,658,84,138,126,-350.819244,113.074081,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-281.311890,64.404510,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-337.676666,61.573864,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-331.470398,118.516663,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-277.082458,69.211983,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-330.319153,65.917473,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-283.628815,66.026833,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-340.978394,63.022533,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-390.625549,45.129562,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-324.358032,26.351517,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-370.432526,164.491943,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-249.747543,177.763565,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-242.986069,179.575302,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-247.298050,176.349350,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-335.133820,18.358887,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-390.397217,20.799578,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.034907,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-347.937836,153.583725,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-337.564880,32.146194,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-352.917450,21.315720,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-325.833496,120.334351,0.157080,1.0,1.0,20,13],
[13,4,2,2,210,176,-376.0,181.0,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-388.156525,113.799782,-0.785398,1.0,1.0,40,13],
[16,4,658,84,138,126,-350.819244,113.074081,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-281.311890,64.404510,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-337.676666,61.573864,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-331.470398,118.516663,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-277.082458,69.211983,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-330.319153,65.917473,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-283.628815,66.026833,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-340.978394,63.022533,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-390.625549,45.129562,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-324.358032,26.351517,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-370.432526,164.491943,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-249.747543,177.763565,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-242.986069,179.575302,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-247.298050,176.349350,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-335.133820,18.358887,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-390.397217,20.799578,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.031416,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-347.937836,153.583725,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-337.564880,32.146194,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-352.917450,21.315720,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-325.833496,120.334351,0.157080,1.0,1.0,20,13],
[13,4,2,2,210,176,-376.0,181.0,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-388.120728,113.873795,-0.785398,1.0,1.0,40,13],
[16,4,658,84,138,126,-350.819244,113.074081,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-281.311890,64.404510,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-337.676666,61.573864,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-331.470398,118.516663,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-277.082458,69.211983,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-330.319153,65.917473,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-283.628815,66.026833,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-340.978394,63.022533,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-390.625549,45.129562,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-324.358032,26.351517,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-370.432526,164.491943,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-249.747543,177.763565,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-242.986069,179.575302,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-247.298050,176.349350,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-335.133820,18.358887,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-390.397217,20.799578,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.027925,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-347.937836,153.583725,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-337.564880,32.146194,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-352.917450,21.315720,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-325.833496,120.334351,0.157080,1.0,1.0,20,13],
[13,4,2,2,210,176,-376.0,181.0,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-388.084961,113.947807,-0.785398,1.0,1.0,40,13],
[16,4,658,84,138,126,-350.819244,113.074081,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-281.311890,64.404510,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-337.676666,61.573864,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-331.470398,118.516663,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-277.082458,69.211983,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-330.319153,65.917473,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-283.628815,66.026833,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-340.978394,63.022533,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-390.625549,45.129562,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-324.358032,26.351517,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-370.432526,164.491943,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-249.747543,177.763565,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-242.986069,179.575302,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-247.298050,176.349350,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-335.133820,18.358887,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-390.397217,20.799578,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.024435,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-347.937836,153.583725,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-337.564880,32.146194,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-352.917450,21.315720,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-325.833496,120.334351,0.157080,1.0,1.0,20,13],
[13,4,2,2,210,176,-376.0,181.0,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-388.049164,114.021820,-0.785398,1.0,1.0,40,13],
[16,4,658,84,138,126,-350.819244,113.074081,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-281.311890,64.404510,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-337.676666,61.573864,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-331.470398,118.516663,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-277.082458,69.211983,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-330.319153,65.917473,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-283.628815,66.026833,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-340.978394,63.022533,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-390.625549,45.129562,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-324.358032,26.351517,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-370.432526,164.491943,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-249.747543,177.763565,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-242.986069,179.575302,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-247.298050,176.349350,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-335.133820,18.358887,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-390.397217,20.799578,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.020944,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-347.937836,153.583725,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-337.564880,32.146194,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-352.917450,21.315720,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-325.833496,120.334351,0.157080,1.0,1.0,20,13],
[13,4,2,2,210,176,-376.0,181.0,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-388.013367,114.095840,-0.785398,1.0,1.0,40,13],
[16,4,658,84,138,126,-350.819244,113.074081,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-281.311890,64.404510,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-337.676666,61.573864,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-331.470398,118.516663,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-277.082458,69.211983,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-330.319153,65.917473,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-283.628815,66.026833,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-340.978394,63.022533,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-390.625549,45.129562,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-324.358032,26.351517,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-370.432526,164.491943,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-249.747543,177.763565,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-242.986069,179.575302,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-247.298050,176.349350,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-335.133820,18.358887,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-390.397217,20.799578,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.017453,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-347.937836,153.583725,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-337.564880,32.146194,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-352.917450,21.315720,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-325.833496,120.334351,0.157080,1.0,1.0,20,13],
[13,4,2,2,210,176,-376.0,181.0,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-387.977570,114.169853,-0.785398,1.0,1.0,40,13],
[16,4,658,84,138,126,-350.819244,113.074081,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-281.311890,64.404510,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-337.676666,61.573864,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-331.470398,118.516663,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-277.082458,69.211983,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-330.319153,65.917473,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-283.628815,66.026833,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-340.978394,63.022533,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-390.625549,45.129562,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-324.358032,26.351517,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-370.432526,164.491943,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-249.747543,177.763565,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-242.986069,179.575302,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-247.298050,176.349350,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-335.133820,18.358887,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-390.397217,20.799578,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.013963,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-347.937836,153.583725,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-337.564880,32.146194,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-352.917450,21.315720,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-325.833496,120.334351,0.157080,1.0,1.0,20,13],
[13,4,2,2,210,176,-376.0,181.0,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-387.941803,114.243866,-0.785398,1.0,1.0,40,13],
[16,4,658,84,138,126,-350.819244,113.074081,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-281.311890,64.404510,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-337.676666,61.573864,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-331.470398,118.516663,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-277.082458,69.211983,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-330.319153,65.917473,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-283.628815,66.026833,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-340.978394,63.022533,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-390.625549,45.129562,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-324.358032,26.351517,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-370.432526,164.491943,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-249.747543,177.763565,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-242.986069,179.575302,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-247.298050,176.349350,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-335.133820,18.358887,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-390.397217,20.799578,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.010472,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-347.937836,153.583725,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-337.564880,32.146194,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-352.917450,21.315720,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-325.833496,120.334351,0.157080,1.0,1.0,20,13],
[13,4,2,2,210,176,-376.0,181.0,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-387.906006,114.317879,-0.785398,1.0,1.0,40,13],
[16,4,658,84,138,126,-350.819244,113.074081,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-281.311890,64.404510,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-337.676666,61.573864,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-331.470398,118.516663,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-277.082458,69.211983,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-330.319153,65.917473,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-283.628815,66.026833,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-340.978394,63.022533,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-390.625549,45.129562,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-324.358032,26.351517,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-370.432526,164.491943,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-249.747543,177.763565,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-242.986069,179.575302,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-247.298050,176.349350,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-335.133820,18.358887,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-390.397217,20.799578,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.006981,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-347.937836,153.583725,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-337.564880,32.146194,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-352.917450,21.315720,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-325.833496,120.334351,0.157080,1.0,1.0,20,13],
[13,4,2,2,210,176,-376.0,181.0,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-387.870209,114.391891,-0.785398,1.0,1.0,40,13],
[16,4,658,84,138,126,-350.819244,113.074081,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-281.311890,64.404510,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-337.676666,61.573864,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-331.470398,118.516663,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-277.082458,69.211983,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-330.319153,65.917473,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-283.628815,66.026833,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-340.978394,63.022533,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-390.625549,45.129562,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-324.358032,26.351517,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-370.432526,164.491943,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-249.747543,177.763565,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-242.986069,179.575302,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-247.298050,176.349350,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-335.133820,18.358887,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-390.397217,20.799578,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.003491,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-342.0,254.0,0.0,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.0,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.0,297.0,0.0,1.0,1.0,4,5],
[11,4,1002,2,18,60,-396.861420,255.086365,-0.151425,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.151425,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.416473,298.499390,-0.151425,1.0,1.0,4,5],
[33,4,240,180,270,20,-347.937836,153.583725,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-337.564880,32.146194,-0.174533,1.0,1.0,133,40],
[17,4,214,2,174,170,-352.917450,21.315720,-0.172543,1.0,1.0,62,27],
[15,4,554,100,70,140,-325.833496,120.334351,0.157080,1.0,1.0,20,13],
[13,4,2,2,210,176,-376.0,181.0,-0.244346,1.0,1.0,104,104],
[14,4,926,2,74,142,-387.834412,114.465912,-0.785398,1.0,1.0,40,13],
[16,4,658,84,138,126,-350.819244,113.074081,-0.174533,1.0,1.0,60,120],
[21,4,336,202,20,26,-281.311890,64.404510,-0.174533,1.0,1.0,10,13],
[25,4,278,202,34,28,-337.676666,61.573864,-0.174533,1.0,1.0,17,14],
[20,4,414,202,22,6,-331.470398,118.516663,-0.174533,1.0,1.0,11,3],
[22,4,1014,92,4,6,-277.082458,69.211983,-0.174533,1.0,1.0,2,3],
[26,4,1012,84,6,6,-330.319153,65.917473,-0.174533,1.0,1.0,3,3],
[23,4,650,100,4,4,-283.628815,66.026833,-0.174533,1.0,1.0,2,2],
[27,4,1002,96,10,4,-340.978394,63.022533,-0.174533,1.0,1.0,5,2],
[18,4,798,84,106,150,-390.625549,45.129562,-0.178530,1.0,1.0,58,34],
[19,4,390,100,162,78,-324.358032,26.351517,-0.174533,1.0,1.0,81,39],
[34,4,2,180,236,30,-370.432526,164.491943,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-249.747543,177.763565,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-242.986069,179.575302,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-247.298050,176.349350,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-335.133820,18.358887,-0.174533,1.0,1.0,133,48],
[31,4,906,146,76,96,-390.397217,20.799578,-0.169157,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.000000,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-340.551453,254.102844,-0.043470,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.045187,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.415375,296.844940,-0.043470,1.0,1.0,4,5],
[11,4,1002,2,18,60,-394.996735,255.140320,-0.202400,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.093375,1.0,1.0,8,11],
[12,4,358,202,26,14,-397.763123,298.468689,-0.152873,1.0,1.0,4,5],
[33,4,240,180,270,20,-347.937836,153.583725,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-337.032898,35.038979,-0.180351,1.0,1.0,133,40],
[17,4,214,2,174,170,-352.322174,24.119362,-0.178361,1.0,1.0,62,27],
[15,4,554,100,70,140,-325.814758,123.293884,0.151262,1.0,1.0,20,13],
[13,4,2,2,210,176,-376.333344,183.666656,-0.250164,1.0,1.0,104,104],
[14,4,926,2,74,142,-387.745148,117.139061,-0.826123,1.0,1.0,40,13],
[16,4,658,84,138,126,-350.757843,115.888382,-0.180351,1.0,1.0,60,120],
[21,4,336,202,20,26,-280.968506,67.624008,-0.180351,1.0,1.0,10,13],
[25,4,278,202,34,28,-337.315857,64.465500,-0.180351,1.0,1.0,17,14],
[20,4,414,202,22,6,-331.440979,121.443436,-0.180351,1.0,1.0,11,3],
[22,4,1014,92,4,6,-276.767090,72.456001,-0.180351,1.0,1.0,2,3],
[26,4,1012,84,6,6,-329.983734,68.851837,-0.180351,1.0,1.0,3,3],
[23,4,650,100,4,4,-283.294830,69.232819,-0.180351,1.0,1.0,2,2],
[27,4,1002,96,10,4,-340.625946,65.894936,-0.180351,1.0,1.0,5,2],
[18,4,798,84,106,150,-390.168182,47.713425,-0.183948,1.0,1.0,58,34],
[19,4,390,100,162,78,-323.792542,29.321228,-0.180351,1.0,1.0,81,39],
[34,4,2,180,236,30,-370.432526,164.491943,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-249.747543,177.763565,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-242.986069,179.575302,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-247.298050,176.349350,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-334.521667,21.266045,-0.180351,1.0,1.0,133,48],
[31,4,906,146,76,96,-389.798340,23.385187,-0.174975,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.003491,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-339.099762,254.140167,-0.086941,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.090373,1.0,1.0,14,8],
[9,4,386,202,26,14,-347.814606,296.543610,-0.086941,1.0,1.0,4,5],
[11,4,1002,2,18,60,-393.132050,255.085999,-0.253375,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,-0.035325,1.0,1.0,8,11],
[12,4,358,202,26,14,-398.102539,298.217133,-0.154322,1.0,1.0,4,5],
[33,4,240,180,270,20,-347.937836,153.583725,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-336.502228,37.936821,-0.186168,1.0,1.0,133,40],
[17,4,214,2,174,170,-351.727722,26.928444,-0.184179,1.0,1.0,62,27],
[15,4,554,100,70,140,-325.797668,126.255493,0.145444,1.0,1.0,20,13],
[13,4,2,2,210,176,-376.666656,186.333344,-0.255982,1.0,1.0,104,104],
[14,4,926,2,74,142,-387.656281,119.814911,-0.866847,1.0,1.0,40,13],
[16,4,658,84,138,126,-350.697296,118.705009,-0.186168,1.0,1.0,60,120],
[21,4,336,202,20,26,-280.628357,70.847466,-0.186168,1.0,1.0,10,13],
[25,4,278,202,34,28,-336.956390,67.361191,-0.186168,1.0,1.0,17,14],
[20,4,414,202,22,6,-331.413086,124.372353,-0.186168,1.0,1.0,11,3],
[22,4,1014,92,4,6,-276.455139,75.703819,-0.186168,1.0,1.0,2,3],
[26,4,1012,84,6,6,-329.649902,71.790115,-0.186168,1.0,1.0,3,3],
[23,4,650,100,4,4,-282.963989,72.442719,-0.186168,1.0,1.0,2,2],
[27,4,1002,96,10,4,-340.274750,68.771347,-0.186168,1.0,1.0,5,2],
[18,4,798,84,106,150,-389.710358,50.301926,-0.189366,1.0,1.0,58,34],
[19,4,390,100,162,78,-323.228821,32.296196,-0.186168,1.0,1.0,81,39],
[34,4,2,180,236,30,-370.432526,164.491943,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-249.747543,177.763565,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-242.986069,179.575302,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-247.298050,176.349350,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-333.910889,24.178734,-0.186168,1.0,1.0,133,48],
[31,4,906,146,76,96,-389.198944,25.976255,-0.180793,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.006981,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-337.647827,254.111862,-0.130411,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.135560,1.0,1.0,14,8],
[9,4,386,202,26,14,-348.197174,296.096527,-0.130411,1.0,1.0,4,5],
[11,4,1002,2,18,60,-391.273651,254.923569,-0.304351,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,0.022724,1.0,1.0,8,11],
[12,4,358,202,26,14,-398.435364,297.745422,-0.155771,1.0,1.0,4,5],
[33,4,240,180,270,20,-347.937836,153.583725,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-335.972931,40.839661,-0.191986,1.0,1.0,133,40],
[17,4,214,2,174,170,-351.134125,29.742889,-0.189997,1.0,1.0,62,27],
[15,4,554,100,70,140,-325.782379,129.219116,0.139626,1.0,1.0,20,13],
[13,4,2,2,210,176,-377.0,189.0,-0.261799,1.0,1.0,104,104],
[14,4,926,2,74,142,-387.567963,122.493385,-0.907571,1.0,1.0,40,13],
[16,4,658,84,138,126,-350.637634,121.523895,-0.191986,1.0,1.0,60,120],
[21,4,336,202,20,26,-280.291473,74.074806,-0.191986,1.0,1.0,10,13],
[25,4,278,202,34,28,-336.598236,70.260895,-0.191986,1.0,1.0,17,14],
[20,4,414,202,22,6,-331.386719,127.303329,-0.191986,1.0,1.0,11,3],
[22,4,1014,92,4,6,-276.146576,78.955360,-0.191986,1.0,1.0,2,3],
[26,4,1012,84,6,6,-329.317657,74.732246,-0.191986,1.0,1.0,3,3],
[23,4,650,100,4,4,-282.636353,75.656441,-0.191986,1.0,1.0,2,2],
[27,4,1002,96,10,4,-339.924744,71.651726,-0.191986,1.0,1.0,5,2],
[18,4,798,84,106,150,-389.252075,52.895004,-0.194784,1.0,1.0,58,34],
[19,4,390,100,162,78,-322.666931,35.276352,-0.191986,1.0,1.0,81,39],
[34,4,2,180,236,30,-370.432526,164.491943,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-249.747543,177.763565,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-242.986069,179.575302,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-247.298050,176.349350,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-333.301605,27.096878,-0.191986,1.0,1.0,133,48],
[31,4,906,146,76,96,-388.599182,28.572718,-0.186611,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.010472,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-337.647827,254.111862,-0.130411,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.135560,1.0,1.0,14,8],
[9,4,386,202,26,14,-348.197174,296.096527,-0.130411,1.0,1.0,4,5],
[11,4,1002,2,18,60,-391.273651,254.923569,-0.304351,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,0.022724,1.0,1.0,8,11],
[12,4,358,202,26,14,-398.435364,297.745422,-0.155771,1.0,1.0,4,5],
[33,4,240,180,270,20,-347.937836,153.583725,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-336.115784,41.268234,-0.191986,1.0,1.0,133,40],
[17,4,214,2,174,170,-351.276978,30.171463,-0.189997,1.0,1.0,62,27],
[15,4,554,100,70,140,-325.925232,129.647690,0.139626,1.0,1.0,20,13],
[13,4,2,2,210,176,-377.142853,189.428574,-0.261799,1.0,1.0,104,104],
[14,4,926,2,74,142,-387.676331,122.996590,-0.910065,1.0,1.0,40,13],
[16,4,658,84,138,126,-350.780487,121.952469,-0.191986,1.0,1.0,60,120],
[21,4,336,202,20,26,-280.434326,74.503380,-0.191986,1.0,1.0,10,13],
[25,4,278,202,34,28,-336.741089,70.689468,-0.191986,1.0,1.0,17,14],
[20,4,414,202,22,6,-331.529572,127.731903,-0.191986,1.0,1.0,11,3],
[22,4,1014,92,4,6,-276.289429,79.383934,-0.191986,1.0,1.0,2,3],
[26,4,1012,84,6,6,-329.460510,75.160820,-0.191986,1.0,1.0,3,3],
[23,4,650,100,4,4,-282.779205,76.085014,-0.191986,1.0,1.0,2,2],
[27,4,1002,96,10,4,-340.067596,72.080299,-0.191986,1.0,1.0,5,2],
[18,4,798,84,106,150,-389.394928,53.323578,-0.194384,1.0,1.0,58,34],
[19,4,390,100,162,78,-322.809784,35.704926,-0.191986,1.0,1.0,81,39],
[34,4,2,180,236,30,-370.432526,164.491943,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-249.747543,177.763565,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-242.986069,179.575302,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-247.298050,176.349350,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-333.444458,27.525452,-0.191986,1.0,1.0,133,48],
[31,4,906,146,76,96,-388.742035,29.001291,-0.186611,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.013963,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-337.647827,254.111862,-0.130411,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.135560,1.0,1.0,14,8],
[9,4,386,202,26,14,-348.197174,296.096527,-0.130411,1.0,1.0,4,5],
[11,4,1002,2,18,60,-391.273651,254.923569,-0.304351,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,0.022724,1.0,1.0,8,11],
[12,4,358,202,26,14,-398.435364,297.745422,-0.155771,1.0,1.0,4,5],
[33,4,240,180,270,20,-347.937836,153.583725,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-336.258636,41.696808,-0.191986,1.0,1.0,133,40],
[17,4,214,2,174,170,-351.419830,30.600037,-0.189997,1.0,1.0,62,27],
[15,4,554,100,70,140,-326.068085,130.076263,0.139626,1.0,1.0,20,13],
[13,4,2,2,210,176,-377.285706,189.857147,-0.261799,1.0,1.0,104,104],
[14,4,926,2,74,142,-387.784698,123.499786,-0.912558,1.0,1.0,40,13],
[16,4,658,84,138,126,-350.923340,122.381042,-0.191986,1.0,1.0,60,120],
[21,4,336,202,20,26,-280.577179,74.931953,-0.191986,1.0,1.0,10,13],
[25,4,278,202,34,28,-336.883942,71.118042,-0.191986,1.0,1.0,17,14],
[20,4,414,202,22,6,-331.672424,128.160477,-0.191986,1.0,1.0,11,3],
[22,4,1014,92,4,6,-276.432281,79.812508,-0.191986,1.0,1.0,2,3],
[26,4,1012,84,6,6,-329.603363,75.589394,-0.191986,1.0,1.0,3,3],
[23,4,650,100,4,4,-282.922058,76.513588,-0.191986,1.0,1.0,2,2],
[27,4,1002,96,10,4,-340.210449,72.508873,-0.191986,1.0,1.0,5,2],
[18,4,798,84,106,150,-389.537781,53.752151,-0.193985,1.0,1.0,58,34],
[19,4,390,100,162,78,-322.952637,36.133499,-0.191986,1.0,1.0,81,39],
[34,4,2,180,236,30,-370.432526,164.491943,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-249.747543,177.763565,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-242.986069,179.575302,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-247.298050,176.349350,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-333.587311,27.954025,-0.191986,1.0,1.0,133,48],
[31,4,906,146,76,96,-388.884888,29.429865,-0.186611,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.017453,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-337.647827,254.111862,-0.130411,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.135560,1.0,1.0,14,8],
[9,4,386,202,26,14,-348.197174,296.096527,-0.130411,1.0,1.0,4,5],
[11,4,1002,2,18,60,-391.273651,254.923569,-0.304351,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,0.022724,1.0,1.0,8,11],
[12,4,358,202,26,14,-398.435364,297.745422,-0.155771,1.0,1.0,4,5],
[33,4,240,180,270,20,-347.937836,153.583725,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-336.401489,42.125366,-0.191986,1.0,1.0,133,40],
[17,4,214,2,174,170,-351.562683,31.028595,-0.189997,1.0,1.0,62,27],
[15,4,554,100,70,140,-326.210938,130.504822,0.139626,1.0,1.0,20,13],
[13,4,2,2,210,176,-377.428558,190.285706,-0.261799,1.0,1.0,104,104],
[14,4,926,2,74,142,-387.893066,124.002975,-0.915051,1.0,1.0,40,13],
[16,4,658,84,138,126,-351.066193,122.809601,-0.191986,1.0,1.0,60,120],
[21,4,336,202,20,26,-280.720032,75.360512,-0.191986,1.0,1.0,10,13],
[25,4,278,202,34,28,-337.026794,71.546600,-0.191986,1.0,1.0,17,14],
[20,4,414,202,22,6,-331.815277,128.589035,-0.191986,1.0,1.0,11,3],
[22,4,1014,92,4,6,-276.575134,80.241066,-0.191986,1.0,1.0,2,3],
[26,4,1012,84,6,6,-329.746216,76.017952,-0.191986,1.0,1.0,3,3],
[23,4,650,100,4,4,-283.064911,76.942146,-0.191986,1.0,1.0,2,2],
[27,4,1002,96,10,4,-340.353302,72.937431,-0.191986,1.0,1.0,5,2],
[18,4,798,84,106,150,-389.680634,54.180710,-0.193585,1.0,1.0,58,34],
[19,4,390,100,162,78,-323.095490,36.562057,-0.191986,1.0,1.0,81,39],
[34,4,2,180,236,30,-370.432526,164.491943,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-249.747543,177.763565,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-242.986069,179.575302,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-247.298050,176.349350,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-333.730164,28.382584,-0.191986,1.0,1.0,133,48],
[31,4,906,146,76,96,-389.027740,29.858423,-0.186611,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.013713,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-337.647827,254.111862,-0.130411,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.135560,1.0,1.0,14,8],
[9,4,386,202,26,14,-348.197174,296.096527,-0.130411,1.0,1.0,4,5],
[11,4,1002,2,18,60,-391.273651,254.923569,-0.304351,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,0.022724,1.0,1.0,8,11],
[12,4,358,202,26,14,-398.435364,297.745422,-0.155771,1.0,1.0,4,5],
[33,4,240,180,270,20,-347.937836,153.583725,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-336.544373,42.553955,-0.191986,1.0,1.0,133,40],
[17,4,214,2,174,170,-351.705566,31.457184,-0.189997,1.0,1.0,62,27],
[15,4,554,100,70,140,-326.353821,130.933411,0.139626,1.0,1.0,20,13],
[13,4,2,2,210,176,-377.571442,190.714294,-0.261799,1.0,1.0,104,104],
[14,4,926,2,74,142,-388.001434,124.506195,-0.917545,1.0,1.0,40,13],
[16,4,658,84,138,126,-351.209076,123.238190,-0.191986,1.0,1.0,60,120],
[21,4,336,202,20,26,-280.862915,75.789101,-0.191986,1.0,1.0,10,13],
[25,4,278,202,34,28,-337.169678,71.975189,-0.191986,1.0,1.0,17,14],
[20,4,414,202,22,6,-331.958160,129.017624,-0.191986,1.0,1.0,11,3],
[22,4,1014,92,4,6,-276.718018,80.669655,-0.191986,1.0,1.0,2,3],
[26,4,1012,84,6,6,-329.889099,76.446541,-0.191986,1.0,1.0,3,3],
[23,4,650,100,4,4,-283.207794,77.370735,-0.191986,1.0,1.0,2,2],
[27,4,1002,96,10,4,-340.496185,73.366020,-0.191986,1.0,1.0,5,2],
[18,4,798,84,106,150,-389.823517,54.609299,-0.193185,1.0,1.0,58,34],
[19,4,390,100,162,78,-323.238373,36.990646,-0.191986,1.0,1.0,81,39],
[34,4,2,180,236,30,-370.432526,164.491943,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-249.747543,177.763565,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-242.986069,179.575302,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-247.298050,176.349350,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-333.873047,28.811172,-0.191986,1.0,1.0,133,48],
[31,4,906,146,76,96,-389.170624,30.287012,-0.186611,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.009973,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-337.647827,254.111862,-0.130411,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.135560,1.0,1.0,14,8],
[9,4,386,202,26,14,-348.197174,296.096527,-0.130411,1.0,1.0,4,5],
[11,4,1002,2,18,60,-391.273651,254.923569,-0.304351,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,0.022724,1.0,1.0,8,11],
[12,4,358,202,26,14,-398.435364,297.745422,-0.155771,1.0,1.0,4,5],
[33,4,240,180,270,20,-347.937836,153.583725,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-336.687225,42.982513,-0.191986,1.0,1.0,133,40],
[17,4,214,2,174,170,-351.848419,31.885742,-0.189997,1.0,1.0,62,27],
[15,4,554,100,70,140,-326.496674,131.361969,0.139626,1.0,1.0,20,13],
[13,4,2,2,210,176,-377.714294,191.142853,-0.261799,1.0,1.0,104,104],
[14,4,926,2,74,142,-388.109802,125.009384,-0.920038,1.0,1.0,40,13],
[16,4,658,84,138,126,-351.351929,123.666748,-0.191986,1.0,1.0,60,120],
[21,4,336,202,20,26,-281.005768,76.217659,-0.191986,1.0,1.0,10,13],
[25,4,278,202,34,28,-337.312531,72.403748,-0.191986,1.0,1.0,17,14],
[20,4,414,202,22,6,-332.101013,129.446182,-0.191986,1.0,1.0,11,3],
[22,4,1014,92,4,6,-276.860870,81.098213,-0.191986,1.0,1.0,2,3],
[26,4,1012,84,6,6,-330.031952,76.875099,-0.191986,1.0,1.0,3,3],
[23,4,650,100,4,4,-283.350647,77.799294,-0.191986,1.0,1.0,2,2],
[27,4,1002,96,10,4,-340.639038,73.794579,-0.191986,1.0,1.0,5,2],
[18,4,798,84,106,150,-389.966370,55.037857,-0.192786,1.0,1.0,58,34],
[19,4,390,100,162,78,-323.381226,37.419205,-0.191986,1.0,1.0,81,39],
[34,4,2,180,236,30,-370.432526,164.491943,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-249.747543,177.763565,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-242.986069,179.575302,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-247.298050,176.349350,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-334.015900,29.239731,-0.191986,1.0,1.0,133,48],
[31,4,906,146,76,96,-389.313477,30.715570,-0.186611,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.006233,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-337.647827,254.111862,-0.130411,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.135560,1.0,1.0,14,8],
[9,4,386,202,26,14,-348.197174,296.096527,-0.130411,1.0,1.0,4,5],
[11,4,1002,2,18,60,-391.273651,254.923569,-0.304351,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,0.022724,1.0,1.0,8,11],
[12,4,358,202,26,14,-398.435364,297.745422,-0.155771,1.0,1.0,4,5],
[33,4,240,180,270,20,-347.937836,153.583725,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-336.830078,43.411087,-0.191986,1.0,1.0,133,40],
[17,4,214,2,174,170,-351.991272,32.314316,-0.189997,1.0,1.0,62,27],
[15,4,554,100,70,140,-326.639526,131.790543,0.139626,1.0,1.0,20,13],
[13,4,2,2,210,176,-377.857147,191.571426,-0.261799,1.0,1.0,104,104],
[14,4,926,2,74,142,-388.218170,125.512581,-0.922531,1.0,1.0,40,13],
[16,4,658,84,138,126,-351.494781,124.095322,-0.191986,1.0,1.0,60,120],
[21,4,336,202,20,26,-281.148621,76.646233,-0.191986,1.0,1.0,10,13],
[25,4,278,202,34,28,-337.455383,72.832321,-0.191986,1.0,1.0,17,14],
[20,4,414,202,22,6,-332.243866,129.874756,-0.191986,1.0,1.0,11,3],
[22,4,1014,92,4,6,-277.003723,81.526787,-0.191986,1.0,1.0,2,3],
[26,4,1012,84,6,6,-330.174805,77.303673,-0.191986,1.0,1.0,3,3],
[23,4,650,100,4,4,-283.493500,78.227867,-0.191986,1.0,1.0,2,2],
[27,4,1002,96,10,4,-340.781891,74.223152,-0.191986,1.0,1.0,5,2],
[18,4,798,84,106,150,-390.109222,55.466431,-0.192386,1.0,1.0,58,34],
[19,4,390,100,162,78,-323.524078,37.847778,-0.191986,1.0,1.0,81,39],
[34,4,2,180,236,30,-370.432526,164.491943,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-249.747543,177.763565,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-242.986069,179.575302,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-247.298050,176.349350,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-334.158752,29.668304,-0.191986,1.0,1.0,133,48],
[31,4,906,146,76,96,-389.456329,31.144144,-0.186611,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.002493,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-337.647827,254.111862,-0.130411,1.0,1.0,11,7],
[7,4,984,146,24,62,-339.0,222.0,0.135560,1.0,1.0,14,8],
[9,4,386,202,26,14,-348.197174,296.096527,-0.130411,1.0,1.0,4,5],
[11,4,1002,2,18,60,-391.273651,254.923569,-0.304351,1.0,1.0,8,9],
[10,4,626,100,22,68,-395.0,223.0,0.022724,1.0,1.0,8,11],
[12,4,358,202,26,14,-398.435364,297.745422,-0.155771,1.0,1.0,4,5],
[33,4,240,180,270,20,-347.937836,153.583725,-0.191986,1.0,1.0,135,10],
[30,4,658,2,266,80,-336.972931,43.839661,-0.191986,1.0,1.0,133,40],
[17,4,214,2,174,170,-352.134125,32.742889,-0.189997,1.0,1.0,62,27],
[15,4,554,100,70,140,-326.782379,132.219116,0.139626,1.0,1.0,20,13],
[13,4,2,2,210,176,-378.0,192.0,-0.261799,1.0,1.0,104,104],
[14,4,926,2,74,142,-388.326538,126.015785,-0.925025,1.0,1.0,40,13],
[16,4,658,84,138,126,-351.637634,124.523895,-0.191986,1.0,1.0,60,120],
[21,4,336,202,20,26,-281.291473,77.074806,-0.191986,1.0,1.0,10,13],
[25,4,278,202,34,28,-337.598236,73.260895,-0.191986,1.0,1.0,17,14],
[20,4,414,202,22,6,-332.386719,130.303329,-0.191986,1.0,1.0,11,3],
[22,4,1014,92,4,6,-277.146576,81.955360,-0.191986,1.0,1.0,2,3],
[26,4,1012,84,6,6,-330.317657,77.732246,-0.191986,1.0,1.0,3,3],
[23,4,650,100,4,4,-283.636353,78.656441,-0.191986,1.0,1.0,2,2],
[27,4,1002,96,10,4,-340.924744,74.651726,-0.191986,1.0,1.0,5,2],
[18,4,798,84,106,150,-390.252075,55.895004,-0.191986,1.0,1.0,58,34],
[19,4,390,100,162,78,-323.666931,38.276352,-0.191986,1.0,1.0,81,39],
[34,4,2,180,236,30,-370.432526,164.491943,-0.191986,1.0,1.0,118,15],
[35,4,512,180,40,54,-249.747543,177.763565,-0.261799,1.0,1.0,20,27],
[36,4,1002,84,8,10,-242.986069,179.575302,-0.261799,1.0,1.0,4,5],
[37,4,1014,100,6,2,-247.298050,176.349350,-0.261799,1.0,1.0,3,1],
[29,4,390,2,266,96,-334.301605,30.096878,-0.191986,1.0,1.0,133,48],
[31,4,906,146,76,96,-389.599182,31.572718,-0.186611,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.001247,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-172.365021,169.940460,0.558505,1.0,1.0,11,7],
[7,4,984,146,24,62,-186.778290,141.213165,0.558505,1.0,1.0,14,8],
[9,4,386,202,26,14,-153.818726,209.056122,0.558505,1.0,1.0,4,5],
[11,4,1002,2,18,60,-230.858047,186.897125,0.436332,1.0,1.0,8,9],
[10,4,626,100,22,68,-247.100754,159.163132,0.436332,1.0,1.0,8,11],
[12,4,358,202,26,14,-207.247620,223.332642,0.436332,1.0,1.0,4,5],
[33,4,240,180,270,20,-223.481049,66.561256,-0.017453,1.0,1.0,135,10],
[30,4,658,2,266,80,-247.176804,-52.094826,0.069813,1.0,1.0,133,40],
[15,4,554,100,70,140,-211.481079,42.645950,2.273972,1.0,1.0,20,13],
[17,4,214,2,174,170,-264.693451,-58.889473,0.069813,1.0,1.0,62,27],
[13,4,2,2,210,176,-234.160156,105.380783,0.069813,1.0,1.0,104,104],
[16,4,658,84,138,126,-240.459213,29.635674,0.069813,1.0,1.0,60,120],
[21,4,336,202,20,26,-184.790756,-34.403557,0.069813,1.0,1.0,10,13],
[25,4,278,202,34,28,-240.166046,-23.514248,0.069813,1.0,1.0,17,14],
[20,4,414,202,22,6,-214.452789,28.819569,0.069813,1.0,1.0,11,3],
[22,4,1014,92,4,6,-180.800507,-34.682583,0.069813,1.0,1.0,2,3],
[26,4,1012,84,6,6,-234.180664,-23.932787,0.069813,1.0,1.0,3,3],
[23,4,650,100,4,4,-186.646378,-32.268917,0.069813,1.0,1.0,2,2],
[27,4,1002,96,10,4,-243.019226,-21.309851,0.069813,1.0,1.0,5,2],
[18,4,798,84,106,150,-295.520386,-26.660587,-0.231186,1.0,1.0,58,34],
[19,4,390,100,162,78,-235.764099,-60.912415,0.069813,1.0,1.0,81,39],
[14,4,926,2,74,142,-265.349518,46.412800,4.230940,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-243.739777,81.209923,-0.017453,1.0,1.0,118,15],
[35,4,512,180,40,54,-125.583229,73.270828,-0.017453,1.0,1.0,20,27],
[36,4,1002,84,8,10,-119.531784,70.375999,-0.017453,1.0,1.0,4,5],
[37,4,1014,100,6,2,-123.548630,71.306038,-0.017453,1.0,1.0,3,1],
[29,4,390,2,266,96,-248.153397,-66.060722,0.069813,1.0,1.0,133,48],
[31,4,906,146,76,96,-301.184784,-50.323105,0.069813,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.004987,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-35.491264,102.349335,0.546870,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.569313,73.456284,0.546870,1.0,1.0,14,8],
[9,4,386,202,26,14,-17.401352,141.678146,0.546870,1.0,1.0,4,5],
[11,4,1002,2,18,60,-94.276939,118.271843,0.424697,1.0,1.0,8,9],
[10,4,626,100,22,68,-110.195854,90.350739,0.424697,1.0,1.0,8,11],
[12,4,358,202,26,14,-71.092041,154.979614,0.424697,1.0,1.0,4,5],
[33,4,240,180,270,20,-84.963608,-1.824821,-0.034907,1.0,1.0,135,10],
[30,4,658,2,266,80,-106.890694,-120.856155,0.054299,1.0,1.0,133,40],
[15,4,554,100,70,140,-72.669006,-25.573025,2.254981,1.0,1.0,20,13],
[17,4,214,2,174,170,-124.299820,-127.921738,0.049953,1.0,1.0,62,27],
[13,4,2,2,210,176,-96.318596,36.802429,0.054299,1.0,1.0,104,104],
[16,4,658,84,138,126,-101.441826,-39.031288,0.054299,1.0,1.0,60,120],
[21,4,336,202,20,26,-44.786602,-102.199203,0.054299,1.0,1.0,10,13],
[25,4,278,202,34,28,-100.324158,-92.170265,0.054299,1.0,1.0,17,14],
[20,4,414,202,22,6,-75.425873,-39.443848,0.054299,1.0,1.0,11,3],
[22,4,1014,92,4,6,-40.792496,-102.416290,0.054299,1.0,1.0,2,3],
[26,4,1012,84,6,6,-94.333000,-92.495903,0.054299,1.0,1.0,3,3],
[23,4,650,100,4,4,-46.675110,-100.093605,0.054299,1.0,1.0,2,2],
[27,4,1002,96,10,4,-103.211189,-90.010399,0.054299,1.0,1.0,5,2],
[18,4,798,84,106,150,-155.623016,-96.174957,-0.257218,1.0,1.0,58,34],
[19,4,390,100,162,78,-95.342560,-129.495636,0.059433,1.0,1.0,81,39],
[14,4,926,2,74,142,-126.589424,-22.642311,4.220841,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-105.474915,12.468051,-0.034907,1.0,1.0,118,15],
[35,4,512,180,40,54,12.802200,6.592283,-0.034907,1.0,1.0,20,27],
[36,4,1002,84,8,10,18.903244,3.803508,-0.034907,1.0,1.0,4,5],
[37,4,1014,100,6,2,14.870781,4.663301,-0.034907,1.0,1.0,3,1],
[29,4,390,2,266,96,-107.650505,-134.835526,0.054299,1.0,1.0,133,48],
[31,4,906,146,76,96,-160.919647,-119.922501,0.054299,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.008727,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-35.229374,101.560425,0.554741,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.534405,72.779076,0.554741,1.0,1.0,14,8],
[9,4,386,202,26,14,-16.830463,140.745636,0.554741,1.0,1.0,4,5],
[11,4,1002,2,18,60,-93.987938,117.592934,0.432568,1.0,1.0,8,9],
[10,4,626,100,22,68,-110.126129,89.797989,0.432568,1.0,1.0,8,11],
[12,4,358,202,26,14,-70.514832,154.117081,0.432568,1.0,1.0,4,5],
[33,4,240,180,270,20,-85.083191,-2.429193,-0.032853,1.0,1.0,135,10],
[30,4,658,2,266,80,-107.560333,-121.393837,0.058292,1.0,1.0,133,40],
[15,4,554,100,70,140,-72.958488,-26.248096,2.255497,1.0,1.0,20,13],
[17,4,214,2,174,170,-124.997528,-128.389862,0.049600,1.0,1.0,62,27],
[13,4,2,2,210,176,-96.358849,36.221283,0.058292,1.0,1.0,104,104],
[16,4,658,84,138,126,-101.784813,-39.591377,0.058292,1.0,1.0,60,120],
[21,4,336,202,20,26,-45.382244,-102.984993,0.058292,1.0,1.0,10,13],
[25,4,278,202,34,28,-100.879318,-92.734390,0.058292,1.0,1.0,17,14],
[20,4,414,202,22,6,-75.770714,-40.107803,0.058292,1.0,1.0,11,3],
[22,4,1014,92,4,6,-41.389038,-103.218025,0.058292,1.0,1.0,2,3],
[26,4,1012,84,6,6,-94.889511,-93.083946,0.058292,1.0,1.0,3,3],
[23,4,650,100,4,4,-47.262329,-100.871872,0.058292,1.0,1.0,2,2],
[27,4,1002,96,10,4,-103.757706,-90.563011,0.058292,1.0,1.0,5,2],
[18,4,798,84,106,150,-156.193710,-96.518272,-0.263743,1.0,1.0,58,34],
[19,4,390,100,162,78,-96.046783,-130.079361,0.068560,1.0,1.0,81,39],
[14,4,926,2,74,142,-126.866776,-23.102123,4.230249,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-105.565109,11.905766,-0.032853,1.0,1.0,118,15],
[35,4,512,180,40,54,12.699684,5.787148,-0.032853,1.0,1.0,20,27],
[36,4,1002,84,8,10,18.794989,2.985852,-0.032853,1.0,1.0,4,5],
[37,4,1014,100,6,2,14.764299,3.853922,-0.032853,1.0,1.0,3,1],
[29,4,390,2,266,96,-108.375954,-135.370056,0.058292,1.0,1.0,133,48],
[31,4,906,146,76,96,-161.585129,-120.244469,0.058292,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.012467,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-34.968544,100.770149,0.562612,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.499668,72.102287,0.562612,1.0,1.0,14,8],
[9,4,386,202,26,14,-16.261776,139.809326,0.562612,1.0,1.0,4,5],
[11,4,1002,2,18,60,-93.699860,116.912628,0.440439,1.0,1.0,8,9],
[10,4,626,100,22,68,-110.056320,89.245567,0.440439,1.0,1.0,8,11],
[12,4,358,202,26,14,-69.940002,153.250885,0.440439,1.0,1.0,4,5],
[33,4,240,180,270,20,-85.202812,-3.032833,-0.030800,1.0,1.0,135,10],
[30,4,658,2,266,80,-108.229759,-121.928421,0.062284,1.0,1.0,133,40],
[15,4,554,100,70,140,-73.248322,-26.921577,2.256012,1.0,1.0,20,13],
[17,4,214,2,174,170,-125.694748,-128.854752,0.049247,1.0,1.0,62,27],
[13,4,2,2,210,176,-96.399078,35.640732,0.062284,1.0,1.0,104,104],
[16,4,658,84,138,126,-102.127686,-40.149658,0.062284,1.0,1.0,60,120],
[21,4,336,202,20,26,-45.978672,-103.767960,0.062284,1.0,1.0,10,13],
[25,4,278,202,34,28,-101.434380,-93.295868,0.062284,1.0,1.0,17,14],
[20,4,414,202,22,6,-76.115860,-40.769943,0.062284,1.0,1.0,11,3],
[22,4,1014,92,4,6,-41.986427,-104.016937,0.062284,1.0,1.0,2,3],
[26,4,1012,84,6,6,-95.446014,-93.669334,0.062284,1.0,1.0,3,3],
[23,4,650,100,4,4,-47.850307,-101.647346,0.062284,1.0,1.0,2,2],
[27,4,1002,96,10,4,-104.304077,-91.113014,0.062284,1.0,1.0,5,2],
[18,4,798,84,106,150,-156.763428,-96.858871,-0.270268,1.0,1.0,58,34],
[19,4,390,100,162,78,-96.750977,-130.659821,0.077687,1.0,1.0,81,39],
[14,4,926,2,74,142,-127.143608,-23.560398,4.239657,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-105.655258,11.344152,-0.030800,1.0,1.0,118,15],
[35,4,512,180,40,54,12.596733,4.982712,-0.030800,1.0,1.0,20,27],
[36,4,1002,84,8,10,18.686272,2.168905,-0.030800,1.0,1.0,4,5],
[37,4,1014,100,6,2,14.657374,3.045250,-0.030800,1.0,1.0,3,1],
[29,4,390,2,266,96,-109.101173,-135.901276,0.062284,1.0,1.0,133,48],
[31,4,906,146,76,96,-162.249542,-120.563370,0.062284,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.016207,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-34.708809,99.978500,0.570483,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.465130,71.425896,0.570483,1.0,1.0,14,8],
[9,4,386,202,26,14,-15.695343,138.869217,0.570483,1.0,1.0,4,5],
[11,4,1002,2,18,60,-93.412720,116.230949,0.448310,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.986450,88.693489,0.448310,1.0,1.0,8,11],
[12,4,358,202,26,14,-69.367577,152.381073,0.448310,1.0,1.0,4,5],
[33,4,240,180,270,20,-85.322464,-3.635755,-0.028747,1.0,1.0,135,10],
[30,4,658,2,266,80,-108.898987,-122.459938,0.066277,1.0,1.0,133,40],
[15,4,554,100,70,140,-73.538513,-27.593525,2.256527,1.0,1.0,20,13],
[17,4,214,2,174,170,-126.391495,-129.316498,0.048893,1.0,1.0,62,27],
[13,4,2,2,210,176,-96.439301,35.060715,0.066277,1.0,1.0,104,104],
[16,4,658,84,138,126,-102.470459,-40.706200,0.066277,1.0,1.0,60,120],
[21,4,336,202,20,26,-46.575893,-104.548172,0.066277,1.0,1.0,10,13],
[25,4,278,202,34,28,-101.989342,-93.854752,0.066277,1.0,1.0,17,14],
[20,4,414,202,22,6,-76.461311,-41.430332,0.066277,1.0,1.0,11,3],
[22,4,1014,92,4,6,-42.584675,-104.813087,0.066277,1.0,1.0,2,3],
[26,4,1012,84,6,6,-96.002518,-94.252121,0.066277,1.0,1.0,3,3],
[23,4,650,100,4,4,-48.439045,-102.420105,0.066277,1.0,1.0,2,2],
[27,4,1002,96,10,4,-104.850296,-91.660454,0.066277,1.0,1.0,5,2],
[18,4,798,84,106,150,-157.332184,-97.196823,-0.276793,1.0,1.0,58,34],
[19,4,390,100,162,78,-97.455162,-131.237122,0.086814,1.0,1.0,81,39],
[14,4,926,2,74,142,-127.419952,-24.017193,4.249065,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-105.745346,10.783195,-0.028747,1.0,1.0,118,15],
[35,4,512,180,40,54,12.493332,4.178959,-0.028747,1.0,1.0,20,27],
[36,4,1002,84,8,10,18.577080,1.352654,-0.028747,1.0,1.0,4,5],
[37,4,1014,100,6,2,14.549991,2.237270,-0.028747,1.0,1.0,3,1],
[29,4,390,2,266,96,-109.826187,-136.429199,0.066277,1.0,1.0,133,48],
[31,4,906,146,76,96,-162.912888,-120.879211,0.066277,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.019947,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-34.450150,99.185501,0.578354,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.430748,70.749931,0.578354,1.0,1.0,14,8],
[9,4,386,202,26,14,-15.131166,137.925354,0.578354,1.0,1.0,4,5],
[11,4,1002,2,18,60,-93.126526,115.547913,0.456181,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.916489,88.141762,0.456181,1.0,1.0,8,11],
[12,4,358,202,26,14,-68.797592,151.507660,0.456181,1.0,1.0,4,5],
[33,4,240,180,270,20,-85.442146,-4.237928,-0.026693,1.0,1.0,135,10],
[30,4,658,2,266,80,-109.568008,-122.988380,0.070269,1.0,1.0,133,40],
[15,4,554,100,70,140,-73.829041,-28.263897,2.257043,1.0,1.0,20,13],
[17,4,214,2,174,170,-127.087746,-129.775024,0.048540,1.0,1.0,62,27],
[13,4,2,2,210,176,-96.479500,34.481277,0.070269,1.0,1.0,104,104],
[16,4,658,84,138,126,-102.813118,-41.260948,0.070269,1.0,1.0,60,120],
[21,4,336,202,20,26,-47.173889,-105.325577,0.070269,1.0,1.0,10,13],
[25,4,278,202,34,28,-102.544205,-94.410995,0.070269,1.0,1.0,17,14],
[20,4,414,202,22,6,-76.807068,-42.088921,0.070269,1.0,1.0,11,3],
[22,4,1014,92,4,6,-43.183762,-105.606422,0.070269,1.0,1.0,2,3],
[26,4,1012,84,6,6,-96.559013,-94.832268,0.070269,1.0,1.0,3,3],
[23,4,650,100,4,4,-49.028530,-103.190086,0.070269,1.0,1.0,2,2],
[27,4,1002,96,10,4,-105.396378,-92.205299,0.070269,1.0,1.0,5,2],
[18,4,798,84,106,150,-157.899963,-97.532082,-0.283318,1.0,1.0,58,34],
[19,4,390,100,162,78,-98.159317,-131.811157,0.095940,1.0,1.0,81,39],
[14,4,926,2,74,142,-127.695778,-24.472466,4.258473,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-105.835373,10.222926,-0.026693,1.0,1.0,118,15],
[35,4,512,180,40,54,12.389496,3.375921,-0.026693,1.0,1.0,20,27],
[36,4,1002,84,8,10,18.467428,0.537130,-0.026693,1.0,1.0,4,5],
[37,4,1014,100,6,2,14.442163,1.430013,-0.026693,1.0,1.0,3,1],
[29,4,390,2,266,96,-110.550972,-136.953827,0.070269,1.0,1.0,133,48],
[31,4,906,146,76,96,-163.575165,-121.192009,0.070269,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.023687,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-34.192619,98.391144,0.586225,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.396568,70.074371,0.586225,1.0,1.0,14,8],
[9,4,386,202,26,14,-14.569313,136.977753,0.586225,1.0,1.0,4,5],
[11,4,1002,2,18,60,-92.841309,114.863503,0.464052,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.846466,87.590355,0.464052,1.0,1.0,8,11],
[12,4,358,202,26,14,-68.230087,150.630630,0.464052,1.0,1.0,4,5],
[33,4,240,180,270,20,-85.561859,-4.839384,-0.024640,1.0,1.0,135,10],
[30,4,658,2,266,80,-110.236794,-123.513748,0.074262,1.0,1.0,133,40],
[15,4,554,100,70,140,-74.119919,-28.932701,2.257559,1.0,1.0,20,13],
[17,4,214,2,174,170,-127.783485,-130.230392,0.048187,1.0,1.0,62,27],
[13,4,2,2,210,176,-96.519684,33.902405,0.074262,1.0,1.0,104,104],
[16,4,658,84,138,126,-103.155655,-41.813934,0.074262,1.0,1.0,60,120],
[21,4,336,202,20,26,-47.772652,-106.100197,0.074262,1.0,1.0,10,13],
[25,4,278,202,34,28,-103.098953,-94.964630,0.074262,1.0,1.0,17,14],
[20,4,414,202,22,6,-77.153122,-42.745731,0.074262,1.0,1.0,11,3],
[22,4,1014,92,4,6,-43.783676,-106.396973,0.074262,1.0,1.0,2,3],
[26,4,1012,84,6,6,-97.115494,-95.409790,0.074262,1.0,1.0,3,3],
[23,4,650,100,4,4,-49.618752,-103.957321,0.074262,1.0,1.0,2,2],
[27,4,1002,96,10,4,-105.942299,-92.747559,0.074262,1.0,1.0,5,2],
[18,4,798,84,106,150,-158.466721,-97.864685,-0.289843,1.0,1.0,58,34],
[19,4,390,100,162,78,-98.863419,-132.382019,0.105067,1.0,1.0,81,39],
[14,4,926,2,74,142,-127.971092,-24.926235,4.267881,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-105.925354,9.663313,-0.024640,1.0,1.0,118,15],
[35,4,512,180,40,54,12.285202,2.573568,-0.024640,1.0,1.0,20,27],
[36,4,1002,84,8,10,18.357292,-0.277697,-0.024640,1.0,1.0,4,5],
[37,4,1014,100,6,2,14.333870,0.623450,-0.024640,1.0,1.0,3,1],
[29,4,390,2,266,96,-111.275505,-137.475159,0.074262,1.0,1.0,133,48],
[31,4,906,146,76,96,-164.236343,-121.501770,0.074262,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.027427,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-33.936188,97.595451,0.594096,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.362549,69.399223,0.594096,1.0,1.0,14,8],
[9,4,386,202,26,14,-14.009771,136.026398,0.594096,1.0,1.0,4,5],
[11,4,1002,2,18,60,-92.557053,114.177750,0.471923,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.776352,87.039291,0.471923,1.0,1.0,8,11],
[12,4,358,202,26,14,-67.665070,149.750061,0.471923,1.0,1.0,4,5],
[33,4,240,180,270,20,-85.681587,-5.440123,-0.022587,1.0,1.0,135,10],
[30,4,658,2,266,80,-110.905342,-124.036041,0.078255,1.0,1.0,133,40],
[15,4,554,100,70,140,-74.411133,-29.599957,2.258074,1.0,1.0,20,13],
[17,4,214,2,174,170,-128.478714,-130.682587,0.047834,1.0,1.0,62,27],
[13,4,2,2,210,176,-96.559845,33.324081,0.078255,1.0,1.0,104,104],
[16,4,658,84,138,126,-103.498070,-42.365158,0.078255,1.0,1.0,60,120],
[21,4,336,202,20,26,-48.372177,-106.872025,0.078255,1.0,1.0,10,13],
[25,4,278,202,34,28,-103.653572,-95.515656,0.078255,1.0,1.0,17,14],
[20,4,414,202,22,6,-77.499466,-43.400764,0.078255,1.0,1.0,11,3],
[22,4,1014,92,4,6,-44.384418,-107.184723,0.078255,1.0,1.0,2,3],
[26,4,1012,84,6,6,-97.671936,-95.984703,0.078255,1.0,1.0,3,3],
[23,4,650,100,4,4,-50.209705,-104.721794,0.078255,1.0,1.0,2,2],
[27,4,1002,96,10,4,-106.488045,-93.287254,0.078255,1.0,1.0,5,2],
[18,4,798,84,106,150,-159.032471,-98.194626,-0.296368,1.0,1.0,58,34],
[19,4,390,100,162,78,-99.567467,-132.949646,0.114194,1.0,1.0,81,39],
[14,4,926,2,74,142,-128.245880,-25.378521,4.277289,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-106.015259,9.104357,-0.022587,1.0,1.0,118,15],
[35,4,512,180,40,54,12.180489,1.771902,-0.022587,1.0,1.0,20,27],
[36,4,1002,84,8,10,18.246712,-1.091825,-0.022587,1.0,1.0,4,5],
[37,4,1014,100,6,2,14.225147,-0.182419,-0.022587,1.0,1.0,3,1],
[29,4,390,2,266,96,-111.999786,-137.993195,0.078255,1.0,1.0,133,48],
[31,4,906,146,76,96,-164.896423,-121.808479,0.078255,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.031167,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-33.680904,96.798431,0.601968,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.328724,68.724495,0.601968,1.0,1.0,14,8],
[9,4,386,202,26,14,-13.452614,135.071350,0.601968,1.0,1.0,4,5],
[11,4,1002,2,18,60,-92.273811,113.490662,0.479794,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.706177,86.488579,0.479794,1.0,1.0,8,11],
[12,4,358,202,26,14,-67.102608,148.865936,0.479794,1.0,1.0,4,5],
[33,4,240,180,270,20,-85.801361,-6.040113,-0.020533,1.0,1.0,135,10],
[30,4,658,2,266,80,-111.573647,-124.555229,0.082247,1.0,1.0,133,40],
[15,4,554,100,70,140,-74.702690,-30.265614,2.258590,1.0,1.0,20,13],
[17,4,214,2,174,170,-129.173416,-131.131561,0.047480,1.0,1.0,62,27],
[13,4,2,2,210,176,-96.599991,32.746353,0.082247,1.0,1.0,104,104],
[16,4,658,84,138,126,-103.840355,-42.914581,0.082247,1.0,1.0,60,120],
[21,4,336,202,20,26,-48.972450,-107.641029,0.082247,1.0,1.0,10,13],
[25,4,278,202,34,28,-104.208069,-96.064041,0.082247,1.0,1.0,17,14],
[20,4,414,202,22,6,-77.846092,-44.053978,0.082247,1.0,1.0,11,3],
[22,4,1014,92,4,6,-44.985973,-107.969650,0.082247,1.0,1.0,2,3],
[26,4,1012,84,6,6,-98.228348,-96.556969,0.082247,1.0,1.0,3,3],
[23,4,650,100,4,4,-50.801380,-105.483482,0.082247,1.0,1.0,2,2],
[27,4,1002,96,10,4,-107.033615,-93.824341,0.082247,1.0,1.0,5,2],
[18,4,798,84,106,150,-159.597229,-98.521881,-0.302893,1.0,1.0,58,34],
[19,4,390,100,162,78,-100.271446,-133.514038,0.123321,1.0,1.0,81,39],
[14,4,926,2,74,142,-128.520142,-25.829269,4.286697,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-106.105118,8.546087,-0.020533,1.0,1.0,118,15],
[35,4,512,180,40,54,12.075325,0.970953,-0.020533,1.0,1.0,20,27],
[36,4,1002,84,8,10,18.135656,-1.905224,-0.020533,1.0,1.0,4,5],
[37,4,1014,100,6,2,14.115967,-0.987562,-0.020533,1.0,1.0,3,1],
[29,4,390,2,266,96,-112.723808,-138.507904,0.082247,1.0,1.0,133,48],
[31,4,906,146,76,96,-165.555420,-122.112122,0.082247,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.034907,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-33.426762,96.000076,0.609839,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.295067,68.050179,0.609839,1.0,1.0,14,8],
[9,4,386,202,26,14,-12.897852,134.112595,0.609839,1.0,1.0,4,5],
[11,4,1002,2,18,60,-91.991554,112.802231,0.487666,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.635918,85.938194,0.487666,1.0,1.0,8,11],
[12,4,358,202,26,14,-66.542694,147.978302,0.487666,1.0,1.0,4,5],
[33,4,240,180,270,20,-85.921135,-6.639386,-0.018480,1.0,1.0,135,10],
[30,4,658,2,266,80,-112.241676,-125.071396,0.086240,1.0,1.0,133,40],
[15,4,554,100,70,140,-74.994553,-30.929733,2.259105,1.0,1.0,20,13],
[17,4,214,2,174,170,-129.867569,-131.577393,0.047127,1.0,1.0,62,27],
[13,4,2,2,210,176,-96.640106,32.169159,0.086240,1.0,1.0,104,104],
[16,4,658,84,138,126,-104.182495,-43.462265,0.086240,1.0,1.0,60,120],
[21,4,336,202,20,26,-49.573452,-108.407257,0.086240,1.0,1.0,10,13],
[25,4,278,202,34,28,-104.762405,-96.609833,0.086240,1.0,1.0,17,14],
[20,4,414,202,22,6,-78.192986,-44.705437,0.086240,1.0,1.0,11,3],
[22,4,1014,92,4,6,-45.588318,-108.751785,0.086240,1.0,1.0,2,3],
[26,4,1012,84,6,6,-98.784706,-97.126633,0.086240,1.0,1.0,3,3],
[23,4,650,100,4,4,-51.393753,-106.242424,0.086240,1.0,1.0,2,2],
[27,4,1002,96,10,4,-107.578987,-94.358864,0.086240,1.0,1.0,5,2],
[18,4,798,84,106,150,-160.160934,-98.846504,-0.309418,1.0,1.0,58,34],
[19,4,390,100,162,78,-100.975342,-134.075256,0.132447,1.0,1.0,81,39],
[14,4,926,2,74,142,-128.793869,-26.278553,4.296105,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-106.194901,7.988474,-0.018480,1.0,1.0,118,15],
[35,4,512,180,40,54,11.969734,0.170692,-0.018480,1.0,1.0,20,27],
[36,4,1002,84,8,10,18.024147,-2.717922,-0.018480,1.0,1.0,4,5],
[37,4,1014,100,6,2,14.006351,-1.792008,-0.018480,1.0,1.0,3,1],
[29,4,390,2,266,96,-113.447540,-139.019363,0.086240,1.0,1.0,133,48],
[31,4,906,146,76,96,-166.213257,-122.412781,0.086240,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.031416,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-33.173779,95.200409,0.617710,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.261585,67.376274,0.617710,1.0,1.0,14,8],
[9,4,386,202,26,14,-12.345520,133.150162,0.617710,1.0,1.0,4,5],
[11,4,1002,2,18,60,-91.710320,112.112488,0.495537,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.565582,85.388161,0.495537,1.0,1.0,8,11],
[12,4,358,202,26,14,-65.985374,147.087158,0.495537,1.0,1.0,4,5],
[33,4,240,180,270,20,-86.040947,-7.237926,-0.016427,1.0,1.0,135,10],
[30,4,658,2,266,80,-112.909447,-125.584450,0.090232,1.0,1.0,133,40],
[15,4,554,100,70,140,-75.286758,-31.592251,2.259621,1.0,1.0,20,13],
[17,4,214,2,174,170,-130.561172,-132.020035,0.046774,1.0,1.0,62,27],
[13,4,2,2,210,176,-96.680206,31.592560,0.090232,1.0,1.0,104,104],
[16,4,658,84,138,126,-104.524498,-44.008148,0.090232,1.0,1.0,60,120],
[21,4,336,202,20,26,-50.175190,-109.170654,0.090232,1.0,1.0,10,13],
[25,4,278,202,34,28,-105.316597,-97.152969,0.090232,1.0,1.0,17,14],
[20,4,414,202,22,6,-78.540161,-45.355076,0.090232,1.0,1.0,11,3],
[22,4,1014,92,4,6,-46.191463,-109.531097,0.090232,1.0,1.0,2,3],
[26,4,1012,84,6,6,-99.341003,-97.693626,0.090232,1.0,1.0,3,3],
[23,4,650,100,4,4,-51.986832,-106.998573,0.090232,1.0,1.0,2,2],
[27,4,1002,96,10,4,-108.124176,-94.890778,0.090232,1.0,1.0,5,2],
[18,4,798,84,106,150,-160.723618,-99.168449,-0.315943,1.0,1.0,58,34],
[19,4,390,100,162,78,-101.679146,-134.633224,0.141574,1.0,1.0,81,39],
[14,4,926,2,74,142,-129.067078,-26.726311,4.305513,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-106.284637,7.431532,-0.016427,1.0,1.0,118,15],
[35,4,512,180,40,54,11.863701,-0.628864,-0.016427,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.912169,-3.529904,-0.016427,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.896283,-2.595743,-0.016427,1.0,1.0,3,1],
[29,4,390,2,266,96,-114.170990,-139.527496,0.090232,1.0,1.0,133,48],
[31,4,906,146,76,96,-166.869995,-122.710373,0.090232,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.027925,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-32.921967,94.399437,0.625581,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.228279,66.702789,0.625581,1.0,1.0,14,8],
[9,4,386,202,26,14,-11.795650,132.184082,0.625581,1.0,1.0,4,5],
[11,4,1002,2,18,60,-91.430107,111.421417,0.503408,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.495163,84.838455,0.503408,1.0,1.0,8,11],
[12,4,358,202,26,14,-65.430672,146.192520,0.503408,1.0,1.0,4,5],
[33,4,240,180,270,20,-86.160767,-7.835734,-0.014373,1.0,1.0,135,10],
[30,4,658,2,266,80,-113.576935,-126.094452,0.094225,1.0,1.0,133,40],
[15,4,554,100,70,140,-75.579269,-32.253212,2.260136,1.0,1.0,20,13],
[17,4,214,2,174,170,-131.254211,-132.459503,0.046420,1.0,1.0,62,27],
[13,4,2,2,210,176,-96.720276,31.016510,0.094225,1.0,1.0,104,104],
[16,4,658,84,138,126,-104.866348,-44.552277,0.094225,1.0,1.0,60,120],
[21,4,336,202,20,26,-50.777637,-109.931259,0.094225,1.0,1.0,10,13],
[25,4,278,202,34,28,-105.870628,-97.693512,0.094225,1.0,1.0,17,14],
[20,4,414,202,22,6,-78.887596,-46.002937,0.094225,1.0,1.0,11,3],
[22,4,1014,92,4,6,-46.795380,-110.307602,0.094225,1.0,1.0,2,3],
[26,4,1012,84,6,6,-99.897247,-98.258026,0.094225,1.0,1.0,3,3],
[23,4,650,100,4,4,-52.580593,-107.751961,0.094225,1.0,1.0,2,2],
[27,4,1002,96,10,4,-108.669151,-95.420128,0.094225,1.0,1.0,5,2],
[18,4,798,84,106,150,-161.285248,-99.487762,-0.322468,1.0,1.0,58,34],
[19,4,390,100,162,78,-102.382851,-135.187988,0.150701,1.0,1.0,81,39],
[14,4,926,2,74,142,-129.339722,-27.172588,4.314921,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-106.374298,6.875260,-0.014373,1.0,1.0,118,15],
[35,4,512,180,40,54,11.757240,-1.427716,-0.014373,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.799740,-4.341169,-0.014373,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.785779,-3.398764,-0.014373,1.0,1.0,3,1],
[29,4,390,2,266,96,-114.894135,-140.032349,0.094225,1.0,1.0,133,48],
[31,4,906,146,76,96,-167.525574,-123.004959,0.094225,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.024435,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-32.671345,93.597153,0.633452,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.195152,66.029716,0.633452,1.0,1.0,14,8],
[9,4,386,202,26,14,-11.248280,131.214325,0.633452,1.0,1.0,4,5],
[11,4,1002,2,18,60,-91.150940,110.729034,0.511279,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.424675,84.289093,0.511279,1.0,1.0,8,11],
[12,4,358,202,26,14,-64.878632,145.294418,0.511279,1.0,1.0,4,5],
[33,4,240,180,270,20,-86.280624,-8.432808,-0.012320,1.0,1.0,135,10],
[30,4,658,2,266,80,-114.244118,-126.601379,0.098218,1.0,1.0,133,40],
[15,4,554,100,70,140,-75.872093,-32.912601,2.260652,1.0,1.0,20,13],
[17,4,214,2,174,170,-131.946655,-132.895813,0.046067,1.0,1.0,62,27],
[13,4,2,2,210,176,-96.760323,30.441025,0.098218,1.0,1.0,104,104],
[16,4,658,84,138,126,-105.208038,-45.094635,0.098218,1.0,1.0,60,120],
[21,4,336,202,20,26,-51.380791,-110.689049,0.098218,1.0,1.0,10,13],
[25,4,278,202,34,28,-106.424484,-98.231445,0.098218,1.0,1.0,17,14],
[20,4,414,202,22,6,-79.235283,-46.649006,0.098218,1.0,1.0,11,3],
[22,4,1014,92,4,6,-47.400070,-111.081291,0.098218,1.0,1.0,2,3],
[26,4,1012,84,6,6,-100.453400,-98.819801,0.098218,1.0,1.0,3,3],
[23,4,650,100,4,4,-53.175034,-108.502571,0.098218,1.0,1.0,2,2],
[27,4,1002,96,10,4,-109.213905,-95.946907,0.098218,1.0,1.0,5,2],
[18,4,798,84,106,150,-161.845825,-99.804420,-0.328993,1.0,1.0,58,34],
[19,4,390,100,162,78,-103.086426,-135.739532,0.159828,1.0,1.0,81,39],
[14,4,926,2,74,142,-129.611847,-27.617374,4.324329,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-106.463898,6.319660,-0.012320,1.0,1.0,118,15],
[35,4,512,180,40,54,11.650345,-2.225861,-0.012320,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.686848,-5.151715,-0.012320,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.674832,-4.201070,-0.012320,1.0,1.0,3,1],
[29,4,390,2,266,96,-115.616951,-140.533905,0.098218,1.0,1.0,133,48],
[31,4,906,146,76,96,-168.179977,-123.296516,0.098218,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.020944,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-32.421913,92.793579,0.641323,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.162193,65.357048,0.641323,1.0,1.0,14,8],
[9,4,386,202,26,14,-10.703426,130.240967,0.641323,1.0,1.0,4,5],
[11,4,1002,2,18,60,-90.872818,110.035355,0.519150,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.354095,83.740059,0.519150,1.0,1.0,8,11],
[12,4,358,202,26,14,-64.329254,144.392883,0.519150,1.0,1.0,4,5],
[33,4,240,180,270,20,-86.400475,-9.029165,-0.010267,1.0,1.0,135,10],
[30,4,658,2,266,80,-114.911003,-127.105232,0.102210,1.0,1.0,133,40],
[15,4,554,100,70,140,-76.165222,-33.570412,2.261167,1.0,1.0,20,13],
[17,4,214,2,174,170,-132.638535,-133.328949,0.045714,1.0,1.0,62,27],
[13,4,2,2,210,176,-96.800339,29.866104,0.102210,1.0,1.0,104,104],
[16,4,658,84,138,126,-105.549576,-45.635223,0.102210,1.0,1.0,60,120],
[21,4,336,202,20,26,-51.984646,-111.444023,0.102210,1.0,1.0,10,13],
[25,4,278,202,34,28,-106.978165,-98.766754,0.102210,1.0,1.0,17,14],
[20,4,414,202,22,6,-79.583237,-47.293282,0.102210,1.0,1.0,11,3],
[22,4,1014,92,4,6,-48.005520,-111.852150,0.102210,1.0,1.0,2,3],
[26,4,1012,84,6,6,-101.009476,-99.378944,0.102210,1.0,1.0,3,3],
[23,4,650,100,4,4,-53.770142,-109.250397,0.102210,1.0,1.0,2,2],
[27,4,1002,96,10,4,-109.758446,-96.471092,0.102210,1.0,1.0,5,2],
[18,4,798,84,106,150,-162.405350,-100.118439,-0.335517,1.0,1.0,58,34],
[19,4,390,100,162,78,-103.789886,-136.287872,0.168954,1.0,1.0,81,39],
[14,4,926,2,74,142,-129.883392,-28.060673,4.333737,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-106.553413,5.764715,-0.010267,1.0,1.0,118,15],
[35,4,512,180,40,54,11.543030,-3.023315,-0.010267,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.573513,-5.961558,-0.010267,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.563457,-5.002677,-0.010267,1.0,1.0,3,1],
[29,4,390,2,266,96,-116.339455,-141.032166,0.102210,1.0,1.0,133,48],
[31,4,906,146,76,96,-168.833252,-123.585052,0.102210,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.017453,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-32.173706,91.988724,0.649194,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.129417,64.684807,0.649194,1.0,1.0,14,8],
[9,4,386,202,26,14,-10.161146,129.264008,0.649194,1.0,1.0,4,5],
[11,4,1002,2,18,60,-90.595772,109.340393,0.527021,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.283447,83.191376,0.527021,1.0,1.0,8,11],
[12,4,358,202,26,14,-63.782600,143.487930,0.527021,1.0,1.0,4,5],
[33,4,240,180,270,20,-86.520355,-9.624804,-0.008213,1.0,1.0,135,10],
[30,4,658,2,266,80,-115.577560,-127.606041,0.106203,1.0,1.0,133,40],
[15,4,554,100,70,140,-76.458649,-34.226650,2.261683,1.0,1.0,20,13],
[17,4,214,2,174,170,-133.329803,-133.758911,0.045361,1.0,1.0,62,27],
[13,4,2,2,210,176,-96.840332,29.291748,0.106203,1.0,1.0,104,104],
[16,4,658,84,138,126,-105.890938,-46.174049,0.106203,1.0,1.0,60,120],
[21,4,336,202,20,26,-52.589180,-112.196190,0.106203,1.0,1.0,10,13],
[25,4,278,202,34,28,-107.531647,-99.299454,0.106203,1.0,1.0,17,14],
[20,4,414,202,22,6,-79.931427,-47.935768,0.106203,1.0,1.0,11,3],
[22,4,1014,92,4,6,-48.611717,-112.620201,0.106203,1.0,1.0,2,3],
[26,4,1012,84,6,6,-101.565453,-99.935471,0.106203,1.0,1.0,3,3],
[23,4,650,100,4,4,-54.365906,-109.995453,0.106203,1.0,1.0,2,2],
[27,4,1002,96,10,4,-110.302734,-96.992714,0.106203,1.0,1.0,5,2],
[18,4,798,84,106,150,-162.963776,-100.429832,-0.342042,1.0,1.0,58,34],
[19,4,390,100,162,78,-104.493202,-136.833008,0.178081,1.0,1.0,81,39],
[14,4,926,2,74,142,-130.154404,-28.502480,4.343144,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-106.642883,5.210425,-0.008213,1.0,1.0,118,15],
[35,4,512,180,40,54,11.435272,-3.820077,-0.008213,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.459709,-6.770697,-0.008213,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.451632,-5.803583,-0.008213,1.0,1.0,3,1],
[29,4,390,2,266,96,-117.061607,-141.527161,0.106203,1.0,1.0,133,48],
[31,4,906,146,76,96,-169.485321,-123.870598,0.106203,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.013963,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-31.926708,91.182594,0.657065,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.096806,64.012985,0.657065,1.0,1.0,14,8],
[9,4,386,202,26,14,-9.621433,128.283463,0.657065,1.0,1.0,4,5],
[11,4,1002,2,18,60,-90.319794,108.644142,0.534892,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.212708,82.643028,0.534892,1.0,1.0,8,11],
[12,4,358,202,26,14,-63.238678,142.579575,0.534892,1.0,1.0,4,5],
[33,4,240,180,270,20,-86.640251,-10.219695,-0.006160,1.0,1.0,135,10],
[30,4,658,2,266,80,-116.243805,-128.103760,0.110195,1.0,1.0,133,40],
[15,4,554,100,70,140,-76.752380,-34.881298,2.262198,1.0,1.0,20,13],
[17,4,214,2,174,170,-134.020477,-134.185699,0.045007,1.0,1.0,62,27],
[13,4,2,2,210,176,-96.880295,28.717972,0.110195,1.0,1.0,104,104],
[16,4,658,84,138,126,-106.232132,-46.711090,0.110195,1.0,1.0,60,120],
[21,4,336,202,20,26,-53.194397,-112.945511,0.110195,1.0,1.0,10,13],
[25,4,278,202,34,28,-108.084930,-99.829514,0.110195,1.0,1.0,17,14],
[20,4,414,202,22,6,-80.279861,-48.576439,0.110195,1.0,1.0,11,3],
[22,4,1014,92,4,6,-49.218658,-113.385399,0.110195,1.0,1.0,2,3],
[26,4,1012,84,6,6,-102.121323,-100.489349,0.110195,1.0,1.0,3,3],
[23,4,650,100,4,4,-54.962322,-110.737694,0.110195,1.0,1.0,2,2],
[27,4,1002,96,10,4,-110.846786,-97.511726,0.110195,1.0,1.0,5,2],
[18,4,798,84,106,150,-163.521149,-100.738571,-0.348567,1.0,1.0,58,34],
[19,4,390,100,162,78,-105.196365,-137.374908,0.187208,1.0,1.0,81,39],
[14,4,926,2,74,142,-130.424850,-28.942787,4.352552,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-106.732269,4.656821,-0.006160,1.0,1.0,118,15],
[35,4,512,180,40,54,11.327095,-4.616115,-0.006160,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.345461,-7.579099,-0.006160,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.339376,-6.603757,-0.006160,1.0,1.0,3,1],
[29,4,390,2,266,96,-117.783417,-142.018845,0.110195,1.0,1.0,133,48],
[31,4,906,146,76,96,-170.136215,-124.153122,0.110195,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.010472,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-31.680950,90.375191,0.664936,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.064369,63.341568,0.664936,1.0,1.0,14,8],
[9,4,386,202,26,14,-9.084345,127.299347,0.664936,1.0,1.0,4,5],
[11,4,1002,2,18,60,-90.044907,107.946609,0.542763,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.141891,82.095009,0.542763,1.0,1.0,8,11],
[12,4,358,202,26,14,-62.697525,141.667831,0.542763,1.0,1.0,4,5],
[33,4,240,180,270,20,-86.760155,-10.813852,-0.004107,1.0,1.0,135,10],
[30,4,658,2,266,80,-116.909706,-128.598419,0.114188,1.0,1.0,133,40],
[15,4,554,100,70,140,-77.046394,-35.534378,2.262714,1.0,1.0,20,13],
[17,4,214,2,174,170,-134.710526,-134.609344,0.044654,1.0,1.0,62,27],
[13,4,2,2,210,176,-96.920227,28.144745,0.114188,1.0,1.0,104,104],
[16,4,658,84,138,126,-106.573151,-47.246376,0.114188,1.0,1.0,60,120],
[21,4,336,202,20,26,-53.800285,-113.692032,0.114188,1.0,1.0,10,13],
[25,4,278,202,34,28,-108.638016,-100.356979,0.114188,1.0,1.0,17,14],
[20,4,414,202,22,6,-80.628532,-49.215324,0.114188,1.0,1.0,11,3],
[22,4,1014,92,4,6,-49.826336,-114.147789,0.114188,1.0,1.0,2,3],
[26,4,1012,84,6,6,-102.677094,-101.040619,0.114188,1.0,1.0,3,3],
[23,4,650,100,4,4,-55.559380,-111.477173,0.114188,1.0,1.0,2,2],
[27,4,1002,96,10,4,-111.390602,-98.028183,0.114188,1.0,1.0,5,2],
[18,4,798,84,106,150,-164.077423,-101.044701,-0.355092,1.0,1.0,58,34],
[19,4,390,100,162,78,-105.899376,-137.913605,0.196335,1.0,1.0,81,39],
[14,4,926,2,74,142,-130.694733,-29.381626,4.361960,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-106.821587,4.103888,-0.004107,1.0,1.0,118,15],
[35,4,512,180,40,54,11.218483,-5.411444,-0.004107,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.230753,-8.386779,-0.004107,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.226679,-7.403214,-0.004107,1.0,1.0,3,1],
[29,4,390,2,266,96,-118.504868,-142.507248,0.114188,1.0,1.0,133,48],
[31,4,906,146,76,96,-170.785919,-124.432640,0.114188,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.006981,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-31.436432,89.566544,0.672807,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.032093,62.670586,0.672807,1.0,1.0,14,8],
[9,4,386,202,26,14,-8.549896,126.311699,0.672807,1.0,1.0,4,5],
[11,4,1002,2,18,60,-89.771103,107.247833,0.550634,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.070976,81.547348,0.550634,1.0,1.0,8,11],
[12,4,358,202,26,14,-62.159149,140.752762,0.550634,1.0,1.0,4,5],
[33,4,240,180,270,20,-86.880066,-11.407293,-0.002053,1.0,1.0,135,10],
[30,4,658,2,266,80,-117.575256,-129.090027,0.118180,1.0,1.0,133,40],
[15,4,554,100,70,140,-77.340698,-36.185867,2.263229,1.0,1.0,20,13],
[17,4,214,2,174,170,-135.399933,-135.029816,0.044301,1.0,1.0,62,27],
[13,4,2,2,210,176,-96.960129,27.572098,0.118180,1.0,1.0,104,104],
[16,4,658,84,138,126,-106.913979,-47.779884,0.118180,1.0,1.0,60,120],
[21,4,336,202,20,26,-54.406822,-114.435707,0.118180,1.0,1.0,10,13],
[25,4,278,202,34,28,-109.190872,-100.881821,0.118180,1.0,1.0,17,14],
[20,4,414,202,22,6,-80.977432,-49.852406,0.118180,1.0,1.0,11,3],
[22,4,1014,92,4,6,-50.434723,-114.907326,0.118180,1.0,1.0,2,3],
[26,4,1012,84,6,6,-103.232727,-101.589256,0.118180,1.0,1.0,3,3],
[23,4,650,100,4,4,-56.157063,-112.213844,0.118180,1.0,1.0,2,2],
[27,4,1002,96,10,4,-111.934135,-98.542053,0.118180,1.0,1.0,5,2],
[18,4,798,84,106,150,-164.632568,-101.348190,-0.361617,1.0,1.0,58,34],
[19,4,390,100,162,78,-106.602203,-138.449081,0.205461,1.0,1.0,81,39],
[14,4,926,2,74,142,-130.964035,-29.818966,4.371368,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-106.910828,3.551609,-0.002053,1.0,1.0,118,15],
[35,4,512,180,40,54,11.109459,-6.206078,-0.002053,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.115606,-9.193751,-0.002053,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.113562,-8.201967,-0.002053,1.0,1.0,3,1],
[29,4,390,2,266,96,-119.225937,-142.992371,0.118180,1.0,1.0,133,48],
[31,4,906,146,76,96,-171.434418,-124.709175,0.118180,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.003491,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-31.193186,88.756630,0.680678,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.0,62.0,0.680678,1.0,1.0,14,8],
[9,4,386,202,26,14,-8.018139,125.320511,0.680678,1.0,1.0,4,5],
[11,4,1002,2,18,60,-89.498444,106.547783,0.558505,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.0,81.0,0.558505,1.0,1.0,8,11],
[12,4,358,202,26,14,-61.623627,139.834335,0.558505,1.0,1.0,4,5],
[33,4,240,180,270,20,-87.0,-12.0,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-118.240448,-129.578552,0.122173,1.0,1.0,133,40],
[15,4,554,100,70,140,-77.635284,-36.835789,2.263745,1.0,1.0,20,13],
[17,4,214,2,174,170,-136.088684,-135.447144,0.043947,1.0,1.0,62,27],
[13,4,2,2,210,176,-97.0,27.0,0.122173,1.0,1.0,104,104],
[16,4,658,84,138,126,-107.254616,-48.311638,0.122173,1.0,1.0,60,120],
[21,4,336,202,20,26,-55.014008,-115.176567,0.122173,1.0,1.0,10,13],
[25,4,278,202,34,28,-109.743507,-101.404060,0.122173,1.0,1.0,17,14],
[20,4,414,202,22,6,-81.326546,-50.487694,0.122173,1.0,1.0,11,3],
[22,4,1014,92,4,6,-51.043823,-115.664047,0.122173,1.0,1.0,2,3],
[26,4,1012,84,6,6,-103.788231,-102.135277,0.122173,1.0,1.0,3,3],
[23,4,650,100,4,4,-56.755360,-112.947739,0.122173,1.0,1.0,2,2],
[27,4,1002,96,10,4,-112.477409,-99.053360,0.122173,1.0,1.0,5,2],
[18,4,798,84,106,150,-165.186630,-101.649071,-0.368142,1.0,1.0,58,34],
[19,4,390,100,162,78,-107.304848,-138.981354,0.214588,1.0,1.0,81,39],
[14,4,926,2,74,142,-131.232773,-30.254845,4.380776,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-107.0,3.0,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,11.0,-7.0,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.0,-10.0,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.0,-9.0,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-119.946617,-143.474197,0.122173,1.0,1.0,133,48],
[31,4,906,146,76,96,-172.081680,-124.982697,0.122173,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.000000,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-31.193186,88.756630,0.680678,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.0,62.0,0.680678,1.0,1.0,14,8],
[9,4,386,202,26,14,-8.018139,125.320511,0.680678,1.0,1.0,4,5],
[11,4,1002,2,18,60,-89.498444,106.547783,0.558505,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.0,81.0,0.558505,1.0,1.0,8,11],
[12,4,358,202,26,14,-61.623627,139.834335,0.558505,1.0,1.0,4,5],
[33,4,240,180,270,20,-87.0,-12.0,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-118.240448,-129.578552,0.122173,1.0,1.0,133,40],
[15,4,554,100,70,140,-77.635284,-36.835789,2.263745,1.0,1.0,20,13],
[17,4,214,2,174,170,-136.088684,-135.447144,0.043947,1.0,1.0,62,27],
[13,4,2,2,210,176,-97.0,27.0,0.122173,1.0,1.0,104,104],
[16,4,658,84,138,126,-107.254616,-48.311638,0.122173,1.0,1.0,60,120],
[21,4,336,202,20,26,-55.014008,-115.176567,0.122173,1.0,1.0,10,13],
[25,4,278,202,34,28,-109.743507,-101.404060,0.122173,1.0,1.0,17,14],
[20,4,414,202,22,6,-81.326546,-50.487694,0.122173,1.0,1.0,11,3],
[22,4,1014,92,4,6,-51.043823,-115.664047,0.122173,1.0,1.0,2,3],
[26,4,1012,84,6,6,-103.788231,-102.135277,0.122173,1.0,1.0,3,3],
[23,4,650,100,4,4,-56.755360,-112.947739,0.122173,1.0,1.0,2,2],
[27,4,1002,96,10,4,-112.477409,-99.053360,0.122173,1.0,1.0,5,2],
[18,4,798,84,106,150,-165.186630,-101.649071,-0.368142,1.0,1.0,58,34],
[19,4,390,100,162,78,-107.304848,-138.981354,0.214588,1.0,1.0,81,39],
[14,4,926,2,74,142,-131.232773,-30.254845,4.380776,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-107.0,3.0,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,11.0,-7.0,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.0,-10.0,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.0,-9.0,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-119.946617,-143.474197,0.122173,1.0,1.0,133,48],
[31,4,906,146,76,96,-172.081680,-124.982697,0.122173,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.003491,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-31.193186,88.756630,0.680678,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.0,62.0,0.680678,1.0,1.0,14,8],
[9,4,386,202,26,14,-8.018139,125.320511,0.680678,1.0,1.0,4,5],
[11,4,1002,2,18,60,-89.498444,106.547783,0.558505,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.0,81.0,0.558505,1.0,1.0,8,11],
[12,4,358,202,26,14,-61.623627,139.834335,0.558505,1.0,1.0,4,5],
[33,4,240,180,270,20,-87.0,-12.0,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-118.240448,-129.578552,0.122173,1.0,1.0,133,40],
[15,4,554,100,70,140,-77.635284,-36.835789,2.263745,1.0,1.0,20,13],
[17,4,214,2,174,170,-136.088684,-135.447144,0.043947,1.0,1.0,62,27],
[13,4,2,2,210,176,-97.0,27.0,0.122173,1.0,1.0,104,104],
[16,4,658,84,138,126,-107.254616,-48.311638,0.122173,1.0,1.0,60,120],
[21,4,336,202,20,26,-55.014008,-115.176567,0.122173,1.0,1.0,10,13],
[25,4,278,202,34,28,-109.743507,-101.404060,0.122173,1.0,1.0,17,14],
[20,4,414,202,22,6,-81.326546,-50.487694,0.122173,1.0,1.0,11,3],
[22,4,1014,92,4,6,-51.043823,-115.664047,0.122173,1.0,1.0,2,3],
[26,4,1012,84,6,6,-103.788231,-102.135277,0.122173,1.0,1.0,3,3],
[23,4,650,100,4,4,-56.755360,-112.947739,0.122173,1.0,1.0,2,2],
[27,4,1002,96,10,4,-112.477409,-99.053360,0.122173,1.0,1.0,5,2],
[18,4,798,84,106,150,-165.186630,-101.649071,-0.368142,1.0,1.0,58,34],
[19,4,390,100,162,78,-107.304848,-138.981354,0.214588,1.0,1.0,81,39],
[14,4,926,2,74,142,-131.232773,-30.254845,4.380776,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-107.0,3.0,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,11.0,-7.0,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.0,-10.0,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.0,-9.0,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-119.946617,-143.474197,0.122173,1.0,1.0,133,48],
[31,4,906,146,76,96,-172.081680,-124.982697,0.122173,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.006981,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-31.193186,230.756638,0.680678,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.0,204.0,0.680678,1.0,1.0,14,8],
[9,4,386,202,26,14,-8.018139,267.320526,0.680678,1.0,1.0,4,5],
[11,4,1002,2,18,60,-89.498444,248.547775,0.558505,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.0,223.0,0.558505,1.0,1.0,8,11],
[12,4,358,202,26,14,-61.623627,281.834320,0.558505,1.0,1.0,4,5],
[33,4,240,180,270,20,-87.0,130.0,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-118.443924,-235.400986,0.122173,1.0,1.0,133,40],
[15,4,554,100,70,140,-77.635284,105.164215,2.263745,1.0,1.0,20,13],
[17,4,214,2,174,170,-136.088684,6.552856,0.043947,1.0,1.0,62,27],
[13,4,2,2,210,176,-97.0,169.0,0.122173,1.0,1.0,104,104],
[16,4,658,84,138,126,-107.254616,93.688362,0.122173,1.0,1.0,60,120],
[21,4,336,202,20,26,-55.014008,26.823433,0.122173,1.0,1.0,10,13],
[25,4,278,202,34,28,-109.743507,40.595940,0.122173,1.0,1.0,17,14],
[20,4,414,202,22,6,-81.326546,91.512306,0.122173,1.0,1.0,11,3],
[22,4,1014,92,4,6,-51.043823,26.335955,0.122173,1.0,1.0,2,3],
[26,4,1012,84,6,6,-103.788231,39.864723,0.122173,1.0,1.0,3,3],
[23,4,650,100,4,4,-56.755360,29.052263,0.122173,1.0,1.0,2,2],
[27,4,1002,96,10,4,-112.477409,42.946640,0.122173,1.0,1.0,5,2],
[18,4,798,84,106,150,-165.186630,40.350929,-0.368142,1.0,1.0,58,34],
[19,4,390,100,162,78,-107.304848,3.018646,0.214588,1.0,1.0,81,39],
[14,4,926,2,74,142,-131.232773,111.745155,4.380776,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-107.0,145.0,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,11.0,135.0,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.0,132.0,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.0,133.0,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-120.150093,-249.296631,0.122173,1.0,1.0,133,48],
[31,4,906,146,76,96,-172.285156,-230.805130,0.122173,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.010472,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-31.193186,372.756622,0.680678,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.0,346.0,0.680678,1.0,1.0,14,8],
[9,4,386,202,26,14,-8.018139,409.320496,0.680678,1.0,1.0,4,5],
[11,4,1002,2,18,60,-89.498444,390.547791,0.558505,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.0,365.0,0.558505,1.0,1.0,8,11],
[12,4,358,202,26,14,-61.623627,423.834351,0.558505,1.0,1.0,4,5],
[33,4,240,180,270,20,-87.0,272.0,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-118.056915,-270.770233,0.122173,1.0,1.0,133,40],
[15,4,554,100,70,140,-77.635284,247.164215,2.263745,1.0,1.0,20,13],
[17,4,214,2,174,170,-136.088684,148.552856,0.043947,1.0,1.0,62,27],
[13,4,2,2,210,176,-97.0,311.0,0.122173,1.0,1.0,104,104],
[16,4,658,84,138,126,-107.254616,235.688354,0.122173,1.0,1.0,60,120],
[21,4,336,202,20,26,-55.014008,168.823425,0.122173,1.0,1.0,10,13],
[25,4,278,202,34,28,-109.743507,182.595932,0.122173,1.0,1.0,17,14],
[20,4,414,202,22,6,-81.326546,233.512299,0.122173,1.0,1.0,11,3],
[22,4,1014,92,4,6,-51.043823,168.335953,0.122173,1.0,1.0,2,3],
[26,4,1012,84,6,6,-103.788231,181.864716,0.122173,1.0,1.0,3,3],
[23,4,650,100,4,4,-56.755360,171.052261,0.122173,1.0,1.0,2,2],
[27,4,1002,96,10,4,-112.477409,184.946625,0.122173,1.0,1.0,5,2],
[18,4,798,84,106,150,-165.186630,182.350922,-0.368142,1.0,1.0,58,34],
[19,4,390,100,162,78,-107.304848,145.018646,0.214588,1.0,1.0,81,39],
[14,4,926,2,74,142,-131.232773,253.745148,4.380776,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-107.0,287.0,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,11.0,277.0,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.0,274.0,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.0,275.0,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-119.763084,-284.665894,0.122173,1.0,1.0,133,48],
[31,4,906,146,76,96,-171.898148,-266.174408,0.122173,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.013963,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-31.193186,514.756653,0.680678,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.0,488.0,0.680678,1.0,1.0,14,8],
[9,4,386,202,26,14,-8.018139,551.320557,0.680678,1.0,1.0,4,5],
[11,4,1002,2,18,60,-89.498444,532.547791,0.558505,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.0,507.0,0.558505,1.0,1.0,8,11],
[12,4,358,202,26,14,-61.623627,565.834351,0.558505,1.0,1.0,4,5],
[33,4,240,180,270,20,-87.0,414.0,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-118.071968,-235.564438,0.122173,1.0,1.0,133,40],
[15,4,554,100,70,140,-77.635284,389.164215,2.263745,1.0,1.0,20,13],
[17,4,214,2,174,170,-136.088684,290.552856,0.043947,1.0,1.0,62,27],
[13,4,2,2,210,176,-97.0,453.0,0.122173,1.0,1.0,104,104],
[16,4,658,84,138,126,-107.254616,377.688354,0.122173,1.0,1.0,60,120],
[21,4,336,202,20,26,-55.014008,310.823425,0.122173,1.0,1.0,10,13],
[25,4,278,202,34,28,-109.743507,324.595947,0.122173,1.0,1.0,17,14],
[20,4,414,202,22,6,-81.326546,375.512299,0.122173,1.0,1.0,11,3],
[22,4,1014,92,4,6,-51.043823,310.335938,0.122173,1.0,1.0,2,3],
[26,4,1012,84,6,6,-103.788231,323.864746,0.122173,1.0,1.0,3,3],
[23,4,650,100,4,4,-56.755360,313.052246,0.122173,1.0,1.0,2,2],
[27,4,1002,96,10,4,-112.477409,326.946655,0.122173,1.0,1.0,5,2],
[18,4,798,84,106,150,-165.186630,324.350922,-0.368142,1.0,1.0,58,34],
[19,4,390,100,162,78,-107.304848,287.018646,0.214588,1.0,1.0,81,39],
[14,4,926,2,74,142,-131.232773,395.745148,4.380776,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-107.0,429.0,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,11.0,419.0,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.0,416.0,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.0,417.0,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-119.778137,-249.460083,0.122173,1.0,1.0,133,48],
[31,4,906,146,76,96,-171.913193,-230.968582,0.122173,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.017453,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-31.193186,656.756653,0.680678,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.0,630.0,0.680678,1.0,1.0,14,8],
[9,4,386,202,26,14,-8.018139,693.320557,0.680678,1.0,1.0,4,5],
[11,4,1002,2,18,60,-89.498444,674.547791,0.558505,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.0,649.0,0.558505,1.0,1.0,8,11],
[12,4,358,202,26,14,-61.623627,707.834351,0.558505,1.0,1.0,4,5],
[33,4,240,180,270,20,-87.0,556.0,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-117.374657,-128.912888,0.122173,1.0,1.0,133,40],
[15,4,554,100,70,140,-77.635284,531.164185,2.263745,1.0,1.0,20,13],
[17,4,214,2,174,170,-136.088684,432.552856,0.043947,1.0,1.0,62,27],
[13,4,2,2,210,176,-97.0,595.0,0.122173,1.0,1.0,104,104],
[16,4,658,84,138,126,-107.254616,519.688354,0.122173,1.0,1.0,60,120],
[21,4,336,202,20,26,-55.014008,452.823425,0.122173,1.0,1.0,10,13],
[25,4,278,202,34,28,-109.743507,466.595947,0.122173,1.0,1.0,17,14],
[20,4,414,202,22,6,-81.326546,517.512268,0.122173,1.0,1.0,11,3],
[22,4,1014,92,4,6,-51.043823,452.335938,0.122173,1.0,1.0,2,3],
[26,4,1012,84,6,6,-103.788231,465.864746,0.122173,1.0,1.0,3,3],
[23,4,650,100,4,4,-56.755360,455.052246,0.122173,1.0,1.0,2,2],
[27,4,1002,96,10,4,-112.477409,468.946655,0.122173,1.0,1.0,5,2],
[18,4,798,84,106,150,-165.186630,466.350922,-0.368142,1.0,1.0,58,34],
[19,4,390,100,162,78,-107.304848,429.018646,0.214588,1.0,1.0,81,39],
[14,4,926,2,74,142,-131.232773,537.745178,4.380776,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-107.0,571.0,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,11.0,561.0,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.0,558.0,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.0,559.0,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-119.080826,-142.808533,0.122173,1.0,1.0,133,48],
[31,4,906,146,76,96,-171.215881,-124.317032,0.122173,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.013713,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-31.193186,656.756653,0.680678,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.0,630.0,0.680678,1.0,1.0,14,8],
[9,4,386,202,26,14,-8.018139,693.320557,0.680678,1.0,1.0,4,5],
[11,4,1002,2,18,60,-89.498444,674.547791,0.558505,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.0,649.0,0.558505,1.0,1.0,8,11],
[12,4,358,202,26,14,-61.623627,707.834351,0.558505,1.0,1.0,4,5],
[33,4,240,180,270,20,-87.0,556.0,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-117.490402,-56.917709,0.122173,1.0,1.0,133,40],
[15,4,554,100,70,140,-77.635284,531.164185,2.263745,1.0,1.0,20,13],
[17,4,214,2,174,170,-136.088684,432.552856,0.043947,1.0,1.0,62,27],
[13,4,2,2,210,176,-97.0,595.0,0.122173,1.0,1.0,104,104],
[16,4,658,84,138,126,-107.254616,519.688354,0.122173,1.0,1.0,60,120],
[21,4,336,202,20,26,-55.014008,452.823425,0.122173,1.0,1.0,10,13],
[25,4,278,202,34,28,-109.743507,466.595947,0.122173,1.0,1.0,17,14],
[20,4,414,202,22,6,-81.326546,517.512268,0.122173,1.0,1.0,11,3],
[22,4,1014,92,4,6,-51.043823,452.335938,0.122173,1.0,1.0,2,3],
[26,4,1012,84,6,6,-103.788231,465.864746,0.122173,1.0,1.0,3,3],
[23,4,650,100,4,4,-56.755360,455.052246,0.122173,1.0,1.0,2,2],
[27,4,1002,96,10,4,-112.477409,468.946655,0.122173,1.0,1.0,5,2],
[18,4,798,84,106,150,-165.186630,466.350922,-0.368142,1.0,1.0,58,34],
[19,4,390,100,162,78,-107.304848,429.018646,0.214588,1.0,1.0,81,39],
[14,4,926,2,74,142,-131.232773,537.745178,4.380776,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-107.0,571.0,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,11.0,561.0,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.0,558.0,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.0,559.0,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-119.196571,-70.813354,0.122173,1.0,1.0,133,48],
[31,4,906,146,76,96,-171.331635,-52.321854,0.122173,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.009973,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-31.193186,656.756653,0.680678,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.0,630.0,0.680678,1.0,1.0,14,8],
[9,4,386,202,26,14,-8.018139,693.320557,0.680678,1.0,1.0,4,5],
[11,4,1002,2,18,60,-89.498444,674.547791,0.558505,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.0,649.0,0.558505,1.0,1.0,8,11],
[12,4,358,202,26,14,-61.623627,707.834351,0.558505,1.0,1.0,4,5],
[33,4,240,180,270,20,-87.0,556.0,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-117.606148,15.077531,0.122173,1.0,1.0,133,40],
[15,4,554,100,70,140,-77.635284,531.164185,2.263745,1.0,1.0,20,13],
[17,4,214,2,174,170,-136.088684,432.552856,0.043947,1.0,1.0,62,27],
[13,4,2,2,210,176,-97.0,595.0,0.122173,1.0,1.0,104,104],
[16,4,658,84,138,126,-107.254616,519.688354,0.122173,1.0,1.0,60,120],
[21,4,336,202,20,26,-55.014008,452.823425,0.122173,1.0,1.0,10,13],
[25,4,278,202,34,28,-109.743507,466.595947,0.122173,1.0,1.0,17,14],
[20,4,414,202,22,6,-81.326546,517.512268,0.122173,1.0,1.0,11,3],
[22,4,1014,92,4,6,-51.043823,452.335938,0.122173,1.0,1.0,2,3],
[26,4,1012,84,6,6,-103.788231,465.864746,0.122173,1.0,1.0,3,3],
[23,4,650,100,4,4,-56.755360,455.052246,0.122173,1.0,1.0,2,2],
[27,4,1002,96,10,4,-112.477409,468.946655,0.122173,1.0,1.0,5,2],
[18,4,798,84,106,150,-165.186630,466.350922,-0.368142,1.0,1.0,58,34],
[19,4,390,100,162,78,-107.304848,429.018646,0.214588,1.0,1.0,81,39],
[14,4,926,2,74,142,-131.232773,537.745178,4.380776,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-107.0,571.0,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,11.0,561.0,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.0,558.0,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.0,559.0,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-119.312317,1.181885,0.122173,1.0,1.0,133,48],
[31,4,906,146,76,96,-171.447372,19.673384,0.122173,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[2,5,0,0,1440,988,0.0,564.0,0.0,1.040000,0.500000,720,988],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.006233,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-31.193186,656.756653,0.680678,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.0,630.0,0.680678,1.0,1.0,14,8],
[9,4,386,202,26,14,-8.018139,693.320557,0.680678,1.0,1.0,4,5],
[11,4,1002,2,18,60,-89.498444,674.547791,0.558505,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.0,649.0,0.558505,1.0,1.0,8,11],
[12,4,358,202,26,14,-61.623627,707.834351,0.558505,1.0,1.0,4,5],
[33,4,240,180,270,20,-87.0,556.0,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-117.721893,87.072678,0.122173,1.0,1.0,133,40],
[15,4,554,100,70,140,-77.635284,531.164185,2.263745,1.0,1.0,20,13],
[17,4,214,2,174,170,-136.088684,432.552856,0.043947,1.0,1.0,62,27],
[13,4,2,2,210,176,-97.0,595.0,0.122173,1.0,1.0,104,104],
[16,4,658,84,138,126,-107.254616,519.688354,0.122173,1.0,1.0,60,120],
[21,4,336,202,20,26,-55.014008,452.823425,0.122173,1.0,1.0,10,13],
[25,4,278,202,34,28,-109.743507,466.595947,0.122173,1.0,1.0,17,14],
[20,4,414,202,22,6,-81.326546,517.512268,0.122173,1.0,1.0,11,3],
[22,4,1014,92,4,6,-51.043823,452.335938,0.122173,1.0,1.0,2,3],
[26,4,1012,84,6,6,-103.788231,465.864746,0.122173,1.0,1.0,3,3],
[23,4,650,100,4,4,-56.755360,455.052246,0.122173,1.0,1.0,2,2],
[27,4,1002,96,10,4,-112.477409,468.946655,0.122173,1.0,1.0,5,2],
[18,4,798,84,106,150,-165.186630,466.350922,-0.368142,1.0,1.0,58,34],
[19,4,390,100,162,78,-107.304848,429.018646,0.214588,1.0,1.0,81,39],
[14,4,926,2,74,142,-131.232773,537.745178,4.380776,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-107.0,571.0,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,11.0,561.0,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.0,558.0,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.0,559.0,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-119.428062,73.177032,0.122173,1.0,1.0,133,48],
[31,4,906,146,76,96,-171.563126,91.668533,0.122173,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[2,5,0,0,1440,988,0.0,564.0,0.0,1.040000,0.625714,720,988],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.055556]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,0.002493,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-31.193186,656.756653,0.680678,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.0,630.0,0.680678,1.0,1.0,14,8],
[9,4,386,202,26,14,-8.018139,693.320557,0.680678,1.0,1.0,4,5],
[11,4,1002,2,18,60,-89.498444,674.547791,0.558505,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.0,649.0,0.558505,1.0,1.0,8,11],
[12,4,358,202,26,14,-61.623627,707.834351,0.558505,1.0,1.0,4,5],
[33,4,240,180,270,20,-87.0,556.0,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-117.837639,159.067856,0.122173,1.0,1.0,133,40],
[15,4,554,100,70,140,-77.635284,531.164185,2.263745,1.0,1.0,20,13],
[17,4,214,2,174,170,-136.088684,432.552856,0.043947,1.0,1.0,62,27],
[13,4,2,2,210,176,-97.0,595.0,0.122173,1.0,1.0,104,104],
[16,4,658,84,138,126,-107.254616,519.688354,0.122173,1.0,1.0,60,120],
[21,4,336,202,20,26,-55.014008,452.823425,0.122173,1.0,1.0,10,13],
[25,4,278,202,34,28,-109.743507,466.595947,0.122173,1.0,1.0,17,14],
[20,4,414,202,22,6,-81.326546,517.512268,0.122173,1.0,1.0,11,3],
[22,4,1014,92,4,6,-51.043823,452.335938,0.122173,1.0,1.0,2,3],
[26,4,1012,84,6,6,-103.788231,465.864746,0.122173,1.0,1.0,3,3],
[23,4,650,100,4,4,-56.755360,455.052246,0.122173,1.0,1.0,2,2],
[27,4,1002,96,10,4,-112.477409,468.946655,0.122173,1.0,1.0,5,2],
[18,4,798,84,106,150,-165.186630,466.350922,-0.368142,1.0,1.0,58,34],
[19,4,390,100,162,78,-107.304848,429.018646,0.214588,1.0,1.0,81,39],
[14,4,926,2,74,142,-131.232773,537.745178,4.380776,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-107.0,571.0,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,11.0,561.0,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.0,558.0,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.0,559.0,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-119.543808,145.172211,0.122173,1.0,1.0,133,48],
[31,4,906,146,76,96,-171.678864,163.663712,0.122173,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[2,5,0,0,1440,988,0.0,564.0,0.0,1.040000,0.751429,720,988],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.111111]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.001247,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-31.193186,656.756653,0.680678,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.0,630.0,0.680678,1.0,1.0,14,8],
[9,4,386,202,26,14,-8.018139,693.320557,0.680678,1.0,1.0,4,5],
[11,4,1002,2,18,60,-89.498444,674.547791,0.558505,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.0,649.0,0.558505,1.0,1.0,8,11],
[12,4,358,202,26,14,-61.623627,707.834351,0.558505,1.0,1.0,4,5],
[33,4,240,180,270,20,-87.0,556.0,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-117.953384,231.063065,0.122173,1.0,1.0,133,40],
[15,4,554,100,70,140,-77.635284,531.164185,2.263745,1.0,1.0,20,13],
[17,4,214,2,174,170,-136.088684,432.552856,0.043947,1.0,1.0,62,27],
[13,4,2,2,210,176,-97.0,595.0,0.122173,1.0,1.0,104,104],
[16,4,658,84,138,126,-107.254616,519.688354,0.122173,1.0,1.0,60,120],
[21,4,336,202,20,26,-55.014008,452.823425,0.122173,1.0,1.0,10,13],
[25,4,278,202,34,28,-109.743507,466.595947,0.122173,1.0,1.0,17,14],
[20,4,414,202,22,6,-81.326546,517.512268,0.122173,1.0,1.0,11,3],
[22,4,1014,92,4,6,-51.043823,452.335938,0.122173,1.0,1.0,2,3],
[26,4,1012,84,6,6,-103.788231,465.864746,0.122173,1.0,1.0,3,3],
[23,4,650,100,4,4,-56.755360,455.052246,0.122173,1.0,1.0,2,2],
[27,4,1002,96,10,4,-112.477409,468.946655,0.122173,1.0,1.0,5,2],
[18,4,798,84,106,150,-165.186630,466.350922,-0.368142,1.0,1.0,58,34],
[19,4,390,100,162,78,-107.304848,429.018646,0.214588,1.0,1.0,81,39],
[14,4,926,2,74,142,-131.232773,537.745178,4.380776,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-107.0,571.0,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,11.0,561.0,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.0,558.0,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.0,559.0,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-119.659554,217.167419,0.122173,1.0,1.0,133,48],
[31,4,906,146,76,96,-171.794617,235.658920,0.122173,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[2,5,0,0,1440,988,0.0,564.0,0.0,1.040000,0.877143,720,988],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.166667]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.004987,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-31.193186,656.756653,0.680678,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.0,630.0,0.680678,1.0,1.0,14,8],
[9,4,386,202,26,14,-8.018139,693.320557,0.680678,1.0,1.0,4,5],
[11,4,1002,2,18,60,-89.498444,674.547791,0.558505,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.0,649.0,0.558505,1.0,1.0,8,11],
[12,4,358,202,26,14,-61.623627,707.834351,0.558505,1.0,1.0,4,5],
[33,4,240,180,270,20,-87.0,556.0,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-118.069130,303.058289,0.122173,1.0,1.0,133,40],
[15,4,554,100,70,140,-77.635284,531.164185,2.263745,1.0,1.0,20,13],
[17,4,214,2,174,170,-136.088684,432.552856,0.043947,1.0,1.0,62,27],
[13,4,2,2,210,176,-97.0,595.0,0.122173,1.0,1.0,104,104],
[16,4,658,84,138,126,-107.254616,519.688354,0.122173,1.0,1.0,60,120],
[21,4,336,202,20,26,-55.014008,452.823425,0.122173,1.0,1.0,10,13],
[25,4,278,202,34,28,-109.743507,466.595947,0.122173,1.0,1.0,17,14],
[20,4,414,202,22,6,-81.326546,517.512268,0.122173,1.0,1.0,11,3],
[22,4,1014,92,4,6,-51.043823,452.335938,0.122173,1.0,1.0,2,3],
[26,4,1012,84,6,6,-103.788231,465.864746,0.122173,1.0,1.0,3,3],
[23,4,650,100,4,4,-56.755360,455.052246,0.122173,1.0,1.0,2,2],
[27,4,1002,96,10,4,-112.477409,468.946655,0.122173,1.0,1.0,5,2],
[18,4,798,84,106,150,-165.186630,466.350922,-0.368142,1.0,1.0,58,34],
[19,4,390,100,162,78,-107.304848,429.018646,0.214588,1.0,1.0,81,39],
[14,4,926,2,74,142,-131.232773,537.745178,4.380776,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-107.0,571.0,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,11.0,561.0,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.0,558.0,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.0,559.0,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-119.775299,289.162628,0.122173,1.0,1.0,133,48],
[31,4,906,146,76,96,-171.910355,307.654114,0.122173,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[2,5,0,0,1440,988,0.0,564.0,0.0,1.040000,1.002857,720,988],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.222222]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.008727,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-31.193186,656.756653,0.680678,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.0,630.0,0.680678,1.0,1.0,14,8],
[9,4,386,202,26,14,-8.018139,693.320557,0.680678,1.0,1.0,4,5],
[11,4,1002,2,18,60,-89.498444,674.547791,0.558505,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.0,649.0,0.558505,1.0,1.0,8,11],
[12,4,358,202,26,14,-61.623627,707.834351,0.558505,1.0,1.0,4,5],
[33,4,240,180,270,20,-87.0,556.0,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-118.184875,375.053467,0.122173,1.0,1.0,133,40],
[15,4,554,100,70,140,-77.635284,531.164185,2.263745,1.0,1.0,20,13],
[17,4,214,2,174,170,-136.088684,432.552856,0.043947,1.0,1.0,62,27],
[13,4,2,2,210,176,-97.0,595.0,0.122173,1.0,1.0,104,104],
[16,4,658,84,138,126,-107.254616,519.688354,0.122173,1.0,1.0,60,120],
[21,4,336,202,20,26,-55.014008,452.823425,0.122173,1.0,1.0,10,13],
[25,4,278,202,34,28,-109.743507,466.595947,0.122173,1.0,1.0,17,14],
[20,4,414,202,22,6,-81.326546,517.512268,0.122173,1.0,1.0,11,3],
[22,4,1014,92,4,6,-51.043823,452.335938,0.122173,1.0,1.0,2,3],
[26,4,1012,84,6,6,-103.788231,465.864746,0.122173,1.0,1.0,3,3],
[23,4,650,100,4,4,-56.755360,455.052246,0.122173,1.0,1.0,2,2],
[27,4,1002,96,10,4,-112.477409,468.946655,0.122173,1.0,1.0,5,2],
[18,4,798,84,106,150,-165.186630,466.350922,-0.368142,1.0,1.0,58,34],
[19,4,390,100,162,78,-107.304848,429.018646,0.214588,1.0,1.0,81,39],
[14,4,926,2,74,142,-131.232773,537.745178,4.380776,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-107.0,571.0,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,11.0,561.0,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.0,558.0,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.0,559.0,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-119.891045,361.157806,0.122173,1.0,1.0,133,48],
[31,4,906,146,76,96,-172.026108,379.649292,0.122173,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[2,5,0,0,1440,988,0.0,564.0,0.0,1.040000,1.128571,720,988],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.277778]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.012467,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-31.193186,656.756653,0.680678,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.0,630.0,0.680678,1.0,1.0,14,8],
[9,4,386,202,26,14,-8.018139,693.320557,0.680678,1.0,1.0,4,5],
[11,4,1002,2,18,60,-89.498444,674.547791,0.558505,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.0,649.0,0.558505,1.0,1.0,8,11],
[12,4,358,202,26,14,-61.623627,707.834351,0.558505,1.0,1.0,4,5],
[33,4,240,180,270,20,-87.0,556.0,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-118.300621,447.048645,0.122173,1.0,1.0,133,40],
[15,4,554,100,70,140,-77.635284,531.164185,2.263745,1.0,1.0,20,13],
[17,4,214,2,174,170,-136.088684,432.552856,0.043947,1.0,1.0,62,27],
[13,4,2,2,210,176,-97.0,595.0,0.122173,1.0,1.0,104,104],
[16,4,658,84,138,126,-107.254616,519.688354,0.122173,1.0,1.0,60,120],
[21,4,336,202,20,26,-55.014008,452.823425,0.122173,1.0,1.0,10,13],
[25,4,278,202,34,28,-109.743507,466.595947,0.122173,1.0,1.0,17,14],
[20,4,414,202,22,6,-81.326546,517.512268,0.122173,1.0,1.0,11,3],
[22,4,1014,92,4,6,-51.043823,452.335938,0.122173,1.0,1.0,2,3],
[26,4,1012,84,6,6,-103.788231,465.864746,0.122173,1.0,1.0,3,3],
[23,4,650,100,4,4,-56.755360,455.052246,0.122173,1.0,1.0,2,2],
[27,4,1002,96,10,4,-112.477409,468.946655,0.122173,1.0,1.0,5,2],
[18,4,798,84,106,150,-165.186630,466.350922,-0.368142,1.0,1.0,58,34],
[19,4,390,100,162,78,-107.304848,429.018646,0.214588,1.0,1.0,81,39],
[14,4,926,2,74,142,-131.232773,537.745178,4.380776,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-107.0,571.0,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,11.0,561.0,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.0,558.0,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.0,559.0,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-120.006790,433.152985,0.122173,1.0,1.0,133,48],
[31,4,906,146,76,96,-172.141846,451.644470,0.122173,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[2,5,0,0,1440,988,0.0,564.0,0.0,1.040000,1.254286,720,988],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.333333]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.016207,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-31.193186,656.756653,0.680678,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.0,630.0,0.680678,1.0,1.0,14,8],
[9,4,386,202,26,14,-8.018139,693.320557,0.680678,1.0,1.0,4,5],
[11,4,1002,2,18,60,-89.498444,674.547791,0.558505,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.0,649.0,0.558505,1.0,1.0,8,11],
[12,4,358,202,26,14,-61.623627,707.834351,0.558505,1.0,1.0,4,5],
[33,4,240,180,270,20,-87.0,556.0,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-118.416367,519.043823,0.122173,1.0,1.0,133,40],
[15,4,554,100,70,140,-77.635284,531.164185,2.263745,1.0,1.0,20,13],
[17,4,214,2,174,170,-136.088684,432.552856,0.043947,1.0,1.0,62,27],
[13,4,2,2,210,176,-97.0,595.0,0.122173,1.0,1.0,104,104],
[16,4,658,84,138,126,-107.254616,519.688354,0.122173,1.0,1.0,60,120],
[21,4,336,202,20,26,-55.014008,452.823425,0.122173,1.0,1.0,10,13],
[25,4,278,202,34,28,-109.743507,466.595947,0.122173,1.0,1.0,17,14],
[20,4,414,202,22,6,-81.326546,517.512268,0.122173,1.0,1.0,11,3],
[22,4,1014,92,4,6,-51.043823,452.335938,0.122173,1.0,1.0,2,3],
[26,4,1012,84,6,6,-103.788231,465.864746,0.122173,1.0,1.0,3,3],
[23,4,650,100,4,4,-56.755360,455.052246,0.122173,1.0,1.0,2,2],
[27,4,1002,96,10,4,-112.477409,468.946655,0.122173,1.0,1.0,5,2],
[18,4,798,84,106,150,-165.186630,466.350922,-0.368142,1.0,1.0,58,34],
[19,4,390,100,162,78,-107.304848,429.018646,0.214588,1.0,1.0,81,39],
[14,4,926,2,74,142,-131.232773,537.745178,4.380776,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-107.0,571.0,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,11.0,561.0,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.0,558.0,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.0,559.0,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-120.122536,505.148193,0.122173,1.0,1.0,133,48],
[31,4,906,146,76,96,-172.257599,523.639709,0.122173,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[2,5,0,0,1440,988,0.0,564.0,0.0,1.040000,1.380000,720,988],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.388889]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.019947,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-31.193186,656.756653,0.680678,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.0,630.0,0.680678,1.0,1.0,14,8],
[9,4,386,202,26,14,-8.018139,693.320557,0.680678,1.0,1.0,4,5],
[11,4,1002,2,18,60,-89.498444,674.547791,0.558505,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.0,649.0,0.558505,1.0,1.0,8,11],
[12,4,358,202,26,14,-61.623627,707.834351,0.558505,1.0,1.0,4,5],
[33,4,240,180,270,20,-87.0,556.0,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-118.416367,519.043823,0.122173,1.0,1.0,133,40],
[15,4,554,100,70,140,-77.635284,531.164185,2.263745,1.0,1.0,20,13],
[17,4,214,2,174,170,-136.088684,432.552856,0.043947,1.0,1.0,62,27],
[13,4,2,2,210,176,-97.0,595.0,0.122173,1.0,1.0,104,104],
[16,4,658,84,138,126,-107.254616,519.688354,0.122173,1.0,1.0,60,120],
[21,4,336,202,20,26,-55.014008,452.823425,0.122173,1.0,1.0,10,13],
[25,4,278,202,34,28,-109.743507,466.595947,0.122173,1.0,1.0,17,14],
[20,4,414,202,22,6,-81.326546,517.512268,0.122173,1.0,1.0,11,3],
[22,4,1014,92,4,6,-51.043823,452.335938,0.122173,1.0,1.0,2,3],
[26,4,1012,84,6,6,-103.788231,465.864746,0.122173,1.0,1.0,3,3],
[23,4,650,100,4,4,-56.755360,455.052246,0.122173,1.0,1.0,2,2],
[27,4,1002,96,10,4,-112.477409,468.946655,0.122173,1.0,1.0,5,2],
[18,4,798,84,106,150,-165.186630,466.350922,-0.368142,1.0,1.0,58,34],
[19,4,390,100,162,78,-107.304848,429.018646,0.214588,1.0,1.0,81,39],
[14,4,926,2,74,142,-131.232773,537.745178,4.380776,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-107.0,571.0,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,11.0,561.0,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.0,558.0,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.0,559.0,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-120.122536,505.148193,0.122173,1.0,1.0,133,48],
[31,4,906,146,76,96,-172.257599,523.639709,0.122173,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[2,5,0,0,1440,988,0.0,564.0,0.0,1.040000,1.380000,720,988],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.444444]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.023687,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-31.193186,656.756653,0.680678,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.0,630.0,0.680678,1.0,1.0,14,8],
[9,4,386,202,26,14,-8.018139,693.320557,0.680678,1.0,1.0,4,5],
[11,4,1002,2,18,60,-89.498444,674.547791,0.558505,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.0,649.0,0.558505,1.0,1.0,8,11],
[12,4,358,202,26,14,-61.623627,707.834351,0.558505,1.0,1.0,4,5],
[33,4,240,180,270,20,-87.0,556.0,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-118.416367,519.043823,0.122173,1.0,1.0,133,40],
[15,4,554,100,70,140,-77.635284,531.164185,2.263745,1.0,1.0,20,13],
[17,4,214,2,174,170,-136.088684,432.552856,0.043947,1.0,1.0,62,27],
[13,4,2,2,210,176,-97.0,595.0,0.122173,1.0,1.0,104,104],
[16,4,658,84,138,126,-107.254616,519.688354,0.122173,1.0,1.0,60,120],
[21,4,336,202,20,26,-55.014008,452.823425,0.122173,1.0,1.0,10,13],
[25,4,278,202,34,28,-109.743507,466.595947,0.122173,1.0,1.0,17,14],
[20,4,414,202,22,6,-81.326546,517.512268,0.122173,1.0,1.0,11,3],
[22,4,1014,92,4,6,-51.043823,452.335938,0.122173,1.0,1.0,2,3],
[26,4,1012,84,6,6,-103.788231,465.864746,0.122173,1.0,1.0,3,3],
[23,4,650,100,4,4,-56.755360,455.052246,0.122173,1.0,1.0,2,2],
[27,4,1002,96,10,4,-112.477409,468.946655,0.122173,1.0,1.0,5,2],
[18,4,798,84,106,150,-165.186630,466.350922,-0.368142,1.0,1.0,58,34],
[19,4,390,100,162,78,-107.304848,429.018646,0.214588,1.0,1.0,81,39],
[14,4,926,2,74,142,-131.232773,537.745178,4.380776,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-107.0,571.0,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,11.0,561.0,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.0,558.0,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.0,559.0,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-120.122536,505.148193,0.122173,1.0,1.0,133,48],
[31,4,906,146,76,96,-172.257599,523.639709,0.122173,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[2,5,0,0,1440,988,0.0,564.0,0.0,1.040000,1.380000,720,988],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.500000]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.027427,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-31.193186,656.756653,0.680678,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.0,630.0,0.680678,1.0,1.0,14,8],
[9,4,386,202,26,14,-8.018139,693.320557,0.680678,1.0,1.0,4,5],
[11,4,1002,2,18,60,-89.498444,674.547791,0.558505,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.0,649.0,0.558505,1.0,1.0,8,11],
[12,4,358,202,26,14,-61.623627,707.834351,0.558505,1.0,1.0,4,5],
[33,4,240,180,270,20,-87.0,556.0,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-118.416367,519.043823,0.122173,1.0,1.0,133,40],
[15,4,554,100,70,140,-77.635284,531.164185,2.263745,1.0,1.0,20,13],
[17,4,214,2,174,170,-136.088684,432.552856,0.043947,1.0,1.0,62,27],
[13,4,2,2,210,176,-97.0,595.0,0.122173,1.0,1.0,104,104],
[16,4,658,84,138,126,-107.254616,519.688354,0.122173,1.0,1.0,60,120],
[21,4,336,202,20,26,-55.014008,452.823425,0.122173,1.0,1.0,10,13],
[25,4,278,202,34,28,-109.743507,466.595947,0.122173,1.0,1.0,17,14],
[20,4,414,202,22,6,-81.326546,517.512268,0.122173,1.0,1.0,11,3],
[22,4,1014,92,4,6,-51.043823,452.335938,0.122173,1.0,1.0,2,3],
[26,4,1012,84,6,6,-103.788231,465.864746,0.122173,1.0,1.0,3,3],
[23,4,650,100,4,4,-56.755360,455.052246,0.122173,1.0,1.0,2,2],
[27,4,1002,96,10,4,-112.477409,468.946655,0.122173,1.0,1.0,5,2],
[18,4,798,84,106,150,-165.186630,466.350922,-0.368142,1.0,1.0,58,34],
[19,4,390,100,162,78,-107.304848,429.018646,0.214588,1.0,1.0,81,39],
[14,4,926,2,74,142,-131.232773,537.745178,4.380776,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-107.0,571.0,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,11.0,561.0,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.0,558.0,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.0,559.0,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-120.122536,505.148193,0.122173,1.0,1.0,133,48],
[31,4,906,146,76,96,-172.257599,523.639709,0.122173,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[2,5,0,0,1440,988,0.0,564.0,0.0,1.040000,1.380000,720,988],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.555556]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.031167,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-31.193186,656.756653,0.680678,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.0,630.0,0.680678,1.0,1.0,14,8],
[9,4,386,202,26,14,-8.018139,693.320557,0.680678,1.0,1.0,4,5],
[11,4,1002,2,18,60,-89.498444,674.547791,0.558505,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.0,649.0,0.558505,1.0,1.0,8,11],
[12,4,358,202,26,14,-61.623627,707.834351,0.558505,1.0,1.0,4,5],
[33,4,240,180,270,20,-87.0,556.0,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-118.416367,519.043823,0.122173,1.0,1.0,133,40],
[15,4,554,100,70,140,-77.635284,531.164185,2.263745,1.0,1.0,20,13],
[17,4,214,2,174,170,-136.088684,432.552856,0.043947,1.0,1.0,62,27],
[13,4,2,2,210,176,-97.0,595.0,0.122173,1.0,1.0,104,104],
[16,4,658,84,138,126,-107.254616,519.688354,0.122173,1.0,1.0,60,120],
[21,4,336,202,20,26,-55.014008,452.823425,0.122173,1.0,1.0,10,13],
[25,4,278,202,34,28,-109.743507,466.595947,0.122173,1.0,1.0,17,14],
[20,4,414,202,22,6,-81.326546,517.512268,0.122173,1.0,1.0,11,3],
[22,4,1014,92,4,6,-51.043823,452.335938,0.122173,1.0,1.0,2,3],
[26,4,1012,84,6,6,-103.788231,465.864746,0.122173,1.0,1.0,3,3],
[23,4,650,100,4,4,-56.755360,455.052246,0.122173,1.0,1.0,2,2],
[27,4,1002,96,10,4,-112.477409,468.946655,0.122173,1.0,1.0,5,2],
[18,4,798,84,106,150,-165.186630,466.350922,-0.368142,1.0,1.0,58,34],
[19,4,390,100,162,78,-107.304848,429.018646,0.214588,1.0,1.0,81,39],
[14,4,926,2,74,142,-131.232773,537.745178,4.380776,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-107.0,571.0,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,11.0,561.0,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.0,558.0,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.0,559.0,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-120.122536,505.148193,0.122173,1.0,1.0,133,48],
[31,4,906,146,76,96,-172.257599,523.639709,0.122173,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[2,5,0,0,1440,988,0.0,564.0,0.0,1.040000,1.380000,720,988],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.611111]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.034907,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-31.193186,656.756653,0.680678,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.0,630.0,0.680678,1.0,1.0,14,8],
[9,4,386,202,26,14,-8.018139,693.320557,0.680678,1.0,1.0,4,5],
[11,4,1002,2,18,60,-89.498444,674.547791,0.558505,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.0,649.0,0.558505,1.0,1.0,8,11],
[12,4,358,202,26,14,-61.623627,707.834351,0.558505,1.0,1.0,4,5],
[33,4,240,180,270,20,-87.0,556.0,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-118.416367,519.043823,0.122173,1.0,1.0,133,40],
[15,4,554,100,70,140,-77.635284,531.164185,2.263745,1.0,1.0,20,13],
[17,4,214,2,174,170,-136.088684,432.552856,0.043947,1.0,1.0,62,27],
[13,4,2,2,210,176,-97.0,595.0,0.122173,1.0,1.0,104,104],
[16,4,658,84,138,126,-107.254616,519.688354,0.122173,1.0,1.0,60,120],
[21,4,336,202,20,26,-55.014008,452.823425,0.122173,1.0,1.0,10,13],
[25,4,278,202,34,28,-109.743507,466.595947,0.122173,1.0,1.0,17,14],
[20,4,414,202,22,6,-81.326546,517.512268,0.122173,1.0,1.0,11,3],
[22,4,1014,92,4,6,-51.043823,452.335938,0.122173,1.0,1.0,2,3],
[26,4,1012,84,6,6,-103.788231,465.864746,0.122173,1.0,1.0,3,3],
[23,4,650,100,4,4,-56.755360,455.052246,0.122173,1.0,1.0,2,2],
[27,4,1002,96,10,4,-112.477409,468.946655,0.122173,1.0,1.0,5,2],
[18,4,798,84,106,150,-165.186630,466.350922,-0.368142,1.0,1.0,58,34],
[19,4,390,100,162,78,-107.304848,429.018646,0.214588,1.0,1.0,81,39],
[14,4,926,2,74,142,-131.232773,537.745178,4.380776,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-107.0,571.0,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,11.0,561.0,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.0,558.0,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.0,559.0,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-120.122536,505.148193,0.122173,1.0,1.0,133,48],
[31,4,906,146,76,96,-172.257599,523.639709,0.122173,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[2,5,0,0,1440,988,0.0,564.0,0.0,1.040000,1.380000,720,988],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.666667]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.034907,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-31.193186,656.756653,0.680678,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.0,630.0,0.680678,1.0,1.0,14,8],
[9,4,386,202,26,14,-8.018139,693.320557,0.680678,1.0,1.0,4,5],
[11,4,1002,2,18,60,-89.498444,674.547791,0.558505,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.0,649.0,0.558505,1.0,1.0,8,11],
[12,4,358,202,26,14,-61.623627,707.834351,0.558505,1.0,1.0,4,5],
[33,4,240,180,270,20,-87.0,556.0,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-118.416367,519.043823,0.122173,1.0,1.0,133,40],
[15,4,554,100,70,140,-77.635284,531.164185,2.263745,1.0,1.0,20,13],
[17,4,214,2,174,170,-136.088684,432.552856,0.043947,1.0,1.0,62,27],
[13,4,2,2,210,176,-97.0,595.0,0.122173,1.0,1.0,104,104],
[16,4,658,84,138,126,-107.254616,519.688354,0.122173,1.0,1.0,60,120],
[21,4,336,202,20,26,-55.014008,452.823425,0.122173,1.0,1.0,10,13],
[25,4,278,202,34,28,-109.743507,466.595947,0.122173,1.0,1.0,17,14],
[20,4,414,202,22,6,-81.326546,517.512268,0.122173,1.0,1.0,11,3],
[22,4,1014,92,4,6,-51.043823,452.335938,0.122173,1.0,1.0,2,3],
[26,4,1012,84,6,6,-103.788231,465.864746,0.122173,1.0,1.0,3,3],
[23,4,650,100,4,4,-56.755360,455.052246,0.122173,1.0,1.0,2,2],
[27,4,1002,96,10,4,-112.477409,468.946655,0.122173,1.0,1.0,5,2],
[18,4,798,84,106,150,-165.186630,466.350922,-0.368142,1.0,1.0,58,34],
[19,4,390,100,162,78,-107.304848,429.018646,0.214588,1.0,1.0,81,39],
[14,4,926,2,74,142,-131.232773,537.745178,4.380776,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-107.0,571.0,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,11.0,561.0,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.0,558.0,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.0,559.0,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-120.122536,505.148193,0.122173,1.0,1.0,133,48],
[31,4,906,146,76,96,-172.257599,523.639709,0.122173,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[2,5,0,0,1440,988,0.0,564.0,0.0,1.040000,1.380000,720,988],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.722222]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.034907,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-31.193186,656.756653,0.680678,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.0,630.0,0.680678,1.0,1.0,14,8],
[9,4,386,202,26,14,-8.018139,693.320557,0.680678,1.0,1.0,4,5],
[11,4,1002,2,18,60,-89.498444,674.547791,0.558505,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.0,649.0,0.558505,1.0,1.0,8,11],
[12,4,358,202,26,14,-61.623627,707.834351,0.558505,1.0,1.0,4,5],
[33,4,240,180,270,20,-87.0,556.0,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-118.416367,519.043823,0.122173,1.0,1.0,133,40],
[15,4,554,100,70,140,-77.635284,531.164185,2.263745,1.0,1.0,20,13],
[17,4,214,2,174,170,-136.088684,432.552856,0.043947,1.0,1.0,62,27],
[13,4,2,2,210,176,-97.0,595.0,0.122173,1.0,1.0,104,104],
[16,4,658,84,138,126,-107.254616,519.688354,0.122173,1.0,1.0,60,120],
[21,4,336,202,20,26,-55.014008,452.823425,0.122173,1.0,1.0,10,13],
[25,4,278,202,34,28,-109.743507,466.595947,0.122173,1.0,1.0,17,14],
[20,4,414,202,22,6,-81.326546,517.512268,0.122173,1.0,1.0,11,3],
[22,4,1014,92,4,6,-51.043823,452.335938,0.122173,1.0,1.0,2,3],
[26,4,1012,84,6,6,-103.788231,465.864746,0.122173,1.0,1.0,3,3],
[23,4,650,100,4,4,-56.755360,455.052246,0.122173,1.0,1.0,2,2],
[27,4,1002,96,10,4,-112.477409,468.946655,0.122173,1.0,1.0,5,2],
[18,4,798,84,106,150,-165.186630,466.350922,-0.368142,1.0,1.0,58,34],
[19,4,390,100,162,78,-107.304848,429.018646,0.214588,1.0,1.0,81,39],
[14,4,926,2,74,142,-131.232773,537.745178,4.380776,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-107.0,571.0,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,11.0,561.0,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.0,558.0,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.0,559.0,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-120.122536,505.148193,0.122173,1.0,1.0,133,48],
[31,4,906,146,76,96,-172.257599,523.639709,0.122173,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[2,5,0,0,1440,988,0.0,564.0,0.0,1.040000,1.380000,720,988],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.777778]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.034907,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-31.193186,656.756653,0.680678,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.0,630.0,0.680678,1.0,1.0,14,8],
[9,4,386,202,26,14,-8.018139,693.320557,0.680678,1.0,1.0,4,5],
[11,4,1002,2,18,60,-89.498444,674.547791,0.558505,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.0,649.0,0.558505,1.0,1.0,8,11],
[12,4,358,202,26,14,-61.623627,707.834351,0.558505,1.0,1.0,4,5],
[33,4,240,180,270,20,-87.0,556.0,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-118.416367,519.043823,0.122173,1.0,1.0,133,40],
[15,4,554,100,70,140,-77.635284,531.164185,2.263745,1.0,1.0,20,13],
[17,4,214,2,174,170,-136.088684,432.552856,0.043947,1.0,1.0,62,27],
[13,4,2,2,210,176,-97.0,595.0,0.122173,1.0,1.0,104,104],
[16,4,658,84,138,126,-107.254616,519.688354,0.122173,1.0,1.0,60,120],
[21,4,336,202,20,26,-55.014008,452.823425,0.122173,1.0,1.0,10,13],
[25,4,278,202,34,28,-109.743507,466.595947,0.122173,1.0,1.0,17,14],
[20,4,414,202,22,6,-81.326546,517.512268,0.122173,1.0,1.0,11,3],
[22,4,1014,92,4,6,-51.043823,452.335938,0.122173,1.0,1.0,2,3],
[26,4,1012,84,6,6,-103.788231,465.864746,0.122173,1.0,1.0,3,3],
[23,4,650,100,4,4,-56.755360,455.052246,0.122173,1.0,1.0,2,2],
[27,4,1002,96,10,4,-112.477409,468.946655,0.122173,1.0,1.0,5,2],
[18,4,798,84,106,150,-165.186630,466.350922,-0.368142,1.0,1.0,58,34],
[19,4,390,100,162,78,-107.304848,429.018646,0.214588,1.0,1.0,81,39],
[14,4,926,2,74,142,-131.232773,537.745178,4.380776,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-107.0,571.0,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,11.0,561.0,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.0,558.0,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.0,559.0,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-120.122536,505.148193,0.122173,1.0,1.0,133,48],
[31,4,906,146,76,96,-172.257599,523.639709,0.122173,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[2,5,0,0,1440,988,0.0,564.0,0.0,1.040000,1.380000,720,988],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.833333]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.034907,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-31.193186,656.756653,0.680678,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.0,630.0,0.680678,1.0,1.0,14,8],
[9,4,386,202,26,14,-8.018139,693.320557,0.680678,1.0,1.0,4,5],
[11,4,1002,2,18,60,-89.498444,674.547791,0.558505,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.0,649.0,0.558505,1.0,1.0,8,11],
[12,4,358,202,26,14,-61.623627,707.834351,0.558505,1.0,1.0,4,5],
[33,4,240,180,270,20,-87.0,556.0,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-118.416367,519.043823,0.122173,1.0,1.0,133,40],
[15,4,554,100,70,140,-77.635284,531.164185,2.263745,1.0,1.0,20,13],
[17,4,214,2,174,170,-136.088684,432.552856,0.043947,1.0,1.0,62,27],
[13,4,2,2,210,176,-97.0,595.0,0.122173,1.0,1.0,104,104],
[16,4,658,84,138,126,-107.254616,519.688354,0.122173,1.0,1.0,60,120],
[21,4,336,202,20,26,-55.014008,452.823425,0.122173,1.0,1.0,10,13],
[25,4,278,202,34,28,-109.743507,466.595947,0.122173,1.0,1.0,17,14],
[20,4,414,202,22,6,-81.326546,517.512268,0.122173,1.0,1.0,11,3],
[22,4,1014,92,4,6,-51.043823,452.335938,0.122173,1.0,1.0,2,3],
[26,4,1012,84,6,6,-103.788231,465.864746,0.122173,1.0,1.0,3,3],
[23,4,650,100,4,4,-56.755360,455.052246,0.122173,1.0,1.0,2,2],
[27,4,1002,96,10,4,-112.477409,468.946655,0.122173,1.0,1.0,5,2],
[18,4,798,84,106,150,-165.186630,466.350922,-0.368142,1.0,1.0,58,34],
[19,4,390,100,162,78,-107.304848,429.018646,0.214588,1.0,1.0,81,39],
[14,4,926,2,74,142,-131.232773,537.745178,4.380776,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-107.0,571.0,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,11.0,561.0,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.0,558.0,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.0,559.0,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-120.122536,505.148193,0.122173,1.0,1.0,133,48],
[31,4,906,146,76,96,-172.257599,523.639709,0.122173,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[2,5,0,0,1440,988,0.0,564.0,0.0,1.040000,1.380000,720,988],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.888889]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.034907,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-31.193186,656.756653,0.680678,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.0,630.0,0.680678,1.0,1.0,14,8],
[9,4,386,202,26,14,-8.018139,693.320557,0.680678,1.0,1.0,4,5],
[11,4,1002,2,18,60,-89.498444,674.547791,0.558505,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.0,649.0,0.558505,1.0,1.0,8,11],
[12,4,358,202,26,14,-61.623627,707.834351,0.558505,1.0,1.0,4,5],
[33,4,240,180,270,20,-87.0,556.0,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-118.416367,519.043823,0.122173,1.0,1.0,133,40],
[15,4,554,100,70,140,-77.635284,531.164185,2.263745,1.0,1.0,20,13],
[17,4,214,2,174,170,-136.088684,432.552856,0.043947,1.0,1.0,62,27],
[13,4,2,2,210,176,-97.0,595.0,0.122173,1.0,1.0,104,104],
[16,4,658,84,138,126,-107.254616,519.688354,0.122173,1.0,1.0,60,120],
[21,4,336,202,20,26,-55.014008,452.823425,0.122173,1.0,1.0,10,13],
[25,4,278,202,34,28,-109.743507,466.595947,0.122173,1.0,1.0,17,14],
[20,4,414,202,22,6,-81.326546,517.512268,0.122173,1.0,1.0,11,3],
[22,4,1014,92,4,6,-51.043823,452.335938,0.122173,1.0,1.0,2,3],
[26,4,1012,84,6,6,-103.788231,465.864746,0.122173,1.0,1.0,3,3],
[23,4,650,100,4,4,-56.755360,455.052246,0.122173,1.0,1.0,2,2],
[27,4,1002,96,10,4,-112.477409,468.946655,0.122173,1.0,1.0,5,2],
[18,4,798,84,106,150,-165.186630,466.350922,-0.368142,1.0,1.0,58,34],
[19,4,390,100,162,78,-107.304848,429.018646,0.214588,1.0,1.0,81,39],
[14,4,926,2,74,142,-131.232773,537.745178,4.380776,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-107.0,571.0,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,11.0,561.0,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.0,558.0,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.0,559.0,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-120.122536,505.148193,0.122173,1.0,1.0,133,48],
[31,4,906,146,76,96,-172.257599,523.639709,0.122173,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[2,5,0,0,1440,988,0.0,564.0,0.0,1.040000,1.380000,720,988],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24,0,0,0.944444]
],
[
[4,0,0,0,1024,1024,0.0,0.0,0.0,1.410000,1.060000,512,512],
[41,3,421,242,419,270,-54.0,219.0,0.0,1.0,1.0,209,135],
[44,2,0,372,271,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[45,2,819,610,63,206,-506.0,-222.0,-0.034907,1.0,1.0,22,3],
[46,2,546,372,270,652,-506.0,-192.0,0.0,1.0,1.0,135,326],
[8,4,626,170,20,56,-31.193186,656.756653,0.680678,1.0,1.0,11,7],
[7,4,984,146,24,62,-49.0,630.0,0.680678,1.0,1.0,14,8],
[9,4,386,202,26,14,-8.018139,693.320557,0.680678,1.0,1.0,4,5],
[11,4,1002,2,18,60,-89.498444,674.547791,0.558505,1.0,1.0,8,9],
[10,4,626,100,22,68,-109.0,649.0,0.558505,1.0,1.0,8,11],
[12,4,358,202,26,14,-61.623627,707.834351,0.558505,1.0,1.0,4,5],
[33,4,240,180,270,20,-87.0,556.0,0.0,1.0,1.0,135,10],
[30,4,658,2,266,80,-118.416367,519.043823,0.122173,1.0,1.0,133,40],
[15,4,554,100,70,140,-77.635284,531.164185,2.263745,1.0,1.0,20,13],
[17,4,214,2,174,170,-136.088684,432.552856,0.043947,1.0,1.0,62,27],
[13,4,2,2,210,176,-97.0,595.0,0.122173,1.0,1.0,104,104],
[16,4,658,84,138,126,-107.254616,519.688354,0.122173,1.0,1.0,60,120],
[21,4,336,202,20,26,-55.014008,452.823425,0.122173,1.0,1.0,10,13],
[25,4,278,202,34,28,-109.743507,466.595947,0.122173,1.0,1.0,17,14],
[20,4,414,202,22,6,-81.326546,517.512268,0.122173,1.0,1.0,11,3],
[22,4,1014,92,4,6,-51.043823,452.335938,0.122173,1.0,1.0,2,3],
[26,4,1012,84,6,6,-103.788231,465.864746,0.122173,1.0,1.0,3,3],
[23,4,650,100,4,4,-56.755360,455.052246,0.122173,1.0,1.0,2,2],
[27,4,1002,96,10,4,-112.477409,468.946655,0.122173,1.0,1.0,5,2],
[18,4,798,84,106,150,-165.186630,466.350922,-0.368142,1.0,1.0,58,34],
[19,4,390,100,162,78,-107.304848,429.018646,0.214588,1.0,1.0,81,39],
[14,4,926,2,74,142,-131.232773,537.745178,4.380776,1.0,1.0,35,13,1],
[34,4,2,180,236,30,-107.0,571.0,0.0,1.0,1.0,118,15],
[35,4,512,180,40,54,11.0,561.0,0.0,1.0,1.0,20,27],
[36,4,1002,84,8,10,17.0,558.0,0.0,1.0,1.0,4,5],
[37,4,1014,100,6,2,13.0,559.0,0.0,1.0,1.0,3,1],
[29,4,390,2,266,96,-120.122536,505.148193,0.122173,1.0,1.0,133,48],
[31,4,906,146,76,96,-172.257599,523.639709,0.122173,1.0,1.0,48,90],
[42,3,0,0,682,192,-41.0,446.0,0.0,1.0,1.0,341,96],
[2,5,0,0,1440,988,0.0,564.0,0.0,1.040000,1.380000,720,988],
[3,1,0,0,255,512,0.0,0.0,0.0,5.680000,2.130000,127,256],
[1,3,843,463,48,49,0.0,0.0,0.0,30.600000,24.0,24,24]
]
]
}
}
]

},{}],9:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-hospital2-obj-01-01.png"],
"name": "obj01_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 500,
"MarginWidth": 258,
"MarginHeight": 258,
"parts": ["root","Obj","body","wheel_r","wheel_l","wheel_s_r","wheel_s_l","ban"],
"ssa": [
[
[3,0,350,76,93,217,43.0,34.0,0.0,1.0,1.0,39,114],
[4,0,447,446,41,66,3.0,154.0,0.0,1.0,1.0,17,32],
[5,0,447,378,37,66,147.0,110.0,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,0.0,0.0,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-104.0,58.0,0.0,1.0,1.0,37,111],
[6,0,447,367,25,9,73.0,28.0,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,43.0,34.0,0.0,1.0,1.0,39,114],
[4,0,447,446,41,66,3.0,154.0,0.0,1.0,1.0,17,32],
[5,0,447,378,37,66,147.0,110.0,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,0.0,0.0,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-104.0,58.0,0.0,1.0,1.0,37,111],
[6,0,447,367,25,9,73.0,28.0,0.0,1.0,1.0,12,4]
]
]
}
}
]

},{}],10:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-hospital2-obj-01-01.png"],
"name": "obj02_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 500,
"MarginWidth": 258,
"MarginHeight": 258,
"parts": ["root","Obj","body","wheel_r","wheel_l","wheel_r_1","wheel_l_1","wheel_s_r","wheel_s_l","ban"],
"ssa": [
[
[3,0,350,76,93,217,43.0,34.0,0.0,1.0,1.0,39,114],
[6,0,447,446,41,66,3.0,154.0,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,147.0,110.0,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,0.0,0.0,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-104.0,58.0,0.0,1.0,1.0,37,111],
[8,0,447,367,25,9,73.0,28.0,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,44.142857,35.142857,0.0,1.0,1.0,39,114],
[6,0,447,446,41,66,4.142857,155.142853,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,148.142853,111.142860,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,1.142857,1.142857,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-102.857140,59.142857,0.0,1.0,1.0,37,111],
[8,0,447,367,25,9,74.142860,29.142857,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,45.285713,36.285713,0.0,1.0,1.0,39,114],
[6,0,447,446,41,66,5.285714,156.285721,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,149.285721,112.285713,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,2.285714,2.285714,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-101.714287,60.285713,0.0,1.0,1.0,37,111],
[8,0,447,367,25,9,75.285713,30.285715,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,46.428570,37.428570,0.0,1.0,1.0,39,114],
[6,0,447,446,41,66,6.428572,157.428574,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,150.428574,113.428574,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,3.428571,3.428571,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-100.571426,61.428570,0.0,1.0,1.0,37,111],
[8,0,447,367,25,9,76.428574,31.428572,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,47.571430,38.571430,0.0,1.0,1.0,39,114],
[6,0,447,446,41,66,7.571429,158.571426,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,151.571426,114.571426,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,4.571429,4.571429,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-99.428574,62.571430,0.0,1.0,1.0,37,111],
[8,0,447,367,25,9,77.571426,32.571430,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,48.714287,39.714287,0.0,1.0,1.0,39,114],
[6,0,447,446,41,66,8.714286,159.714279,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,152.714279,115.714287,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,5.714286,5.714286,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-98.285713,63.714287,0.0,1.0,1.0,37,111],
[8,0,447,367,25,9,78.714287,33.714287,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,49.857143,40.857143,0.279253,1.0,1.0,39,103,0,1],
[5,0,350,76,93,217,49.857143,40.857143,0.0,1.0,1.0,39,114,0,0,0.600000],
[6,0,447,446,41,66,9.857143,162.857147,0.419211,1.0,1.0,17,34,0,1],
[7,0,447,378,37,66,154.857147,119.857140,0.291453,1.0,1.0,16,35,0,1],
[1,0,0,203,348,309,6.857143,6.857143,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-97.142860,64.857140,0.392699,1.0,1.0,37,106,0,1],
[4,0,350,295,95,217,-97.142860,64.857140,0.0,1.0,1.0,37,111,0,0,0.600000],
[8,0,447,367,25,9,79.857140,34.857143,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,51.0,42.0,0.279253,1.0,1.0,39,103,0,1],
[5,0,350,76,93,217,51.0,42.0,0.0,1.0,1.0,39,114,0,0,0.514286],
[6,0,447,446,41,66,11.0,164.0,0.419211,1.0,1.0,17,34,0,1],
[7,0,447,378,37,66,156.0,121.0,0.291453,1.0,1.0,16,35,0,1],
[1,0,0,203,348,309,8.0,8.0,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-96.0,66.0,0.392699,1.0,1.0,37,106,0,1],
[4,0,350,295,95,217,-96.0,66.0,0.0,1.0,1.0,37,111,0,0,0.514286],
[8,0,447,367,25,9,81.0,36.0,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,52.142857,43.142857,0.279253,1.0,1.0,39,103,0,1],
[5,0,350,76,93,217,52.142857,43.142857,0.0,1.0,1.0,39,114,0,0,0.428571],
[6,0,447,446,41,66,12.142858,165.142853,0.419211,1.0,1.0,17,34,0,1],
[7,0,447,378,37,66,157.142853,122.142860,0.291453,1.0,1.0,16,35,0,1],
[1,0,0,203,348,309,9.142858,9.142858,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-94.857140,67.142860,0.392699,1.0,1.0,37,106,0,1],
[4,0,350,295,95,217,-94.857140,67.142860,0.0,1.0,1.0,37,111,0,0,0.428571],
[8,0,447,367,25,9,82.142860,37.142857,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,53.285713,44.285713,0.279253,1.0,1.0,39,103,0,1],
[5,0,350,76,93,217,53.285713,44.285713,0.0,1.0,1.0,39,114,0,0,0.342857],
[6,0,447,446,41,66,13.285714,166.285721,0.419211,1.0,1.0,17,34,0,1],
[7,0,447,378,37,66,158.285721,123.285713,0.291453,1.0,1.0,16,35,0,1],
[1,0,0,203,348,309,10.285714,10.285714,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-93.714287,68.285713,0.392699,1.0,1.0,37,106,0,1],
[4,0,350,295,95,217,-93.714287,68.285713,0.0,1.0,1.0,37,111,0,0,0.342857],
[8,0,447,367,25,9,83.285713,38.285713,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,54.428574,45.428574,0.279253,1.0,1.0,39,103,0,1],
[5,0,350,76,93,217,54.428574,45.428574,0.0,1.0,1.0,39,114,0,0,0.257143],
[6,0,447,446,41,66,14.428572,167.428574,0.419211,1.0,1.0,17,34,0,1],
[7,0,447,378,37,66,159.428574,124.428574,0.291453,1.0,1.0,16,35,0,1],
[1,0,0,203,348,309,11.428572,11.428572,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-92.571426,69.428574,0.392699,1.0,1.0,37,106,0,1],
[4,0,350,295,95,217,-92.571426,69.428574,0.0,1.0,1.0,37,111,0,0,0.257143],
[8,0,447,367,25,9,84.428574,39.428574,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,55.571426,46.571426,0.279253,1.0,1.0,39,103,0,1],
[5,0,350,76,93,217,55.571426,46.571426,0.0,1.0,1.0,39,114,0,0,0.171429],
[6,0,447,446,41,66,15.571428,168.571426,0.419211,1.0,1.0,17,34,0,1],
[7,0,447,378,37,66,160.571426,125.571426,0.291453,1.0,1.0,16,35,0,1],
[1,0,0,203,348,309,12.571428,12.571428,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-91.428574,70.571426,0.392699,1.0,1.0,37,106,0,1],
[4,0,350,295,95,217,-91.428574,70.571426,0.0,1.0,1.0,37,111,0,0,0.171429],
[8,0,447,367,25,9,85.571426,40.571426,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,56.714287,47.714287,0.279253,1.0,1.0,39,103,0,1],
[5,0,350,76,93,217,56.714287,47.714287,0.0,1.0,1.0,39,114,0,0,0.085714],
[6,0,447,446,41,66,16.714287,169.714279,0.419211,1.0,1.0,17,34,0,1],
[7,0,447,378,37,66,161.714279,126.714287,0.291453,1.0,1.0,16,35,0,1],
[1,0,0,203,348,309,13.714286,13.714286,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-90.285713,71.714287,0.392699,1.0,1.0,37,106,0,1],
[4,0,350,295,95,217,-90.285713,71.714287,0.0,1.0,1.0,37,111,0,0,0.085714],
[8,0,447,367,25,9,86.714287,41.714287,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,57.857143,48.857143,0.279253,1.0,1.0,39,103,0,1],
[6,0,447,446,41,66,17.857143,170.857147,0.419211,1.0,1.0,17,34,0,1],
[7,0,447,378,37,66,162.857147,127.857140,0.291453,1.0,1.0,16,35,0,1],
[1,0,0,203,348,309,14.857142,14.857142,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-89.142860,72.857140,0.392699,1.0,1.0,37,106,0,1],
[8,0,447,367,25,9,87.857140,42.857143,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,59.0,50.0,0.0,1.0,1.0,39,114],
[5,0,350,76,93,217,59.0,50.0,0.279253,1.0,1.0,39,103,0,1,0.600000],
[6,0,447,446,41,66,19.0,170.0,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,163.0,126.0,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,16.0,16.0,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-88.0,74.0,0.0,1.0,1.0,37,111],
[4,0,350,295,95,217,-88.0,74.0,0.392699,1.0,1.0,37,106,0,1,0.600000],
[8,0,447,367,25,9,89.0,44.0,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,59.200001,50.200001,0.0,1.0,1.0,39,114],
[5,0,350,76,93,217,59.200001,50.200001,0.279253,1.0,1.0,39,103,0,1,0.500000],
[6,0,447,446,41,66,19.200001,170.199997,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,163.199997,126.199997,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,16.200001,16.200001,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-87.800003,74.199997,0.0,1.0,1.0,37,111],
[4,0,350,295,95,217,-87.800003,74.199997,0.392699,1.0,1.0,37,106,0,1,0.500000],
[8,0,447,367,25,9,89.199997,44.200001,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,59.400002,50.400002,0.0,1.0,1.0,39,114],
[5,0,350,76,93,217,59.400002,50.400002,0.279253,1.0,1.0,39,103,0,1,0.400000],
[6,0,447,446,41,66,19.400000,170.399994,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,163.399994,126.400002,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,16.400000,16.400000,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-87.599998,74.400002,0.0,1.0,1.0,37,111],
[4,0,350,295,95,217,-87.599998,74.400002,0.392699,1.0,1.0,37,106,0,1,0.400000],
[8,0,447,367,25,9,89.400002,44.400002,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,59.599998,50.599998,0.0,1.0,1.0,39,114],
[5,0,350,76,93,217,59.599998,50.599998,0.279253,1.0,1.0,39,103,0,1,0.300000],
[6,0,447,446,41,66,19.600000,170.600006,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,163.600006,126.599998,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,16.600000,16.600000,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-87.400002,74.599998,0.0,1.0,1.0,37,111],
[4,0,350,295,95,217,-87.400002,74.599998,0.392699,1.0,1.0,37,106,0,1,0.300000],
[8,0,447,367,25,9,89.599998,44.599998,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,59.799999,50.799999,0.0,1.0,1.0,39,114],
[5,0,350,76,93,217,59.799999,50.799999,0.279253,1.0,1.0,39,103,0,1,0.200000],
[6,0,447,446,41,66,19.799999,170.800003,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,163.800003,126.800003,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,16.799999,16.799999,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-87.199997,74.800003,0.0,1.0,1.0,37,111],
[4,0,350,295,95,217,-87.199997,74.800003,0.392699,1.0,1.0,37,106,0,1,0.200000],
[8,0,447,367,25,9,89.800003,44.799999,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,60.0,51.0,0.0,1.0,1.0,39,114],
[5,0,350,76,93,217,60.0,51.0,0.279253,1.0,1.0,39,103,0,1,0.100000],
[6,0,447,446,41,66,20.0,171.0,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,164.0,127.0,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,17.0,17.0,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-87.0,75.0,0.0,1.0,1.0,37,111],
[4,0,350,295,95,217,-87.0,75.0,0.392699,1.0,1.0,37,106,0,1,0.100000],
[8,0,447,367,25,9,90.0,45.0,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,60.200001,51.200001,0.0,1.0,1.0,39,114],
[6,0,447,446,41,66,20.200001,171.199997,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,164.199997,127.199997,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,17.200001,17.200001,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-86.800003,75.199997,0.0,1.0,1.0,37,111],
[8,0,447,367,25,9,90.199997,45.200001,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,60.400002,51.400002,0.0,1.0,1.0,39,114],
[6,0,447,446,41,66,20.400000,171.399994,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,164.399994,127.400002,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,17.400000,17.400000,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-86.599998,75.400002,0.0,1.0,1.0,37,111],
[8,0,447,367,25,9,90.400002,45.400002,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,60.599998,51.599998,0.0,1.0,1.0,39,114],
[6,0,447,446,41,66,20.600000,171.600006,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,164.600006,127.599998,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,17.600000,17.600000,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-86.400002,75.599998,0.0,1.0,1.0,37,111],
[8,0,447,367,25,9,90.599998,45.599998,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,60.799999,51.799999,0.0,1.0,1.0,39,114],
[6,0,447,446,41,66,20.799999,171.800003,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,164.800003,127.800003,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,17.799999,17.799999,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-86.199997,75.800003,0.0,1.0,1.0,37,111],
[8,0,447,367,25,9,90.800003,45.799999,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,61.0,52.0,0.0,1.0,1.0,39,114],
[6,0,447,446,41,66,21.0,172.0,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,165.0,128.0,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,18.0,18.0,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-86.0,76.0,0.0,1.0,1.0,37,111],
[8,0,447,367,25,9,91.0,46.0,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,61.0,52.0,0.0,1.0,1.0,39,114],
[6,0,447,446,41,66,21.0,172.0,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,165.0,128.0,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,18.0,18.0,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-86.0,76.0,0.0,1.0,1.0,37,111],
[8,0,447,367,25,9,91.0,46.0,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,61.0,52.0,0.0,1.0,1.0,39,114],
[6,0,447,446,41,66,21.0,172.0,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,165.0,128.0,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,18.0,18.0,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-86.0,76.0,0.0,1.0,1.0,37,111],
[8,0,447,367,25,9,91.0,46.0,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,61.0,52.0,0.0,1.0,1.0,39,114],
[6,0,447,446,41,66,21.0,172.0,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,165.0,128.0,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,18.0,18.0,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-86.0,76.0,0.0,1.0,1.0,37,111],
[8,0,447,367,25,9,91.0,46.0,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,61.0,52.0,0.0,1.0,1.0,39,114],
[6,0,447,446,41,66,21.0,172.0,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,165.0,128.0,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,18.0,18.0,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-86.0,76.0,0.0,1.0,1.0,37,111],
[8,0,447,367,25,9,91.0,46.0,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,61.0,52.0,0.0,1.0,1.0,39,114],
[6,0,447,446,41,66,21.0,172.0,0.0,1.0,1.0,17,32],
[7,0,447,378,37,66,165.0,128.0,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,18.0,18.0,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-86.0,76.0,0.0,1.0,1.0,37,111],
[8,0,447,367,25,9,91.0,46.0,0.0,1.0,1.0,12,4]
]
]
}
}
]

},{}],11:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-hospital2-obj-01-01.png"],
"name": "obj03_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 500,
"MarginWidth": 258,
"MarginHeight": 258,
"parts": ["root","Obj","body","wheel_r","wheel_l","wheel_s_r","wheel_s_l","ban"],
"ssa": [
[
[3,0,350,76,93,217,61.0,52.0,0.0,1.0,1.0,39,114],
[4,0,447,446,41,66,21.0,172.0,0.0,1.0,1.0,17,32],
[5,0,447,378,37,66,165.0,128.0,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,18.0,18.0,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-86.0,76.0,0.0,1.0,1.0,37,111],
[6,0,447,367,25,9,91.0,46.0,0.0,1.0,1.0,12,4]
],
[
[3,0,350,76,93,217,61.0,52.0,0.0,1.0,1.0,39,114],
[4,0,447,446,41,66,21.0,172.0,0.0,1.0,1.0,17,32],
[5,0,447,378,37,66,165.0,128.0,0.0,1.0,1.0,16,31],
[1,0,0,203,348,309,18.0,18.0,0.0,1.0,1.0,174,154],
[2,0,350,295,95,217,-86.0,76.0,0.0,1.0,1.0,37,111],
[6,0,447,367,25,9,91.0,46.0,0.0,1.0,1.0,12,4]
]
]
}
}
]

},{}],12:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-01-01.png"],
"name": "obj01_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 200,
"MarginWidth": 108,
"MarginHeight": 108,
"parts": ["root","Obj","ramp","fire1","fire1_2"],
"ssa": [
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.0,1.0,1.0,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.004760,1.018182,0.990909,17,68],
[3,0,36,29,34,74,20.0,26.0,0.004760,1.010526,0.994737,17,68,0,0,0.166667]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.009520,1.036364,0.981818,17,68],
[3,0,36,29,34,74,20.0,26.0,0.009520,1.021053,0.989474,17,68,0,0,0.333333]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.014280,1.054546,0.972727,17,68],
[3,0,36,29,34,74,20.0,26.0,0.014280,1.031579,0.984211,17,68,0,0,0.500000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.019040,1.072727,0.963636,17,68],
[3,0,36,29,34,74,20.0,26.0,0.019040,1.042105,0.978947,17,68,0,0,0.666667]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.023800,1.090909,0.954545,17,68],
[3,0,36,29,34,74,20.0,26.0,0.023800,1.052632,0.973684,17,68,0,0,0.833333]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.028560,1.109091,0.945455,17,68],
[3,0,36,29,34,74,20.0,26.0,0.028560,1.063158,0.968421,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.033320,1.127273,0.936364,17,68,0,0,0.840000],
[3,0,36,29,34,74,20.0,26.0,0.033320,1.073684,0.963158,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.038080,1.145455,0.927273,17,68,0,0,0.680000],
[3,0,36,29,34,74,20.0,26.0,0.038080,1.084211,0.957895,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.042840,1.163636,0.918182,17,68,0,0,0.520000],
[3,0,36,29,34,74,20.0,26.0,0.042840,1.094737,0.952632,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.047600,1.181818,0.909091,17,68,0,0,0.360000],
[3,0,36,29,34,74,20.0,26.0,0.047600,1.105263,0.947368,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.052360,1.115790,0.942105,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.054542,1.126316,0.936842,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.056723,1.136842,0.931579,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.058905,1.147368,0.926316,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.061087,1.157895,0.921053,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.063268,1.168421,0.915789,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.065450,1.178947,0.910526,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.067632,1.189474,0.905263,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.069813,1.200000,0.900000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.047124,1.180000,0.910000,17,68,0,0,0.360000],
[3,0,36,29,34,74,20.0,26.0,0.062832,1.180000,0.910000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.041888,1.160000,0.920000,17,68,0,0,0.520000],
[3,0,36,29,34,74,20.0,26.0,0.055851,1.160000,0.920000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.036652,1.140000,0.930000,17,68,0,0,0.680000],
[3,0,36,29,34,74,20.0,26.0,0.048869,1.140000,0.930000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.031416,1.120000,0.940000,17,68,0,0,0.840000],
[3,0,36,29,34,74,20.0,26.0,0.041888,1.120000,0.940000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.026180,1.100000,0.950000,17,68],
[3,0,36,29,34,74,20.0,26.0,0.034907,1.100000,0.950000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.020944,1.080000,0.960000,17,68],
[3,0,36,29,34,74,20.0,26.0,0.027925,1.080000,0.960000,17,68,0,0,0.800000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.015708,1.060000,0.970000,17,68],
[3,0,36,29,34,74,20.0,26.0,0.020944,1.060000,0.970000,17,68,0,0,0.600000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.010472,1.040000,0.980000,17,68],
[3,0,36,29,34,74,20.0,26.0,0.013963,1.040000,0.980000,17,68,0,0,0.400000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.005236,1.020000,0.990000,17,68],
[3,0,36,29,34,74,20.0,26.0,0.006981,1.020000,0.990000,17,68,0,0,0.200000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.0,1.0,1.0,17,68]
]
]
}
}
]

},{}],13:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-01-01.png"],
"name": "obj02_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 200,
"MarginWidth": 108,
"MarginHeight": 108,
"parts": ["root","Obj","ramp","fire1","fire1_2"],
"ssa": [
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.0,1.0,1.0,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.002756,1.015790,0.989474,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.005512,1.031579,0.978947,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.008267,1.047368,0.968421,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.011023,1.063158,0.957895,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.013779,1.078947,0.947368,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.016535,1.094737,0.936842,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.019290,1.110526,0.926316,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.022046,1.126316,0.915789,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.024802,1.142105,0.905263,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.027558,1.157895,0.894737,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.030314,1.173684,0.884211,17,68,0,0,0.922222],
[3,0,36,29,34,74,20.0,26.0,0.005818,1.044444,0.888889,17,68,0,0,0.111111]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.033069,1.189474,0.873684,17,68,0,0,0.844444],
[3,0,36,29,34,74,20.0,26.0,0.011636,1.088889,0.877778,17,68,0,0,0.222222]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.035825,1.205263,0.863158,17,68,0,0,0.766667],
[3,0,36,29,34,74,20.0,26.0,0.017453,1.133333,0.866667,17,68,0,0,0.333333]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.038581,1.221053,0.852632,17,68,0,0,0.688889],
[3,0,36,29,34,74,20.0,26.0,0.023271,1.177778,0.855556,17,68,0,0,0.444444]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.041337,1.236842,0.842105,17,68,0,0,0.611111],
[3,0,36,29,34,74,20.0,26.0,0.029089,1.222222,0.844444,17,68,0,0,0.555556]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.044093,1.252632,0.831579,17,68,0,0,0.533333],
[3,0,36,29,34,74,20.0,26.0,0.034907,1.266667,0.833333,17,68,0,0,0.666667]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.046848,1.268421,0.821053,17,68,0,0,0.455556],
[3,0,36,29,34,74,20.0,26.0,0.040724,1.311111,0.822222,17,68,0,0,0.777778]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.049604,1.284210,0.810526,17,68,0,0,0.377778],
[3,0,36,29,34,74,20.0,26.0,0.046542,1.355556,0.811111,17,68,0,0,0.888889]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.300000,0.800000,17,68,0,0,0.300000],
[3,0,36,29,34,74,20.0,26.0,0.052360,1.400000,0.800000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.047124,1.270000,0.820000,17,68,0,0,0.440000],
[3,0,36,29,34,74,20.0,26.0,0.047124,1.360000,0.820000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.041888,1.240000,0.840000,17,68,0,0,0.580000],
[3,0,36,29,34,74,20.0,26.0,0.041888,1.320000,0.840000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.036652,1.210000,0.860000,17,68,0,0,0.720000],
[3,0,36,29,34,74,20.0,26.0,0.036652,1.280000,0.860000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.031416,1.180000,0.880000,17,68,0,0,0.860000],
[3,0,36,29,34,74,20.0,26.0,0.031416,1.240000,0.880000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.026180,1.150000,0.900000,17,68],
[3,0,36,29,34,74,20.0,26.0,0.026180,1.200000,0.900000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.020944,1.120000,0.920000,17,68],
[3,0,36,29,34,74,20.0,26.0,0.020944,1.160000,0.920000,17,68,0,0,0.800000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.015708,1.090000,0.940000,17,68],
[3,0,36,29,34,74,20.0,26.0,0.015708,1.120000,0.940000,17,68,0,0,0.600000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.010472,1.060000,0.960000,17,68],
[3,0,36,29,34,74,20.0,26.0,0.010472,1.080000,0.960000,17,68,0,0,0.400000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.005236,1.030000,0.980000,17,68],
[3,0,36,29,34,74,20.0,26.0,0.005236,1.040000,0.980000,17,68,0,0,0.200000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.0,1.0,1.0,17,68]
]
]
}
}
]

},{}],14:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-01-01.png"],
"name": "obj03_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 200,
"MarginWidth": 108,
"MarginHeight": 108,
"parts": ["root","Obj","ramp","fire1","fire1_2"],
"ssa": [
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.0,1.0,1.0,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.004760,1.018182,0.990909,17,68],
[3,0,36,29,34,74,20.0,26.0,0.004760,1.010526,0.994737,17,68,0,0,0.166667]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.009520,1.036364,0.981818,17,68],
[3,0,36,29,34,74,20.0,26.0,0.009520,1.021053,0.989474,17,68,0,0,0.333333]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.014280,1.054546,0.972727,17,68],
[3,0,36,29,34,74,20.0,26.0,0.014280,1.031579,0.984211,17,68,0,0,0.500000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.019040,1.072727,0.963636,17,68],
[3,0,36,29,34,74,20.0,26.0,0.019040,1.042105,0.978947,17,68,0,0,0.666667]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.023800,1.090909,0.954545,17,68],
[3,0,36,29,34,74,20.0,26.0,0.023800,1.052632,0.973684,17,68,0,0,0.833333]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.028560,1.109091,0.945455,17,68],
[3,0,36,29,34,74,20.0,26.0,0.028560,1.063158,0.968421,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.033320,1.127273,0.936364,17,68,0,0,0.840000],
[3,0,36,29,34,74,20.0,26.0,0.033320,1.073684,0.963158,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.038080,1.145455,0.927273,17,68,0,0,0.680000],
[3,0,36,29,34,74,20.0,26.0,0.038080,1.084211,0.957895,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.042840,1.163636,0.918182,17,68,0,0,0.520000],
[3,0,36,29,34,74,20.0,26.0,0.042840,1.094737,0.952632,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.047600,1.181818,0.909091,17,68,0,0,0.360000],
[3,0,36,29,34,74,20.0,26.0,0.047600,1.105263,0.947368,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.052360,1.115790,0.942105,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.054542,1.126316,0.936842,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.056723,1.136842,0.931579,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.058905,1.147368,0.926316,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.061087,1.157895,0.921053,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.063268,1.168421,0.915789,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.065450,1.178947,0.910526,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.067632,1.189474,0.905263,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[3,0,36,29,34,74,20.0,26.0,0.069813,1.200000,0.900000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.047124,1.180000,0.910000,17,68,0,0,0.360000],
[3,0,36,29,34,74,20.0,26.0,0.062832,1.180000,0.910000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.041888,1.160000,0.920000,17,68,0,0,0.520000],
[3,0,36,29,34,74,20.0,26.0,0.055851,1.160000,0.920000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.036652,1.140000,0.930000,17,68,0,0,0.680000],
[3,0,36,29,34,74,20.0,26.0,0.048869,1.140000,0.930000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.031416,1.120000,0.940000,17,68,0,0,0.840000],
[3,0,36,29,34,74,20.0,26.0,0.041888,1.120000,0.940000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.026180,1.100000,0.950000,17,68],
[3,0,36,29,34,74,20.0,26.0,0.034907,1.100000,0.950000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.020944,1.080000,0.960000,17,68],
[3,0,36,29,34,74,20.0,26.0,0.027925,1.080000,0.960000,17,68,0,0,0.800000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.015708,1.060000,0.970000,17,68],
[3,0,36,29,34,74,20.0,26.0,0.020944,1.060000,0.970000,17,68,0,0,0.600000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.010472,1.040000,0.980000,17,68],
[3,0,36,29,34,74,20.0,26.0,0.013963,1.040000,0.980000,17,68,0,0,0.400000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.005236,1.020000,0.990000,17,68],
[3,0,36,29,34,74,20.0,26.0,0.006981,1.020000,0.990000,17,68,0,0,0.200000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,0,29,34,74,20.0,26.0,0.0,1.0,1.0,17,68]
]
]
}
}
]

},{}],15:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-01-01.png"],
"name": "obj04_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 200,
"MarginWidth": 108,
"MarginHeight": 108,
"parts": ["root","Obj","ramp","baby","fire1"],
"ssa": [
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[3,0,0,29,34,74,20.0,26.0,0.0,1.0,1.0,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.235619,1.193104,1.193104,51,53,0,0,0.034483],
[3,0,0,29,34,74,20.0,26.0,0.002182,1.012500,0.991667,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.209440,1.186207,1.186207,51,53,0,0,0.068966],
[3,0,0,29,34,74,20.0,26.0,0.004363,1.025000,0.983333,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.183260,1.179310,1.179310,51,53,0,0,0.103448],
[3,0,0,29,34,74,20.0,26.0,0.006545,1.037500,0.975000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.157080,1.172414,1.172414,51,53,0,0,0.137931],
[3,0,0,29,34,74,20.0,26.0,0.008727,1.050000,0.966667,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.130900,1.165517,1.165517,51,53,0,0,0.172414],
[3,0,0,29,34,74,20.0,26.0,0.010908,1.062500,0.958333,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.104720,1.158621,1.158621,51,53,0,0,0.206897],
[3,0,0,29,34,74,20.0,26.0,0.013090,1.075000,0.950000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.078540,1.151724,1.151724,51,53,0,0,0.241379],
[3,0,0,29,34,74,20.0,26.0,0.015272,1.087500,0.941667,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.052360,1.144828,1.144828,51,53,0,0,0.275862],
[3,0,0,29,34,74,20.0,26.0,0.017453,1.100000,0.933333,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.026180,1.137931,1.137931,51,53,0,0,0.310345],
[3,0,0,29,34,74,20.0,26.0,0.019635,1.112500,0.925000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.0,1.131034,1.131034,51,53,0,0,0.344828],
[3,0,0,29,34,74,20.0,26.0,0.021817,1.125000,0.916667,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.010472,1.124138,1.124138,51,53,0,0,0.379310],
[3,0,0,29,34,74,20.0,26.0,0.023998,1.137500,0.908333,17,68,0,0,0.928571]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.020944,1.117241,1.117241,51,53,0,0,0.413793],
[3,0,0,29,34,74,20.0,26.0,0.026180,1.150000,0.900000,17,68,0,0,0.857143]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.031416,1.110345,1.110345,51,53,0,0,0.448276],
[3,0,0,29,34,74,20.0,26.0,0.028362,1.162500,0.891667,17,68,0,0,0.785714]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.041888,1.103448,1.103448,51,53,0,0,0.482759],
[3,0,0,29,34,74,20.0,26.0,0.030543,1.175000,0.883333,17,68,0,0,0.714286]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.052360,1.096552,1.096552,51,53,0,0,0.517241],
[3,0,0,29,34,74,20.0,26.0,0.032725,1.187500,0.875000,17,68,0,0,0.642857]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.062832,1.089655,1.089655,51,53,0,0,0.551724],
[3,0,0,29,34,74,20.0,26.0,0.034907,1.200000,0.866667,17,68,0,0,0.571429]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.073304,1.082759,1.082759,51,53,0,0,0.586207],
[3,0,0,29,34,74,20.0,26.0,0.037088,1.212500,0.858333,17,68,0,0,0.500000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.083776,1.075862,1.075862,51,53,0,0,0.620690],
[3,0,0,29,34,74,20.0,26.0,0.039270,1.225000,0.850000,17,68,0,0,0.428571]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.094248,1.068966,1.068966,51,53,0,0,0.655172],
[3,0,0,29,34,74,20.0,26.0,0.041452,1.237500,0.841667,17,68,0,0,0.357143]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.104720,1.062069,1.062069,51,53,0,0,0.689655],
[3,0,0,29,34,74,20.0,26.0,0.043633,1.250000,0.833333,17,68,0,0,0.285714]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.093084,1.055172,1.055172,51,53,0,0,0.724138],
[3,0,0,29,34,74,20.0,26.0,0.045815,1.262500,0.825000,17,68,0,0,0.214286]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.081449,1.048276,1.048276,51,53,0,0,0.758621],
[3,0,0,29,34,74,20.0,26.0,0.047997,1.275000,0.816667,17,68,0,0,0.142857]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.069813,1.041379,1.041379,51,53,0,0,0.793103],
[3,0,0,29,34,74,20.0,26.0,0.050178,1.287500,0.808333,17,68,0,0,0.071429]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.058178,1.034483,1.034483,51,53,0,0,0.827586]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.046542,1.027586,1.027586,51,53,0,0,0.862069]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.034907,1.020690,1.020690,51,53,0,0,0.896552]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.023271,1.013793,1.013793,51,53,0,0,0.931035]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.011636,1.006897,1.006897,51,53,0,0,0.965517]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.0,1.0,1.0,51,53]
]
]
}
}
]

},{}],16:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-01-01.png"],
"name": "obj05_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 200,
"MarginWidth": 108,
"MarginHeight": 108,
"parts": ["root","Obj","ramp","baby"],
"ssa": [
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.0,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.926199,0.066667,-0.002633,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.857037,0.133333,-0.005193,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.792973,0.200000,-0.007934,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.732803,0.266667,-0.010529,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.674417,0.333333,-0.013411,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.613438,0.400000,-0.015832,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.563385,0.466667,-0.018771,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.506336,0.533333,-0.021479,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.455473,0.600000,-0.024300,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.411222,0.666667,-0.026797,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.367531,0.733333,-0.029790,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.324699,0.800000,-0.032415,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.283033,0.866667,-0.035085,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.242838,0.933333,-0.037791,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.204418,1.0,-0.040526,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.173132,1.066667,-0.043281,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.143564,1.133333,-0.046508,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.115910,1.200000,-0.049275,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.086315,1.266667,-0.052035,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.063459,1.333333,-0.054778,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.043123,1.400000,-0.057946,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.028238,1.466667,-0.060624,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.013018,1.533333,-0.063693,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.000860,1.600000,-0.066688,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,29.991957,1.666667,-0.070005,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,29.986500,1.733333,-0.073188,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,29.984722,1.800000,-0.076216,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,29.986080,1.866667,-0.079754,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,29.991428,1.933333,-0.083283,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.0,2.0,-0.087266,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.011301,1.948552,-0.089561,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.025663,1.883827,-0.089665,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.042038,1.818986,-0.088781,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.057133,1.750742,-0.087148,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.076887,1.683094,-0.085123,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.098320,1.619108,-0.082608,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.121313,1.551161,-0.080043,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.145748,1.479745,-0.077171,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.171513,1.405349,-0.074025,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.198484,1.339582,-0.071134,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.226549,1.272296,-0.067564,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.260515,1.203800,-0.064357,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.290543,1.134403,-0.060473,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.326481,1.064413,-0.057044,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.357924,0.994141,-0.053546,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.395187,0.923894,-0.049402,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.432903,0.853981,-0.045820,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.470881,0.784713,-0.041635,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.514368,0.705125,-0.038066,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.557680,0.638311,-0.033950,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.600536,0.573120,-0.029917,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.642662,0.499525,-0.026000,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.688831,0.429050,-0.021705,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.738152,0.352956,-0.017650,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.784863,0.282309,-0.013884,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.836708,0.210255,-0.009654,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.890209,0.140636,-0.005719,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,30.943010,0.073553,-0.002204,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.0,1.0,1.0,51,53]
]
]
}
}
]

},{}],17:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-01-01.png"],
"name": "obj06_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 200,
"MarginWidth": 108,
"MarginHeight": 108,
"parts": ["root","Obj","ramp","baby","fire1","fire1_2"],
"ssa": [
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.0,1.0,1.0,51,53]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.010472,1.006896,1.006896,51,53,0,0,0.965517],
[4,0,36,29,34,74,20.0,26.0,0.004760,1.010526,0.994737,17,68,0,0,0.090909]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.020944,1.013793,1.013793,51,53,0,0,0.931035],
[4,0,36,29,34,74,20.0,26.0,0.009520,1.021053,0.989474,17,68,0,0,0.181818]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.031416,1.020690,1.020690,51,53,0,0,0.896552],
[4,0,36,29,34,74,20.0,26.0,0.014280,1.031579,0.984211,17,68,0,0,0.272727]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.041888,1.027586,1.027586,51,53,0,0,0.862069],
[4,0,36,29,34,74,20.0,26.0,0.019040,1.042105,0.978947,17,68,0,0,0.363636]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.052360,1.034483,1.034483,51,53,0,0,0.827586],
[4,0,36,29,34,74,20.0,26.0,0.023800,1.052632,0.973684,17,68,0,0,0.454545]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.062832,1.041379,1.041379,51,53,0,0,0.793103],
[4,0,36,29,34,74,20.0,26.0,0.028560,1.063158,0.968421,17,68,0,0,0.545455]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.073304,1.048276,1.048276,51,53,0,0,0.758621],
[4,0,36,29,34,74,20.0,26.0,0.033320,1.073684,0.963158,17,68,0,0,0.636364]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.083776,1.055172,1.055172,51,53,0,0,0.724138],
[4,0,36,29,34,74,20.0,26.0,0.038080,1.084211,0.957895,17,68,0,0,0.727273]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.094248,1.062069,1.062069,51,53,0,0,0.689655],
[4,0,36,29,34,74,20.0,26.0,0.042840,1.094737,0.952632,17,68,0,0,0.818182]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.104720,1.068966,1.068966,51,53,0,0,0.655172],
[4,0,36,29,34,74,20.0,26.0,0.047600,1.105263,0.947368,17,68,0,0,0.909091]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.094248,1.075862,1.075862,51,53,0,0,0.620690],
[4,0,36,29,34,74,20.0,26.0,0.052360,1.115790,0.942105,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.083776,1.082759,1.082759,51,53,0,0,0.586207],
[4,0,36,29,34,74,20.0,26.0,0.054542,1.126316,0.936842,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.073304,1.089655,1.089655,51,53,0,0,0.551724],
[4,0,36,29,34,74,20.0,26.0,0.056723,1.136842,0.931579,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.062832,1.096552,1.096552,51,53,0,0,0.517241],
[4,0,36,29,34,74,20.0,26.0,0.058905,1.147368,0.926316,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.052360,1.103448,1.103448,51,53,0,0,0.482759],
[4,0,36,29,34,74,20.0,26.0,0.061087,1.157895,0.921053,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.041888,1.110345,1.110345,51,53,0,0,0.448276],
[4,0,36,29,34,74,20.0,26.0,0.063268,1.168421,0.915789,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.031416,1.117241,1.117241,51,53,0,0,0.413793],
[4,0,36,29,34,74,20.0,26.0,0.065450,1.178947,0.910526,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.020944,1.124138,1.124138,51,53,0,0,0.379310],
[4,0,36,29,34,74,20.0,26.0,0.067632,1.189474,0.905263,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.010472,1.131034,1.131034,51,53,0,0,0.344828],
[3,0,0,29,34,74,20.0,26.0,0.052360,1.200000,0.900000,17,68,0,0,0.200000],
[4,0,36,29,34,74,20.0,26.0,0.069813,1.200000,0.900000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.0,1.137931,1.137931,51,53,0,0,0.310345],
[3,0,0,29,34,74,20.0,26.0,0.047124,1.180000,0.910000,17,68,0,0,0.360000],
[4,0,36,29,34,74,20.0,26.0,0.062832,1.180000,0.910000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.029089,1.144828,1.144828,51,53,0,0,0.275862],
[3,0,0,29,34,74,20.0,26.0,0.041888,1.160000,0.920000,17,68,0,0,0.520000],
[4,0,36,29,34,74,20.0,26.0,0.055851,1.160000,0.920000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.058178,1.151724,1.151724,51,53,0,0,0.241379],
[3,0,0,29,34,74,20.0,26.0,0.036652,1.140000,0.930000,17,68,0,0,0.680000],
[4,0,36,29,34,74,20.0,26.0,0.048869,1.140000,0.930000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.087266,1.158621,1.158621,51,53,0,0,0.206897],
[3,0,0,29,34,74,20.0,26.0,0.031416,1.120000,0.940000,17,68,0,0,0.840000],
[4,0,36,29,34,74,20.0,26.0,0.041888,1.120000,0.940000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.116355,1.165517,1.165517,51,53,0,0,0.172414],
[3,0,0,29,34,74,20.0,26.0,0.026180,1.100000,0.950000,17,68],
[4,0,36,29,34,74,20.0,26.0,0.034907,1.100000,0.950000,17,68]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.145444,1.172414,1.172414,51,53,0,0,0.137931],
[3,0,0,29,34,74,20.0,26.0,0.020944,1.080000,0.960000,17,68],
[4,0,36,29,34,74,20.0,26.0,0.027925,1.080000,0.960000,17,68,0,0,0.800000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.174533,1.179310,1.179310,51,53,0,0,0.103448],
[3,0,0,29,34,74,20.0,26.0,0.015708,1.060000,0.970000,17,68],
[4,0,36,29,34,74,20.0,26.0,0.020944,1.060000,0.970000,17,68,0,0,0.600000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.203622,1.186207,1.186207,51,53,0,0,0.068965],
[3,0,0,29,34,74,20.0,26.0,0.010472,1.040000,0.980000,17,68],
[4,0,36,29,34,74,20.0,26.0,0.013963,1.040000,0.980000,17,68,0,0,0.400000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[2,0,71,21,79,83,31.0,0.0,0.232711,1.193103,1.193103,51,53,0,0,0.034483],
[3,0,0,29,34,74,20.0,26.0,0.005236,1.020000,0.990000,17,68],
[4,0,36,29,34,74,20.0,26.0,0.006981,1.020000,0.990000,17,68,0,0,0.200000]
],
[
[1,0,0,105,141,151,0.0,0.0,0.0,1.0,1.0,70,75],
[3,0,0,29,34,74,20.0,26.0,0.0,1.0,1.0,17,68]
]
]
}
}
]

},{}],18:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-02-01.png"],
"name": "obj01_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 460,
"CanvasHeight": 370,
"MarginWidth": 238,
"MarginHeight": 193,
"parts": ["root","Obj","bike","part_1","01","04"],
"ssa": [
[
[1,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[1,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
]
]
}
}
]

},{}],19:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-02-01.png"],
"name": "obj02_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 460,
"CanvasHeight": 370,
"MarginWidth": 238,
"MarginHeight": 193,
"parts": ["root","Obj","bike","03","01","04"],
"ssa": [
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.500000,90.500000,0.017453,1.001000,0.995000,100,66],
[3,0,0,204,335,308,9.500000,0.500000,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.500000,91.500000,0.008727,1.002500,0.997500,3,7]
],
[
[2,0,0,129,105,72,-104.0,91.0,0.034907,1.002000,0.990000,100,66],
[3,0,0,204,335,308,9.0,1.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-102.0,92.0,0.017453,1.005000,0.995000,3,7]
],
[
[2,0,0,129,105,72,-104.500000,91.500000,0.052360,1.003000,0.985000,100,66],
[3,0,0,204,335,308,8.500000,1.500000,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-102.500000,92.500000,0.026180,1.007500,0.992500,3,7]
],
[
[2,0,0,129,105,72,-105.0,92.0,0.069813,1.004000,0.980000,100,66],
[3,0,0,204,335,308,8.0,2.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-103.0,93.0,0.034907,1.010000,0.990000,3,7]
],
[
[2,0,0,129,105,72,-105.500000,92.500000,0.087266,1.005000,0.975000,100,66],
[3,0,0,204,335,308,7.500000,2.500000,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-103.500000,93.500000,0.043633,1.012500,0.987500,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.104720,1.006000,0.970000,100,66],
[3,0,0,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.052360,1.015000,0.985000,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.107213,1.007000,0.965000,100,66],
[3,0,0,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.054853,1.017500,0.982500,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.109706,1.008000,0.960000,100,66],
[3,0,0,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.057347,1.020000,0.980000,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.112200,1.009000,0.955000,100,66],
[3,0,0,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.059840,1.022500,0.977500,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.114693,1.010000,0.950000,100,66],
[3,0,0,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.062333,1.025000,0.975000,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.117186,1.011000,0.945000,100,66],
[3,0,0,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.064827,1.027500,0.972500,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.119680,1.012000,0.940000,100,66],
[3,0,0,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.067320,1.030000,0.970000,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.122173,1.013000,0.935000,100,66],
[3,0,0,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.069813,1.032500,0.967500,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.124666,1.014000,0.930000,100,66],
[3,0,0,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.072306,1.035000,0.965000,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.127160,1.015000,0.925000,100,66],
[3,0,0,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.074800,1.037500,0.962500,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.129653,1.016000,0.920000,100,66],
[3,0,0,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.077293,1.040000,0.960000,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.132146,1.017000,0.915000,100,66],
[3,0,0,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.079786,1.042500,0.957500,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.134640,1.018000,0.910000,100,66],
[3,0,0,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.082280,1.045000,0.955000,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.137133,1.019000,0.905000,100,66],
[3,0,0,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.084773,1.047500,0.952500,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.139626,1.020000,0.900000,100,66],
[3,0,0,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.087266,1.050000,0.950000,3,7]
],
[
[2,0,0,129,105,72,-105.666664,92.666664,0.124112,1.017778,0.911111,100,66],
[3,0,0,204,335,308,7.333333,2.666667,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-103.666664,93.666664,0.077570,1.044444,0.955556,3,7]
],
[
[2,0,0,129,105,72,-105.333336,92.333336,0.108598,1.015556,0.922222,100,66],
[3,0,0,204,335,308,7.666667,2.333333,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-103.333336,93.333336,0.067874,1.038889,0.961111,3,7]
],
[
[2,0,0,129,105,72,-105.0,92.0,0.093084,1.013333,0.933333,100,66],
[3,0,0,204,335,308,8.0,2.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-103.0,93.0,0.058178,1.033333,0.966667,3,7]
],
[
[2,0,0,129,105,72,-104.666664,91.666664,0.077570,1.011111,0.944444,100,66],
[3,0,0,204,335,308,8.333333,1.666667,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-102.666664,92.666664,0.048481,1.027778,0.972222,3,7]
],
[
[2,0,0,129,105,72,-104.333336,91.333336,0.062056,1.008889,0.955556,100,66],
[3,0,0,204,335,308,8.666667,1.333333,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-102.333336,92.333336,0.038785,1.022222,0.977778,3,7]
],
[
[2,0,0,129,105,72,-104.0,91.0,0.046542,1.006667,0.966667,100,66],
[3,0,0,204,335,308,9.0,1.000000,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-102.0,92.0,0.029089,1.016667,0.983333,3,7]
],
[
[2,0,0,129,105,72,-103.666664,90.666664,0.031028,1.004444,0.977778,100,66],
[3,0,0,204,335,308,9.333333,0.666667,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.666664,91.666664,0.019393,1.011111,0.988889,3,7]
],
[
[2,0,0,129,105,72,-103.333336,90.333336,0.015514,1.002222,0.988889,100,66],
[3,0,0,204,335,308,9.666667,0.333333,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.333336,91.333336,0.009696,1.005556,0.994444,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
]
]
}
}
]

},{}],20:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-02-01.png"],
"name": "obj03_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 460,
"CanvasHeight": 370,
"MarginWidth": 238,
"MarginHeight": 193,
"parts": ["root","Obj","bike","03","01","04"],
"ssa": [
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
]
]
}
}
]

},{}],21:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-02-01.png"],
"name": "obj04_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 460,
"CanvasHeight": 370,
"MarginWidth": 238,
"MarginHeight": 193,
"parts": ["root","Obj","bike","03","01_2","04","bike_ura","03_1","01_3","04_1"],
"ssa": [
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.965517],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.965517],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.965517],
[6,0,0,129,105,72,-105.182068,91.737930,0.0,1.019310,1.019310,100,66,0,0,0.034483],
[7,0,337,204,335,308,10.0,0.0,0.0,1.019310,1.019310,167,154,0,0,0.034483],
[8,0,107,144,107,58,-103.143448,92.757240,0.0,1.019310,1.019310,3,7,0,0,0.034483]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.931035],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.931035],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.931035],
[6,0,0,129,105,72,-105.104141,91.675865,0.0,1.018621,1.018621,100,66,0,0,0.068966],
[7,0,337,204,335,308,10.0,0.0,0.0,1.018621,1.018621,167,154,0,0,0.068966],
[8,0,107,144,107,58,-103.066902,92.694489,0.0,1.018621,1.018621,3,7,0,0,0.068966]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.896552],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.896552],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.896552],
[6,0,0,129,105,72,-105.026199,91.613785,0.0,1.017931,1.017931,100,66,0,0,0.103448],
[7,0,337,204,335,308,10.0,0.0,0.0,1.017931,1.017931,167,154,0,0,0.103448],
[8,0,107,144,107,58,-102.990341,92.631721,0.0,1.017931,1.017931,3,7,0,0,0.103448]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.862069],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.862069],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.862069],
[6,0,0,129,105,72,-104.948273,91.551720,0.0,1.017241,1.017241,100,66,0,0,0.137931],
[7,0,337,204,335,308,10.0,0.0,0.0,1.017241,1.017241,167,154,0,0,0.137931],
[8,0,107,144,107,58,-102.913788,92.568962,0.0,1.017241,1.017241,3,7,0,0,0.137931]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.827586],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.827586],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.827586],
[6,0,0,129,105,72,-104.870346,91.489655,0.0,1.016552,1.016552,100,66,0,0,0.172414],
[7,0,337,204,335,308,10.0,0.0,0.0,1.016552,1.016552,167,154,0,0,0.172414],
[8,0,107,144,107,58,-102.837242,92.506210,0.0,1.016552,1.016552,3,7,0,0,0.172414]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.793103],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.793103],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.793103],
[6,0,0,129,105,72,-104.792419,91.427589,0.0,1.015862,1.015862,100,66,0,0,0.206897],
[7,0,337,204,335,308,10.0,0.0,0.0,1.015862,1.015862,167,154,0,0,0.206897],
[8,0,107,144,107,58,-102.760696,92.443451,0.0,1.015862,1.015862,3,7,0,0,0.206897]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.758621],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.758621],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.758621],
[6,0,0,129,105,72,-104.714478,91.365509,0.0,1.015172,1.015172,100,66,0,0,0.241379],
[7,0,337,204,335,308,10.0,0.0,0.0,1.015172,1.015172,167,154,0,0,0.241379],
[8,0,107,144,107,58,-102.684135,92.380684,0.0,1.015172,1.015172,3,7,0,0,0.241379]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.724138],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.724138],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.724138],
[6,0,0,129,105,72,-104.636551,91.303444,0.0,1.014483,1.014483,100,66,0,0,0.275862],
[7,0,337,204,335,308,10.0,0.0,0.0,1.014483,1.014483,167,154,0,0,0.275862],
[8,0,107,144,107,58,-102.607582,92.317932,0.0,1.014483,1.014483,3,7,0,0,0.275862]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.689655],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.689655],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.689655],
[6,0,0,129,105,72,-104.558624,91.241379,0.0,1.013793,1.013793,100,66,0,0,0.310345],
[7,0,337,204,335,308,10.0,0.0,0.0,1.013793,1.013793,167,154,0,0,0.310345],
[8,0,107,144,107,58,-102.531036,92.255173,0.0,1.013793,1.013793,3,7,0,0,0.310345]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.655172],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.655172],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.655172],
[6,0,0,129,105,72,-104.480698,91.179314,0.0,1.013103,1.013103,100,66,0,0,0.344828],
[7,0,337,204,335,308,10.0,0.0,0.0,1.013103,1.013103,167,154,0,0,0.344828],
[8,0,107,144,107,58,-102.454483,92.192413,0.0,1.013103,1.013103,3,7,0,0,0.344828]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.620690],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.620690],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.620690],
[6,0,0,129,105,72,-104.402756,91.117233,0.0,1.012414,1.012414,100,66,0,0,0.379310],
[7,0,337,204,335,308,10.0,0.0,0.0,1.012414,1.012414,167,154,0,0,0.379310],
[8,0,107,144,107,58,-102.377922,92.129654,0.0,1.012414,1.012414,3,7,0,0,0.379310]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.586207],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.586207],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.586207],
[6,0,0,129,105,72,-104.324821,91.055168,0.0,1.011724,1.011724,100,66,0,0,0.413793],
[7,0,337,204,335,308,10.0,0.0,0.0,1.011724,1.011724,167,154,0,0,0.413793],
[8,0,107,144,107,58,-102.301376,92.066895,0.0,1.011724,1.011724,3,7,0,0,0.413793]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.551724],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.551724],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.551724],
[6,0,0,129,105,72,-104.246895,90.993103,0.0,1.011034,1.011034,100,66,0,0,0.448276],
[7,0,337,204,335,308,10.0,0.0,0.0,1.011034,1.011034,167,154,0,0,0.448276],
[8,0,107,144,107,58,-102.224831,92.004135,0.0,1.011034,1.011034,3,7,0,0,0.448276]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.517241],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.517241],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.517241],
[6,0,0,129,105,72,-104.168968,90.931038,0.0,1.010345,1.010345,100,66,0,0,0.482759],
[7,0,337,204,335,308,10.0,0.0,0.0,1.010345,1.010345,167,154,0,0,0.482759],
[8,0,107,144,107,58,-102.148277,91.941383,0.0,1.010345,1.010345,3,7,0,0,0.482759]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.482759],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.482759],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.482759],
[6,0,0,129,105,72,-104.091026,90.868958,0.0,1.009655,1.009655,100,66,0,0,0.517241],
[7,0,337,204,335,308,10.0,0.0,0.0,1.009655,1.009655,167,154,0,0,0.517241],
[8,0,107,144,107,58,-102.071716,91.878616,0.0,1.009655,1.009655,3,7,0,0,0.517241]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.448276],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.448276],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.448276],
[6,0,0,129,105,72,-104.013100,90.806892,0.0,1.008965,1.008965,100,66,0,0,0.551724],
[7,0,337,204,335,308,10.0,0.0,0.0,1.008965,1.008965,167,154,0,0,0.551724],
[8,0,107,144,107,58,-101.995171,91.815857,0.0,1.008965,1.008965,3,7,0,0,0.551724]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.413793],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.413793],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.413793],
[6,0,0,129,105,72,-103.935173,90.744827,0.0,1.008276,1.008276,100,66,0,0,0.586207],
[7,0,337,204,335,308,10.0,0.0,0.0,1.008276,1.008276,167,154,0,0,0.586207],
[8,0,107,144,107,58,-101.918625,91.753105,0.0,1.008276,1.008276,3,7,0,0,0.586207]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.379310],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.379310],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.379310],
[6,0,0,129,105,72,-103.857246,90.682762,0.0,1.007586,1.007586,100,66,0,0,0.620690],
[7,0,337,204,335,308,10.0,0.0,0.0,1.007586,1.007586,167,154,0,0,0.620690],
[8,0,107,144,107,58,-101.842072,91.690346,0.0,1.007586,1.007586,3,7,0,0,0.620690]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.344828],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.344828],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.344828],
[6,0,0,129,105,72,-103.779305,90.620682,0.0,1.006896,1.006896,100,66,0,0,0.655172],
[7,0,337,204,335,308,10.0,0.0,0.0,1.006896,1.006896,167,154,0,0,0.655172],
[8,0,107,144,107,58,-101.765511,91.627579,0.0,1.006896,1.006896,3,7,0,0,0.655172]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.310345],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.310345],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.310345],
[6,0,0,129,105,72,-103.701378,90.558617,0.0,1.006207,1.006207,100,66,0,0,0.689655],
[7,0,337,204,335,308,10.0,0.0,0.0,1.006207,1.006207,167,154,0,0,0.689655],
[8,0,107,144,107,58,-101.688965,91.564827,0.0,1.006207,1.006207,3,7,0,0,0.689655]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.275862],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.275862],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.275862],
[6,0,0,129,105,72,-103.623451,90.496552,0.0,1.005517,1.005517,100,66,0,0,0.724138],
[7,0,337,204,335,308,10.0,0.0,0.0,1.005517,1.005517,167,154,0,0,0.724138],
[8,0,107,144,107,58,-101.612411,91.502068,0.0,1.005517,1.005517,3,7,0,0,0.724138]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.241379],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.241379],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.241379],
[6,0,0,129,105,72,-103.545525,90.434486,0.0,1.004828,1.004828,100,66,0,0,0.758621],
[7,0,337,204,335,308,10.0,0.0,0.0,1.004828,1.004828,167,154,0,0,0.758621],
[8,0,107,144,107,58,-101.535866,91.439316,0.0,1.004828,1.004828,3,7,0,0,0.758621]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.206897],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.206897],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.206897],
[6,0,0,129,105,72,-103.467583,90.372406,0.0,1.004138,1.004138,100,66,0,0,0.793103],
[7,0,337,204,335,308,10.0,0.0,0.0,1.004138,1.004138,167,154,0,0,0.793103],
[8,0,107,144,107,58,-101.459305,91.376549,0.0,1.004138,1.004138,3,7,0,0,0.793103]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.172414],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.172414],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.172414],
[6,0,0,129,105,72,-103.389648,90.310341,0.0,1.003448,1.003448,100,66,0,0,0.827586],
[7,0,337,204,335,308,10.0,0.0,0.0,1.003448,1.003448,167,154,0,0,0.827586],
[8,0,107,144,107,58,-101.382759,91.313789,0.0,1.003448,1.003448,3,7,0,0,0.827586]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.137931],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.137931],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.137931],
[6,0,0,129,105,72,-103.311722,90.248276,0.0,1.002759,1.002759,100,66,0,0,0.862069],
[7,0,337,204,335,308,10.0,0.0,0.0,1.002759,1.002759,167,154,0,0,0.862069],
[8,0,107,144,107,58,-101.306206,91.251038,0.0,1.002759,1.002759,3,7,0,0,0.862069]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.103448],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.103448],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.103448],
[6,0,0,129,105,72,-103.233795,90.186211,0.0,1.002069,1.002069,100,66,0,0,0.896552],
[7,0,337,204,335,308,10.0,0.0,0.0,1.002069,1.002069,167,154,0,0,0.896552],
[8,0,107,144,107,58,-101.229660,91.188278,0.0,1.002069,1.002069,3,7,0,0,0.896552]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.068965],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.068965],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.068965],
[6,0,0,129,105,72,-103.155853,90.124130,0.0,1.001379,1.001379,100,66,0,0,0.931035],
[7,0,337,204,335,308,10.0,0.0,0.0,1.001379,1.001379,167,154,0,0,0.931035],
[8,0,107,144,107,58,-101.153099,91.125511,0.0,1.001379,1.001379,3,7,0,0,0.931035]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.034483],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.034483],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.034483],
[6,0,0,129,105,72,-103.077927,90.062065,0.0,1.000690,1.000690,100,66,0,0,0.965517],
[7,0,337,204,335,308,10.0,0.0,0.0,1.000690,1.000690,167,154,0,0,0.965517],
[8,0,107,144,107,58,-101.076546,91.062759,0.0,1.000690,1.000690,3,7,0,0,0.965517]
],
[
[6,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[7,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[8,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
]
]
}
}
]

},{}],22:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-02-01.png"],
"name": "obj05_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 460,
"CanvasHeight": 370,
"MarginWidth": 238,
"MarginHeight": 193,
"parts": ["root","Obj","bike","03","01","04"],
"ssa": [
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.500000,90.500000,0.017453,1.001000,0.995000,100,66],
[3,0,337,204,335,308,9.500000,0.500000,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.500000,91.500000,0.008727,1.002500,0.997500,3,7]
],
[
[2,0,0,129,105,72,-104.0,91.0,0.034907,1.002000,0.990000,100,66],
[3,0,337,204,335,308,9.0,1.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-102.0,92.0,0.017453,1.005000,0.995000,3,7]
],
[
[2,0,0,129,105,72,-104.500000,91.500000,0.052360,1.003000,0.985000,100,66],
[3,0,337,204,335,308,8.500000,1.500000,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-102.500000,92.500000,0.026180,1.007500,0.992500,3,7]
],
[
[2,0,0,129,105,72,-105.0,92.0,0.069813,1.004000,0.980000,100,66],
[3,0,337,204,335,308,8.0,2.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-103.0,93.0,0.034907,1.010000,0.990000,3,7]
],
[
[2,0,0,129,105,72,-105.500000,92.500000,0.087266,1.005000,0.975000,100,66],
[3,0,337,204,335,308,7.500000,2.500000,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-103.500000,93.500000,0.043633,1.012500,0.987500,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.104720,1.006000,0.970000,100,66],
[3,0,337,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.052360,1.015000,0.985000,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.107213,1.007000,0.965000,100,66],
[3,0,337,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.054853,1.017500,0.982500,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.109706,1.008000,0.960000,100,66],
[3,0,337,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.057347,1.020000,0.980000,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.112200,1.009000,0.955000,100,66],
[3,0,337,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.059840,1.022500,0.977500,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.114693,1.010000,0.950000,100,66],
[3,0,337,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.062333,1.025000,0.975000,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.117186,1.011000,0.945000,100,66],
[3,0,337,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.064827,1.027500,0.972500,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.119680,1.012000,0.940000,100,66],
[3,0,337,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.067320,1.030000,0.970000,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.122173,1.013000,0.935000,100,66],
[3,0,337,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.069813,1.032500,0.967500,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.124666,1.014000,0.930000,100,66],
[3,0,337,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.072306,1.035000,0.965000,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.127160,1.015000,0.925000,100,66],
[3,0,337,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.074800,1.037500,0.962500,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.129653,1.016000,0.920000,100,66],
[3,0,337,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.077293,1.040000,0.960000,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.132146,1.017000,0.915000,100,66],
[3,0,337,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.079786,1.042500,0.957500,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.134640,1.018000,0.910000,100,66],
[3,0,337,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.082280,1.045000,0.955000,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.137133,1.019000,0.905000,100,66],
[3,0,337,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.084773,1.047500,0.952500,3,7]
],
[
[2,0,0,129,105,72,-106.0,93.0,0.139626,1.020000,0.900000,100,66],
[3,0,337,204,335,308,7.0,3.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-104.0,94.0,0.087266,1.050000,0.950000,3,7]
],
[
[2,0,0,129,105,72,-105.666664,92.666664,0.124112,1.017778,0.911111,100,66],
[3,0,337,204,335,308,7.333333,2.666667,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-103.666664,93.666664,0.077570,1.044444,0.955556,3,7]
],
[
[2,0,0,129,105,72,-105.333336,92.333336,0.108598,1.015556,0.922222,100,66],
[3,0,337,204,335,308,7.666667,2.333333,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-103.333336,93.333336,0.067874,1.038889,0.961111,3,7]
],
[
[2,0,0,129,105,72,-105.0,92.0,0.093084,1.013333,0.933333,100,66],
[3,0,337,204,335,308,8.0,2.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-103.0,93.0,0.058178,1.033333,0.966667,3,7]
],
[
[2,0,0,129,105,72,-104.666664,91.666664,0.077570,1.011111,0.944444,100,66],
[3,0,337,204,335,308,8.333333,1.666667,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-102.666664,92.666664,0.048481,1.027778,0.972222,3,7]
],
[
[2,0,0,129,105,72,-104.333336,91.333336,0.062056,1.008889,0.955556,100,66],
[3,0,337,204,335,308,8.666667,1.333333,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-102.333336,92.333336,0.038785,1.022222,0.977778,3,7]
],
[
[2,0,0,129,105,72,-104.0,91.0,0.046542,1.006667,0.966667,100,66],
[3,0,337,204,335,308,9.0,1.000000,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-102.0,92.0,0.029089,1.016667,0.983333,3,7]
],
[
[2,0,0,129,105,72,-103.666664,90.666664,0.031028,1.004444,0.977778,100,66],
[3,0,337,204,335,308,9.333333,0.666667,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.666664,91.666664,0.019393,1.011111,0.988889,3,7]
],
[
[2,0,0,129,105,72,-103.333336,90.333336,0.015514,1.002222,0.988889,100,66],
[3,0,337,204,335,308,9.666667,0.333333,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.333336,91.333336,0.009696,1.005556,0.994444,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
]
]
}
}
]

},{}],23:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-02-01.png"],
"name": "obj06_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 460,
"CanvasHeight": 370,
"MarginWidth": 238,
"MarginHeight": 193,
"parts": ["root","Obj","bike","03","01_2","04","bike_ura","03_1","01_3","04_1"],
"ssa": [
[
[6,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[7,0,337,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[8,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.034483],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.034483],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.034483],
[6,0,0,129,105,72,-103.077927,90.062065,0.0,1.000690,1.000690,100,66,0,0,0.965517],
[7,0,337,204,335,308,10.0,0.0,0.0,1.000690,1.000690,167,154,0,0,0.965517],
[8,0,107,144,107,58,-101.076546,91.062759,0.0,1.000690,1.000690,3,7,0,0,0.965517]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.068966],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.068966],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.068966],
[6,0,0,129,105,72,-103.155853,90.124130,0.0,1.001379,1.001379,100,66,0,0,0.931035],
[7,0,337,204,335,308,10.0,0.0,0.0,1.001379,1.001379,167,154,0,0,0.931035],
[8,0,107,144,107,58,-101.153099,91.125511,0.0,1.001379,1.001379,3,7,0,0,0.931035]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.103448],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.103448],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.103448],
[6,0,0,129,105,72,-103.233795,90.186211,0.0,1.002069,1.002069,100,66,0,0,0.896552],
[7,0,337,204,335,308,10.0,0.0,0.0,1.002069,1.002069,167,154,0,0,0.896552],
[8,0,107,144,107,58,-101.229660,91.188278,0.0,1.002069,1.002069,3,7,0,0,0.896552]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.137931],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.137931],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.137931],
[6,0,0,129,105,72,-103.311722,90.248276,0.0,1.002759,1.002759,100,66,0,0,0.862069],
[7,0,337,204,335,308,10.0,0.0,0.0,1.002759,1.002759,167,154,0,0,0.862069],
[8,0,107,144,107,58,-101.306206,91.251038,0.0,1.002759,1.002759,3,7,0,0,0.862069]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.172414],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.172414],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.172414],
[6,0,0,129,105,72,-103.389648,90.310341,0.0,1.003448,1.003448,100,66,0,0,0.827586],
[7,0,337,204,335,308,10.0,0.0,0.0,1.003448,1.003448,167,154,0,0,0.827586],
[8,0,107,144,107,58,-101.382759,91.313789,0.0,1.003448,1.003448,3,7,0,0,0.827586]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.206897],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.206897],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.206897],
[6,0,0,129,105,72,-103.467583,90.372406,0.0,1.004138,1.004138,100,66,0,0,0.793103],
[7,0,337,204,335,308,10.0,0.0,0.0,1.004138,1.004138,167,154,0,0,0.793103],
[8,0,107,144,107,58,-101.459305,91.376549,0.0,1.004138,1.004138,3,7,0,0,0.793103]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.241379],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.241379],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.241379],
[6,0,0,129,105,72,-103.545525,90.434486,0.0,1.004828,1.004828,100,66,0,0,0.758621],
[7,0,337,204,335,308,10.0,0.0,0.0,1.004828,1.004828,167,154,0,0,0.758621],
[8,0,107,144,107,58,-101.535866,91.439316,0.0,1.004828,1.004828,3,7,0,0,0.758621]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.275862],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.275862],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.275862],
[6,0,0,129,105,72,-103.623451,90.496552,0.0,1.005517,1.005517,100,66,0,0,0.724138],
[7,0,337,204,335,308,10.0,0.0,0.0,1.005517,1.005517,167,154,0,0,0.724138],
[8,0,107,144,107,58,-101.612411,91.502068,0.0,1.005517,1.005517,3,7,0,0,0.724138]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.310345],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.310345],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.310345],
[6,0,0,129,105,72,-103.701378,90.558617,0.0,1.006207,1.006207,100,66,0,0,0.689655],
[7,0,337,204,335,308,10.0,0.0,0.0,1.006207,1.006207,167,154,0,0,0.689655],
[8,0,107,144,107,58,-101.688965,91.564827,0.0,1.006207,1.006207,3,7,0,0,0.689655]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.344828],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.344828],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.344828],
[6,0,0,129,105,72,-103.779305,90.620682,0.0,1.006896,1.006896,100,66,0,0,0.655172],
[7,0,337,204,335,308,10.0,0.0,0.0,1.006896,1.006896,167,154,0,0,0.655172],
[8,0,107,144,107,58,-101.765511,91.627579,0.0,1.006896,1.006896,3,7,0,0,0.655172]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.379310],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.379310],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.379310],
[6,0,0,129,105,72,-103.857246,90.682762,0.0,1.007586,1.007586,100,66,0,0,0.620690],
[7,0,337,204,335,308,10.0,0.0,0.0,1.007586,1.007586,167,154,0,0,0.620690],
[8,0,107,144,107,58,-101.842072,91.690346,0.0,1.007586,1.007586,3,7,0,0,0.620690]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.413793],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.413793],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.413793],
[6,0,0,129,105,72,-103.935173,90.744827,0.0,1.008276,1.008276,100,66,0,0,0.586207],
[7,0,337,204,335,308,10.0,0.0,0.0,1.008276,1.008276,167,154,0,0,0.586207],
[8,0,107,144,107,58,-101.918625,91.753105,0.0,1.008276,1.008276,3,7,0,0,0.586207]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.448276],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.448276],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.448276],
[6,0,0,129,105,72,-104.013100,90.806892,0.0,1.008965,1.008965,100,66,0,0,0.551724],
[7,0,337,204,335,308,10.0,0.0,0.0,1.008965,1.008965,167,154,0,0,0.551724],
[8,0,107,144,107,58,-101.995171,91.815857,0.0,1.008965,1.008965,3,7,0,0,0.551724]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.482759],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.482759],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.482759],
[6,0,0,129,105,72,-104.091026,90.868958,0.0,1.009655,1.009655,100,66,0,0,0.517241],
[7,0,337,204,335,308,10.0,0.0,0.0,1.009655,1.009655,167,154,0,0,0.517241],
[8,0,107,144,107,58,-102.071716,91.878616,0.0,1.009655,1.009655,3,7,0,0,0.517241]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.517241],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.517241],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.517241],
[6,0,0,129,105,72,-104.168968,90.931038,0.0,1.010345,1.010345,100,66,0,0,0.482759],
[7,0,337,204,335,308,10.0,0.0,0.0,1.010345,1.010345,167,154,0,0,0.482759],
[8,0,107,144,107,58,-102.148277,91.941383,0.0,1.010345,1.010345,3,7,0,0,0.482759]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.551724],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.551724],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.551724],
[6,0,0,129,105,72,-104.246895,90.993103,0.0,1.011034,1.011034,100,66,0,0,0.448276],
[7,0,337,204,335,308,10.0,0.0,0.0,1.011034,1.011034,167,154,0,0,0.448276],
[8,0,107,144,107,58,-102.224831,92.004135,0.0,1.011034,1.011034,3,7,0,0,0.448276]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.586207],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.586207],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.586207],
[6,0,0,129,105,72,-104.324821,91.055168,0.0,1.011724,1.011724,100,66,0,0,0.413793],
[7,0,337,204,335,308,10.0,0.0,0.0,1.011724,1.011724,167,154,0,0,0.413793],
[8,0,107,144,107,58,-102.301376,92.066895,0.0,1.011724,1.011724,3,7,0,0,0.413793]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.620690],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.620690],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.620690],
[6,0,0,129,105,72,-104.402756,91.117233,0.0,1.012414,1.012414,100,66,0,0,0.379310],
[7,0,337,204,335,308,10.0,0.0,0.0,1.012414,1.012414,167,154,0,0,0.379310],
[8,0,107,144,107,58,-102.377922,92.129654,0.0,1.012414,1.012414,3,7,0,0,0.379310]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.655172],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.655172],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.655172],
[6,0,0,129,105,72,-104.480698,91.179314,0.0,1.013103,1.013103,100,66,0,0,0.344828],
[7,0,337,204,335,308,10.0,0.0,0.0,1.013103,1.013103,167,154,0,0,0.344828],
[8,0,107,144,107,58,-102.454483,92.192413,0.0,1.013103,1.013103,3,7,0,0,0.344828]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.689655],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.689655],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.689655],
[6,0,0,129,105,72,-104.558624,91.241379,0.0,1.013793,1.013793,100,66,0,0,0.310345],
[7,0,337,204,335,308,10.0,0.0,0.0,1.013793,1.013793,167,154,0,0,0.310345],
[8,0,107,144,107,58,-102.531036,92.255173,0.0,1.013793,1.013793,3,7,0,0,0.310345]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.724138],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.724138],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.724138],
[6,0,0,129,105,72,-104.636551,91.303444,0.0,1.014483,1.014483,100,66,0,0,0.275862],
[7,0,337,204,335,308,10.0,0.0,0.0,1.014483,1.014483,167,154,0,0,0.275862],
[8,0,107,144,107,58,-102.607582,92.317932,0.0,1.014483,1.014483,3,7,0,0,0.275862]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.758621],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.758621],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.758621],
[6,0,0,129,105,72,-104.714478,91.365509,0.0,1.015172,1.015172,100,66,0,0,0.241379],
[7,0,337,204,335,308,10.0,0.0,0.0,1.015172,1.015172,167,154,0,0,0.241379],
[8,0,107,144,107,58,-102.684135,92.380684,0.0,1.015172,1.015172,3,7,0,0,0.241379]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.793103],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.793103],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.793103],
[6,0,0,129,105,72,-104.792419,91.427589,0.0,1.015862,1.015862,100,66,0,0,0.206897],
[7,0,337,204,335,308,10.0,0.0,0.0,1.015862,1.015862,167,154,0,0,0.206897],
[8,0,107,144,107,58,-102.760696,92.443451,0.0,1.015862,1.015862,3,7,0,0,0.206897]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.827586],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.827586],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.827586],
[6,0,0,129,105,72,-104.870346,91.489655,0.0,1.016552,1.016552,100,66,0,0,0.172414],
[7,0,337,204,335,308,10.0,0.0,0.0,1.016552,1.016552,167,154,0,0,0.172414],
[8,0,107,144,107,58,-102.837242,92.506210,0.0,1.016552,1.016552,3,7,0,0,0.172414]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.862069],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.862069],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.862069],
[6,0,0,129,105,72,-104.948273,91.551720,0.0,1.017241,1.017241,100,66,0,0,0.137931],
[7,0,337,204,335,308,10.0,0.0,0.0,1.017241,1.017241,167,154,0,0,0.137931],
[8,0,107,144,107,58,-102.913788,92.568962,0.0,1.017241,1.017241,3,7,0,0,0.137931]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.896552],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.896552],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.896552],
[6,0,0,129,105,72,-105.026199,91.613785,0.0,1.017931,1.017931,100,66,0,0,0.103448],
[7,0,337,204,335,308,10.0,0.0,0.0,1.017931,1.017931,167,154,0,0,0.103448],
[8,0,107,144,107,58,-102.990341,92.631721,0.0,1.017931,1.017931,3,7,0,0,0.103448]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.931035],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.931035],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.931035],
[6,0,0,129,105,72,-105.104141,91.675865,0.0,1.018621,1.018621,100,66,0,0,0.068965],
[7,0,337,204,335,308,10.0,0.0,0.0,1.018621,1.018621,167,154,0,0,0.068965],
[8,0,107,144,107,58,-103.066902,92.694489,0.0,1.018621,1.018621,3,7,0,0,0.068965]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66,0,0,0.965517],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154,0,0,0.965517],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7,0,0,0.965517],
[6,0,0,129,105,72,-105.182068,91.737930,0.0,1.019310,1.019310,100,66,0,0,0.034483],
[7,0,337,204,335,308,10.0,0.0,0.0,1.019310,1.019310,167,154,0,0,0.034483],
[8,0,107,144,107,58,-103.143448,92.757240,0.0,1.019310,1.019310,3,7,0,0,0.034483]
],
[
[2,0,0,129,105,72,-103.0,90.0,0.0,1.0,1.0,100,66],
[3,0,0,204,335,308,10.0,0.0,0.0,1.0,1.0,167,154],
[4,0,107,144,107,58,-101.0,91.0,0.0,1.0,1.0,3,7]
]
]
}
}
]

},{}],24:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-03-01.png"],
"name": "obj01_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 600,
"CanvasHeight": 600,
"MarginWidth": 308,
"MarginHeight": 308,
"parts": ["root","Obj","03","01","02","02_left","01_right"],
"ssa": [
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.0,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.0,-153.0,0.0,1.0,1.0,136,27],
[5,0,233,267,231,344,119.0,-145.0,0.0,1.0,1.0,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.001309,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.029922,-152.970078,-0.000261,1.000299,1.000150,136,27],
[5,0,233,267,231,344,118.958305,-145.041702,-0.000582,1.000417,1.000208,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.002618,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.058090,-152.941910,-0.000507,1.000581,1.000291,136,27],
[5,0,233,267,231,344,118.916466,-145.083542,-0.001166,1.000835,1.000418,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.003927,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.086990,-152.913010,-0.000759,1.000870,1.000435,136,27],
[5,0,233,267,231,344,118.875374,-145.124634,-0.001740,1.001246,1.000623,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.005236,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.116669,-152.883331,-0.001018,1.001167,1.000583,136,27],
[5,0,233,267,231,344,118.832626,-145.167374,-0.002337,1.001674,1.000837,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.006545,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.145409,-152.854584,-0.001269,1.001454,1.000727,136,27],
[5,0,233,267,231,344,118.790367,-145.209625,-0.002927,1.002096,1.001048,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.007854,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.176476,-152.823517,-0.001540,1.001765,1.000882,136,27],
[5,0,233,267,231,344,118.750237,-145.249756,-0.003487,1.002498,1.001249,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.009163,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.204781,-152.795227,-0.001787,1.002048,1.001024,136,27],
[5,0,233,267,231,344,118.708069,-145.291931,-0.004076,1.002919,1.001460,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.010472,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.234459,-152.765549,-0.002046,1.002345,1.001172,136,27],
[5,0,233,267,231,344,118.669792,-145.330215,-0.004611,1.003302,1.001651,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.011781,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.265358,-152.734650,-0.002316,1.002654,1.001327,136,27],
[5,0,233,267,231,344,118.630478,-145.369522,-0.005159,1.003695,1.001848,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.013090,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.291931,-152.708069,-0.002548,1.002919,1.001460,136,27],
[5,0,233,267,231,344,118.584595,-145.415405,-0.005800,1.004154,1.002077,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.014399,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.324669,-152.675323,-0.002833,1.003247,1.001623,136,27],
[5,0,233,267,231,344,118.543900,-145.456100,-0.006368,1.004561,1.002280,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.015708,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.352562,-152.647430,-0.003077,1.003526,1.001763,136,27],
[5,0,233,267,231,344,118.502930,-145.497070,-0.006940,1.004971,1.002485,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.017017,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.380913,-152.619095,-0.003324,1.003809,1.001904,136,27],
[5,0,233,267,231,344,118.461945,-145.538055,-0.007513,1.005381,1.002690,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.018326,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.409622,-152.590378,-0.003575,1.004096,1.002048,136,27],
[5,0,233,267,231,344,118.421188,-145.578812,-0.008082,1.005788,1.002894,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.019635,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.438614,-152.561386,-0.003828,1.004386,1.002193,136,27],
[5,0,233,267,231,344,118.380913,-145.619095,-0.008644,1.006191,1.003095,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.020944,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.467796,-152.532211,-0.004082,1.004678,1.002339,136,27],
[5,0,233,267,231,344,118.341347,-145.658661,-0.009197,1.006587,1.003293,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.022253,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.497070,-152.502930,-0.004338,1.004971,1.002485,136,27],
[5,0,233,267,231,344,118.302750,-145.697250,-0.009735,1.006973,1.003486,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.023562,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.526360,-152.473648,-0.004593,1.005264,1.002632,136,27],
[5,0,233,267,231,344,118.260124,-145.739868,-0.010331,1.007399,1.003699,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.024871,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.555565,-152.444443,-0.004848,1.005556,1.002778,136,27],
[5,0,233,267,231,344,118.224419,-145.775574,-0.010829,1.007756,1.003878,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.026180,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.584595,-152.415405,-0.005102,1.005846,1.002923,136,27],
[5,0,233,267,231,344,118.181091,-145.818909,-0.011434,1.008189,1.004094,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.025509,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.613373,-152.386627,-0.005353,1.006134,1.003067,136,27],
[5,0,233,267,231,344,118.145409,-145.854584,-0.011932,1.008546,1.004273,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.024837,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.641800,-152.358200,-0.005601,1.006418,1.003209,136,27],
[5,0,233,267,231,344,118.105125,-145.894867,-0.012495,1.008949,1.004474,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.024166,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.669792,-152.330215,-0.005845,1.006698,1.003349,136,27],
[5,0,233,267,231,344,118.067169,-145.932831,-0.013025,1.009328,1.004664,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.023495,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.697250,-152.302750,-0.006085,1.006973,1.003486,136,27],
[5,0,233,267,231,344,118.029930,-145.970078,-0.013545,1.009701,1.004850,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.022824,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.729385,-152.270615,-0.006365,1.007294,1.003647,136,27],
[5,0,233,267,231,344,118.0,-146.0,-0.013963,1.010000,1.005000,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.022152,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.755371,-152.244629,-0.006592,1.007554,1.003777,136,27],
[5,0,233,267,231,344,118.023735,-145.970078,-0.013545,1.009701,1.004850,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.021481,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.785477,-152.214523,-0.006855,1.007855,1.003927,136,27],
[5,0,233,267,231,344,118.052353,-145.938950,-0.013110,1.009390,1.004695,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.020810,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.814255,-152.185745,-0.007106,1.008142,1.004071,136,27],
[5,0,233,267,231,344,118.080147,-145.909500,-0.012699,1.009095,1.004547,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.020138,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.841545,-152.158447,-0.007344,1.008415,1.004208,136,27],
[5,0,233,267,231,344,118.108925,-145.879379,-0.012278,1.008794,1.004397,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.019467,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.867210,-152.132797,-0.007568,1.008672,1.004336,136,27],
[5,0,233,267,231,344,118.136948,-145.850296,-0.011872,1.008503,1.004251,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.018796,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.894875,-152.105133,-0.007809,1.008949,1.004474,136,27],
[5,0,233,267,231,344,118.167381,-145.818909,-0.011434,1.008189,1.004094,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.018125,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.923195,-152.076813,-0.008056,1.009232,1.004616,136,27],
[5,0,233,267,231,344,118.199959,-145.790375,-0.011036,1.007904,1.003952,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.017453,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.950409,-152.049591,-0.008294,1.009504,1.004752,136,27],
[5,0,233,267,231,344,118.229416,-145.760468,-0.010618,1.007605,1.003802,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.016782,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.978180,-152.021820,-0.008536,1.009782,1.004891,136,27],
[5,0,233,267,231,344,118.260124,-145.729385,-0.010184,1.007294,1.003647,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.016111,1.0,1.0,22,8],
[4,0,254,613,252,411,-103.0,-152.0,-0.008727,1.010000,1.005000,136,27],
[5,0,233,267,231,344,118.286560,-145.697250,-0.009735,1.006973,1.003486,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.015439,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.955742,-152.044266,-0.008340,1.009557,1.004779,136,27],
[5,0,233,267,231,344,118.319153,-145.669785,-0.009352,1.006698,1.003349,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.014768,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.913002,-152.086990,-0.007967,1.009130,1.004565,136,27],
[5,0,233,267,231,344,118.346947,-145.636154,-0.008882,1.006361,1.003181,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.014097,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.871315,-152.128693,-0.007604,1.008713,1.004357,136,27],
[5,0,233,267,231,344,118.380905,-145.607651,-0.008484,1.006076,1.003038,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.013426,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.828094,-152.171906,-0.007226,1.008281,1.004140,136,27],
[5,0,233,267,231,344,118.409622,-145.578812,-0.008082,1.005788,1.002894,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.012754,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.785477,-152.214523,-0.006855,1.007855,1.003927,136,27],
[5,0,233,267,231,344,118.438614,-145.549728,-0.007676,1.005497,1.002749,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.012083,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.739868,-152.260132,-0.006457,1.007399,1.003699,136,27],
[5,0,233,267,231,344,118.467796,-145.520508,-0.007268,1.005205,1.002603,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.011412,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.697250,-152.302750,-0.006085,1.006973,1.003486,136,27],
[5,0,233,267,231,344,118.502930,-145.491211,-0.006859,1.004912,1.002456,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.010740,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.653053,-152.346939,-0.005699,1.006531,1.003265,136,27],
[5,0,233,267,231,344,118.532204,-145.456100,-0.006368,1.004561,1.002280,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.010069,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.613373,-152.386627,-0.005353,1.006134,1.003067,136,27],
[5,0,233,267,231,344,118.561386,-145.426987,-0.005962,1.004270,1.002135,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.009398,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.567200,-152.432800,-0.004950,1.005672,1.002836,136,27],
[5,0,233,267,231,344,118.590378,-145.398102,-0.005559,1.003981,1.001991,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.008727,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.526352,-152.473648,-0.004593,1.005264,1.002632,136,27],
[5,0,233,267,231,344,118.619087,-145.369522,-0.005159,1.003695,1.001848,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.008055,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.485352,-152.514648,-0.004236,1.004853,1.002427,136,27],
[5,0,233,267,231,344,118.653053,-145.341339,-0.004766,1.003413,1.001707,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.007384,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.444435,-152.555557,-0.003878,1.004444,1.002222,136,27],
[5,0,233,267,231,344,118.680847,-145.308197,-0.004303,1.003082,1.001541,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.006713,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.398102,-152.601898,-0.003474,1.003981,1.001991,136,27],
[5,0,233,267,231,344,118.713440,-145.281219,-0.003927,1.002812,1.001406,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.006042,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.358200,-152.641800,-0.003126,1.003582,1.001791,136,27],
[5,0,233,267,231,344,118.739876,-145.249756,-0.003487,1.002498,1.001249,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.005370,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.313660,-152.686340,-0.002737,1.003137,1.001568,136,27],
[5,0,233,267,231,344,118.770576,-145.224426,-0.003133,1.002244,1.001122,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.004699,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.270615,-152.729385,-0.002362,1.002706,1.001353,136,27],
[5,0,233,267,231,344,118.800041,-145.195190,-0.002725,1.001952,1.000976,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.004028,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.229424,-152.770584,-0.002002,1.002294,1.001147,136,27],
[5,0,233,267,231,344,118.832619,-145.162888,-0.002274,1.001629,1.000814,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.003356,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.190445,-152.809555,-0.001662,1.001904,1.000952,136,27],
[5,0,233,267,231,344,118.863052,-145.136948,-0.001912,1.001369,1.000685,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.002685,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.149712,-152.850296,-0.001306,1.001497,1.000749,136,27],
[5,0,233,267,231,344,118.891075,-145.105133,-0.001468,1.001051,1.000526,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.002014,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.108925,-152.891083,-0.000951,1.001089,1.000545,136,27],
[5,0,233,267,231,344,118.919853,-145.076813,-0.001072,1.000768,1.000384,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.001343,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.070320,-152.929688,-0.000614,1.000703,1.000352,136,27],
[5,0,233,267,231,344,118.947647,-145.049591,-0.000692,1.000496,1.000248,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.000671,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.032143,-152.967865,-0.000280,1.000321,1.000161,136,27],
[5,0,233,267,231,344,118.976265,-145.023727,-0.000331,1.000237,1.000119,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.0,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.0,-153.0,0.0,1.0,1.0,136,27],
[5,0,233,267,231,344,119.0,-145.0,0.0,1.0,1.0,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
]
]
}
}
]

},{}],25:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-03-01.png"],
"name": "obj02_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 600,
"CanvasHeight": 600,
"MarginWidth": 308,
"MarginHeight": 308,
"parts": ["root","Obj","03","01","02","02_left","01_right"],
"ssa": [
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.0,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.0,-153.0,0.0,1.0,1.0,136,27],
[5,0,233,267,231,344,119.0,-145.0,0.0,1.0,1.0,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.000997,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.090508,-152.909500,-0.000790,1.000905,1.000453,136,27],
[5,0,233,267,231,344,118.837105,-145.162888,-0.002274,1.001629,1.000814,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.001995,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.181091,-152.818909,-0.001580,1.001811,1.000905,136,27],
[5,0,233,267,231,344,118.675331,-145.324677,-0.004533,1.003247,1.001623,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.002992,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.270615,-152.729385,-0.002362,1.002706,1.001353,136,27],
[5,0,233,267,231,344,118.520500,-145.479492,-0.006695,1.004795,1.002398,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.003989,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.358200,-152.641800,-0.003126,1.003582,1.001791,136,27],
[5,0,233,267,231,344,118.369522,-145.630478,-0.008803,1.006305,1.003152,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.004987,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.444443,-152.555557,-0.003878,1.004444,1.002222,136,27],
[5,0,233,267,231,344,118.224419,-145.775574,-0.010829,1.007756,1.003878,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.005984,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.532204,-152.467789,-0.004644,1.005322,1.002661,136,27],
[5,0,233,267,231,344,118.090508,-145.909485,-0.012699,1.009095,1.004547,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.006981,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.619087,-152.380905,-0.005403,1.006191,1.003095,136,27],
[5,0,233,267,231,344,118.0,-146.0,-0.013963,1.010000,1.005000,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.005773,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.702675,-152.297333,-0.006132,1.007027,1.003513,136,27],
[5,0,233,267,231,344,118.034424,-145.953110,-0.011555,1.009531,1.004766,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.004565,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.785477,-152.214523,-0.006855,1.007855,1.003927,136,27],
[5,0,233,267,231,344,118.076805,-145.905914,-0.009035,1.009059,1.004530,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.003356,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.867210,-152.132797,-0.007568,1.008672,1.004336,136,27],
[5,0,233,267,231,344,118.124626,-145.858841,-0.006635,1.008588,1.004294,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.002148,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.941910,-152.058090,-0.008220,1.009419,1.004710,136,27],
[5,0,233,267,231,344,118.167381,-145.809555,-0.004293,1.008096,1.004048,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.000940,1.0,1.0,22,8],
[4,0,254,613,252,411,-103.0,-152.0,-0.008727,1.010000,1.005000,136,27],
[5,0,233,267,231,344,118.214523,-145.765549,-0.002002,1.007656,1.003828,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.000269,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.938950,-152.061050,-0.006242,1.009390,1.004695,136,27],
[5,0,233,267,231,344,118.265358,-145.718781,0.000444,1.007188,1.003594,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.001477,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.875374,-152.124634,-0.003721,1.008754,1.004377,136,27],
[5,0,233,267,231,344,118.308197,-145.669785,0.002680,1.006698,1.003349,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.002685,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.814255,-152.185745,-0.001320,1.008142,1.004071,136,27],
[5,0,233,267,231,344,118.358200,-145.624786,0.004903,1.006248,1.003124,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.003893,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.750237,-152.249756,0.001146,1.007502,1.003751,136,27],
[5,0,233,267,231,344,118.403854,-145.573013,0.007098,1.005730,1.002865,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.005102,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.691811,-152.308197,0.003547,1.006918,1.003459,136,27],
[5,0,233,267,231,344,118.450264,-145.526352,0.009177,1.005264,1.002632,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.006310,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.630478,-152.369522,0.005914,1.006305,1.003152,136,27],
[5,0,233,267,231,344,118.502930,-145.485352,0.010681,1.004853,1.002427,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.007518,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.567200,-152.432800,0.008269,1.005672,1.002836,136,27],
[5,0,233,267,231,344,118.549728,-145.438614,0.009964,1.004386,1.002193,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.008727,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.508789,-152.491211,0.010470,1.005088,1.002544,136,27],
[5,0,233,267,231,344,118.596146,-145.392349,0.008989,1.003924,1.001962,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.007757,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.444435,-152.555557,0.012553,1.004444,1.002222,136,27],
[5,0,233,267,231,344,118.641800,-145.341339,0.008014,1.003413,1.001707,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.006787,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.386627,-152.613373,0.014085,1.003866,1.001933,136,27],
[5,0,233,267,231,344,118.691811,-145.297333,0.006916,1.002973,1.001487,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.005818,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.324669,-152.675323,0.012657,1.003247,1.001623,136,27],
[5,0,233,267,231,344,118.734642,-145.254929,0.005872,1.002549,1.001275,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.004848,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.265358,-152.734650,0.010494,1.002654,1.001327,136,27],
[5,0,233,267,231,344,118.785477,-145.209625,0.004810,1.002096,1.001048,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.003879,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.209633,-152.790375,0.008234,1.002096,1.001048,136,27],
[5,0,233,267,231,344,118.832619,-145.162888,0.003766,1.001629,1.000814,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.002909,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.149712,-152.850296,0.005851,1.001497,1.000749,136,27],
[5,0,233,267,231,344,118.875374,-145.116669,0.002668,1.001167,1.000583,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.001939,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.094078,-152.905930,0.003591,1.000941,1.000470,136,27],
[5,0,233,267,231,344,118.923195,-145.073532,0.001646,1.000735,1.000368,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.000970,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.041695,-152.958298,0.001428,1.000417,1.000208,136,27],
[5,0,233,267,231,344,118.965576,-145.034424,0.000717,1.000344,1.000172,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.0,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.0,-153.0,0.0,1.0,1.0,136,27],
[5,0,233,267,231,344,119.0,-145.0,0.0,1.0,1.0,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
]
]
}
}
]

},{}],26:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-03-01.png"],
"name": "obj03_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 600,
"CanvasHeight": 600,
"MarginWidth": 308,
"MarginHeight": 308,
"parts": ["root","Obj","03","01","02","02_left","01_right"],
"ssa": [
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.0,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.0,-153.0,0.0,1.0,1.0,136,27],
[5,0,233,267,231,344,119.0,-145.0,0.0,1.0,1.0,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.001309,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.029922,-152.970078,-0.000261,1.000299,1.000150,136,27],
[5,0,233,267,231,344,118.958305,-145.041702,-0.000582,1.000417,1.000208,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.002618,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.058090,-152.941910,-0.000507,1.000581,1.000291,136,27],
[5,0,233,267,231,344,118.916466,-145.083542,-0.001166,1.000835,1.000418,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.003927,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.086990,-152.913010,-0.000759,1.000870,1.000435,136,27],
[5,0,233,267,231,344,118.875374,-145.124634,-0.001740,1.001246,1.000623,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.005236,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.116669,-152.883331,-0.001018,1.001167,1.000583,136,27],
[5,0,233,267,231,344,118.832626,-145.167374,-0.002337,1.001674,1.000837,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.006545,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.145409,-152.854584,-0.001269,1.001454,1.000727,136,27],
[5,0,233,267,231,344,118.790367,-145.209625,-0.002927,1.002096,1.001048,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.007854,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.176476,-152.823517,-0.001540,1.001765,1.000882,136,27],
[5,0,233,267,231,344,118.750237,-145.249756,-0.003487,1.002498,1.001249,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.009163,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.204781,-152.795227,-0.001787,1.002048,1.001024,136,27],
[5,0,233,267,231,344,118.708069,-145.291931,-0.004076,1.002919,1.001460,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.010472,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.234459,-152.765549,-0.002046,1.002345,1.001172,136,27],
[5,0,233,267,231,344,118.669792,-145.330215,-0.004611,1.003302,1.001651,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.011781,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.265358,-152.734650,-0.002316,1.002654,1.001327,136,27],
[5,0,233,267,231,344,118.630478,-145.369522,-0.005159,1.003695,1.001848,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.013090,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.291931,-152.708069,-0.002548,1.002919,1.001460,136,27],
[5,0,233,267,231,344,118.584595,-145.415405,-0.005800,1.004154,1.002077,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.014399,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.324669,-152.675323,-0.002833,1.003247,1.001623,136,27],
[5,0,233,267,231,344,118.543900,-145.456100,-0.006368,1.004561,1.002280,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.015708,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.352562,-152.647430,-0.003077,1.003526,1.001763,136,27],
[5,0,233,267,231,344,118.502930,-145.497070,-0.006940,1.004971,1.002485,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.017017,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.380913,-152.619095,-0.003324,1.003809,1.001904,136,27],
[5,0,233,267,231,344,118.461945,-145.538055,-0.007513,1.005381,1.002690,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.018326,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.409622,-152.590378,-0.003575,1.004096,1.002048,136,27],
[5,0,233,267,231,344,118.421188,-145.578812,-0.008082,1.005788,1.002894,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.019635,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.438614,-152.561386,-0.003828,1.004386,1.002193,136,27],
[5,0,233,267,231,344,118.380913,-145.619095,-0.008644,1.006191,1.003095,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.020944,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.467796,-152.532211,-0.004082,1.004678,1.002339,136,27],
[5,0,233,267,231,344,118.341347,-145.658661,-0.009197,1.006587,1.003293,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.022253,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.497070,-152.502930,-0.004338,1.004971,1.002485,136,27],
[5,0,233,267,231,344,118.302750,-145.697250,-0.009735,1.006973,1.003486,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.023562,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.526360,-152.473648,-0.004593,1.005264,1.002632,136,27],
[5,0,233,267,231,344,118.260124,-145.739868,-0.010331,1.007399,1.003699,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.024871,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.555565,-152.444443,-0.004848,1.005556,1.002778,136,27],
[5,0,233,267,231,344,118.224419,-145.775574,-0.010829,1.007756,1.003878,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.026180,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.584595,-152.415405,-0.005102,1.005846,1.002923,136,27],
[5,0,233,267,231,344,118.181091,-145.818909,-0.011434,1.008189,1.004094,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.025509,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.613373,-152.386627,-0.005353,1.006134,1.003067,136,27],
[5,0,233,267,231,344,118.145409,-145.854584,-0.011932,1.008546,1.004273,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.024837,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.641800,-152.358200,-0.005601,1.006418,1.003209,136,27],
[5,0,233,267,231,344,118.105125,-145.894867,-0.012495,1.008949,1.004474,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.024166,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.669792,-152.330215,-0.005845,1.006698,1.003349,136,27],
[5,0,233,267,231,344,118.067169,-145.932831,-0.013025,1.009328,1.004664,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.023495,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.697250,-152.302750,-0.006085,1.006973,1.003486,136,27],
[5,0,233,267,231,344,118.029930,-145.970078,-0.013545,1.009701,1.004850,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.022824,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.729385,-152.270615,-0.006365,1.007294,1.003647,136,27],
[5,0,233,267,231,344,118.0,-146.0,-0.013963,1.010000,1.005000,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.022152,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.755371,-152.244629,-0.006592,1.007554,1.003777,136,27],
[5,0,233,267,231,344,118.023735,-145.970078,-0.013545,1.009701,1.004850,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.021481,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.785477,-152.214523,-0.006855,1.007855,1.003927,136,27],
[5,0,233,267,231,344,118.052353,-145.938950,-0.013110,1.009390,1.004695,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.020810,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.814255,-152.185745,-0.007106,1.008142,1.004071,136,27],
[5,0,233,267,231,344,118.080147,-145.909500,-0.012699,1.009095,1.004547,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.020138,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.841545,-152.158447,-0.007344,1.008415,1.004208,136,27],
[5,0,233,267,231,344,118.108925,-145.879379,-0.012278,1.008794,1.004397,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.019467,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.867210,-152.132797,-0.007568,1.008672,1.004336,136,27],
[5,0,233,267,231,344,118.136948,-145.850296,-0.011872,1.008503,1.004251,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.018796,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.894875,-152.105133,-0.007809,1.008949,1.004474,136,27],
[5,0,233,267,231,344,118.167381,-145.818909,-0.011434,1.008189,1.004094,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.018125,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.923195,-152.076813,-0.008056,1.009232,1.004616,136,27],
[5,0,233,267,231,344,118.199959,-145.790375,-0.011036,1.007904,1.003952,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.017453,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.950409,-152.049591,-0.008294,1.009504,1.004752,136,27],
[5,0,233,267,231,344,118.229416,-145.760468,-0.010618,1.007605,1.003802,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.016782,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.978180,-152.021820,-0.008536,1.009782,1.004891,136,27],
[5,0,233,267,231,344,118.260124,-145.729385,-0.010184,1.007294,1.003647,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.016111,1.0,1.0,22,8],
[4,0,254,613,252,411,-103.0,-152.0,-0.008727,1.010000,1.005000,136,27],
[5,0,233,267,231,344,118.286560,-145.697250,-0.009735,1.006973,1.003486,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.015439,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.955742,-152.044266,-0.008340,1.009557,1.004779,136,27],
[5,0,233,267,231,344,118.319153,-145.669785,-0.009352,1.006698,1.003349,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.014768,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.913002,-152.086990,-0.007967,1.009130,1.004565,136,27],
[5,0,233,267,231,344,118.346947,-145.636154,-0.008882,1.006361,1.003181,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.014097,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.871315,-152.128693,-0.007604,1.008713,1.004357,136,27],
[5,0,233,267,231,344,118.380905,-145.607651,-0.008484,1.006076,1.003038,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.013426,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.828094,-152.171906,-0.007226,1.008281,1.004140,136,27],
[5,0,233,267,231,344,118.409622,-145.578812,-0.008082,1.005788,1.002894,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.012754,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.785477,-152.214523,-0.006855,1.007855,1.003927,136,27],
[5,0,233,267,231,344,118.438614,-145.549728,-0.007676,1.005497,1.002749,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.012083,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.739868,-152.260132,-0.006457,1.007399,1.003699,136,27],
[5,0,233,267,231,344,118.467796,-145.520508,-0.007268,1.005205,1.002603,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.011412,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.697250,-152.302750,-0.006085,1.006973,1.003486,136,27],
[5,0,233,267,231,344,118.502930,-145.491211,-0.006859,1.004912,1.002456,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.010740,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.653053,-152.346939,-0.005699,1.006531,1.003265,136,27],
[5,0,233,267,231,344,118.532204,-145.456100,-0.006368,1.004561,1.002280,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.010069,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.613373,-152.386627,-0.005353,1.006134,1.003067,136,27],
[5,0,233,267,231,344,118.561386,-145.426987,-0.005962,1.004270,1.002135,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.009398,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.567200,-152.432800,-0.004950,1.005672,1.002836,136,27],
[5,0,233,267,231,344,118.590378,-145.398102,-0.005559,1.003981,1.001991,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.008727,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.526352,-152.473648,-0.004593,1.005264,1.002632,136,27],
[5,0,233,267,231,344,118.619087,-145.369522,-0.005159,1.003695,1.001848,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.008055,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.485352,-152.514648,-0.004236,1.004853,1.002427,136,27],
[5,0,233,267,231,344,118.653053,-145.341339,-0.004766,1.003413,1.001707,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.007384,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.444435,-152.555557,-0.003878,1.004444,1.002222,136,27],
[5,0,233,267,231,344,118.680847,-145.308197,-0.004303,1.003082,1.001541,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.006713,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.398102,-152.601898,-0.003474,1.003981,1.001991,136,27],
[5,0,233,267,231,344,118.713440,-145.281219,-0.003927,1.002812,1.001406,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.006042,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.358200,-152.641800,-0.003126,1.003582,1.001791,136,27],
[5,0,233,267,231,344,118.739876,-145.249756,-0.003487,1.002498,1.001249,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.005370,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.313660,-152.686340,-0.002737,1.003137,1.001568,136,27],
[5,0,233,267,231,344,118.770576,-145.224426,-0.003133,1.002244,1.001122,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.004699,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.270615,-152.729385,-0.002362,1.002706,1.001353,136,27],
[5,0,233,267,231,344,118.800041,-145.195190,-0.002725,1.001952,1.000976,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.004028,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.229424,-152.770584,-0.002002,1.002294,1.001147,136,27],
[5,0,233,267,231,344,118.832619,-145.162888,-0.002274,1.001629,1.000814,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.003356,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.190445,-152.809555,-0.001662,1.001904,1.000952,136,27],
[5,0,233,267,231,344,118.863052,-145.136948,-0.001912,1.001369,1.000685,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.002685,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.149712,-152.850296,-0.001306,1.001497,1.000749,136,27],
[5,0,233,267,231,344,118.891075,-145.105133,-0.001468,1.001051,1.000526,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.002014,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.108925,-152.891083,-0.000951,1.001089,1.000545,136,27],
[5,0,233,267,231,344,118.919853,-145.076813,-0.001072,1.000768,1.000384,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.001343,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.070320,-152.929688,-0.000614,1.000703,1.000352,136,27],
[5,0,233,267,231,344,118.947647,-145.049591,-0.000692,1.000496,1.000248,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.000671,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.032143,-152.967865,-0.000280,1.000321,1.000161,136,27],
[5,0,233,267,231,344,118.976265,-145.023727,-0.000331,1.000237,1.000119,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.0,1.0,1.0,22,8],
[4,0,254,613,252,411,-102.0,-153.0,0.0,1.0,1.0,136,27],
[5,0,233,267,231,344,119.0,-145.0,0.0,1.0,1.0,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
]
]
}
}
]

},{}],27:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-03-01.png"],
"name": "obj04_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 600,
"CanvasHeight": 600,
"MarginWidth": 308,
"MarginHeight": 308,
"parts": ["root","Obj","omote","03","01","02","02_left_1","01_right_1","ura","03_1","01_1","02_1","02_left_2","01_right_2"],
"ssa": [
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[4,0,508,275,37,410,224.0,-145.0,0.0,1.0,1.0,22,8],
[5,0,254,613,252,411,-102.0,-153.0,0.0,1.0,1.0,136,27],
[6,0,233,267,231,344,119.0,-145.0,0.0,1.0,1.0,114,15],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.965517],
[4,0,508,275,37,410,224.0,-145.0,-0.000997,1.0,1.0,22,8,0,0,0.965517],
[8,0,508,687,452,337,0.0,0.0,0.0,1.096552,1.096552,226,168,0,0,0.034483],
[10,0,508,275,37,410,245.627594,-159.000015,-0.000997,1.096552,1.096552,22,8,0,0,0.034483],
[5,0,254,613,252,411,-102.090508,-152.909500,-0.000790,1.000905,1.000453,136,27,0,0,0.965517],
[6,0,233,267,231,344,118.837105,-145.162888,-0.002274,1.001629,1.000814,114,15,0,0,0.965517],
[11,0,0,613,252,411,-111.947525,-167.673187,-0.000790,1.097544,1.097048,136,27,0,0,0.034483],
[12,0,0,267,231,344,130.311035,-159.178635,-0.002274,1.098338,1.097445,114,15,0,0,0.034483],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.965517],
[9,0,0,235,497,30,4.386207,-175.448288,0.0,1.096552,1.096552,248,15,0,0,0.034483]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.931035],
[4,0,508,275,37,410,224.0,-145.0,-0.001995,1.0,1.0,22,8,0,0,0.931035],
[8,0,508,687,452,337,0.0,0.0,0.0,1.093104,1.093104,226,168,0,0,0.068966],
[10,0,508,275,37,410,244.855194,-158.500000,-0.001995,1.093104,1.093104,22,8,0,0,0.068966],
[5,0,254,613,252,411,-102.181091,-152.818909,-0.001580,1.001811,1.000905,136,27,0,0,0.931035],
[6,0,233,267,231,344,118.675331,-145.324677,-0.004533,1.003247,1.001623,114,15,0,0,0.931035],
[11,0,0,613,252,411,-111.694511,-167.046890,-0.001580,1.095083,1.094093,136,27,0,0,0.068966],
[12,0,0,267,231,344,129.724426,-158.854904,-0.004533,1.096653,1.094878,114,15,0,0,0.068966],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.931035],
[9,0,0,235,497,30,4.372414,-174.896561,0.0,1.093104,1.093104,248,15,0,0,0.068966]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.896552],
[4,0,508,275,37,410,224.0,-145.0,-0.002992,1.0,1.0,22,8,0,0,0.896552],
[8,0,508,687,452,337,0.0,0.0,0.0,1.089655,1.089655,226,168,0,0,0.103448],
[10,0,508,275,37,410,244.082764,-157.999985,-0.002992,1.089655,1.089655,22,8,0,0,0.103448],
[5,0,254,613,252,411,-102.270615,-152.729385,-0.002362,1.002706,1.001353,136,27,0,0,0.896552],
[6,0,233,267,231,344,118.520500,-145.479492,-0.006695,1.004795,1.002398,114,15,0,0,0.896552],
[11,0,0,613,252,411,-111.439705,-166.422363,-0.002362,1.092604,1.091130,136,27,0,0,0.103448],
[12,0,0,267,231,344,129.146484,-158.522476,-0.006695,1.094880,1.092268,114,15,0,0,0.103448],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.896552],
[9,0,0,235,497,30,4.358621,-174.344818,0.0,1.089655,1.089655,248,15,0,0,0.103448]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.862069],
[4,0,508,275,37,410,224.0,-145.0,-0.003989,1.0,1.0,22,8,0,0,0.862069],
[8,0,508,687,452,337,0.0,0.0,0.0,1.086207,1.086207,226,168,0,0,0.137931],
[10,0,508,275,37,410,243.310349,-157.500000,-0.003989,1.086207,1.086207,22,8,0,0,0.137931],
[5,0,254,613,252,411,-102.358200,-152.641800,-0.003126,1.003582,1.001791,136,27,0,0,0.862069],
[6,0,233,267,231,344,118.369522,-145.630478,-0.008803,1.006305,1.003152,114,15,0,0,0.862069],
[11,0,0,613,252,411,-111.182190,-165.800583,-0.003126,1.090098,1.088152,136,27,0,0,0.137931],
[12,0,0,267,231,344,128.573792,-158.184830,-0.008803,1.093055,1.089631,114,15,0,0,0.137931],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.862069],
[9,0,0,235,497,30,4.344828,-173.793106,0.0,1.086207,1.086207,248,15,0,0,0.137931]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.827586],
[4,0,508,275,37,410,224.0,-145.0,-0.004987,1.0,1.0,22,8,0,0,0.827586],
[8,0,508,687,452,337,0.0,0.0,0.0,1.082759,1.082759,226,168,0,0,0.172414],
[10,0,508,275,37,410,242.537949,-157.000015,-0.004987,1.082759,1.082759,22,8,0,0,0.172414],
[5,0,254,613,252,411,-102.444443,-152.555557,-0.003878,1.004444,1.002222,136,27,0,0,0.827586],
[6,0,233,267,231,344,118.224419,-145.775574,-0.010829,1.007756,1.003878,114,15,0,0,0.827586],
[11,0,0,613,252,411,-110.922607,-165.180862,-0.003878,1.087571,1.085165,136,27,0,0,0.172414],
[12,0,0,267,231,344,128.008514,-157.839783,-0.010829,1.091156,1.086957,114,15,0,0,0.172414],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.827586],
[9,0,0,235,497,30,4.331035,-173.241394,0.0,1.082759,1.082759,248,15,0,0,0.172414]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.793103],
[4,0,508,275,37,410,224.0,-145.0,-0.005984,1.0,1.0,22,8,0,0,0.793103],
[8,0,508,687,452,337,0.0,0.0,0.0,1.079310,1.079310,226,168,0,0,0.206897],
[10,0,508,275,37,410,241.765533,-156.500015,-0.005984,1.079310,1.079310,22,8,0,0,0.206897],
[5,0,254,613,252,411,-102.532204,-152.467789,-0.004644,1.005322,1.002661,136,27,0,0,0.793103],
[6,0,233,267,231,344,118.090508,-145.909485,-0.012699,1.009095,1.004547,114,15,0,0,0.793103],
[11,0,0,613,252,411,-110.664078,-164.560074,-0.004644,1.085055,1.082182,136,27,0,0,0.206897],
[12,0,0,267,231,344,127.456314,-157.481628,-0.012699,1.089127,1.084219,114,15,0,0,0.206897],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.793103],
[9,0,0,235,497,30,4.317242,-172.689667,0.0,1.079310,1.079310,248,15,0,0,0.206897]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.758621],
[4,0,508,275,37,410,224.0,-145.0,-0.006981,1.0,1.0,22,8,0,0,0.758621],
[8,0,508,687,452,337,0.0,0.0,0.0,1.075862,1.075862,226,168,0,0,0.241379],
[10,0,508,275,37,410,240.993103,-156.0,-0.006981,1.075862,1.075862,22,8,0,0,0.241379],
[5,0,254,613,252,411,-102.619087,-152.380905,-0.005403,1.006191,1.003095,136,27,0,0,0.758621],
[6,0,233,267,231,344,118.0,-146.0,-0.013963,1.010000,1.005000,114,15,0,0,0.758621],
[11,0,0,613,252,411,-110.403976,-163.940826,-0.005403,1.082523,1.079192,136,27,0,0,0.241379],
[12,0,0,267,231,344,126.951729,-157.075851,-0.013963,1.086621,1.081241,114,15,0,0,0.241379],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.758621],
[9,0,0,235,497,30,4.303448,-172.137924,0.0,1.075862,1.075862,248,15,0,0,0.241379]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.724138],
[4,0,508,275,37,410,224.0,-145.0,-0.005773,1.0,1.0,22,8,0,0,0.724138],
[8,0,508,687,452,337,0.0,0.0,0.0,1.072414,1.072414,226,168,0,0,0.275862],
[10,0,508,275,37,410,240.220688,-155.500000,-0.005773,1.072414,1.072414,22,8,0,0,0.275862],
[5,0,254,613,252,411,-102.702675,-152.297333,-0.006132,1.007027,1.003513,136,27,0,0,0.724138],
[6,0,233,267,231,344,118.034424,-145.953110,-0.011555,1.009531,1.004766,114,15,0,0,0.724138],
[11,0,0,613,252,411,-110.139763,-163.325760,-0.006132,1.079949,1.076182,136,27,0,0,0.275862],
[12,0,0,267,231,344,126.581749,-156.522125,-0.011555,1.082635,1.077524,114,15,0,0,0.275862],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.724138],
[9,0,0,235,497,30,4.289655,-171.586212,0.0,1.072414,1.072414,248,15,0,0,0.275862]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.689655],
[4,0,508,275,37,410,224.0,-145.0,-0.004565,1.0,1.0,22,8,0,0,0.689655],
[8,0,508,687,452,337,0.0,0.0,0.0,1.068966,1.068966,226,168,0,0,0.310345],
[10,0,508,275,37,410,239.448288,-155.0,-0.004565,1.068966,1.068966,22,8,0,0,0.310345],
[5,0,254,613,252,411,-102.785477,-152.214523,-0.006855,1.007855,1.003927,136,27,0,0,0.689655],
[6,0,233,267,231,344,118.076805,-145.905914,-0.009035,1.009059,1.004530,114,15,0,0,0.689655],
[11,0,0,613,252,411,-109.874130,-162.712082,-0.006855,1.077362,1.073164,136,27,0,0,0.310345],
[12,0,0,267,231,344,126.220039,-155.968399,-0.009035,1.078650,1.073807,114,15,0,0,0.310345],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.689655],
[9,0,0,235,497,30,4.275862,-171.034485,0.0,1.068966,1.068966,248,15,0,0,0.310345]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.655172],
[4,0,508,275,37,410,224.0,-145.0,-0.003356,1.0,1.0,22,8,0,0,0.655172],
[8,0,508,687,452,337,0.0,0.0,0.0,1.065517,1.065517,226,168,0,0,0.344828],
[10,0,508,275,37,410,238.675873,-154.500015,-0.003356,1.065517,1.065517,22,8,0,0,0.344828],
[5,0,254,613,252,411,-102.867210,-152.132797,-0.007568,1.008672,1.004336,136,27,0,0,0.655172],
[6,0,233,267,231,344,118.124626,-145.858841,-0.006635,1.008588,1.004294,114,15,0,0,0.655172],
[11,0,0,613,252,411,-109.606789,-162.100128,-0.007568,1.074758,1.070137,136,27,0,0,0.344828],
[12,0,0,267,231,344,125.863831,-155.415131,-0.006635,1.074668,1.070093,114,15,0,0,0.344828],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.655172],
[9,0,0,235,497,30,4.262069,-170.482773,0.0,1.065517,1.065517,248,15,0,0,0.344828]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.620690],
[4,0,508,275,37,410,224.0,-145.0,-0.002148,1.0,1.0,22,8,0,0,0.620690],
[8,0,508,687,452,337,0.0,0.0,0.0,1.062069,1.062069,226,168,0,0,0.379310],
[10,0,508,275,37,410,237.903442,-154.0,-0.002148,1.062069,1.062069,22,8,0,0,0.379310],
[5,0,254,613,252,411,-102.941910,-152.058090,-0.008220,1.009419,1.004710,136,27,0,0,0.620690],
[6,0,233,267,231,344,118.167381,-145.809555,-0.004293,1.008096,1.004048,114,15,0,0,0.620690],
[11,0,0,613,252,411,-109.331406,-161.496170,-0.008220,1.072073,1.067071,136,27,0,0,0.379310],
[12,0,0,267,231,344,125.501907,-154.859802,-0.004293,1.070667,1.066368,114,15,0,0,0.379310],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.620690],
[9,0,0,235,497,30,4.248276,-169.931030,0.0,1.062069,1.062069,248,15,0,0,0.379310]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.586207],
[4,0,508,275,37,410,224.0,-145.0,-0.000940,1.0,1.0,22,8,0,0,0.586207],
[8,0,508,687,452,337,0.0,0.0,0.0,1.058621,1.058621,226,168,0,0,0.413793],
[10,0,508,275,37,410,237.131027,-153.500000,-0.000940,1.058621,1.058621,22,8,0,0,0.413793],
[5,0,254,613,252,411,-103.0,-152.0,-0.008727,1.010000,1.005000,136,27,0,0,0.586207],
[6,0,233,267,231,344,118.214523,-145.765549,-0.002002,1.007656,1.003828,114,15,0,0,0.586207],
[11,0,0,613,252,411,-109.037933,-160.910339,-0.008727,1.069207,1.063914,136,27,0,0,0.413793],
[12,0,0,267,231,344,125.144341,-154.310410,-0.002002,1.066725,1.062673,114,15,0,0,0.413793],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.586207],
[9,0,0,235,497,30,4.234483,-169.379303,0.0,1.058621,1.058621,248,15,0,0,0.413793]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.551724],
[4,0,508,275,37,410,224.0,-145.0,0.000269,1.0,1.0,22,8,0,0,0.551724],
[8,0,508,687,452,337,0.0,0.0,0.0,1.055172,1.055172,226,168,0,0,0.448276],
[10,0,508,275,37,410,236.358627,-153.0,0.000269,1.055172,1.055172,22,8,0,0,0.448276],
[5,0,254,613,252,411,-102.938950,-152.061050,-0.006242,1.009390,1.004695,136,27,0,0,0.551724],
[6,0,233,267,231,344,118.265358,-145.718781,0.000444,1.007188,1.003594,114,15,0,0,0.551724],
[11,0,0,613,252,411,-108.618347,-160.450623,-0.006242,1.065080,1.060126,136,27,0,0,0.448276],
[12,0,0,267,231,344,124.790344,-153.758438,0.000444,1.062757,1.058965,114,15,0,0,0.448276],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.551724],
[9,0,0,235,497,30,4.220690,-168.827591,0.0,1.055172,1.055172,248,15,0,0,0.448276]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.517241],
[4,0,508,275,37,410,224.0,-145.0,0.001477,1.0,1.0,22,8,0,0,0.517241],
[8,0,508,687,452,337,0.0,0.0,0.0,1.051724,1.051724,226,168,0,0,0.482759],
[10,0,508,275,37,410,235.586212,-152.500015,0.001477,1.051724,1.051724,22,8,0,0,0.482759],
[5,0,254,613,252,411,-102.875374,-152.124634,-0.003721,1.008754,1.004377,136,27,0,0,0.517241],
[6,0,233,267,231,344,118.308197,-145.669785,0.002680,1.006698,1.003349,114,15,0,0,0.517241],
[11,0,0,613,252,411,-108.196526,-159.993164,-0.003721,1.060931,1.056327,136,27,0,0,0.482759],
[12,0,0,267,231,344,124.427589,-153.204453,0.002680,1.058769,1.055246,114,15,0,0,0.482759],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.517241],
[9,0,0,235,497,30,4.206897,-168.275879,0.0,1.051724,1.051724,248,15,0,0,0.482759]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.482759],
[4,0,508,275,37,410,224.0,-145.0,0.002685,1.0,1.0,22,8,0,0,0.482759],
[8,0,508,687,452,337,0.0,0.0,0.0,1.048276,1.048276,226,168,0,0,0.517241],
[10,0,508,275,37,410,234.813782,-152.0,0.002685,1.048276,1.048276,22,8,0,0,0.517241],
[5,0,254,613,252,411,-102.814255,-152.185745,-0.001320,1.008142,1.004071,136,27,0,0,0.482759],
[6,0,233,267,231,344,118.358200,-145.624786,0.004903,1.006248,1.003124,114,15,0,0,0.482759],
[11,0,0,613,252,411,-107.777702,-159.532639,-0.001320,1.056811,1.052544,136,27,0,0,0.517241],
[12,0,0,267,231,344,124.072037,-152.654953,0.004903,1.054825,1.051551,114,15,0,0,0.517241],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.482759],
[9,0,0,235,497,30,4.193103,-167.724136,0.0,1.048276,1.048276,248,15,0,0,0.517241]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.448276],
[4,0,508,275,37,410,224.0,-145.0,0.003893,1.0,1.0,22,8,0,0,0.448276],
[8,0,508,687,452,337,0.0,0.0,0.0,1.044828,1.044828,226,168,0,0,0.551724],
[10,0,508,275,37,410,234.041367,-151.500000,0.003893,1.044828,1.044828,22,8,0,0,0.551724],
[5,0,254,613,252,411,-102.750237,-152.249756,0.001146,1.007502,1.003751,136,27,0,0,0.448276],
[6,0,233,267,231,344,118.403854,-145.573013,0.007098,1.005730,1.002865,114,15,0,0,0.448276],
[11,0,0,613,252,411,-107.356277,-159.074753,0.001146,1.052666,1.048747,136,27,0,0,0.551724],
[12,0,0,267,231,344,123.711617,-152.098694,0.007098,1.050815,1.047821,114,15,0,0,0.551724],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.448276],
[9,0,0,235,497,30,4.179310,-167.172409,0.0,1.044828,1.044828,248,15,0,0,0.551724]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.413793],
[4,0,508,275,37,410,224.0,-145.0,0.005102,1.0,1.0,22,8,0,0,0.413793],
[8,0,508,687,452,337,0.0,0.0,0.0,1.041379,1.041379,226,168,0,0,0.586207],
[10,0,508,275,37,410,233.268967,-151.0,0.005102,1.041379,1.041379,22,8,0,0,0.586207],
[5,0,254,613,252,411,-102.691811,-152.308197,0.003547,1.006918,1.003459,136,27,0,0,0.413793],
[6,0,233,267,231,344,118.450264,-145.526352,0.009177,1.005264,1.002632,114,15,0,0,0.413793],
[11,0,0,613,252,411,-106.941124,-158.610611,0.003547,1.048584,1.044982,136,27,0,0,0.586207],
[12,0,0,267,231,344,123.351662,-151.548141,0.009177,1.046861,1.044120,114,15,0,0,0.586207],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.413793],
[9,0,0,235,497,30,4.165517,-166.620697,0.0,1.041379,1.041379,248,15,0,0,0.586207]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.379310],
[4,0,508,275,37,410,224.0,-145.0,0.006310,1.0,1.0,22,8,0,0,0.379310],
[8,0,508,687,452,337,0.0,0.0,0.0,1.037931,1.037931,226,168,0,0,0.620690],
[10,0,508,275,37,410,232.496552,-150.500000,0.006310,1.037931,1.037931,22,8,0,0,0.620690],
[5,0,254,613,252,411,-102.630478,-152.369522,0.005914,1.006305,1.003152,136,27,0,0,0.379310],
[6,0,233,267,231,344,118.502930,-145.485352,0.010681,1.004853,1.002427,114,15,0,0,0.379310],
[11,0,0,613,252,411,-106.523361,-158.149063,0.005914,1.044475,1.041203,136,27,0,0,0.620690],
[12,0,0,267,231,344,122.997879,-151.003769,0.010681,1.042969,1.040450,114,15,0,0,0.620690],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.379310],
[9,0,0,235,497,30,4.151724,-166.068970,0.0,1.037931,1.037931,248,15,0,0,0.620690]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.344828],
[4,0,508,275,37,410,224.0,-145.0,0.007518,1.0,1.0,22,8,0,0,0.344828],
[8,0,508,687,452,337,0.0,0.0,0.0,1.034483,1.034483,226,168,0,0,0.655172],
[10,0,508,275,37,410,231.724121,-150.0,0.007518,1.034483,1.034483,22,8,0,0,0.655172],
[5,0,254,613,252,411,-102.567200,-152.432800,0.008269,1.005672,1.002836,136,27,0,0,0.344828],
[6,0,233,267,231,344,118.549728,-145.438614,0.009964,1.004386,1.002193,114,15,0,0,0.344828],
[11,0,0,613,252,411,-106.103996,-157.689102,0.008269,1.040350,1.037416,136,27,0,0,0.655172],
[12,0,0,267,231,344,122.637650,-150.453735,0.009964,1.039020,1.036751,114,15,0,0,0.655172],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.344828],
[9,0,0,235,497,30,4.137931,-165.517242,0.0,1.034483,1.034483,248,15,0,0,0.655172]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.310345],
[4,0,508,275,37,410,224.0,-145.0,0.008727,1.0,1.0,22,8,0,0,0.310345],
[8,0,508,687,452,337,0.0,0.0,0.0,1.031034,1.031034,226,168,0,0,0.689655],
[10,0,508,275,37,410,230.951721,-149.500000,0.008727,1.031034,1.031034,22,8,0,0,0.689655],
[5,0,254,613,252,411,-102.508789,-152.491211,0.010470,1.005088,1.002544,136,27,0,0,0.310345],
[6,0,233,267,231,344,118.596146,-145.392349,0.008989,1.003924,1.001962,114,15,0,0,0.310345],
[11,0,0,613,252,411,-105.690094,-157.223694,0.010470,1.036280,1.033657,136,27,0,0,0.689655],
[12,0,0,267,231,344,122.276711,-149.904526,0.008989,1.035080,1.033057,114,15,0,0,0.689655],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.310345],
[9,0,0,235,497,30,4.124138,-164.965515,0.0,1.031034,1.031034,248,15,0,0,0.689655]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.275862],
[4,0,508,275,37,410,224.0,-145.0,0.007757,1.0,1.0,22,8,0,0,0.275862],
[8,0,508,687,452,337,0.0,0.0,0.0,1.027586,1.027586,226,168,0,0,0.724138],
[10,0,508,275,37,410,230.179321,-149.0,0.007757,1.027586,1.027586,22,8,0,0,0.724138],
[5,0,254,613,252,411,-102.444435,-152.555557,0.012553,1.004444,1.002222,136,27,0,0,0.275862],
[6,0,233,267,231,344,118.641800,-145.341339,0.008014,1.003413,1.001707,114,15,0,0,0.275862],
[11,0,0,613,252,411,-105.270493,-156.763992,0.012553,1.032153,1.029870,136,27,0,0,0.724138],
[12,0,0,267,231,344,121.914680,-149.350754,0.008014,1.031094,1.029340,114,15,0,0,0.724138],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.275862],
[9,0,0,235,497,30,4.110345,-164.413788,0.0,1.027586,1.027586,248,15,0,0,0.724138]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.241379],
[4,0,508,275,37,410,224.0,-145.0,0.006787,1.0,1.0,22,8,0,0,0.241379],
[8,0,508,687,452,337,0.0,0.0,0.0,1.024138,1.024138,226,168,0,0,0.758621],
[10,0,508,275,37,410,229.406906,-148.500000,0.006787,1.024138,1.024138,22,8,0,0,0.758621],
[5,0,254,613,252,411,-102.386627,-152.613373,0.014085,1.003866,1.001933,136,27,0,0,0.241379],
[6,0,233,267,231,344,118.691811,-145.297333,0.006916,1.002973,1.001487,114,15,0,0,0.241379],
[11,0,0,613,252,411,-104.858032,-156.297150,0.014085,1.028098,1.026118,136,27,0,0,0.758621],
[12,0,0,267,231,344,121.556786,-148.804504,0.006916,1.027183,1.025661,114,15,0,0,0.758621],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.241379],
[9,0,0,235,497,30,4.096552,-163.862076,0.0,1.024138,1.024138,248,15,0,0,0.758621]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.206897],
[4,0,508,275,37,410,224.0,-145.0,0.005818,1.0,1.0,22,8,0,0,0.206897],
[8,0,508,687,452,337,0.0,0.0,0.0,1.020690,1.020690,226,168,0,0,0.793103],
[10,0,508,275,37,410,228.634476,-147.999985,0.005818,1.020690,1.020690,22,8,0,0,0.793103],
[5,0,254,613,252,411,-102.324669,-152.675323,0.012657,1.003247,1.001623,136,27,0,0,0.206897],
[6,0,233,267,231,344,118.734642,-145.254929,0.005872,1.002549,1.001275,114,15,0,0,0.206897],
[11,0,0,613,252,411,-104.441727,-155.834122,0.012657,1.024003,1.022347,136,27,0,0,0.793103],
[12,0,0,267,231,344,121.191216,-148.260193,0.005872,1.023292,1.021991,114,15,0,0,0.793103],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.206897],
[9,0,0,235,497,30,4.082758,-163.310333,0.0,1.020690,1.020690,248,15,0,0,0.793103]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.172414],
[4,0,508,275,37,410,224.0,-145.0,0.004848,1.0,1.0,22,8,0,0,0.172414],
[8,0,508,687,452,337,0.0,0.0,0.0,1.017241,1.017241,226,168,0,0,0.827586],
[10,0,508,275,37,410,227.862076,-147.500000,0.004848,1.017241,1.017241,22,8,0,0,0.827586],
[5,0,254,613,252,411,-102.265358,-152.734650,0.010494,1.002654,1.001327,136,27,0,0,0.172414],
[6,0,233,267,231,344,118.785477,-145.209625,0.004810,1.002096,1.001048,114,15,0,0,0.172414],
[11,0,0,613,252,411,-104.028557,-155.367996,0.010494,1.019941,1.018591,136,27,0,0,0.827586],
[12,0,0,267,231,344,120.833496,-147.713242,0.004810,1.019374,1.018308,114,15,0,0,0.827586],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.172414],
[9,0,0,235,497,30,4.068965,-162.758621,0.0,1.017241,1.017241,248,15,0,0,0.827586]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.137931],
[4,0,508,275,37,410,224.0,-145.0,0.003879,1.0,1.0,22,8,0,0,0.137931],
[8,0,508,687,452,337,0.0,0.0,0.0,1.013793,1.013793,226,168,0,0,0.862069],
[10,0,508,275,37,410,227.089661,-147.0,0.003879,1.013793,1.013793,22,8,0,0,0.862069],
[5,0,254,613,252,411,-102.209633,-152.790375,0.008234,1.002096,1.001048,136,27,0,0,0.137931],
[6,0,233,267,231,344,118.832619,-145.162888,0.003766,1.001629,1.000814,114,15,0,0,0.137931],
[11,0,0,613,252,411,-103.619415,-154.897812,0.008234,1.015918,1.014856,136,27,0,0,0.862069],
[12,0,0,267,231,344,120.471695,-147.165131,0.003766,1.015444,1.014619,114,15,0,0,0.862069],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.137931],
[9,0,0,235,497,30,4.055172,-162.206894,0.0,1.013793,1.013793,248,15,0,0,0.862069]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.103448],
[4,0,508,275,37,410,224.0,-145.0,0.002909,1.0,1.0,22,8,0,0,0.103448],
[8,0,508,687,452,337,0.0,0.0,0.0,1.010345,1.010345,226,168,0,0,0.896552],
[10,0,508,275,37,410,226.317245,-146.500015,0.002909,1.010345,1.010345,22,8,0,0,0.896552],
[5,0,254,613,252,411,-102.149712,-152.850296,0.005851,1.001497,1.000749,136,27,0,0,0.103448],
[6,0,233,267,231,344,118.875374,-145.116669,0.002668,1.001167,1.000583,114,15,0,0,0.103448],
[11,0,0,613,252,411,-103.206436,-154.431503,0.005851,1.011858,1.011101,136,27,0,0,0.896552],
[12,0,0,267,231,344,120.105125,-146.617889,0.002668,1.011524,1.010934,114,15,0,0,0.896552],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.103448],
[9,0,0,235,497,30,4.041379,-161.655182,0.0,1.010345,1.010345,248,15,0,0,0.896552]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.068965],
[4,0,508,275,37,410,224.0,-145.0,0.001939,1.0,1.0,22,8,0,0,0.068965],
[8,0,508,687,452,337,0.0,0.0,0.0,1.006896,1.006896,226,168,0,0,0.931035],
[10,0,508,275,37,410,225.544815,-146.0,0.001939,1.006896,1.006896,22,8,0,0,0.931035],
[5,0,254,613,252,411,-102.094078,-152.905930,0.003591,1.000941,1.000470,136,27,0,0,0.068965],
[6,0,233,267,231,344,118.923195,-145.073532,0.001646,1.000735,1.000368,114,15,0,0,0.068965],
[11,0,0,613,252,411,-102.798164,-153.960434,0.003591,1.007844,1.007370,136,27,0,0,0.931035],
[12,0,0,267,231,344,119.743347,-146.074036,0.001646,1.007637,1.007267,114,15,0,0,0.931035],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.068965],
[9,0,0,235,497,30,4.027586,-161.103439,0.0,1.006896,1.006896,248,15,0,0,0.931035]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.034483],
[4,0,508,275,37,410,224.0,-145.0,0.000970,1.0,1.0,22,8,0,0,0.034483],
[8,0,508,687,452,337,0.0,0.0,0.0,1.003448,1.003448,226,168,0,0,0.965517],
[10,0,508,275,37,410,224.772415,-145.500000,0.000970,1.003448,1.003448,22,8,0,0,0.965517],
[5,0,254,613,252,411,-102.041695,-152.958298,0.001428,1.000417,1.000208,136,27,0,0,0.034483],
[6,0,233,267,231,344,118.965576,-145.034424,0.000717,1.000344,1.000172,114,15,0,0,0.034483],
[11,0,0,613,252,411,-102.393562,-153.485748,0.001428,1.003867,1.003657,136,27,0,0,0.965517],
[12,0,0,267,231,344,119.375801,-145.534546,0.000717,1.003794,1.003621,114,15,0,0,0.965517],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.034483],
[9,0,0,235,497,30,4.013793,-160.551727,0.0,1.003448,1.003448,248,15,0,0,0.965517]
],
[
[8,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[10,0,508,275,37,410,224.0,-145.0,0.0,1.0,1.0,22,8],
[11,0,0,613,252,411,-102.0,-153.0,0.0,1.0,1.0,136,27],
[12,0,0,267,231,344,119.0,-145.0,0.0,1.0,1.0,114,15],
[9,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
]
]
}
}
]

},{}],28:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-03-01.png"],
"name": "obj05_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 600,
"CanvasHeight": 600,
"MarginWidth": 308,
"MarginHeight": 308,
"parts": ["root","Obj","03","01","02","02_left","01_right"],
"ssa": [
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.0,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.0,-153.0,0.0,1.0,1.0,136,27],
[5,0,0,267,231,344,119.0,-145.0,0.0,1.0,1.0,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.001309,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.029922,-152.970078,-0.000261,1.000299,1.000150,136,27],
[5,0,0,267,231,344,118.958305,-145.041702,-0.000582,1.000417,1.000208,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.002618,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.058090,-152.941910,-0.000507,1.000581,1.000291,136,27],
[5,0,0,267,231,344,118.916466,-145.083542,-0.001166,1.000835,1.000418,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.003927,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.086990,-152.913010,-0.000759,1.000870,1.000435,136,27],
[5,0,0,267,231,344,118.875374,-145.124634,-0.001740,1.001246,1.000623,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.005236,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.116669,-152.883331,-0.001018,1.001167,1.000583,136,27],
[5,0,0,267,231,344,118.832626,-145.167374,-0.002337,1.001674,1.000837,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.006545,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.145409,-152.854584,-0.001269,1.001454,1.000727,136,27],
[5,0,0,267,231,344,118.790367,-145.209625,-0.002927,1.002096,1.001048,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.007854,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.176476,-152.823517,-0.001540,1.001765,1.000882,136,27],
[5,0,0,267,231,344,118.750237,-145.249756,-0.003487,1.002498,1.001249,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.009163,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.204781,-152.795227,-0.001787,1.002048,1.001024,136,27],
[5,0,0,267,231,344,118.708069,-145.291931,-0.004076,1.002919,1.001460,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.010472,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.234459,-152.765549,-0.002046,1.002345,1.001172,136,27],
[5,0,0,267,231,344,118.669792,-145.330215,-0.004611,1.003302,1.001651,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.011781,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.265358,-152.734650,-0.002316,1.002654,1.001327,136,27],
[5,0,0,267,231,344,118.630478,-145.369522,-0.005159,1.003695,1.001848,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.013090,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.291931,-152.708069,-0.002548,1.002919,1.001460,136,27],
[5,0,0,267,231,344,118.584595,-145.415405,-0.005800,1.004154,1.002077,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.014399,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.324669,-152.675323,-0.002833,1.003247,1.001623,136,27],
[5,0,0,267,231,344,118.543900,-145.456100,-0.006368,1.004561,1.002280,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.015708,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.352562,-152.647430,-0.003077,1.003526,1.001763,136,27],
[5,0,0,267,231,344,118.502930,-145.497070,-0.006940,1.004971,1.002485,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.017017,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.380913,-152.619095,-0.003324,1.003809,1.001904,136,27],
[5,0,0,267,231,344,118.461945,-145.538055,-0.007513,1.005381,1.002690,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.018326,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.409622,-152.590378,-0.003575,1.004096,1.002048,136,27],
[5,0,0,267,231,344,118.421188,-145.578812,-0.008082,1.005788,1.002894,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.019635,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.438614,-152.561386,-0.003828,1.004386,1.002193,136,27],
[5,0,0,267,231,344,118.380913,-145.619095,-0.008644,1.006191,1.003095,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.020944,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.467796,-152.532211,-0.004082,1.004678,1.002339,136,27],
[5,0,0,267,231,344,118.341347,-145.658661,-0.009197,1.006587,1.003293,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.022253,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.497070,-152.502930,-0.004338,1.004971,1.002485,136,27],
[5,0,0,267,231,344,118.302750,-145.697250,-0.009735,1.006973,1.003486,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.023562,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.526360,-152.473648,-0.004593,1.005264,1.002632,136,27],
[5,0,0,267,231,344,118.260124,-145.739868,-0.010331,1.007399,1.003699,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.024871,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.555565,-152.444443,-0.004848,1.005556,1.002778,136,27],
[5,0,0,267,231,344,118.224419,-145.775574,-0.010829,1.007756,1.003878,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.026180,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.584595,-152.415405,-0.005102,1.005846,1.002923,136,27],
[5,0,0,267,231,344,118.181091,-145.818909,-0.011434,1.008189,1.004094,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.025509,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.613373,-152.386627,-0.005353,1.006134,1.003067,136,27],
[5,0,0,267,231,344,118.145409,-145.854584,-0.011932,1.008546,1.004273,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.024837,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.641800,-152.358200,-0.005601,1.006418,1.003209,136,27],
[5,0,0,267,231,344,118.105125,-145.894867,-0.012495,1.008949,1.004474,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.024166,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.669792,-152.330215,-0.005845,1.006698,1.003349,136,27],
[5,0,0,267,231,344,118.067169,-145.932831,-0.013025,1.009328,1.004664,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.023495,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.697250,-152.302750,-0.006085,1.006973,1.003486,136,27],
[5,0,0,267,231,344,118.029930,-145.970078,-0.013545,1.009701,1.004850,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.022824,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.729385,-152.270615,-0.006365,1.007294,1.003647,136,27],
[5,0,0,267,231,344,118.0,-146.0,-0.013963,1.010000,1.005000,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.022152,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.755371,-152.244629,-0.006592,1.007554,1.003777,136,27],
[5,0,0,267,231,344,118.023735,-145.970078,-0.013545,1.009701,1.004850,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.021481,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.785477,-152.214523,-0.006855,1.007855,1.003927,136,27],
[5,0,0,267,231,344,118.052353,-145.938950,-0.013110,1.009390,1.004695,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.020810,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.814255,-152.185745,-0.007106,1.008142,1.004071,136,27],
[5,0,0,267,231,344,118.080147,-145.909500,-0.012699,1.009095,1.004547,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.020138,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.841545,-152.158447,-0.007344,1.008415,1.004208,136,27],
[5,0,0,267,231,344,118.108925,-145.879379,-0.012278,1.008794,1.004397,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.019467,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.867210,-152.132797,-0.007568,1.008672,1.004336,136,27],
[5,0,0,267,231,344,118.136948,-145.850296,-0.011872,1.008503,1.004251,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.018796,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.894875,-152.105133,-0.007809,1.008949,1.004474,136,27],
[5,0,0,267,231,344,118.167381,-145.818909,-0.011434,1.008189,1.004094,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.018125,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.923195,-152.076813,-0.008056,1.009232,1.004616,136,27],
[5,0,0,267,231,344,118.199959,-145.790375,-0.011036,1.007904,1.003952,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.017453,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.950409,-152.049591,-0.008294,1.009504,1.004752,136,27],
[5,0,0,267,231,344,118.229416,-145.760468,-0.010618,1.007605,1.003802,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.016782,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.978180,-152.021820,-0.008536,1.009782,1.004891,136,27],
[5,0,0,267,231,344,118.260124,-145.729385,-0.010184,1.007294,1.003647,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.016111,1.0,1.0,22,8],
[4,0,0,613,252,411,-103.0,-152.0,-0.008727,1.010000,1.005000,136,27],
[5,0,0,267,231,344,118.286560,-145.697250,-0.009735,1.006973,1.003486,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.015439,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.955742,-152.044266,-0.008340,1.009557,1.004779,136,27],
[5,0,0,267,231,344,118.319153,-145.669785,-0.009352,1.006698,1.003349,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.014768,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.913002,-152.086990,-0.007967,1.009130,1.004565,136,27],
[5,0,0,267,231,344,118.346947,-145.636154,-0.008882,1.006361,1.003181,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.014097,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.871315,-152.128693,-0.007604,1.008713,1.004357,136,27],
[5,0,0,267,231,344,118.380905,-145.607651,-0.008484,1.006076,1.003038,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.013426,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.828094,-152.171906,-0.007226,1.008281,1.004140,136,27],
[5,0,0,267,231,344,118.409622,-145.578812,-0.008082,1.005788,1.002894,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.012754,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.785477,-152.214523,-0.006855,1.007855,1.003927,136,27],
[5,0,0,267,231,344,118.438614,-145.549728,-0.007676,1.005497,1.002749,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.012083,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.739868,-152.260132,-0.006457,1.007399,1.003699,136,27],
[5,0,0,267,231,344,118.467796,-145.520508,-0.007268,1.005205,1.002603,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.011412,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.697250,-152.302750,-0.006085,1.006973,1.003486,136,27],
[5,0,0,267,231,344,118.502930,-145.491211,-0.006859,1.004912,1.002456,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.010740,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.653053,-152.346939,-0.005699,1.006531,1.003265,136,27],
[5,0,0,267,231,344,118.532204,-145.456100,-0.006368,1.004561,1.002280,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.010069,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.613373,-152.386627,-0.005353,1.006134,1.003067,136,27],
[5,0,0,267,231,344,118.561386,-145.426987,-0.005962,1.004270,1.002135,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.009398,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.567200,-152.432800,-0.004950,1.005672,1.002836,136,27],
[5,0,0,267,231,344,118.590378,-145.398102,-0.005559,1.003981,1.001991,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.008727,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.526352,-152.473648,-0.004593,1.005264,1.002632,136,27],
[5,0,0,267,231,344,118.619087,-145.369522,-0.005159,1.003695,1.001848,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.008055,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.485352,-152.514648,-0.004236,1.004853,1.002427,136,27],
[5,0,0,267,231,344,118.653053,-145.341339,-0.004766,1.003413,1.001707,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.007384,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.444435,-152.555557,-0.003878,1.004444,1.002222,136,27],
[5,0,0,267,231,344,118.680847,-145.308197,-0.004303,1.003082,1.001541,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.006713,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.398102,-152.601898,-0.003474,1.003981,1.001991,136,27],
[5,0,0,267,231,344,118.713440,-145.281219,-0.003927,1.002812,1.001406,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.006042,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.358200,-152.641800,-0.003126,1.003582,1.001791,136,27],
[5,0,0,267,231,344,118.739876,-145.249756,-0.003487,1.002498,1.001249,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.005370,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.313660,-152.686340,-0.002737,1.003137,1.001568,136,27],
[5,0,0,267,231,344,118.770576,-145.224426,-0.003133,1.002244,1.001122,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.004699,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.270615,-152.729385,-0.002362,1.002706,1.001353,136,27],
[5,0,0,267,231,344,118.800041,-145.195190,-0.002725,1.001952,1.000976,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.004028,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.229424,-152.770584,-0.002002,1.002294,1.001147,136,27],
[5,0,0,267,231,344,118.832619,-145.162888,-0.002274,1.001629,1.000814,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.003356,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.190445,-152.809555,-0.001662,1.001904,1.000952,136,27],
[5,0,0,267,231,344,118.863052,-145.136948,-0.001912,1.001369,1.000685,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.002685,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.149712,-152.850296,-0.001306,1.001497,1.000749,136,27],
[5,0,0,267,231,344,118.891075,-145.105133,-0.001468,1.001051,1.000526,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.002014,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.108925,-152.891083,-0.000951,1.001089,1.000545,136,27],
[5,0,0,267,231,344,118.919853,-145.076813,-0.001072,1.000768,1.000384,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.001343,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.070320,-152.929688,-0.000614,1.000703,1.000352,136,27],
[5,0,0,267,231,344,118.947647,-145.049591,-0.000692,1.000496,1.000248,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,-0.000671,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.032143,-152.967865,-0.000280,1.000321,1.000161,136,27],
[5,0,0,267,231,344,118.976265,-145.023727,-0.000331,1.000237,1.000119,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[1,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[3,0,508,275,37,410,224.0,-145.0,0.0,1.0,1.0,22,8],
[4,0,0,613,252,411,-102.0,-153.0,0.0,1.0,1.0,136,27],
[5,0,0,267,231,344,119.0,-145.0,0.0,1.0,1.0,114,15],
[2,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
]
]
}
}
]

},{}],29:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-03-01.png"],
"name": "obj06_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 600,
"CanvasHeight": 600,
"MarginWidth": 308,
"MarginHeight": 308,
"parts": ["root","Obj","omote","03","01","02","02_left_1","01_right_1","ura","03_1","01_1","02_1","02_left_2","01_right_2"],
"ssa": [
[
[8,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[10,0,508,275,37,410,224.0,-145.0,0.0,1.0,1.0,22,8],
[11,0,0,613,252,411,-102.0,-153.0,0.0,1.0,1.0,136,27],
[12,0,0,267,231,344,119.0,-145.0,0.0,1.0,1.0,114,15],
[9,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.034483],
[4,0,508,275,37,410,224.0,-145.0,-0.000997,1.0,1.0,22,8,0,0,0.034483],
[8,0,508,687,452,337,0.0,0.0,0.0,1.003448,1.003448,226,168,0,0,0.965517],
[10,0,508,275,37,410,224.772415,-145.500000,-0.000997,1.003448,1.003448,22,8,0,0,0.965517],
[5,0,254,613,252,411,-102.090508,-152.909500,-0.000790,1.000905,1.000453,136,27,0,0,0.034483],
[6,0,233,267,231,344,118.837105,-145.162888,-0.002274,1.001629,1.000814,114,15,0,0,0.034483],
[11,0,0,613,252,411,-102.442543,-153.436768,-0.000790,1.004356,1.003902,136,27,0,0,0.965517],
[12,0,0,267,231,344,119.246887,-145.663452,-0.002274,1.005083,1.004266,114,15,0,0,0.965517],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.034483],
[9,0,0,235,497,30,4.013793,-160.551727,0.0,1.003448,1.003448,248,15,0,0,0.965517]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.068966],
[4,0,508,275,37,410,224.0,-145.0,-0.001995,1.0,1.0,22,8,0,0,0.068966],
[8,0,508,687,452,337,0.0,0.0,0.0,1.006896,1.006896,226,168,0,0,0.931035],
[10,0,508,275,37,410,225.544815,-146.0,-0.001995,1.006896,1.006896,22,8,0,0,0.931035],
[5,0,254,613,252,411,-102.181091,-152.818909,-0.001580,1.001811,1.000905,136,27,0,0,0.068966],
[6,0,233,267,231,344,118.675331,-145.324677,-0.004533,1.003247,1.001623,114,15,0,0,0.068966],
[11,0,0,613,252,411,-102.885780,-153.872818,-0.001580,1.008720,1.007808,136,27,0,0,0.931035],
[12,0,0,267,231,344,119.493774,-146.326904,-0.004533,1.010166,1.008531,114,15,0,0,0.931035],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.068966],
[9,0,0,235,497,30,4.027586,-161.103439,0.0,1.006896,1.006896,248,15,0,0,0.931035]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.103448],
[4,0,508,275,37,410,224.0,-145.0,-0.002992,1.0,1.0,22,8,0,0,0.103448],
[8,0,508,687,452,337,0.0,0.0,0.0,1.010345,1.010345,226,168,0,0,0.896552],
[10,0,508,275,37,410,226.317245,-146.500015,-0.002992,1.010345,1.010345,22,8,0,0,0.896552],
[5,0,254,613,252,411,-102.270615,-152.729385,-0.002362,1.002706,1.001353,136,27,0,0,0.103448],
[6,0,233,267,231,344,118.520500,-145.479492,-0.006695,1.004795,1.002398,114,15,0,0,0.103448],
[11,0,0,613,252,411,-103.328590,-154.309357,-0.002362,1.013079,1.011712,136,27,0,0,0.896552],
[12,0,0,267,231,344,119.746582,-146.984467,-0.006695,1.015189,1.012767,114,15,0,0,0.896552],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.103448],
[9,0,0,235,497,30,4.041379,-161.655182,0.0,1.010345,1.010345,248,15,0,0,0.896552]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.137931],
[4,0,508,275,37,410,224.0,-145.0,-0.003989,1.0,1.0,22,8,0,0,0.137931],
[8,0,508,687,452,337,0.0,0.0,0.0,1.013793,1.013793,226,168,0,0,0.862069],
[10,0,508,275,37,410,227.089661,-147.0,-0.003989,1.013793,1.013793,22,8,0,0,0.862069],
[5,0,254,613,252,411,-102.358200,-152.641800,-0.003126,1.003582,1.001791,136,27,0,0,0.137931],
[6,0,233,267,231,344,118.369522,-145.630478,-0.008803,1.006305,1.003152,114,15,0,0,0.137931],
[11,0,0,613,252,411,-103.770035,-154.747208,-0.003126,1.017424,1.015609,136,27,0,0,0.862069],
[12,0,0,267,231,344,120.002213,-147.639175,-0.008803,1.020185,1.016989,114,15,0,0,0.862069],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.137931],
[9,0,0,235,497,30,4.055172,-162.206894,0.0,1.013793,1.013793,248,15,0,0,0.862069]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.172414],
[4,0,508,275,37,410,224.0,-145.0,-0.004987,1.0,1.0,22,8,0,0,0.172414],
[8,0,508,687,452,337,0.0,0.0,0.0,1.017241,1.017241,226,168,0,0,0.827586],
[10,0,508,275,37,410,227.862076,-147.500000,-0.004987,1.017241,1.017241,22,8,0,0,0.827586],
[5,0,254,613,252,411,-102.444443,-152.555557,-0.003878,1.004444,1.002222,136,27,0,0,0.172414],
[6,0,233,267,231,344,118.224419,-145.775574,-0.010829,1.007756,1.003878,114,15,0,0,0.172414],
[11,0,0,613,252,411,-104.210724,-155.185837,-0.003878,1.021762,1.019502,136,27,0,0,0.827586],
[12,0,0,267,231,344,120.262764,-148.288956,-0.010829,1.025131,1.021186,114,15,0,0,0.827586],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.172414],
[9,0,0,235,497,30,4.068965,-162.758621,0.0,1.017241,1.017241,248,15,0,0,0.827586]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.206897],
[4,0,508,275,37,410,224.0,-145.0,-0.005984,1.0,1.0,22,8,0,0,0.206897],
[8,0,508,687,452,337,0.0,0.0,0.0,1.020690,1.020690,226,168,0,0,0.793103],
[10,0,508,275,37,410,228.634476,-147.999985,-0.005984,1.020690,1.020690,22,8,0,0,0.793103],
[5,0,254,613,252,411,-102.532204,-152.467789,-0.004644,1.005322,1.002661,136,27,0,0,0.206897],
[6,0,233,267,231,344,118.090508,-145.909485,-0.012699,1.009095,1.004547,114,15,0,0,0.206897],
[11,0,0,613,252,411,-104.653557,-155.622284,-0.004644,1.026122,1.023406,136,27,0,0,0.793103],
[12,0,0,267,231,344,120.533752,-148.928299,-0.012699,1.029973,1.025331,114,15,0,0,0.793103],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.206897],
[9,0,0,235,497,30,4.082758,-163.310333,0.0,1.020690,1.020690,248,15,0,0,0.793103]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.241379],
[4,0,508,275,37,410,224.0,-145.0,-0.006981,1.0,1.0,22,8,0,0,0.241379],
[8,0,508,687,452,337,0.0,0.0,0.0,1.024138,1.024138,226,168,0,0,0.758621],
[10,0,508,275,37,410,229.406906,-148.500000,-0.006981,1.024138,1.024138,22,8,0,0,0.758621],
[5,0,254,613,252,411,-102.619087,-152.380905,-0.005403,1.006191,1.003095,136,27,0,0,0.241379],
[6,0,233,267,231,344,118.0,-146.0,-0.013963,1.010000,1.005000,114,15,0,0,0.241379],
[11,0,0,613,252,411,-105.096107,-156.059082,-0.005403,1.030478,1.027308,136,27,0,0,0.758621],
[12,0,0,267,231,344,120.848282,-149.524139,-0.013963,1.034379,1.029259,114,15,0,0,0.758621],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.241379],
[9,0,0,235,497,30,4.096552,-163.862076,0.0,1.024138,1.024138,248,15,0,0,0.758621]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.275862],
[4,0,508,275,37,410,224.0,-145.0,-0.005773,1.0,1.0,22,8,0,0,0.275862],
[8,0,508,687,452,337,0.0,0.0,0.0,1.027586,1.027586,226,168,0,0,0.724138],
[10,0,508,275,37,410,230.179321,-149.0,-0.005773,1.027586,1.027586,22,8,0,0,0.724138],
[5,0,254,613,252,411,-102.702675,-152.297333,-0.006132,1.007027,1.003513,136,27,0,0,0.275862],
[6,0,233,267,231,344,118.034424,-145.953110,-0.011555,1.009531,1.004766,114,15,0,0,0.275862],
[11,0,0,613,252,411,-105.535858,-156.498627,-0.006132,1.034807,1.031196,136,27,0,0,0.724138],
[12,0,0,267,231,344,121.290550,-149.979401,-0.011555,1.037380,1.032483,114,15,0,0,0.724138],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.275862],
[9,0,0,235,497,30,4.110345,-164.413788,0.0,1.027586,1.027586,248,15,0,0,0.724138]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.310345],
[4,0,508,275,37,410,224.0,-145.0,-0.004565,1.0,1.0,22,8,0,0,0.310345],
[8,0,508,687,452,337,0.0,0.0,0.0,1.031034,1.031034,226,168,0,0,0.689655],
[10,0,508,275,37,410,230.951721,-149.500000,-0.004565,1.031034,1.031034,22,8,0,0,0.689655],
[5,0,254,613,252,411,-102.785477,-152.214523,-0.006855,1.007855,1.003927,136,27,0,0,0.310345],
[6,0,233,267,231,344,118.076805,-145.905914,-0.009035,1.009059,1.004530,114,15,0,0,0.310345],
[11,0,0,613,252,411,-105.975372,-156.938416,-0.006855,1.039133,1.035084,136,27,0,0,0.689655],
[12,0,0,267,231,344,121.741257,-150.434036,-0.009035,1.040375,1.035705,114,15,0,0,0.689655],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.310345],
[9,0,0,235,497,30,4.124138,-164.965515,0.0,1.031034,1.031034,248,15,0,0,0.689655]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.344828],
[4,0,508,275,37,410,224.0,-145.0,-0.003356,1.0,1.0,22,8,0,0,0.344828],
[8,0,508,687,452,337,0.0,0.0,0.0,1.034483,1.034483,226,168,0,0,0.655172],
[10,0,508,275,37,410,231.724121,-150.0,-0.003356,1.034483,1.034483,22,8,0,0,0.655172],
[5,0,254,613,252,411,-102.867210,-152.132797,-0.007568,1.008672,1.004336,136,27,0,0,0.344828],
[6,0,233,267,231,344,118.124626,-145.858841,-0.006635,1.008588,1.004294,114,15,0,0,0.344828],
[11,0,0,613,252,411,-106.414352,-157.378754,-0.007568,1.043454,1.038968,136,27,0,0,0.655172],
[12,0,0,267,231,344,122.197884,-150.888458,-0.006635,1.043367,1.038925,114,15,0,0,0.655172],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.344828],
[9,0,0,235,497,30,4.137931,-165.517242,0.0,1.034483,1.034483,248,15,0,0,0.655172]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.379310],
[4,0,508,275,37,410,224.0,-145.0,-0.002148,1.0,1.0,22,8,0,0,0.379310],
[8,0,508,687,452,337,0.0,0.0,0.0,1.037931,1.037931,226,168,0,0,0.620690],
[10,0,508,275,37,410,232.496552,-150.500000,-0.002148,1.037931,1.037931,22,8,0,0,0.620690],
[5,0,254,613,252,411,-102.941910,-152.058090,-0.008220,1.009419,1.004710,136,27,0,0,0.379310],
[6,0,233,267,231,344,118.167381,-145.809555,-0.004293,1.008096,1.004048,114,15,0,0,0.379310],
[11,0,0,613,252,411,-106.846603,-157.825806,-0.008220,1.047707,1.042819,136,27,0,0,0.620690],
[12,0,0,267,231,344,122.649597,-151.340271,-0.004293,1.046334,1.042132,114,15,0,0,0.620690],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.379310],
[9,0,0,235,497,30,4.151724,-166.068970,0.0,1.037931,1.037931,248,15,0,0,0.620690]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.413793],
[4,0,508,275,37,410,224.0,-145.0,-0.000940,1.0,1.0,22,8,0,0,0.413793],
[8,0,508,687,452,337,0.0,0.0,0.0,1.041379,1.041379,226,168,0,0,0.586207],
[10,0,508,275,37,410,233.268967,-151.0,-0.000940,1.041379,1.041379,22,8,0,0,0.586207],
[5,0,254,613,252,411,-103.0,-152.0,-0.008727,1.010000,1.005000,136,27,0,0,0.413793],
[6,0,233,267,231,344,118.214523,-145.765549,-0.002002,1.007656,1.003828,114,15,0,0,0.413793],
[11,0,0,613,252,411,-107.262070,-158.289658,-0.008727,1.051793,1.046586,136,27,0,0,0.586207],
[12,0,0,267,231,344,123.106163,-151.797226,-0.002002,1.049352,1.045365,114,15,0,0,0.586207],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.413793],
[9,0,0,235,497,30,4.165517,-166.620697,0.0,1.041379,1.041379,248,15,0,0,0.586207]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.448276],
[4,0,508,275,37,410,224.0,-145.0,0.000269,1.0,1.0,22,8,0,0,0.448276],
[8,0,508,687,452,337,0.0,0.0,0.0,1.044828,1.044828,226,168,0,0,0.551724],
[10,0,508,275,37,410,234.041367,-151.500000,0.000269,1.044828,1.044828,22,8,0,0,0.551724],
[5,0,254,613,252,411,-102.938950,-152.061050,-0.006242,1.009390,1.004695,136,27,0,0,0.448276],
[6,0,233,267,231,344,118.265358,-145.718781,0.000444,1.007188,1.003594,114,15,0,0,0.448276],
[11,0,0,613,252,411,-107.553452,-158.877579,-0.006242,1.054638,1.049733,136,27,0,0,0.551724],
[12,0,0,267,231,344,123.566910,-152.251007,0.000444,1.052338,1.048583,114,15,0,0,0.551724],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.448276],
[9,0,0,235,497,30,4.179310,-167.172409,0.0,1.044828,1.044828,248,15,0,0,0.551724]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.482759],
[4,0,508,275,37,410,224.0,-145.0,0.001477,1.0,1.0,22,8,0,0,0.482759],
[8,0,508,687,452,337,0.0,0.0,0.0,1.048276,1.048276,226,168,0,0,0.517241],
[10,0,508,275,37,410,234.813782,-152.0,0.001477,1.048276,1.048276,22,8,0,0,0.517241],
[5,0,254,613,252,411,-102.875374,-152.124634,-0.003721,1.008754,1.004377,136,27,0,0,0.482759],
[6,0,233,267,231,344,118.308197,-145.669785,0.002680,1.006698,1.003349,114,15,0,0,0.482759],
[11,0,0,613,252,411,-107.841774,-159.468567,-0.003721,1.057452,1.052864,136,27,0,0,0.517241],
[12,0,0,267,231,344,124.019623,-152.702118,0.002680,1.055297,1.051786,114,15,0,0,0.517241],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.482759],
[9,0,0,235,497,30,4.193103,-167.724136,0.0,1.048276,1.048276,248,15,0,0,0.517241]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.517241],
[4,0,508,275,37,410,224.0,-145.0,0.002685,1.0,1.0,22,8,0,0,0.517241],
[8,0,508,687,452,337,0.0,0.0,0.0,1.051724,1.051724,226,168,0,0,0.482759],
[10,0,508,275,37,410,235.586212,-152.500015,0.002685,1.051724,1.051724,22,8,0,0,0.482759],
[5,0,254,613,252,411,-102.814255,-152.185745,-0.001320,1.008142,1.004071,136,27,0,0,0.517241],
[6,0,233,267,231,344,118.358200,-145.624786,0.004903,1.006248,1.003124,114,15,0,0,0.517241],
[11,0,0,613,252,411,-108.132240,-160.057434,-0.001320,1.060288,1.056006,136,27,0,0,0.482759],
[12,0,0,267,231,344,124.480179,-153.157120,0.004903,1.058295,1.055010,114,15,0,0,0.482759],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.517241],
[9,0,0,235,497,30,4.206897,-168.275879,0.0,1.051724,1.051724,248,15,0,0,0.482759]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.551724],
[4,0,508,275,37,410,224.0,-145.0,0.003893,1.0,1.0,22,8,0,0,0.551724],
[8,0,508,687,452,337,0.0,0.0,0.0,1.055172,1.055172,226,168,0,0,0.448276],
[10,0,508,275,37,410,236.358627,-153.0,0.003893,1.055172,1.055172,22,8,0,0,0.448276],
[5,0,254,613,252,411,-102.750237,-152.249756,0.001146,1.007502,1.003751,136,27,0,0,0.551724],
[6,0,233,267,231,344,118.403854,-145.573013,0.007098,1.005730,1.002865,114,15,0,0,0.551724],
[11,0,0,613,252,411,-108.419220,-160.649750,0.001146,1.063089,1.059131,136,27,0,0,0.448276],
[12,0,0,267,231,344,124.936485,-153.604630,0.007098,1.061219,1.058196,114,15,0,0,0.448276],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.551724],
[9,0,0,235,497,30,4.220690,-168.827591,0.0,1.055172,1.055172,248,15,0,0,0.448276]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.586207],
[4,0,508,275,37,410,224.0,-145.0,0.005102,1.0,1.0,22,8,0,0,0.586207],
[8,0,508,687,452,337,0.0,0.0,0.0,1.058621,1.058621,226,168,0,0,0.413793],
[10,0,508,275,37,410,237.131027,-153.500000,0.005102,1.058621,1.058621,22,8,0,0,0.413793],
[5,0,254,613,252,411,-102.691811,-152.308197,0.003547,1.006918,1.003459,136,27,0,0,0.586207],
[6,0,233,267,231,344,118.450264,-145.526352,0.009177,1.005264,1.002632,114,15,0,0,0.586207],
[11,0,0,613,252,411,-108.711678,-161.236603,0.003547,1.065944,1.062283,136,27,0,0,0.413793],
[12,0,0,267,231,344,125.393898,-154.057205,0.009177,1.064193,1.061407,114,15,0,0,0.413793],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.586207],
[9,0,0,235,497,30,4.234483,-169.379303,0.0,1.058621,1.058621,248,15,0,0,0.413793]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.620690],
[4,0,508,275,37,410,224.0,-145.0,0.006310,1.0,1.0,22,8,0,0,0.620690],
[8,0,508,687,452,337,0.0,0.0,0.0,1.062069,1.062069,226,168,0,0,0.379310],
[10,0,508,275,37,410,237.903442,-154.0,0.006310,1.062069,1.062069,22,8,0,0,0.379310],
[5,0,254,613,252,411,-102.630478,-152.369522,0.005914,1.006305,1.003152,136,27,0,0,0.620690],
[6,0,233,267,231,344,118.502930,-145.485352,0.010681,1.004853,1.002427,114,15,0,0,0.620690],
[11,0,0,613,252,411,-109.000641,-161.826935,0.005914,1.068765,1.065417,136,27,0,0,0.379310],
[12,0,0,267,231,344,125.858284,-154.515472,0.010681,1.067224,1.064646,114,15,0,0,0.379310],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.620690],
[9,0,0,235,497,30,4.248276,-169.931030,0.0,1.062069,1.062069,248,15,0,0,0.379310]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.655172],
[4,0,508,275,37,410,224.0,-145.0,0.007518,1.0,1.0,22,8,0,0,0.655172],
[8,0,508,687,452,337,0.0,0.0,0.0,1.065517,1.065517,226,168,0,0,0.344828],
[10,0,508,275,37,410,238.675873,-154.500015,0.007518,1.065517,1.065517,22,8,0,0,0.344828],
[5,0,254,613,252,411,-102.567200,-152.432800,0.008269,1.005672,1.002836,136,27,0,0,0.655172],
[6,0,233,267,231,344,118.549728,-145.438614,0.009964,1.004386,1.002193,114,15,0,0,0.655172],
[11,0,0,613,252,411,-109.287125,-162.419785,0.008269,1.071561,1.068539,136,27,0,0,0.344828],
[12,0,0,267,231,344,126.316788,-154.967361,0.009964,1.070191,1.067854,114,15,0,0,0.344828],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.655172],
[9,0,0,235,497,30,4.262069,-170.482773,0.0,1.065517,1.065517,248,15,0,0,0.344828]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.689655],
[4,0,508,275,37,410,224.0,-145.0,0.008727,1.0,1.0,22,8,0,0,0.689655],
[8,0,508,687,452,337,0.0,0.0,0.0,1.068966,1.068966,226,168,0,0,0.310345],
[10,0,508,275,37,410,239.448288,-155.0,0.008727,1.068966,1.068966,22,8,0,0,0.310345],
[5,0,254,613,252,411,-102.508789,-152.491211,0.010470,1.005088,1.002544,136,27,0,0,0.689655],
[6,0,233,267,231,344,118.596146,-145.392349,0.008989,1.003924,1.001962,114,15,0,0,0.689655],
[11,0,0,613,252,411,-109.578362,-163.007843,0.010470,1.074404,1.071685,136,27,0,0,0.310345],
[12,0,0,267,231,344,126.775192,-155.419418,0.008989,1.073160,1.071063,114,15,0,0,0.310345],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.689655],
[9,0,0,235,497,30,4.275862,-171.034485,0.0,1.068966,1.068966,248,15,0,0,0.310345]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.724138],
[4,0,508,275,37,410,224.0,-145.0,0.007757,1.0,1.0,22,8,0,0,0.724138],
[8,0,508,687,452,337,0.0,0.0,0.0,1.072414,1.072414,226,168,0,0,0.275862],
[10,0,508,275,37,410,240.220688,-155.500000,0.007757,1.072414,1.072414,22,8,0,0,0.275862],
[5,0,254,613,252,411,-102.444435,-152.555557,0.012553,1.004444,1.002222,136,27,0,0,0.724138],
[6,0,233,267,231,344,118.641800,-145.341339,0.008014,1.003413,1.001707,114,15,0,0,0.724138],
[11,0,0,613,252,411,-109.862823,-163.602692,0.012553,1.077180,1.074797,136,27,0,0,0.275862],
[12,0,0,267,231,344,127.233109,-155.866074,0.008014,1.076074,1.074244,114,15,0,0,0.275862],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.724138],
[9,0,0,235,497,30,4.289655,-171.586212,0.0,1.072414,1.072414,248,15,0,0,0.275862]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.758621],
[4,0,508,275,37,410,224.0,-145.0,0.006787,1.0,1.0,22,8,0,0,0.758621],
[8,0,508,687,452,337,0.0,0.0,0.0,1.075862,1.075862,226,168,0,0,0.241379],
[10,0,508,275,37,410,240.993103,-156.0,0.006787,1.075862,1.075862,22,8,0,0,0.241379],
[5,0,254,613,252,411,-102.386627,-152.613373,0.014085,1.003866,1.001933,136,27,0,0,0.758621],
[6,0,233,267,231,344,118.691811,-145.297333,0.006916,1.002973,1.001487,114,15,0,0,0.758621],
[11,0,0,613,252,411,-110.153885,-164.190933,0.014085,1.080022,1.077942,136,27,0,0,0.241379],
[12,0,0,267,231,344,127.696014,-156.319870,0.006916,1.079061,1.077461,114,15,0,0,0.241379],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.758621],
[9,0,0,235,497,30,4.303448,-172.137924,0.0,1.075862,1.075862,248,15,0,0,0.241379]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.793103],
[4,0,508,275,37,410,224.0,-145.0,0.005818,1.0,1.0,22,8,0,0,0.793103],
[8,0,508,687,452,337,0.0,0.0,0.0,1.079310,1.079310,226,168,0,0,0.206897],
[10,0,508,275,37,410,241.765533,-156.500015,0.005818,1.079310,1.079310,22,8,0,0,0.206897],
[5,0,254,613,252,411,-102.324669,-152.675323,0.012657,1.003247,1.001623,136,27,0,0,0.793103],
[6,0,233,267,231,344,118.734642,-145.254929,0.005872,1.002549,1.001275,114,15,0,0,0.793103],
[11,0,0,613,252,411,-110.440079,-164.784073,0.012657,1.082815,1.081063,136,27,0,0,0.206897],
[12,0,0,267,231,344,128.151535,-156.775162,0.005872,1.082062,1.080686,114,15,0,0,0.206897],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.793103],
[9,0,0,235,497,30,4.317242,-172.689667,0.0,1.079310,1.079310,248,15,0,0,0.206897]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.827586],
[4,0,508,275,37,410,224.0,-145.0,0.004848,1.0,1.0,22,8,0,0,0.827586],
[8,0,508,687,452,337,0.0,0.0,0.0,1.082759,1.082759,226,168,0,0,0.172414],
[10,0,508,275,37,410,242.537949,-157.000015,0.004848,1.082759,1.082759,22,8,0,0,0.172414],
[5,0,254,613,252,411,-102.265358,-152.734650,0.010494,1.002654,1.001327,136,27,0,0,0.827586],
[6,0,233,267,231,344,118.785477,-145.209625,0.004810,1.002096,1.001048,114,15,0,0,0.827586],
[11,0,0,613,252,411,-110.728706,-165.374771,0.010494,1.085632,1.084195,136,27,0,0,0.172414],
[12,0,0,267,231,344,128.616013,-157.226990,0.004810,1.085028,1.083894,114,15,0,0,0.172414],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.827586],
[9,0,0,235,497,30,4.331035,-173.241394,0.0,1.082759,1.082759,248,15,0,0,0.172414]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.862069],
[4,0,508,275,37,410,224.0,-145.0,0.003879,1.0,1.0,22,8,0,0,0.862069],
[8,0,508,687,452,337,0.0,0.0,0.0,1.086207,1.086207,226,168,0,0,0.137931],
[10,0,508,275,37,410,243.310349,-157.500000,0.003879,1.086207,1.086207,22,8,0,0,0.137931],
[5,0,254,613,252,411,-102.209633,-152.790375,0.008234,1.002096,1.001048,136,27,0,0,0.862069],
[6,0,233,267,231,344,118.832619,-145.162888,0.003766,1.001629,1.000814,114,15,0,0,0.862069],
[11,0,0,613,252,411,-111.020813,-165.961960,0.008234,1.088484,1.087345,136,27,0,0,0.137931],
[12,0,0,267,231,344,129.076813,-157.676941,0.003766,1.087976,1.087092,114,15,0,0,0.137931],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.862069],
[9,0,0,235,497,30,4.344828,-173.793106,0.0,1.086207,1.086207,248,15,0,0,0.137931]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.896552],
[4,0,508,275,37,410,224.0,-145.0,0.002909,1.0,1.0,22,8,0,0,0.896552],
[8,0,508,687,452,337,0.0,0.0,0.0,1.089655,1.089655,226,168,0,0,0.103448],
[10,0,508,275,37,410,244.082764,-157.999985,0.002909,1.089655,1.089655,22,8,0,0,0.103448],
[5,0,254,613,252,411,-102.149712,-152.850296,0.005851,1.001497,1.000749,136,27,0,0,0.896552],
[6,0,233,267,231,344,118.875374,-145.116669,0.002668,1.001167,1.000583,114,15,0,0,0.896552],
[11,0,0,613,252,411,-111.307961,-166.554092,0.005851,1.091287,1.090471,136,27,0,0,0.103448],
[12,0,0,267,231,344,129.533173,-158.127121,0.002668,1.090926,1.090291,114,15,0,0,0.103448],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.896552],
[9,0,0,235,497,30,4.358621,-174.344818,0.0,1.089655,1.089655,248,15,0,0,0.103448]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.931035],
[4,0,508,275,37,410,224.0,-145.0,0.001939,1.0,1.0,22,8,0,0,0.931035],
[8,0,508,687,452,337,0.0,0.0,0.0,1.093104,1.093104,226,168,0,0,0.068965],
[10,0,508,275,37,410,244.855194,-158.500000,0.001939,1.093104,1.093104,22,8,0,0,0.068965],
[5,0,254,613,252,411,-102.094078,-152.905930,0.003591,1.000941,1.000470,136,27,0,0,0.931035],
[6,0,233,267,231,344,118.923195,-145.073532,0.001646,1.000735,1.000368,114,15,0,0,0.931035],
[11,0,0,613,252,411,-111.599396,-167.141998,0.003591,1.094132,1.093618,136,27,0,0,0.068965],
[12,0,0,267,231,344,129.995361,-158.580383,0.001646,1.093907,1.093505,114,15,0,0,0.068965],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.931035],
[9,0,0,235,497,30,4.372414,-174.896561,0.0,1.093104,1.093104,248,15,0,0,0.068965]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168,0,0,0.965517],
[4,0,508,275,37,410,224.0,-145.0,0.000970,1.0,1.0,22,8,0,0,0.965517],
[8,0,508,687,452,337,0.0,0.0,0.0,1.096552,1.096552,226,168,0,0,0.034483],
[10,0,508,275,37,410,245.627594,-159.000015,0.000970,1.096552,1.096552,22,8,0,0,0.034483],
[5,0,254,613,252,411,-102.041695,-152.958298,0.001428,1.000417,1.000208,136,27,0,0,0.965517],
[6,0,233,267,231,344,118.965576,-145.034424,0.000717,1.000344,1.000172,114,15,0,0,0.965517],
[11,0,0,613,252,411,-111.893997,-167.726700,0.001428,1.097009,1.096780,136,27,0,0,0.034483],
[12,0,0,267,231,344,130.451904,-159.037750,0.000717,1.096929,1.096740,114,15,0,0,0.034483],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15,0,0,0.965517],
[9,0,0,235,497,30,4.386207,-175.448288,0.0,1.096552,1.096552,248,15,0,0,0.034483]
],
[
[2,0,508,687,452,337,0.0,0.0,0.0,1.0,1.0,226,168],
[4,0,508,275,37,410,224.0,-145.0,0.0,1.0,1.0,22,8],
[5,0,254,613,252,411,-102.0,-153.0,0.0,1.0,1.0,136,27],
[6,0,233,267,231,344,119.0,-145.0,0.0,1.0,1.0,114,15],
[3,0,0,235,497,30,4.0,-160.0,0.0,1.0,1.0,248,15]
]
]
}
}
]

},{}],30:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-04-01.png"],
"name": "obj01_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 380,
"CanvasHeight": 460,
"MarginWidth": 198,
"MarginHeight": 238,
"parts": ["root","Obj","01_2","01_1"],
"ssa": [
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310]
]
]
}
}
]

},{}],31:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-04-01.png"],
"name": "obj02_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 380,
"CanvasHeight": 460,
"MarginWidth": 198,
"MarginHeight": 238,
"parts": ["root","Obj","01_2","01_1"],
"ssa": [
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.333334,107.666664,0.017453,1.0,1.006667,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.666666,107.333336,0.034907,1.0,1.013333,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-9.0,107.0,0.052360,1.0,1.020000,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.799999,107.199997,0.034907,1.004000,1.012000,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.600000,107.400002,0.017453,1.008000,1.004000,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.400000,107.599998,-0.000000,1.012000,0.996000,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.200001,107.800003,-0.017453,1.016000,0.988000,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,-0.034907,1.020000,0.980000,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,-0.026180,1.017500,0.982500,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,-0.017453,1.015000,0.985000,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,-0.008727,1.012500,0.987500,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.0,1.010000,0.990000,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.008727,1.007500,0.992500,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.017453,1.005000,0.995000,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.026180,1.002500,0.997500,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.034907,1.0,1.0,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.032221,1.0,1.0,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.029536,1.0,1.0,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.026851,1.0,1.0,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.024166,1.0,1.0,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.021481,1.0,1.0,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.018796,1.0,1.0,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.016111,1.0,1.0,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.013426,1.0,1.0,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.010740,1.0,1.0,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.008055,1.0,1.0,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.005370,1.0,1.0,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.002685,1.0,1.0,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310]
]
]
}
}
]

},{}],32:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-04-01.png"],
"name": "obj03_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 380,
"CanvasHeight": 460,
"MarginWidth": 198,
"MarginHeight": 238,
"parts": ["root","Obj","01_2","01_1"],
"ssa": [
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310]
],
[
[1,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[2,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310]
]
]
}
}
]

},{}],33:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-04-01.png"],
"name": "obj04_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 380,
"CanvasHeight": 460,
"MarginWidth": 198,
"MarginHeight": 238,
"parts": ["root","Obj","omote","01_2","01_1","ura","01_3","01_4"],
"ssa": [
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.965517],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.965517],
[5,0,285,58,283,130,10.193104,214.055176,0.0,1.019310,1.019310,110,117,0,0,0.034483],
[6,0,285,190,283,322,-6.115862,114.162758,0.0,1.019310,1.019310,101,310,0,0,0.034483]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.931035],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.931035],
[5,0,285,58,283,130,10.186207,213.910355,0.0,1.018621,1.018621,110,117,0,0,0.068966],
[6,0,285,190,283,322,-6.111725,114.085526,0.0,1.018621,1.018621,101,310,0,0,0.068966]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.896552],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.896552],
[5,0,285,58,283,130,10.179310,213.765503,0.0,1.017931,1.017931,110,117,0,0,0.103448],
[6,0,285,190,283,322,-6.107586,114.008270,0.0,1.017931,1.017931,101,310,0,0,0.103448]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.862069],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.862069],
[5,0,285,58,283,130,10.172414,213.620682,0.0,1.017241,1.017241,110,117,0,0,0.137931],
[6,0,285,190,283,322,-6.103448,113.931030,0.0,1.017241,1.017241,101,310,0,0,0.137931]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.827586],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.827586],
[5,0,285,58,283,130,10.165518,213.475861,0.0,1.016552,1.016552,110,117,0,0,0.172414],
[6,0,285,190,283,322,-6.099310,113.853790,0.0,1.016552,1.016552,101,310,0,0,0.172414]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.793103],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.793103],
[5,0,285,58,283,130,10.158621,213.331039,0.0,1.015862,1.015862,110,117,0,0,0.206897],
[6,0,285,190,283,322,-6.095173,113.776550,0.0,1.015862,1.015862,101,310,0,0,0.206897]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.758621],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.758621],
[5,0,285,58,283,130,10.151724,213.186203,0.0,1.015172,1.015172,110,117,0,0,0.241379],
[6,0,285,190,283,322,-6.091034,113.699310,0.0,1.015172,1.015172,101,310,0,0,0.241379]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.724138],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.724138],
[5,0,285,58,283,130,10.144827,213.041382,0.0,1.014483,1.014483,110,117,0,0,0.275862],
[6,0,285,190,283,322,-6.086897,113.622070,0.0,1.014483,1.014483,101,310,0,0,0.275862]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.689655],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.689655],
[5,0,285,58,283,130,10.137931,212.896561,0.0,1.013793,1.013793,110,117,0,0,0.310345],
[6,0,285,190,283,322,-6.082759,113.544838,0.0,1.013793,1.013793,101,310,0,0,0.310345]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.655172],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.655172],
[5,0,285,58,283,130,10.131035,212.751740,0.0,1.013103,1.013103,110,117,0,0,0.344828],
[6,0,285,190,283,322,-6.078621,113.467598,0.0,1.013103,1.013103,101,310,0,0,0.344828]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.620690],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.620690],
[5,0,285,58,283,130,10.124138,212.606888,0.0,1.012414,1.012414,110,117,0,0,0.379310],
[6,0,285,190,283,322,-6.074482,113.390343,0.0,1.012414,1.012414,101,310,0,0,0.379310]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.586207],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.586207],
[5,0,285,58,283,130,10.117241,212.462067,0.0,1.011724,1.011724,110,117,0,0,0.413793],
[6,0,285,190,283,322,-6.070345,113.313103,0.0,1.011724,1.011724,101,310,0,0,0.413793]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.551724],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.551724],
[5,0,285,58,283,130,10.110345,212.317245,0.0,1.011034,1.011034,110,117,0,0,0.448276],
[6,0,285,190,283,322,-6.066207,113.235863,0.0,1.011034,1.011034,101,310,0,0,0.448276]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.517241],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.517241],
[5,0,285,58,283,130,10.103449,212.172424,0.0,1.010345,1.010345,110,117,0,0,0.482759],
[6,0,285,190,283,322,-6.062069,113.158630,0.0,1.010345,1.010345,101,310,0,0,0.482759]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.482759],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.482759],
[5,0,285,58,283,130,10.096551,212.027573,0.0,1.009655,1.009655,110,117,0,0,0.517241],
[6,0,285,190,283,322,-6.057931,113.081367,0.0,1.009655,1.009655,101,310,0,0,0.517241]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.448276],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.448276],
[5,0,285,58,283,130,10.089655,211.882751,0.0,1.008965,1.008965,110,117,0,0,0.551724],
[6,0,285,190,283,322,-6.053793,113.004135,0.0,1.008965,1.008965,101,310,0,0,0.551724]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.413793],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.413793],
[5,0,285,58,283,130,10.082759,211.737930,0.0,1.008276,1.008276,110,117,0,0,0.586207],
[6,0,285,190,283,322,-6.049655,112.926895,0.0,1.008276,1.008276,101,310,0,0,0.586207]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.379310],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.379310],
[5,0,285,58,283,130,10.075863,211.593109,0.0,1.007586,1.007586,110,117,0,0,0.620690],
[6,0,285,190,283,322,-6.045517,112.849655,0.0,1.007586,1.007586,101,310,0,0,0.620690]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.344828],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.344828],
[5,0,285,58,283,130,10.068965,211.448257,0.0,1.006896,1.006896,110,117,0,0,0.655172],
[6,0,285,190,283,322,-6.041379,112.772400,0.0,1.006896,1.006896,101,310,0,0,0.655172]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.310345],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.310345],
[5,0,285,58,283,130,10.062069,211.303436,0.0,1.006207,1.006207,110,117,0,0,0.689655],
[6,0,285,190,283,322,-6.037241,112.695160,0.0,1.006207,1.006207,101,310,0,0,0.689655]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.275862],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.275862],
[5,0,285,58,283,130,10.055172,211.158615,0.0,1.005517,1.005517,110,117,0,0,0.724138],
[6,0,285,190,283,322,-6.033104,112.617928,0.0,1.005517,1.005517,101,310,0,0,0.724138]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.241379],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.241379],
[5,0,285,58,283,130,10.048276,211.013794,0.0,1.004828,1.004828,110,117,0,0,0.758621],
[6,0,285,190,283,322,-6.028966,112.540688,0.0,1.004828,1.004828,101,310,0,0,0.758621]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.206897],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.206897],
[5,0,285,58,283,130,10.041379,210.868958,0.0,1.004138,1.004138,110,117,0,0,0.793103],
[6,0,285,190,283,322,-6.024827,112.463448,0.0,1.004138,1.004138,101,310,0,0,0.793103]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.172414],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.172414],
[5,0,285,58,283,130,10.034483,210.724136,0.0,1.003448,1.003448,110,117,0,0,0.827586],
[6,0,285,190,283,322,-6.020689,112.386208,0.0,1.003448,1.003448,101,310,0,0,0.827586]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.137931],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.137931],
[5,0,285,58,283,130,10.027586,210.579315,0.0,1.002759,1.002759,110,117,0,0,0.862069],
[6,0,285,190,283,322,-6.016552,112.308968,0.0,1.002759,1.002759,101,310,0,0,0.862069]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.103448],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.103448],
[5,0,285,58,283,130,10.020690,210.434494,0.0,1.002069,1.002069,110,117,0,0,0.896552],
[6,0,285,190,283,322,-6.012414,112.231735,0.0,1.002069,1.002069,101,310,0,0,0.896552]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.068965],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.068965],
[5,0,285,58,283,130,10.013792,210.289642,0.0,1.001379,1.001379,110,117,0,0,0.931035],
[6,0,285,190,283,322,-6.008276,112.154472,0.0,1.001379,1.001379,101,310,0,0,0.931035]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.034483],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.034483],
[5,0,285,58,283,130,10.006896,210.144821,0.0,1.000690,1.000690,110,117,0,0,0.965517],
[6,0,285,190,283,322,-6.004138,112.077240,0.0,1.000690,1.000690,101,310,0,0,0.965517]
],
[
[5,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[6,0,285,190,283,322,-6.0,112.0,0.0,1.0,1.0,101,310]
]
]
}
}
]

},{}],34:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-04-01.png"],
"name": "obj05_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 380,
"CanvasHeight": 460,
"MarginWidth": 198,
"MarginHeight": 238,
"parts": ["root","Obj","ura","01_3","01_4"],
"ssa": [
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.0,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.003491,1.0,1.002000,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.006981,1.0,1.004000,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.010472,1.0,1.006000,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.013963,1.0,1.008000,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.017453,1.0,1.010000,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.020944,1.0,1.012000,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.024435,1.0,1.014000,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.027925,1.0,1.016000,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.031416,1.0,1.018000,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.034907,1.0,1.020000,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.030879,1.001539,1.018461,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.026851,1.003077,1.016923,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.022824,1.004615,1.015385,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.018796,1.006154,1.013846,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.014768,1.007692,1.012308,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.010740,1.009231,1.010769,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.006713,1.010769,1.009231,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.002685,1.012308,1.007692,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,-0.001343,1.013846,1.006154,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,-0.005370,1.015385,1.004615,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,-0.009398,1.016923,1.003077,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,-0.013426,1.018461,1.001539,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,-0.017453,1.020000,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,-0.015400,1.018824,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,-0.013347,1.017647,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,-0.011293,1.016471,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,-0.009240,1.015294,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,-0.007187,1.014118,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,-0.005133,1.012941,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,-0.003080,1.011765,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,-0.001027,1.010588,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.001027,1.009412,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.003080,1.008235,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.005133,1.007059,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.007187,1.005882,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.009240,1.004706,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.011293,1.003529,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.013347,1.002353,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.015400,1.001176,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.017453,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.016535,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.015616,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.014698,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.013779,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.012860,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.011942,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.011023,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.010105,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.009186,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.008267,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.007349,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.006430,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.005512,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.004593,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.003674,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.002756,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.001837,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.000919,1.0,1.0,101,310]
],
[
[2,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,285,190,283,322,-6.0,112.0,0.0,1.0,1.0,101,310]
]
]
}
}
]

},{}],35:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-04-01.png"],
"name": "obj06_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 380,
"CanvasHeight": 460,
"MarginWidth": 198,
"MarginHeight": 238,
"parts": ["root","Obj","omote","01_2","01_1","ura","01_3","01_4"],
"ssa": [
[
[5,0,285,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[6,0,285,190,283,322,-6.0,112.0,0.0,1.0,1.0,101,310]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.034483],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.034483],
[5,0,285,58,283,130,10.006896,210.144821,0.0,1.000690,1.000690,110,117,0,0,0.965517],
[6,0,285,190,283,322,-6.004138,112.077240,0.0,1.000690,1.000690,101,310,0,0,0.965517]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.068966],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.068966],
[5,0,285,58,283,130,10.013792,210.289642,0.0,1.001379,1.001379,110,117,0,0,0.931035],
[6,0,285,190,283,322,-6.008276,112.154472,0.0,1.001379,1.001379,101,310,0,0,0.931035]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.103448],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.103448],
[5,0,285,58,283,130,10.020690,210.434494,0.0,1.002069,1.002069,110,117,0,0,0.896552],
[6,0,285,190,283,322,-6.012414,112.231735,0.0,1.002069,1.002069,101,310,0,0,0.896552]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.137931],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.137931],
[5,0,285,58,283,130,10.027586,210.579315,0.0,1.002759,1.002759,110,117,0,0,0.862069],
[6,0,285,190,283,322,-6.016552,112.308968,0.0,1.002759,1.002759,101,310,0,0,0.862069]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.172414],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.172414],
[5,0,285,58,283,130,10.034483,210.724136,0.0,1.003448,1.003448,110,117,0,0,0.827586],
[6,0,285,190,283,322,-6.020689,112.386208,0.0,1.003448,1.003448,101,310,0,0,0.827586]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.206897],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.206897],
[5,0,285,58,283,130,10.041379,210.868958,0.0,1.004138,1.004138,110,117,0,0,0.793103],
[6,0,285,190,283,322,-6.024827,112.463448,0.0,1.004138,1.004138,101,310,0,0,0.793103]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.241379],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.241379],
[5,0,285,58,283,130,10.048276,211.013794,0.0,1.004828,1.004828,110,117,0,0,0.758621],
[6,0,285,190,283,322,-6.028966,112.540688,0.0,1.004828,1.004828,101,310,0,0,0.758621]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.275862],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.275862],
[5,0,285,58,283,130,10.055172,211.158615,0.0,1.005517,1.005517,110,117,0,0,0.724138],
[6,0,285,190,283,322,-6.033104,112.617928,0.0,1.005517,1.005517,101,310,0,0,0.724138]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.310345],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.310345],
[5,0,285,58,283,130,10.062069,211.303436,0.0,1.006207,1.006207,110,117,0,0,0.689655],
[6,0,285,190,283,322,-6.037241,112.695160,0.0,1.006207,1.006207,101,310,0,0,0.689655]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.344828],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.344828],
[5,0,285,58,283,130,10.068965,211.448257,0.0,1.006896,1.006896,110,117,0,0,0.655172],
[6,0,285,190,283,322,-6.041379,112.772400,0.0,1.006896,1.006896,101,310,0,0,0.655172]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.379310],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.379310],
[5,0,285,58,283,130,10.075863,211.593109,0.0,1.007586,1.007586,110,117,0,0,0.620690],
[6,0,285,190,283,322,-6.045517,112.849655,0.0,1.007586,1.007586,101,310,0,0,0.620690]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.413793],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.413793],
[5,0,285,58,283,130,10.082759,211.737930,0.0,1.008276,1.008276,110,117,0,0,0.586207],
[6,0,285,190,283,322,-6.049655,112.926895,0.0,1.008276,1.008276,101,310,0,0,0.586207]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.448276],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.448276],
[5,0,285,58,283,130,10.089655,211.882751,0.0,1.008965,1.008965,110,117,0,0,0.551724],
[6,0,285,190,283,322,-6.053793,113.004135,0.0,1.008965,1.008965,101,310,0,0,0.551724]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.482759],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.482759],
[5,0,285,58,283,130,10.096551,212.027573,0.0,1.009655,1.009655,110,117,0,0,0.517241],
[6,0,285,190,283,322,-6.057931,113.081367,0.0,1.009655,1.009655,101,310,0,0,0.517241]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.517241],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.517241],
[5,0,285,58,283,130,10.103449,212.172424,0.0,1.010345,1.010345,110,117,0,0,0.482759],
[6,0,285,190,283,322,-6.062069,113.158630,0.0,1.010345,1.010345,101,310,0,0,0.482759]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.551724],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.551724],
[5,0,285,58,283,130,10.110345,212.317245,0.0,1.011034,1.011034,110,117,0,0,0.448276],
[6,0,285,190,283,322,-6.066207,113.235863,0.0,1.011034,1.011034,101,310,0,0,0.448276]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.586207],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.586207],
[5,0,285,58,283,130,10.117241,212.462067,0.0,1.011724,1.011724,110,117,0,0,0.413793],
[6,0,285,190,283,322,-6.070345,113.313103,0.0,1.011724,1.011724,101,310,0,0,0.413793]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.620690],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.620690],
[5,0,285,58,283,130,10.124138,212.606888,0.0,1.012414,1.012414,110,117,0,0,0.379310],
[6,0,285,190,283,322,-6.074482,113.390343,0.0,1.012414,1.012414,101,310,0,0,0.379310]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.655172],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.655172],
[5,0,285,58,283,130,10.131035,212.751740,0.0,1.013103,1.013103,110,117,0,0,0.344828],
[6,0,285,190,283,322,-6.078621,113.467598,0.0,1.013103,1.013103,101,310,0,0,0.344828]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.689655],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.689655],
[5,0,285,58,283,130,10.137931,212.896561,0.0,1.013793,1.013793,110,117,0,0,0.310345],
[6,0,285,190,283,322,-6.082759,113.544838,0.0,1.013793,1.013793,101,310,0,0,0.310345]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.724138],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.724138],
[5,0,285,58,283,130,10.144827,213.041382,0.0,1.014483,1.014483,110,117,0,0,0.275862],
[6,0,285,190,283,322,-6.086897,113.622070,0.0,1.014483,1.014483,101,310,0,0,0.275862]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.758621],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.758621],
[5,0,285,58,283,130,10.151724,213.186203,0.0,1.015172,1.015172,110,117,0,0,0.241379],
[6,0,285,190,283,322,-6.091034,113.699310,0.0,1.015172,1.015172,101,310,0,0,0.241379]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.793103],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.793103],
[5,0,285,58,283,130,10.158621,213.331039,0.0,1.015862,1.015862,110,117,0,0,0.206897],
[6,0,285,190,283,322,-6.095173,113.776550,0.0,1.015862,1.015862,101,310,0,0,0.206897]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.827586],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.827586],
[5,0,285,58,283,130,10.165518,213.475861,0.0,1.016552,1.016552,110,117,0,0,0.172414],
[6,0,285,190,283,322,-6.099310,113.853790,0.0,1.016552,1.016552,101,310,0,0,0.172414]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.862069],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.862069],
[5,0,285,58,283,130,10.172414,213.620682,0.0,1.017241,1.017241,110,117,0,0,0.137931],
[6,0,285,190,283,322,-6.103448,113.931030,0.0,1.017241,1.017241,101,310,0,0,0.137931]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.896552],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.896552],
[5,0,285,58,283,130,10.179310,213.765503,0.0,1.017931,1.017931,110,117,0,0,0.103448],
[6,0,285,190,283,322,-6.107586,114.008270,0.0,1.017931,1.017931,101,310,0,0,0.103448]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.931035],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.931035],
[5,0,285,58,283,130,10.186207,213.910355,0.0,1.018621,1.018621,110,117,0,0,0.068965],
[6,0,285,190,283,322,-6.111725,114.085526,0.0,1.018621,1.018621,101,310,0,0,0.068965]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117,0,0,0.965517],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310,0,0,0.965517],
[5,0,285,58,283,130,10.193104,214.055176,0.0,1.019310,1.019310,110,117,0,0,0.034483],
[6,0,285,190,283,322,-6.115862,114.162758,0.0,1.019310,1.019310,101,310,0,0,0.034483]
],
[
[2,0,0,58,283,130,10.0,210.0,0.0,1.0,1.0,110,117],
[3,0,0,190,283,322,-8.0,108.0,0.0,1.0,1.0,92,310]
]
]
}
}
]

},{}],36:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-05-01.png"],
"name": "obj01_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 380,
"CanvasHeight": 200,
"MarginWidth": 198,
"MarginHeight": 108,
"parts": ["root","Obj","01"],
"ssa": [
[
[1,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86]
],
[
[1,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86]
]
]
}
}
]

},{}],37:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-05-01.png"],
"name": "obj02_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 380,
"CanvasHeight": 200,
"MarginWidth": 198,
"MarginHeight": 108,
"parts": ["root","Obj","01"],
"ssa": [
[
[1,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86]
],
[
[1,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86]
]
]
}
}
]

},{}],38:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-05-01.png"],
"name": "obj03_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 380,
"CanvasHeight": 200,
"MarginWidth": 198,
"MarginHeight": 108,
"parts": ["root","Obj","01"],
"ssa": [
[
[1,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86]
],
[
[1,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86]
]
]
}
}
]

},{}],39:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-05-01.png"],
"name": "obj04_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 380,
"CanvasHeight": 200,
"MarginWidth": 198,
"MarginHeight": 108,
"parts": ["root","Obj","omote","01","ura","02"],
"ssa": [
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.965517],
[4,0,0,340,357,172,0.0,0.0,0.0,1.019310,1.019310,178,86,0,0,0.034483]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.931035],
[4,0,0,340,357,172,0.0,0.0,0.0,1.018621,1.018621,178,86,0,0,0.068966]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.896552],
[4,0,0,340,357,172,0.0,0.0,0.0,1.017931,1.017931,178,86,0,0,0.103448]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.862069],
[4,0,0,340,357,172,0.0,0.0,0.0,1.017241,1.017241,178,86,0,0,0.137931]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.827586],
[4,0,0,340,357,172,0.0,0.0,0.0,1.016552,1.016552,178,86,0,0,0.172414]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.793103],
[4,0,0,340,357,172,0.0,0.0,0.0,1.015862,1.015862,178,86,0,0,0.206897]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.758621],
[4,0,0,340,357,172,0.0,0.0,0.0,1.015172,1.015172,178,86,0,0,0.241379]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.724138],
[4,0,0,340,357,172,0.0,0.0,0.0,1.014483,1.014483,178,86,0,0,0.275862]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.689655],
[4,0,0,340,357,172,0.0,0.0,0.0,1.013793,1.013793,178,86,0,0,0.310345]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.655172],
[4,0,0,340,357,172,0.0,0.0,0.0,1.013103,1.013103,178,86,0,0,0.344828]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.620690],
[4,0,0,340,357,172,0.0,0.0,0.0,1.012414,1.012414,178,86,0,0,0.379310]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.586207],
[4,0,0,340,357,172,0.0,0.0,0.0,1.011724,1.011724,178,86,0,0,0.413793]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.551724],
[4,0,0,340,357,172,0.0,0.0,0.0,1.011034,1.011034,178,86,0,0,0.448276]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.517241],
[4,0,0,340,357,172,0.0,0.0,0.0,1.010345,1.010345,178,86,0,0,0.482759]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.482759],
[4,0,0,340,357,172,0.0,0.0,0.0,1.009655,1.009655,178,86,0,0,0.517241]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.448276],
[4,0,0,340,357,172,0.0,0.0,0.0,1.008965,1.008965,178,86,0,0,0.551724]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.413793],
[4,0,0,340,357,172,0.0,0.0,0.0,1.008276,1.008276,178,86,0,0,0.586207]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.379310],
[4,0,0,340,357,172,0.0,0.0,0.0,1.007586,1.007586,178,86,0,0,0.620690]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.344828],
[4,0,0,340,357,172,0.0,0.0,0.0,1.006896,1.006896,178,86,0,0,0.655172]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.310345],
[4,0,0,340,357,172,0.0,0.0,0.0,1.006207,1.006207,178,86,0,0,0.689655]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.275862],
[4,0,0,340,357,172,0.0,0.0,0.0,1.005517,1.005517,178,86,0,0,0.724138]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.241379],
[4,0,0,340,357,172,0.0,0.0,0.0,1.004828,1.004828,178,86,0,0,0.758621]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.206897],
[4,0,0,340,357,172,0.0,0.0,0.0,1.004138,1.004138,178,86,0,0,0.793103]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.172414],
[4,0,0,340,357,172,0.0,0.0,0.0,1.003448,1.003448,178,86,0,0,0.827586]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.137931],
[4,0,0,340,357,172,0.0,0.0,0.0,1.002759,1.002759,178,86,0,0,0.862069]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.103448],
[4,0,0,340,357,172,0.0,0.0,0.0,1.002069,1.002069,178,86,0,0,0.896552]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.068965],
[4,0,0,340,357,172,0.0,0.0,0.0,1.001379,1.001379,178,86,0,0,0.931035]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.034483],
[4,0,0,340,357,172,0.0,0.0,0.0,1.000690,1.000690,178,86,0,0,0.965517]
],
[
[4,0,0,340,357,172,0.0,0.0,0.0,1.0,1.0,178,86]
]
]
}
}
]

},{}],40:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-05-01.png"],
"name": "obj05_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 380,
"CanvasHeight": 200,
"MarginWidth": 198,
"MarginHeight": 108,
"parts": ["root","Obj","01"],
"ssa": [
[
[1,0,0,340,357,172,0.0,0.0,0.0,1.0,1.0,178,86]
],
[
[1,0,0,340,357,172,0.0,0.0,0.0,1.0,1.0,178,86]
]
]
}
}
]

},{}],41:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-05-01.png"],
"name": "obj06_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 380,
"CanvasHeight": 200,
"MarginWidth": 198,
"MarginHeight": 108,
"parts": ["root","Obj","omote","01","ura","02"],
"ssa": [
[
[4,0,0,340,357,172,0.0,0.0,0.0,1.0,1.0,178,86]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.034483],
[4,0,0,340,357,172,0.0,0.0,0.0,1.000690,1.000690,178,86,0,0,0.965517]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.068966],
[4,0,0,340,357,172,0.0,0.0,0.0,1.001379,1.001379,178,86,0,0,0.931035]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.103448],
[4,0,0,340,357,172,0.0,0.0,0.0,1.002069,1.002069,178,86,0,0,0.896552]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.137931],
[4,0,0,340,357,172,0.0,0.0,0.0,1.002759,1.002759,178,86,0,0,0.862069]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.172414],
[4,0,0,340,357,172,0.0,0.0,0.0,1.003448,1.003448,178,86,0,0,0.827586]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.206897],
[4,0,0,340,357,172,0.0,0.0,0.0,1.004138,1.004138,178,86,0,0,0.793103]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.241379],
[4,0,0,340,357,172,0.0,0.0,0.0,1.004828,1.004828,178,86,0,0,0.758621]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.275862],
[4,0,0,340,357,172,0.0,0.0,0.0,1.005517,1.005517,178,86,0,0,0.724138]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.310345],
[4,0,0,340,357,172,0.0,0.0,0.0,1.006207,1.006207,178,86,0,0,0.689655]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.344828],
[4,0,0,340,357,172,0.0,0.0,0.0,1.006896,1.006896,178,86,0,0,0.655172]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.379310],
[4,0,0,340,357,172,0.0,0.0,0.0,1.007586,1.007586,178,86,0,0,0.620690]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.413793],
[4,0,0,340,357,172,0.0,0.0,0.0,1.008276,1.008276,178,86,0,0,0.586207]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.448276],
[4,0,0,340,357,172,0.0,0.0,0.0,1.008965,1.008965,178,86,0,0,0.551724]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.482759],
[4,0,0,340,357,172,0.0,0.0,0.0,1.009655,1.009655,178,86,0,0,0.517241]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.517241],
[4,0,0,340,357,172,0.0,0.0,0.0,1.010345,1.010345,178,86,0,0,0.482759]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.551724],
[4,0,0,340,357,172,0.0,0.0,0.0,1.011034,1.011034,178,86,0,0,0.448276]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.586207],
[4,0,0,340,357,172,0.0,0.0,0.0,1.011724,1.011724,178,86,0,0,0.413793]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.620690],
[4,0,0,340,357,172,0.0,0.0,0.0,1.012414,1.012414,178,86,0,0,0.379310]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.655172],
[4,0,0,340,357,172,0.0,0.0,0.0,1.013103,1.013103,178,86,0,0,0.344828]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.689655],
[4,0,0,340,357,172,0.0,0.0,0.0,1.013793,1.013793,178,86,0,0,0.310345]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.724138],
[4,0,0,340,357,172,0.0,0.0,0.0,1.014483,1.014483,178,86,0,0,0.275862]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.758621],
[4,0,0,340,357,172,0.0,0.0,0.0,1.015172,1.015172,178,86,0,0,0.241379]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.793103],
[4,0,0,340,357,172,0.0,0.0,0.0,1.015862,1.015862,178,86,0,0,0.206897]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.827586],
[4,0,0,340,357,172,0.0,0.0,0.0,1.016552,1.016552,178,86,0,0,0.172414]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.862069],
[4,0,0,340,357,172,0.0,0.0,0.0,1.017241,1.017241,178,86,0,0,0.137931]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.896552],
[4,0,0,340,357,172,0.0,0.0,0.0,1.017931,1.017931,178,86,0,0,0.103448]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.931035],
[4,0,0,340,357,172,0.0,0.0,0.0,1.018621,1.018621,178,86,0,0,0.068965]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86,0,0,0.965517],
[4,0,0,340,357,172,0.0,0.0,0.0,1.019310,1.019310,178,86,0,0,0.034483]
],
[
[2,0,0,166,357,172,0.0,0.0,0.0,1.0,1.0,178,86]
]
]
}
}
]

},{}],42:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-06-01.png"],
"name": "obj01_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 440,
"CanvasHeight": 600,
"MarginWidth": 228,
"MarginHeight": 308,
"parts": ["root","Obj","01"],
"ssa": [
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261]
]
]
}
}
]

},{}],43:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-06-01.png"],
"name": "obj02_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 440,
"CanvasHeight": 600,
"MarginWidth": 228,
"MarginHeight": 308,
"parts": ["root","Obj","01","02"],
"ssa": [
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.965517],
[2,0,368,502,366,522,0.0,0.0,0.0,1.019310,1.019310,183,261,0,0,0.034483]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.931035],
[2,0,368,502,366,522,0.0,0.0,0.0,1.018621,1.018621,183,261,0,0,0.068966]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.896552],
[2,0,368,502,366,522,0.0,0.0,0.0,1.017931,1.017931,183,261,0,0,0.103448]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.862069],
[2,0,368,502,366,522,0.0,0.0,0.0,1.017241,1.017241,183,261,0,0,0.137931]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.827586],
[2,0,368,502,366,522,0.0,0.0,0.0,1.016552,1.016552,183,261,0,0,0.172414]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.793103],
[2,0,368,502,366,522,0.0,0.0,0.0,1.015862,1.015862,183,261,0,0,0.206897]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.758621],
[2,0,368,502,366,522,0.0,0.0,0.0,1.015172,1.015172,183,261,0,0,0.241379]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.724138],
[2,0,368,502,366,522,0.0,0.0,0.0,1.014483,1.014483,183,261,0,0,0.275862]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.689655],
[2,0,368,502,366,522,0.0,0.0,0.0,1.013793,1.013793,183,261,0,0,0.310345]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.655172],
[2,0,368,502,366,522,0.0,0.0,0.0,1.013103,1.013103,183,261,0,0,0.344828]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.620690],
[2,0,368,502,366,522,0.0,0.0,0.0,1.012414,1.012414,183,261,0,0,0.379310]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.586207],
[2,0,368,502,366,522,0.0,0.0,0.0,1.011724,1.011724,183,261,0,0,0.413793]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.551724],
[2,0,368,502,366,522,0.0,0.0,0.0,1.011034,1.011034,183,261,0,0,0.448276]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.517241],
[2,0,368,502,366,522,0.0,0.0,0.0,1.010345,1.010345,183,261,0,0,0.482759]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.482759],
[2,0,368,502,366,522,0.0,0.0,0.0,1.009655,1.009655,183,261,0,0,0.517241]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.448276],
[2,0,368,502,366,522,0.0,0.0,0.0,1.008965,1.008965,183,261,0,0,0.551724]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.413793],
[2,0,368,502,366,522,0.0,0.0,0.0,1.008276,1.008276,183,261,0,0,0.586207]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.379310],
[2,0,368,502,366,522,0.0,0.0,0.0,1.007586,1.007586,183,261,0,0,0.620690]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.344828],
[2,0,368,502,366,522,0.0,0.0,0.0,1.006896,1.006896,183,261,0,0,0.655172]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.310345],
[2,0,368,502,366,522,0.0,0.0,0.0,1.006207,1.006207,183,261,0,0,0.689655]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.275862],
[2,0,368,502,366,522,0.0,0.0,0.0,1.005517,1.005517,183,261,0,0,0.724138]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.241379],
[2,0,368,502,366,522,0.0,0.0,0.0,1.004828,1.004828,183,261,0,0,0.758621]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.206897],
[2,0,368,502,366,522,0.0,0.0,0.0,1.004138,1.004138,183,261,0,0,0.793103]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.172414],
[2,0,368,502,366,522,0.0,0.0,0.0,1.003448,1.003448,183,261,0,0,0.827586]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.137931],
[2,0,368,502,366,522,0.0,0.0,0.0,1.002759,1.002759,183,261,0,0,0.862069]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.103448],
[2,0,368,502,366,522,0.0,0.0,0.0,1.002069,1.002069,183,261,0,0,0.896552]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.068965],
[2,0,368,502,366,522,0.0,0.0,0.0,1.001379,1.001379,183,261,0,0,0.931035]
],
[
[1,0,0,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261,0,0,0.034483],
[2,0,368,502,366,522,0.0,0.0,0.0,1.000690,1.000690,183,261,0,0,0.965517]
],
[
[2,0,368,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261]
]
]
}
}
]

},{}],44:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-06-01.png"],
"name": "obj03_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 440,
"CanvasHeight": 600,
"MarginWidth": 228,
"MarginHeight": 308,
"parts": ["root","Obj","02"],
"ssa": [
[
[1,0,368,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261]
],
[
[1,0,368,502,366,522,0.0,0.0,0.0,1.0,1.0,183,261]
]
]
}
}
]

},{}],45:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-07-01.png"],
"name": "obj01_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 140,
"MarginWidth": 108,
"MarginHeight": 78,
"parts": ["root","Obj","omote"],
"ssa": [
[
[1,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84]
],
[
[1,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84]
]
]
}
}
]

},{}],46:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-07-01.png"],
"name": "obj02_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 140,
"MarginWidth": 108,
"MarginHeight": 78,
"parts": ["root","Obj","omote"],
"ssa": [
[
[1,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84]
],
[
[1,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84]
]
]
}
}
]

},{}],47:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-07-01.png"],
"name": "obj03_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 140,
"MarginWidth": 108,
"MarginHeight": 78,
"parts": ["root","Obj","omote"],
"ssa": [
[
[1,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84]
],
[
[1,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84]
]
]
}
}
]

},{}],48:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-07-01.png"],
"name": "obj04_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 140,
"MarginWidth": 108,
"MarginHeight": 78,
"parts": ["root","Obj","omote","omote_1","ura","ura_1","left","right"],
"ssa": [
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.965517],
[4,0,0,72,152,91,-20.386208,40.772415,0.0,1.019310,1.019310,50,84,0,0,0.034483],
[5,0,155,217,28,39,-37.714485,13.251036,0.0,1.019310,1.019310,14,19,0,0,0.034483],
[6,0,187,216,32,40,-8.154484,23.444139,0.0,1.019310,1.019310,16,20,0,0,0.034483]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.931035],
[4,0,0,72,152,91,-20.372414,40.744827,0.0,1.018621,1.018621,50,84,0,0,0.068966],
[5,0,155,217,28,39,-37.688965,13.242067,0.0,1.018621,1.018621,14,19,0,0,0.068966],
[6,0,187,216,32,40,-8.148965,23.428274,0.0,1.018621,1.018621,16,20,0,0,0.068966]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.896552],
[4,0,0,72,152,91,-20.358620,40.717239,0.0,1.017931,1.017931,50,84,0,0,0.103448],
[5,0,155,217,28,39,-37.663445,13.233103,0.0,1.017931,1.017931,14,19,0,0,0.103448],
[6,0,187,216,32,40,-8.143448,23.412413,0.0,1.017931,1.017931,16,20,0,0,0.103448]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.862069],
[4,0,0,72,152,91,-20.344828,40.689655,0.0,1.017241,1.017241,50,84,0,0,0.137931],
[5,0,155,217,28,39,-37.637932,13.224138,0.0,1.017241,1.017241,14,19,0,0,0.137931],
[6,0,187,216,32,40,-8.137932,23.396553,0.0,1.017241,1.017241,16,20,0,0,0.137931]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.827586],
[4,0,0,72,152,91,-20.331036,40.662071,0.0,1.016552,1.016552,50,84,0,0,0.172414],
[5,0,155,217,28,39,-37.612415,13.215174,0.0,1.016552,1.016552,14,19,0,0,0.172414],
[6,0,187,216,32,40,-8.132415,23.380692,0.0,1.016552,1.016552,16,20,0,0,0.172414]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.793103],
[4,0,0,72,152,91,-20.317242,40.634483,0.0,1.015862,1.015862,50,84,0,0,0.206897],
[5,0,155,217,28,39,-37.586899,13.206207,0.0,1.015862,1.015862,14,19,0,0,0.206897],
[6,0,187,216,32,40,-8.126896,23.364828,0.0,1.015862,1.015862,16,20,0,0,0.206897]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.758621],
[4,0,0,72,152,91,-20.303448,40.606895,0.0,1.015172,1.015172,50,84,0,0,0.241379],
[5,0,155,217,28,39,-37.561378,13.197241,0.0,1.015172,1.015172,14,19,0,0,0.241379],
[6,0,187,216,32,40,-8.121380,23.348965,0.0,1.015172,1.015172,16,20,0,0,0.241379]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.724138],
[4,0,0,72,152,91,-20.289654,40.579308,0.0,1.014483,1.014483,50,84,0,0,0.275862],
[5,0,155,217,28,39,-37.535858,13.188274,0.0,1.014483,1.014483,14,19,0,0,0.275862],
[6,0,187,216,32,40,-8.115861,23.333101,0.0,1.014483,1.014483,16,20,0,0,0.275862]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.689655],
[4,0,0,72,152,91,-20.275862,40.551723,0.0,1.013793,1.013793,50,84,0,0,0.310345],
[5,0,155,217,28,39,-37.510345,13.179310,0.0,1.013793,1.013793,14,19,0,0,0.310345],
[6,0,187,216,32,40,-8.110344,23.317240,0.0,1.013793,1.013793,16,20,0,0,0.310345]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.655172],
[4,0,0,72,152,91,-20.262070,40.524139,0.0,1.013103,1.013103,50,84,0,0,0.344828],
[5,0,155,217,28,39,-37.484829,13.170345,0.0,1.013103,1.013103,14,19,0,0,0.344828],
[6,0,187,216,32,40,-8.104828,23.301380,0.0,1.013103,1.013103,16,20,0,0,0.344828]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.620690],
[4,0,0,72,152,91,-20.248276,40.496552,0.0,1.012414,1.012414,50,84,0,0,0.379310],
[5,0,155,217,28,39,-37.459309,13.161381,0.0,1.012414,1.012414,14,19,0,0,0.379310],
[6,0,187,216,32,40,-8.099311,23.285519,0.0,1.012414,1.012414,16,20,0,0,0.379310]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.586207],
[4,0,0,72,152,91,-20.234482,40.468964,0.0,1.011724,1.011724,50,84,0,0,0.413793],
[5,0,155,217,28,39,-37.433792,13.152412,0.0,1.011724,1.011724,14,19,0,0,0.413793],
[6,0,187,216,32,40,-8.093792,23.269653,0.0,1.011724,1.011724,16,20,0,0,0.413793]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.551724],
[4,0,0,72,152,91,-20.220690,40.441380,0.0,1.011034,1.011034,50,84,0,0,0.448276],
[5,0,155,217,28,39,-37.408276,13.143448,0.0,1.011034,1.011034,14,19,0,0,0.448276],
[6,0,187,216,32,40,-8.088276,23.253794,0.0,1.011034,1.011034,16,20,0,0,0.448276]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.517241],
[4,0,0,72,152,91,-20.206898,40.413795,0.0,1.010345,1.010345,50,84,0,0,0.482759],
[5,0,155,217,28,39,-37.382759,13.134483,0.0,1.010345,1.010345,14,19,0,0,0.482759],
[6,0,187,216,32,40,-8.082760,23.237932,0.0,1.010345,1.010345,16,20,0,0,0.482759]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.482759],
[4,0,0,72,152,91,-20.193102,40.386204,0.0,1.009655,1.009655,50,84,0,0,0.517241],
[5,0,155,217,28,39,-37.357239,13.125515,0.0,1.009655,1.009655,14,19,0,0,0.517241],
[6,0,187,216,32,40,-8.077240,23.222067,0.0,1.009655,1.009655,16,20,0,0,0.517241]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.448276],
[4,0,0,72,152,91,-20.179310,40.358620,0.0,1.008965,1.008965,50,84,0,0,0.551724],
[5,0,155,217,28,39,-37.331722,13.116550,0.0,1.008965,1.008965,14,19,0,0,0.551724],
[6,0,187,216,32,40,-8.071724,23.206207,0.0,1.008965,1.008965,16,20,0,0,0.551724]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.413793],
[4,0,0,72,152,91,-20.165518,40.331036,0.0,1.008276,1.008276,50,84,0,0,0.586207],
[5,0,155,217,28,39,-37.306206,13.107588,0.0,1.008276,1.008276,14,19,0,0,0.586207],
[6,0,187,216,32,40,-8.066208,23.190346,0.0,1.008276,1.008276,16,20,0,0,0.586207]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.379310],
[4,0,0,72,152,91,-20.151726,40.303452,0.0,1.007586,1.007586,50,84,0,0,0.620690],
[5,0,155,217,28,39,-37.280693,13.098623,0.0,1.007586,1.007586,14,19,0,0,0.620690],
[6,0,187,216,32,40,-8.060691,23.174486,0.0,1.007586,1.007586,16,20,0,0,0.620690]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.344828],
[4,0,0,72,152,91,-20.137930,40.275860,0.0,1.006896,1.006896,50,84,0,0,0.655172],
[5,0,155,217,28,39,-37.255173,13.089655,0.0,1.006896,1.006896,14,19,0,0,0.655172],
[6,0,187,216,32,40,-8.055172,23.158619,0.0,1.006896,1.006896,16,20,0,0,0.655172]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.310345],
[4,0,0,72,152,91,-20.124138,40.248276,0.0,1.006207,1.006207,50,84,0,0,0.689655],
[5,0,155,217,28,39,-37.229652,13.080690,0.0,1.006207,1.006207,14,19,0,0,0.689655],
[6,0,187,216,32,40,-8.049656,23.142759,0.0,1.006207,1.006207,16,20,0,0,0.689655]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.275862],
[4,0,0,72,152,91,-20.110344,40.220688,0.0,1.005517,1.005517,50,84,0,0,0.724138],
[5,0,155,217,28,39,-37.204140,13.071722,0.0,1.005517,1.005517,14,19,0,0,0.724138],
[6,0,187,216,32,40,-8.044137,23.126894,0.0,1.005517,1.005517,16,20,0,0,0.724138]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.241379],
[4,0,0,72,152,91,-20.096552,40.193104,0.0,1.004828,1.004828,50,84,0,0,0.758621],
[5,0,155,217,28,39,-37.178619,13.062757,0.0,1.004828,1.004828,14,19,0,0,0.758621],
[6,0,187,216,32,40,-8.038620,23.111034,0.0,1.004828,1.004828,16,20,0,0,0.758621]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.206897],
[4,0,0,72,152,91,-20.082758,40.165516,0.0,1.004138,1.004138,50,84,0,0,0.793103],
[5,0,155,217,28,39,-37.153099,13.053793,0.0,1.004138,1.004138,14,19,0,0,0.793103],
[6,0,187,216,32,40,-8.033104,23.095173,0.0,1.004138,1.004138,16,20,0,0,0.793103]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.172414],
[4,0,0,72,152,91,-20.068966,40.137932,0.0,1.003448,1.003448,50,84,0,0,0.827586],
[5,0,155,217,28,39,-37.127586,13.044828,0.0,1.003448,1.003448,14,19,0,0,0.827586],
[6,0,187,216,32,40,-8.027587,23.079311,0.0,1.003448,1.003448,16,20,0,0,0.827586]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.137931],
[4,0,0,72,152,91,-20.055172,40.110344,0.0,1.002759,1.002759,50,84,0,0,0.862069],
[5,0,155,217,28,39,-37.102066,13.035862,0.0,1.002759,1.002759,14,19,0,0,0.862069],
[6,0,187,216,32,40,-8.022068,23.063448,0.0,1.002759,1.002759,16,20,0,0,0.862069]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.103448],
[4,0,0,72,152,91,-20.041380,40.082760,0.0,1.002069,1.002069,50,84,0,0,0.896552],
[5,0,155,217,28,39,-37.076553,13.026897,0.0,1.002069,1.002069,14,19,0,0,0.896552],
[6,0,187,216,32,40,-8.016552,23.047586,0.0,1.002069,1.002069,16,20,0,0,0.896552]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.068965],
[4,0,0,72,152,91,-20.027584,40.055168,0.0,1.001379,1.001379,50,84,0,0,0.931035],
[5,0,155,217,28,39,-37.051033,13.017929,0.0,1.001379,1.001379,14,19,0,0,0.931035],
[6,0,187,216,32,40,-8.011033,23.031721,0.0,1.001379,1.001379,16,20,0,0,0.931035]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84,0,0,0.034483],
[4,0,0,72,152,91,-20.013792,40.027584,0.0,1.000690,1.000690,50,84,0,0,0.965517],
[5,0,155,217,28,39,-37.025517,13.008965,0.0,1.000690,1.000690,14,19,0,0,0.965517],
[6,0,187,216,32,40,-8.005516,23.015860,0.0,1.000690,1.000690,16,20,0,0,0.965517]
],
[
[4,0,0,72,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[5,0,155,217,28,39,-37.0,13.0,0.0,1.0,1.0,14,19],
[6,0,187,216,32,40,-8.0,23.0,0.0,1.0,1.0,16,20]
]
]
}
}
]

},{}],49:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-07-01.png"],
"name": "obj05_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 140,
"MarginWidth": 108,
"MarginHeight": 78,
"parts": ["root","Obj","ura_1","left","right"],
"ssa": [
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[2,0,155,217,28,39,-37.0,13.0,0.0,1.0,1.0,14,19],
[3,0,187,216,32,40,-8.0,23.0,0.0,1.0,1.0,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.999333,50,84],
[2,0,155,217,28,39,-37.0,13.051311,0.0,1.0,0.997668,14,19],
[3,0,187,216,32,40,-7.966666,23.011333,0.0,1.0,0.997668,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.998667,50,84],
[2,0,155,217,28,39,-37.0,13.102579,0.0,1.0,0.995338,14,19],
[3,0,187,216,32,40,-7.933333,23.022667,0.0,1.0,0.995338,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.998000,50,84],
[2,0,155,217,28,39,-37.0,13.153799,0.0,1.0,0.993010,14,19],
[3,0,187,216,32,40,-7.900000,23.034000,0.0,1.0,0.993010,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.997333,50,84],
[2,0,155,217,28,39,-37.0,13.204977,0.0,1.0,0.990684,14,19],
[3,0,187,216,32,40,-7.866667,23.045334,0.0,1.0,0.990684,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.996667,50,84],
[2,0,155,217,28,39,-37.0,13.256111,0.0,1.0,0.988361,14,19],
[3,0,187,216,32,40,-7.833333,23.056667,0.0,1.0,0.988361,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.996000,50,84],
[2,0,155,217,28,39,-37.0,13.307201,0.0,1.0,0.986040,14,19],
[3,0,187,216,32,40,-7.800000,23.068001,0.0,1.0,0.986040,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.995333,50,84],
[2,0,155,217,28,39,-37.0,13.358246,0.0,1.0,0.983721,14,19],
[3,0,187,216,32,40,-7.766666,23.079334,0.0,1.0,0.983721,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.994667,50,84],
[2,0,155,217,28,39,-37.0,13.409243,0.0,1.0,0.981404,14,19],
[3,0,187,216,32,40,-7.733334,23.090666,0.0,1.0,0.981404,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.994000,50,84],
[2,0,155,217,28,39,-37.0,13.460199,0.0,1.0,0.979090,14,19],
[3,0,187,216,32,40,-7.700000,23.101999,0.0,1.0,0.979090,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.993333,50,84],
[2,0,155,217,28,39,-37.0,13.511112,0.0,1.0,0.976778,14,19],
[3,0,187,216,32,40,-7.666667,23.113333,0.0,1.0,0.976778,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.992667,50,84],
[2,0,155,217,28,39,-37.0,13.561977,0.0,1.0,0.974468,14,19],
[3,0,187,216,32,40,-7.633333,23.124666,0.0,1.0,0.974468,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.992000,50,84],
[2,0,155,217,28,39,-37.0,13.612801,0.0,1.0,0.972160,14,19],
[3,0,187,216,32,40,-7.600000,23.136000,0.0,1.0,0.972160,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.991333,50,84],
[2,0,155,217,28,39,-37.0,13.663576,0.0,1.0,0.969854,14,19],
[3,0,187,216,32,40,-7.566667,23.147333,0.0,1.0,0.969854,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.990667,50,84],
[2,0,155,217,28,39,-37.0,13.714312,0.0,1.0,0.967551,14,19],
[3,0,187,216,32,40,-7.533334,23.158667,0.0,1.0,0.967551,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.990000,50,84],
[2,0,155,217,28,39,-37.0,13.764999,0.0,1.0,0.965250,14,19],
[3,0,187,216,32,40,-7.500000,23.170000,0.0,1.0,0.965250,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.989333,50,84],
[2,0,155,217,28,39,-37.0,13.815643,0.0,1.0,0.962951,14,19],
[3,0,187,216,32,40,-7.466666,23.181334,0.0,1.0,0.962951,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.988667,50,84],
[2,0,155,217,28,39,-37.0,13.866245,0.0,1.0,0.960654,14,19],
[3,0,187,216,32,40,-7.433333,23.192667,0.0,1.0,0.960654,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.988000,50,84],
[2,0,155,217,28,39,-37.0,13.916800,0.0,1.0,0.958360,14,19],
[3,0,187,216,32,40,-7.400000,23.203999,0.0,1.0,0.958360,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.987333,50,84],
[2,0,155,217,28,39,-37.0,13.967310,0.0,1.0,0.956068,14,19],
[3,0,187,216,32,40,-7.366667,23.215332,0.0,1.0,0.956068,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.986667,50,84],
[2,0,155,217,28,39,-37.0,14.017776,0.0,1.0,0.953778,14,19],
[3,0,187,216,32,40,-7.333333,23.226665,0.0,1.0,0.953778,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.986000,50,84],
[2,0,155,217,28,39,-37.0,14.068201,0.0,1.0,0.951490,14,19],
[3,0,187,216,32,40,-7.300000,23.238001,0.0,1.0,0.951490,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.985333,50,84],
[2,0,155,217,28,39,-37.0,14.118578,0.0,1.0,0.949204,14,19],
[3,0,187,216,32,40,-7.266666,23.249334,0.0,1.0,0.949204,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.984667,50,84],
[2,0,155,217,28,39,-37.0,14.168909,0.0,1.0,0.946921,14,19],
[3,0,187,216,32,40,-7.233334,23.260666,0.0,1.0,0.946921,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.984000,50,84],
[2,0,155,217,28,39,-37.0,14.219198,0.0,1.0,0.944640,14,19],
[3,0,187,216,32,40,-7.200000,23.271999,0.0,1.0,0.944640,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.983333,50,84],
[2,0,155,217,28,39,-37.0,14.269445,0.0,1.0,0.942361,14,19],
[3,0,187,216,32,40,-7.166667,23.283333,0.0,1.0,0.942361,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.982667,50,84],
[2,0,155,217,28,39,-37.0,14.319645,0.0,1.0,0.940084,14,19],
[3,0,187,216,32,40,-7.133333,23.294666,0.0,1.0,0.940084,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.982000,50,84],
[2,0,155,217,28,39,-37.0,14.369801,0.0,1.0,0.937810,14,19],
[3,0,187,216,32,40,-7.100000,23.306000,0.0,1.0,0.937810,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.981333,50,84],
[2,0,155,217,28,39,-37.0,14.419909,0.0,1.0,0.935538,14,19],
[3,0,187,216,32,40,-7.066667,23.317333,0.0,1.0,0.935538,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.980667,50,84],
[2,0,155,217,28,39,-37.0,14.469978,0.0,1.0,0.933268,14,19],
[3,0,187,216,32,40,-7.033334,23.328667,0.0,1.0,0.933268,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.980000,50,84],
[2,0,155,217,28,39,-37.0,14.520000,0.0,1.0,0.931000,14,19],
[3,0,187,216,32,40,-7.0,23.340000,0.0,1.0,0.931000,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.980690,50,84],
[2,0,155,217,28,39,-37.0,14.468252,0.0,1.0,0.933346,14,19],
[3,0,187,216,32,40,-7.034483,23.328276,0.0,1.0,0.933346,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.981379,50,84],
[2,0,155,217,28,39,-37.0,14.416456,0.0,1.0,0.935694,14,19],
[3,0,187,216,32,40,-7.068966,23.316551,0.0,1.0,0.935694,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.982069,50,84],
[2,0,155,217,28,39,-37.0,14.364613,0.0,1.0,0.938045,14,19],
[3,0,187,216,32,40,-7.103448,23.304829,0.0,1.0,0.938045,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.982759,50,84],
[2,0,155,217,28,39,-37.0,14.312721,0.0,1.0,0.940398,14,19],
[3,0,187,216,32,40,-7.137931,23.293102,0.0,1.0,0.940398,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.983448,50,84],
[2,0,155,217,28,39,-37.0,14.260786,0.0,1.0,0.942754,14,19],
[3,0,187,216,32,40,-7.172414,23.281380,0.0,1.0,0.942754,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.984138,50,84],
[2,0,155,217,28,39,-37.0,14.208799,0.0,1.0,0.945112,14,19],
[3,0,187,216,32,40,-7.206897,23.269655,0.0,1.0,0.945112,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.984828,50,84],
[2,0,155,217,28,39,-37.0,14.156767,0.0,1.0,0.947472,14,19],
[3,0,187,216,32,40,-7.241380,23.257931,0.0,1.0,0.947472,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.985517,50,84],
[2,0,155,217,28,39,-37.0,14.104685,0.0,1.0,0.949835,14,19],
[3,0,187,216,32,40,-7.275862,23.246206,0.0,1.0,0.949835,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.986207,50,84],
[2,0,155,217,28,39,-37.0,14.052557,0.0,1.0,0.952200,14,19],
[3,0,187,216,32,40,-7.310345,23.234484,0.0,1.0,0.952200,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.986897,50,84],
[2,0,155,217,28,39,-37.0,14.000380,0.0,1.0,0.954567,14,19],
[3,0,187,216,32,40,-7.344828,23.222757,0.0,1.0,0.954567,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.987586,50,84],
[2,0,155,217,28,39,-37.0,13.948156,0.0,1.0,0.956937,14,19],
[3,0,187,216,32,40,-7.379311,23.211035,0.0,1.0,0.956937,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.988276,50,84],
[2,0,155,217,28,39,-37.0,13.895885,0.0,1.0,0.959309,14,19],
[3,0,187,216,32,40,-7.413794,23.199310,0.0,1.0,0.959309,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.988966,50,84],
[2,0,155,217,28,39,-37.0,13.843567,0.0,1.0,0.961684,14,19],
[3,0,187,216,32,40,-7.448276,23.187586,0.0,1.0,0.961684,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.989655,50,84],
[2,0,155,217,28,39,-37.0,13.791199,0.0,1.0,0.964061,14,19],
[3,0,187,216,32,40,-7.482759,23.175861,0.0,1.0,0.964061,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.990345,50,84],
[2,0,155,217,28,39,-37.0,13.738789,0.0,1.0,0.966440,14,19],
[3,0,187,216,32,40,-7.517241,23.164139,0.0,1.0,0.966440,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.991035,50,84],
[2,0,155,217,28,39,-37.0,13.686325,0.0,1.0,0.968822,14,19],
[3,0,187,216,32,40,-7.551724,23.152412,0.0,1.0,0.968822,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.991724,50,84],
[2,0,155,217,28,39,-37.0,13.633818,0.0,1.0,0.971206,14,19],
[3,0,187,216,32,40,-7.586206,23.140690,0.0,1.0,0.971206,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.992414,50,84],
[2,0,155,217,28,39,-37.0,13.581261,0.0,1.0,0.973592,14,19],
[3,0,187,216,32,40,-7.620689,23.128965,0.0,1.0,0.973592,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.993103,50,84],
[2,0,155,217,28,39,-37.0,13.528656,0.0,1.0,0.975981,14,19],
[3,0,187,216,32,40,-7.655172,23.117241,0.0,1.0,0.975981,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.993793,50,84],
[2,0,155,217,28,39,-37.0,13.476004,0.0,1.0,0.978372,14,19],
[3,0,187,216,32,40,-7.689655,23.105516,0.0,1.0,0.978372,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.994483,50,84],
[2,0,155,217,28,39,-37.0,13.423306,0.0,1.0,0.980766,14,19],
[3,0,187,216,32,40,-7.724138,23.093794,0.0,1.0,0.980766,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.995172,50,84],
[2,0,155,217,28,39,-37.0,13.370558,0.0,1.0,0.983162,14,19],
[3,0,187,216,32,40,-7.758620,23.082069,0.0,1.0,0.983162,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.995862,50,84],
[2,0,155,217,28,39,-37.0,13.317764,0.0,1.0,0.985560,14,19],
[3,0,187,216,32,40,-7.793103,23.070345,0.0,1.0,0.985560,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.996552,50,84],
[2,0,155,217,28,39,-37.0,13.264921,0.0,1.0,0.987961,14,19],
[3,0,187,216,32,40,-7.827586,23.058620,0.0,1.0,0.987961,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.997241,50,84],
[2,0,155,217,28,39,-37.0,13.212034,0.0,1.0,0.990364,14,19],
[3,0,187,216,32,40,-7.862069,23.046896,0.0,1.0,0.990364,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.997931,50,84],
[2,0,155,217,28,39,-37.0,13.159096,0.0,1.0,0.992769,14,19],
[3,0,187,216,32,40,-7.896552,23.035172,0.0,1.0,0.992769,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.998621,50,84],
[2,0,155,217,28,39,-37.0,13.106112,0.0,1.0,0.995177,14,19],
[3,0,187,216,32,40,-7.931034,23.023449,0.0,1.0,0.995177,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,0.999310,50,84],
[2,0,155,217,28,39,-37.0,13.053080,0.0,1.0,0.997587,14,19],
[3,0,187,216,32,40,-7.965517,23.011724,0.0,1.0,0.997587,16,20]
],
[
[1,0,0,72,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[2,0,155,217,28,39,-37.0,13.0,0.0,1.0,1.0,14,19],
[3,0,187,216,32,40,-8.0,23.0,0.0,1.0,1.0,16,20]
]
]
}
}
]

},{}],50:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-07-01.png"],
"name": "obj06_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 140,
"MarginWidth": 108,
"MarginHeight": 78,
"parts": ["root","Obj","omote","omote_1","ura","ura_1","left","right"],
"ssa": [
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[5,0,155,217,28,39,-37.0,13.0,0.0,1.0,1.0,14,19],
[6,0,187,216,32,40,-8.0,23.0,0.0,1.0,1.0,16,20]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.013792,40.027584,0.0,1.000690,1.000690,50,84,0,0,0.965517],
[5,0,155,217,28,39,-37.025517,13.008965,0.0,1.000690,1.000690,14,19,0,0,0.965517],
[6,0,187,216,32,40,-8.005516,23.015860,0.0,1.000690,1.000690,16,20,0,0,0.965517]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.027584,40.055168,0.0,1.001379,1.001379,50,84,0,0,0.931035],
[5,0,155,217,28,39,-37.051033,13.017929,0.0,1.001379,1.001379,14,19,0,0,0.931035],
[6,0,187,216,32,40,-8.011033,23.031721,0.0,1.001379,1.001379,16,20,0,0,0.931035]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.041380,40.082760,0.0,1.002069,1.002069,50,84,0,0,0.896552],
[5,0,155,217,28,39,-37.076553,13.026897,0.0,1.002069,1.002069,14,19,0,0,0.896552],
[6,0,187,216,32,40,-8.016552,23.047586,0.0,1.002069,1.002069,16,20,0,0,0.896552]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.055172,40.110344,0.0,1.002759,1.002759,50,84,0,0,0.862069],
[5,0,155,217,28,39,-37.102066,13.035862,0.0,1.002759,1.002759,14,19,0,0,0.862069],
[6,0,187,216,32,40,-8.022068,23.063448,0.0,1.002759,1.002759,16,20,0,0,0.862069]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.068966,40.137932,0.0,1.003448,1.003448,50,84,0,0,0.827586],
[5,0,155,217,28,39,-37.127586,13.044828,0.0,1.003448,1.003448,14,19,0,0,0.827586],
[6,0,187,216,32,40,-8.027587,23.079311,0.0,1.003448,1.003448,16,20,0,0,0.827586]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.082758,40.165516,0.0,1.004138,1.004138,50,84,0,0,0.793103],
[5,0,155,217,28,39,-37.153099,13.053793,0.0,1.004138,1.004138,14,19,0,0,0.793103],
[6,0,187,216,32,40,-8.033104,23.095173,0.0,1.004138,1.004138,16,20,0,0,0.793103]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.096552,40.193104,0.0,1.004828,1.004828,50,84,0,0,0.758621],
[5,0,155,217,28,39,-37.178619,13.062757,0.0,1.004828,1.004828,14,19,0,0,0.758621],
[6,0,187,216,32,40,-8.038620,23.111034,0.0,1.004828,1.004828,16,20,0,0,0.758621]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.110344,40.220688,0.0,1.005517,1.005517,50,84,0,0,0.724138],
[5,0,155,217,28,39,-37.204140,13.071722,0.0,1.005517,1.005517,14,19,0,0,0.724138],
[6,0,187,216,32,40,-8.044137,23.126894,0.0,1.005517,1.005517,16,20,0,0,0.724138]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.124138,40.248276,0.0,1.006207,1.006207,50,84,0,0,0.689655],
[5,0,155,217,28,39,-37.229652,13.080690,0.0,1.006207,1.006207,14,19,0,0,0.689655],
[6,0,187,216,32,40,-8.049656,23.142759,0.0,1.006207,1.006207,16,20,0,0,0.689655]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.137930,40.275860,0.0,1.006896,1.006896,50,84,0,0,0.655172],
[5,0,155,217,28,39,-37.255173,13.089655,0.0,1.006896,1.006896,14,19,0,0,0.655172],
[6,0,187,216,32,40,-8.055172,23.158619,0.0,1.006896,1.006896,16,20,0,0,0.655172]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.151726,40.303452,0.0,1.007586,1.007586,50,84,0,0,0.620690],
[5,0,155,217,28,39,-37.280693,13.098623,0.0,1.007586,1.007586,14,19,0,0,0.620690],
[6,0,187,216,32,40,-8.060691,23.174486,0.0,1.007586,1.007586,16,20,0,0,0.620690]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.165518,40.331036,0.0,1.008276,1.008276,50,84,0,0,0.586207],
[5,0,155,217,28,39,-37.306206,13.107588,0.0,1.008276,1.008276,14,19,0,0,0.586207],
[6,0,187,216,32,40,-8.066208,23.190346,0.0,1.008276,1.008276,16,20,0,0,0.586207]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.179310,40.358620,0.0,1.008965,1.008965,50,84,0,0,0.551724],
[5,0,155,217,28,39,-37.331722,13.116550,0.0,1.008965,1.008965,14,19,0,0,0.551724],
[6,0,187,216,32,40,-8.071724,23.206207,0.0,1.008965,1.008965,16,20,0,0,0.551724]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.193102,40.386204,0.0,1.009655,1.009655,50,84,0,0,0.517241],
[5,0,155,217,28,39,-37.357239,13.125515,0.0,1.009655,1.009655,14,19,0,0,0.517241],
[6,0,187,216,32,40,-8.077240,23.222067,0.0,1.009655,1.009655,16,20,0,0,0.517241]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.206898,40.413795,0.0,1.010345,1.010345,50,84,0,0,0.482759],
[5,0,155,217,28,39,-37.382759,13.134483,0.0,1.010345,1.010345,14,19,0,0,0.482759],
[6,0,187,216,32,40,-8.082760,23.237932,0.0,1.010345,1.010345,16,20,0,0,0.482759]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.220690,40.441380,0.0,1.011034,1.011034,50,84,0,0,0.448276],
[5,0,155,217,28,39,-37.408276,13.143448,0.0,1.011034,1.011034,14,19,0,0,0.448276],
[6,0,187,216,32,40,-8.088276,23.253794,0.0,1.011034,1.011034,16,20,0,0,0.448276]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.234482,40.468964,0.0,1.011724,1.011724,50,84,0,0,0.413793],
[5,0,155,217,28,39,-37.433792,13.152412,0.0,1.011724,1.011724,14,19,0,0,0.413793],
[6,0,187,216,32,40,-8.093792,23.269653,0.0,1.011724,1.011724,16,20,0,0,0.413793]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.248276,40.496552,0.0,1.012414,1.012414,50,84,0,0,0.379310],
[5,0,155,217,28,39,-37.459309,13.161381,0.0,1.012414,1.012414,14,19,0,0,0.379310],
[6,0,187,216,32,40,-8.099311,23.285519,0.0,1.012414,1.012414,16,20,0,0,0.379310]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.262070,40.524139,0.0,1.013103,1.013103,50,84,0,0,0.344828],
[5,0,155,217,28,39,-37.484829,13.170345,0.0,1.013103,1.013103,14,19,0,0,0.344828],
[6,0,187,216,32,40,-8.104828,23.301380,0.0,1.013103,1.013103,16,20,0,0,0.344828]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.275862,40.551723,0.0,1.013793,1.013793,50,84,0,0,0.310345],
[5,0,155,217,28,39,-37.510345,13.179310,0.0,1.013793,1.013793,14,19,0,0,0.310345],
[6,0,187,216,32,40,-8.110344,23.317240,0.0,1.013793,1.013793,16,20,0,0,0.310345]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.289654,40.579308,0.0,1.014483,1.014483,50,84,0,0,0.275862],
[5,0,155,217,28,39,-37.535858,13.188274,0.0,1.014483,1.014483,14,19,0,0,0.275862],
[6,0,187,216,32,40,-8.115861,23.333101,0.0,1.014483,1.014483,16,20,0,0,0.275862]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.303448,40.606895,0.0,1.015172,1.015172,50,84,0,0,0.241379],
[5,0,155,217,28,39,-37.561378,13.197241,0.0,1.015172,1.015172,14,19,0,0,0.241379],
[6,0,187,216,32,40,-8.121380,23.348965,0.0,1.015172,1.015172,16,20,0,0,0.241379]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.317242,40.634483,0.0,1.015862,1.015862,50,84,0,0,0.206897],
[5,0,155,217,28,39,-37.586899,13.206207,0.0,1.015862,1.015862,14,19,0,0,0.206897],
[6,0,187,216,32,40,-8.126896,23.364828,0.0,1.015862,1.015862,16,20,0,0,0.206897]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.331036,40.662071,0.0,1.016552,1.016552,50,84,0,0,0.172414],
[5,0,155,217,28,39,-37.612415,13.215174,0.0,1.016552,1.016552,14,19,0,0,0.172414],
[6,0,187,216,32,40,-8.132415,23.380692,0.0,1.016552,1.016552,16,20,0,0,0.172414]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.344828,40.689655,0.0,1.017241,1.017241,50,84,0,0,0.137931],
[5,0,155,217,28,39,-37.637932,13.224138,0.0,1.017241,1.017241,14,19,0,0,0.137931],
[6,0,187,216,32,40,-8.137932,23.396553,0.0,1.017241,1.017241,16,20,0,0,0.137931]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.358620,40.717239,0.0,1.017931,1.017931,50,84,0,0,0.103448],
[5,0,155,217,28,39,-37.663445,13.233103,0.0,1.017931,1.017931,14,19,0,0,0.103448],
[6,0,187,216,32,40,-8.143448,23.412413,0.0,1.017931,1.017931,16,20,0,0,0.103448]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.372414,40.744827,0.0,1.018621,1.018621,50,84,0,0,0.068965],
[5,0,155,217,28,39,-37.688965,13.242067,0.0,1.018621,1.018621,14,19,0,0,0.068965],
[6,0,187,216,32,40,-8.148965,23.428274,0.0,1.018621,1.018621,16,20,0,0,0.068965]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84],
[4,0,0,72,152,91,-20.386208,40.772415,0.0,1.019310,1.019310,50,84,0,0,0.034483],
[5,0,155,217,28,39,-37.714485,13.251036,0.0,1.019310,1.019310,14,19,0,0,0.034483],
[6,0,187,216,32,40,-8.154484,23.444139,0.0,1.019310,1.019310,16,20,0,0,0.034483]
],
[
[2,0,0,165,152,91,-20.0,40.0,0.0,1.0,1.0,50,84]
]
]
}
}
]

},{}],51:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-08-01.png"],
"name": "obj01_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 400,
"CanvasHeight": 500,
"MarginWidth": 208,
"MarginHeight": 258,
"parts": ["root","Obj","omote"],
"ssa": [
[
[1,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483]
],
[
[1,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483]
]
]
}
}
]

},{}],52:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-08-01.png"],
"name": "obj02_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 400,
"CanvasHeight": 500,
"MarginWidth": 208,
"MarginHeight": 258,
"parts": ["root","Obj","omote"],
"ssa": [
[
[1,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483]
],
[
[1,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483]
]
]
}
}
]

},{}],53:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-08-01.png"],
"name": "obj03_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 400,
"CanvasHeight": 500,
"MarginWidth": 208,
"MarginHeight": 258,
"parts": ["root","Obj","omote"],
"ssa": [
[
[1,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483]
],
[
[1,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483]
]
]
}
}
]

},{}],54:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-08-01.png"],
"name": "obj04_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 400,
"CanvasHeight": 500,
"MarginWidth": 208,
"MarginHeight": 258,
"parts": ["root","Obj","omote","omote_1","ura","ura_1","02","01","03","back"],
"ssa": [
[
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483]
],
[
[8,0,511,499,82,13,-27.521379,-110.085518,0.0,1.019310,1.019310,41,6,0,0,0.034483],
[6,0,520,220,58,80,-14.270346,-157.993103,0.0,1.019310,1.019310,46,74,0,0,0.034483],
[5,0,520,302,82,93,-21.405518,-103.969658,0.0,1.019310,1.019310,13,76,0,0,0.034483],
[7,0,516,406,65,81,-31.598621,-101.931038,0.0,1.019310,1.019310,58,73,0,0,0.034483],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.965517],
[4,0,255,29,254,483,12.231724,252.788971,0.0,1.019310,1.019310,127,483,0,0,0.034483]
],
[
[8,0,511,499,82,13,-27.502760,-110.011040,0.0,1.018621,1.018621,41,6,0,0,0.068966],
[6,0,520,220,58,80,-14.260690,-157.886215,0.0,1.018621,1.018621,46,74,0,0,0.068966],
[5,0,520,302,82,93,-21.391035,-103.899315,0.0,1.018621,1.018621,13,76,0,0,0.068966],
[7,0,516,406,65,81,-31.577242,-101.862076,0.0,1.018621,1.018621,58,73,0,0,0.068966],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.931035],
[4,0,255,29,254,483,12.223449,252.617935,0.0,1.018621,1.018621,127,483,0,0,0.068966]
],
[
[8,0,511,499,82,13,-27.484137,-109.936546,0.0,1.017931,1.017931,41,6,0,0,0.103448],
[6,0,520,220,58,80,-14.251034,-157.779297,0.0,1.017931,1.017931,46,74,0,0,0.103448],
[5,0,520,302,82,93,-21.376551,-103.828964,0.0,1.017931,1.017931,13,76,0,0,0.103448],
[7,0,516,406,65,81,-31.555861,-101.793098,0.0,1.017931,1.017931,58,73,0,0,0.103448],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.896552],
[4,0,255,29,254,483,12.215172,252.446884,0.0,1.017931,1.017931,127,483,0,0,0.103448]
],
[
[8,0,511,499,82,13,-27.465517,-109.862068,0.0,1.017241,1.017241,41,6,0,0,0.137931],
[6,0,520,220,58,80,-14.241379,-157.672409,0.0,1.017241,1.017241,46,74,0,0,0.137931],
[5,0,520,302,82,93,-21.362068,-103.758621,0.0,1.017241,1.017241,13,76,0,0,0.137931],
[7,0,516,406,65,81,-31.534483,-101.724136,0.0,1.017241,1.017241,58,73,0,0,0.137931],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.862069],
[4,0,255,29,254,483,12.206896,252.275864,0.0,1.017241,1.017241,127,483,0,0,0.137931]
],
[
[8,0,511,499,82,13,-27.446898,-109.787590,0.0,1.016552,1.016552,41,6,0,0,0.172414],
[6,0,520,220,58,80,-14.231724,-157.565521,0.0,1.016552,1.016552,46,74,0,0,0.172414],
[5,0,520,302,82,93,-21.347586,-103.688278,0.0,1.016552,1.016552,13,76,0,0,0.172414],
[7,0,516,406,65,81,-31.513103,-101.655174,0.0,1.016552,1.016552,58,73,0,0,0.172414],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.827586],
[4,0,255,29,254,483,12.198621,252.104828,0.0,1.016552,1.016552,127,483,0,0,0.172414]
],
[
[8,0,511,499,82,13,-27.428276,-109.713104,0.0,1.015862,1.015862,41,6,0,0,0.206897],
[6,0,520,220,58,80,-14.222071,-157.458618,0.0,1.015862,1.015862,46,74,0,0,0.206897],
[5,0,520,302,82,93,-21.333105,-103.617935,0.0,1.015862,1.015862,13,76,0,0,0.206897],
[7,0,516,406,65,81,-31.491726,-101.586212,0.0,1.015862,1.015862,58,73,0,0,0.206897],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.793103],
[4,0,255,29,254,483,12.190346,251.933807,0.0,1.015862,1.015862,127,483,0,0,0.206897]
],
[
[8,0,511,499,82,13,-27.409655,-109.638618,0.0,1.015172,1.015172,41,6,0,0,0.241379],
[6,0,520,220,58,80,-14.212412,-157.351715,0.0,1.015172,1.015172,46,74,0,0,0.241379],
[5,0,520,302,82,93,-21.318619,-103.547585,0.0,1.015172,1.015172,13,76,0,0,0.241379],
[7,0,516,406,65,81,-31.470343,-101.517235,0.0,1.015172,1.015172,58,73,0,0,0.241379],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.758621],
[4,0,255,29,254,483,12.182068,251.762741,0.0,1.015172,1.015172,127,483,0,0,0.241379]
],
[
[8,0,511,499,82,13,-27.391033,-109.564133,0.0,1.014483,1.014483,41,6,0,0,0.275862],
[6,0,520,220,58,80,-14.202759,-157.244827,0.0,1.014483,1.014483,46,74,0,0,0.275862],
[5,0,520,302,82,93,-21.304138,-103.477242,0.0,1.014483,1.014483,13,76,0,0,0.275862],
[7,0,516,406,65,81,-31.448965,-101.448273,0.0,1.014483,1.014483,58,73,0,0,0.275862],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.724138],
[4,0,255,29,254,483,12.173793,251.591721,0.0,1.014483,1.014483,127,483,0,0,0.275862]
],
[
[8,0,511,499,82,13,-27.372414,-109.489655,0.0,1.013793,1.013793,41,6,0,0,0.310345],
[6,0,520,220,58,80,-14.193104,-157.137939,0.0,1.013793,1.013793,46,74,0,0,0.310345],
[5,0,520,302,82,93,-21.289656,-103.406898,0.0,1.013793,1.013793,13,76,0,0,0.310345],
[7,0,516,406,65,81,-31.427586,-101.379311,0.0,1.013793,1.013793,58,73,0,0,0.310345],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.689655],
[4,0,255,29,254,483,12.165518,251.420685,0.0,1.013793,1.013793,127,483,0,0,0.310345]
],
[
[8,0,511,499,82,13,-27.353794,-109.415176,0.0,1.013103,1.013103,41,6,0,0,0.344828],
[6,0,520,220,58,80,-14.183449,-157.031036,0.0,1.013103,1.013103,46,74,0,0,0.344828],
[5,0,520,302,82,93,-21.275173,-103.336555,0.0,1.013103,1.013103,13,76,0,0,0.344828],
[7,0,516,406,65,81,-31.406208,-101.310349,0.0,1.013103,1.013103,58,73,0,0,0.344828],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.655172],
[4,0,255,29,254,483,12.157242,251.249664,0.0,1.013103,1.013103,127,483,0,0,0.344828]
],
[
[8,0,511,499,82,13,-27.335171,-109.340683,0.0,1.012414,1.012414,41,6,0,0,0.379310],
[6,0,520,220,58,80,-14.173793,-156.924133,0.0,1.012414,1.012414,46,74,0,0,0.379310],
[5,0,520,302,82,93,-21.260689,-103.266205,0.0,1.012414,1.012414,13,76,0,0,0.379310],
[7,0,516,406,65,81,-31.384827,-101.241371,0.0,1.012414,1.012414,58,73,0,0,0.379310],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.620690],
[4,0,255,29,254,483,12.148965,251.078613,0.0,1.012414,1.012414,127,483,0,0,0.379310]
],
[
[8,0,511,499,82,13,-27.316551,-109.266205,0.0,1.011724,1.011724,41,6,0,0,0.413793],
[6,0,520,220,58,80,-14.164137,-156.817245,0.0,1.011724,1.011724,46,74,0,0,0.413793],
[5,0,520,302,82,93,-21.246206,-103.195862,0.0,1.011724,1.011724,13,76,0,0,0.413793],
[7,0,516,406,65,81,-31.363447,-101.172409,0.0,1.011724,1.011724,58,73,0,0,0.413793],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.586207],
[4,0,255,29,254,483,12.140690,250.907578,0.0,1.011724,1.011724,127,483,0,0,0.413793]
],
[
[8,0,511,499,82,13,-27.297932,-109.191727,0.0,1.011034,1.011034,41,6,0,0,0.448276],
[6,0,520,220,58,80,-14.154482,-156.710342,0.0,1.011034,1.011034,46,74,0,0,0.448276],
[5,0,520,302,82,93,-21.231724,-103.125519,0.0,1.011034,1.011034,13,76,0,0,0.448276],
[7,0,516,406,65,81,-31.342070,-101.103447,0.0,1.011034,1.011034,58,73,0,0,0.448276],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.551724],
[4,0,255,29,254,483,12.132414,250.736557,0.0,1.011034,1.011034,127,483,0,0,0.448276]
],
[
[8,0,511,499,82,13,-27.279312,-109.117249,0.0,1.010345,1.010345,41,6,0,0,0.482759],
[6,0,520,220,58,80,-14.144827,-156.603455,0.0,1.010345,1.010345,46,74,0,0,0.482759],
[5,0,520,302,82,93,-21.217241,-103.055176,0.0,1.010345,1.010345,13,76,0,0,0.482759],
[7,0,516,406,65,81,-31.320690,-101.034485,0.0,1.010345,1.010345,58,73,0,0,0.482759],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.517241],
[4,0,255,29,254,483,12.124138,250.565521,0.0,1.010345,1.010345,127,483,0,0,0.482759]
],
[
[8,0,511,499,82,13,-27.260689,-109.042755,0.0,1.009655,1.009655,41,6,0,0,0.517241],
[6,0,520,220,58,80,-14.135171,-156.496552,0.0,1.009655,1.009655,46,74,0,0,0.517241],
[5,0,520,302,82,93,-21.202757,-102.984825,0.0,1.009655,1.009655,13,76,0,0,0.517241],
[7,0,516,406,65,81,-31.299309,-100.965515,0.0,1.009655,1.009655,58,73,0,0,0.517241],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.482759],
[4,0,255,29,254,483,12.115862,250.394470,0.0,1.009655,1.009655,127,483,0,0,0.517241]
],
[
[8,0,511,499,82,13,-27.242069,-108.968277,0.0,1.008965,1.008965,41,6,0,0,0.551724],
[6,0,520,220,58,80,-14.125516,-156.389648,0.0,1.008965,1.008965,46,74,0,0,0.551724],
[5,0,520,302,82,93,-21.188274,-102.914482,0.0,1.008965,1.008965,13,76,0,0,0.551724],
[7,0,516,406,65,81,-31.277931,-100.896545,0.0,1.008965,1.008965,58,73,0,0,0.551724],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.448276],
[4,0,255,29,254,483,12.107586,250.223450,0.0,1.008965,1.008965,127,483,0,0,0.551724]
],
[
[8,0,511,499,82,13,-27.223448,-108.893791,0.0,1.008276,1.008276,41,6,0,0,0.586207],
[6,0,520,220,58,80,-14.115863,-156.282761,0.0,1.008276,1.008276,46,74,0,0,0.586207],
[5,0,520,302,82,93,-21.173794,-102.844139,0.0,1.008276,1.008276,13,76,0,0,0.586207],
[7,0,516,406,65,81,-31.256552,-100.827583,0.0,1.008276,1.008276,58,73,0,0,0.586207],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.413793],
[4,0,255,29,254,483,12.099310,250.052414,0.0,1.008276,1.008276,127,483,0,0,0.586207]
],
[
[8,0,511,499,82,13,-27.204828,-108.819313,0.0,1.007586,1.007586,41,6,0,0,0.620690],
[6,0,520,220,58,80,-14.106208,-156.175873,0.0,1.007586,1.007586,46,74,0,0,0.620690],
[5,0,520,302,82,93,-21.159311,-102.773796,0.0,1.007586,1.007586,13,76,0,0,0.620690],
[7,0,516,406,65,81,-31.235174,-100.758621,0.0,1.007586,1.007586,58,73,0,0,0.620690],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.379310],
[4,0,255,29,254,483,12.091035,249.881393,0.0,1.007586,1.007586,127,483,0,0,0.620690]
],
[
[8,0,511,499,82,13,-27.186205,-108.744820,0.0,1.006896,1.006896,41,6,0,0,0.655172],
[6,0,520,220,58,80,-14.096552,-156.068954,0.0,1.006896,1.006896,46,74,0,0,0.655172],
[5,0,520,302,82,93,-21.144827,-102.703445,0.0,1.006896,1.006896,13,76,0,0,0.655172],
[7,0,516,406,65,81,-31.213791,-100.689651,0.0,1.006896,1.006896,58,73,0,0,0.655172],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.344828],
[4,0,255,29,254,483,12.082758,249.710327,0.0,1.006896,1.006896,127,483,0,0,0.655172]
],
[
[8,0,511,499,82,13,-27.167585,-108.670341,0.0,1.006207,1.006207,41,6,0,0,0.689655],
[6,0,520,220,58,80,-14.086897,-155.962067,0.0,1.006207,1.006207,46,74,0,0,0.689655],
[5,0,520,302,82,93,-21.130344,-102.633102,0.0,1.006207,1.006207,13,76,0,0,0.689655],
[7,0,516,406,65,81,-31.192413,-100.620689,0.0,1.006207,1.006207,58,73,0,0,0.689655],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.310345],
[4,0,255,29,254,483,12.074482,249.539307,0.0,1.006207,1.006207,127,483,0,0,0.689655]
],
[
[8,0,511,499,82,13,-27.148966,-108.595863,0.0,1.005517,1.005517,41,6,0,0,0.724138],
[6,0,520,220,58,80,-14.077241,-155.855179,0.0,1.005517,1.005517,46,74,0,0,0.724138],
[5,0,520,302,82,93,-21.115862,-102.562759,0.0,1.005517,1.005517,13,76,0,0,0.724138],
[7,0,516,406,65,81,-31.171034,-100.551727,0.0,1.005517,1.005517,58,73,0,0,0.724138],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.275862],
[4,0,255,29,254,483,12.066207,249.368271,0.0,1.005517,1.005517,127,483,0,0,0.724138]
],
[
[8,0,511,499,82,13,-27.130346,-108.521385,0.0,1.004828,1.004828,41,6,0,0,0.758621],
[6,0,520,220,58,80,-14.067586,-155.748276,0.0,1.004828,1.004828,46,74,0,0,0.758621],
[5,0,520,302,82,93,-21.101379,-102.492416,0.0,1.004828,1.004828,13,76,0,0,0.758621],
[7,0,516,406,65,81,-31.149656,-100.482765,0.0,1.004828,1.004828,58,73,0,0,0.758621],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.241379],
[4,0,255,29,254,483,12.057932,249.197250,0.0,1.004828,1.004828,127,483,0,0,0.758621]
],
[
[8,0,511,499,82,13,-27.111723,-108.446892,0.0,1.004138,1.004138,41,6,0,0,0.793103],
[6,0,520,220,58,80,-14.057930,-155.641373,0.0,1.004138,1.004138,46,74,0,0,0.793103],
[5,0,520,302,82,93,-21.086895,-102.422066,0.0,1.004138,1.004138,13,76,0,0,0.793103],
[7,0,516,406,65,81,-31.128275,-100.413788,0.0,1.004138,1.004138,58,73,0,0,0.793103],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.206897],
[4,0,255,29,254,483,12.049654,249.026199,0.0,1.004138,1.004138,127,483,0,0,0.793103]
],
[
[8,0,511,499,82,13,-27.093103,-108.372414,0.0,1.003448,1.003448,41,6,0,0,0.827586],
[6,0,520,220,58,80,-14.048275,-155.534485,0.0,1.003448,1.003448,46,74,0,0,0.827586],
[5,0,520,302,82,93,-21.072412,-102.351723,0.0,1.003448,1.003448,13,76,0,0,0.827586],
[7,0,516,406,65,81,-31.106895,-100.344826,0.0,1.003448,1.003448,58,73,0,0,0.827586],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.172414],
[4,0,255,29,254,483,12.041379,248.855164,0.0,1.003448,1.003448,127,483,0,0,0.827586]
],
[
[8,0,511,499,82,13,-27.074482,-108.297928,0.0,1.002759,1.002759,41,6,0,0,0.862069],
[6,0,520,220,58,80,-14.038622,-155.427582,0.0,1.002759,1.002759,46,74,0,0,0.862069],
[5,0,520,302,82,93,-21.057932,-102.281380,0.0,1.002759,1.002759,13,76,0,0,0.862069],
[7,0,516,406,65,81,-31.085518,-100.275864,0.0,1.002759,1.002759,58,73,0,0,0.862069],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.137931],
[4,0,255,29,254,483,12.033104,248.684143,0.0,1.002759,1.002759,127,483,0,0,0.862069]
],
[
[8,0,511,499,82,13,-27.055862,-108.223450,0.0,1.002069,1.002069,41,6,0,0,0.896552],
[6,0,520,220,58,80,-14.028967,-155.320694,0.0,1.002069,1.002069,46,74,0,0,0.896552],
[5,0,520,302,82,93,-21.043449,-102.211037,0.0,1.002069,1.002069,13,76,0,0,0.896552],
[7,0,516,406,65,81,-31.064138,-100.206902,0.0,1.002069,1.002069,58,73,0,0,0.896552],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.103448],
[4,0,255,29,254,483,12.024828,248.513107,0.0,1.002069,1.002069,127,483,0,0,0.896552]
],
[
[8,0,511,499,82,13,-27.037239,-108.148956,0.0,1.001379,1.001379,41,6,0,0,0.931035],
[6,0,520,220,58,80,-14.019310,-155.213791,0.0,1.001379,1.001379,46,74,0,0,0.931035],
[5,0,520,302,82,93,-21.028965,-102.140686,0.0,1.001379,1.001379,13,76,0,0,0.931035],
[7,0,516,406,65,81,-31.042757,-100.137924,0.0,1.001379,1.001379,58,73,0,0,0.931035],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.068965],
[4,0,255,29,254,483,12.016551,248.342056,0.0,1.001379,1.001379,127,483,0,0,0.931035]
],
[
[8,0,511,499,82,13,-27.018620,-108.074478,0.0,1.000690,1.000690,41,6,0,0,0.965517],
[6,0,520,220,58,80,-14.009655,-155.106888,0.0,1.000690,1.000690,46,74,0,0,0.965517],
[5,0,520,302,82,93,-21.014482,-102.070343,0.0,1.000690,1.000690,13,76,0,0,0.965517],
[7,0,516,406,65,81,-31.021378,-100.068962,0.0,1.000690,1.000690,58,73,0,0,0.965517],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.034483],
[4,0,255,29,254,483,12.008276,248.171021,0.0,1.000690,1.000690,127,483,0,0,0.965517]
],
[
[8,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[6,0,520,220,58,80,-14.0,-155.0,0.0,1.0,1.0,46,74],
[5,0,520,302,82,93,-21.0,-102.0,0.0,1.0,1.0,13,76],
[7,0,516,406,65,81,-31.0,-100.0,0.0,1.0,1.0,58,73],
[4,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
]
]
}
}
]

},{}],55:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-08-01.png"],
"name": "obj05_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 400,
"CanvasHeight": 500,
"MarginWidth": 208,
"MarginHeight": 258,
"parts": ["root","Obj","ura","ura_1","02","01","03","back"],
"ssa": [
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-14.0,-155.0,0.0,1.0,1.0,46,74],
[3,0,520,302,82,93,-21.0,-102.0,0.0,1.0,1.0,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.0,1.0,1.0,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-13.431087,-154.017334,-0.013963,1.0,0.997500,46,74],
[3,0,520,302,82,93,-20.799999,-101.199997,-0.006981,1.0,0.997500,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.005236,1.010000,0.995000,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-12.864388,-153.032135,-0.027925,1.0,0.995000,46,74],
[3,0,520,302,82,93,-20.600000,-100.400002,-0.013963,1.0,0.995000,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.010472,1.020000,0.990000,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-12.299911,-152.044373,-0.041888,1.0,0.992500,46,74],
[3,0,520,302,82,93,-20.400000,-99.599998,-0.020944,1.0,0.992500,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.015708,1.030000,0.985000,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-11.737681,-151.054092,-0.055851,1.0,0.990000,46,74],
[3,0,520,302,82,93,-20.200001,-98.800003,-0.027925,1.0,0.990000,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.020944,1.040000,0.980000,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-11.177711,-150.061325,-0.069813,1.0,0.987500,46,74],
[3,0,520,302,82,93,-20.0,-98.0,-0.034907,1.0,0.987500,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.026180,1.050000,0.975000,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-11.075284,-149.850266,-0.077958,1.006667,0.985000,46,74],
[3,0,520,302,82,93,-20.0,-97.933334,-0.036070,1.006667,0.985000,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.031416,1.060000,0.970000,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-10.973180,-149.639038,-0.086103,1.013333,0.982500,46,74],
[3,0,520,302,82,93,-20.0,-97.866669,-0.037234,1.013333,0.982500,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.036652,1.070000,0.965000,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-10.871400,-149.427628,-0.094248,1.020000,0.980000,46,74],
[3,0,520,302,82,93,-20.0,-97.800003,-0.038397,1.020000,0.980000,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.041888,1.080000,0.960000,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-10.769945,-149.216064,-0.102393,1.026667,0.977500,46,74],
[3,0,520,302,82,93,-20.0,-97.733330,-0.039561,1.026667,0.977500,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.047124,1.090000,0.955000,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-10.668815,-149.004333,-0.110538,1.033333,0.975000,46,74],
[3,0,520,302,82,93,-20.0,-97.666664,-0.040724,1.033333,0.975000,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.052360,1.100000,0.950000,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-10.568010,-148.792435,-0.113446,1.040000,0.972500,46,74],
[3,0,520,302,82,93,-20.0,-97.599998,-0.041888,1.040000,0.972500,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.049604,1.094737,0.952632,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-10.467530,-148.580368,-0.116355,1.046667,0.970000,46,74],
[3,0,520,302,82,93,-20.0,-97.533333,-0.043051,1.046667,0.970000,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.046848,1.089474,0.955263,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-10.367375,-148.368149,-0.119264,1.053333,0.967500,46,74],
[3,0,520,302,82,93,-20.0,-97.466667,-0.044215,1.053333,0.967500,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.044093,1.084211,0.957895,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-10.267548,-148.155762,-0.122173,1.060000,0.965000,46,74],
[3,0,520,302,82,93,-20.0,-97.400002,-0.045379,1.060000,0.965000,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.041337,1.078947,0.960526,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-10.168046,-147.943207,-0.125082,1.066667,0.962500,46,74],
[3,0,520,302,82,93,-20.0,-97.333336,-0.046542,1.066667,0.962500,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.038581,1.073684,0.963158,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-10.068871,-147.730484,-0.127991,1.073333,0.960000,46,74],
[3,0,520,302,82,93,-20.0,-97.266670,-0.047706,1.073333,0.960000,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.035825,1.068421,0.965789,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-9.970021,-147.517609,-0.130900,1.080000,0.957500,46,74],
[3,0,520,302,82,93,-20.0,-97.199997,-0.048869,1.080000,0.957500,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.033069,1.063158,0.968421,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-9.871500,-147.304565,-0.133809,1.086667,0.955000,46,74],
[3,0,520,302,82,93,-20.0,-97.133331,-0.050033,1.086667,0.955000,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.030314,1.057895,0.971053,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-9.773305,-147.091370,-0.136717,1.093333,0.952500,46,74],
[3,0,520,302,82,93,-20.0,-97.066666,-0.051196,1.093333,0.952500,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.027558,1.052632,0.973684,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-9.675437,-146.878006,-0.139626,1.100000,0.950000,46,74],
[3,0,520,302,82,93,-20.0,-97.0,-0.052360,1.100000,0.950000,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.024802,1.047368,0.976316,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-10.140894,-147.790527,-0.124112,1.088889,0.955556,46,74],
[3,0,520,302,82,93,-20.111111,-97.555557,-0.046542,1.088889,0.955556,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.022046,1.042105,0.978947,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-10.610152,-148.700607,-0.108598,1.077778,0.961111,46,74],
[3,0,520,302,82,93,-20.222221,-98.111115,-0.040724,1.077778,0.961111,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.019290,1.036842,0.981579,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-11.083198,-149.608200,-0.093084,1.066667,0.966667,46,74],
[3,0,520,302,82,93,-20.333334,-98.666664,-0.034907,1.066667,0.966667,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.016535,1.031579,0.984211,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-11.560010,-150.513306,-0.077570,1.055556,0.972222,46,74],
[3,0,520,302,82,93,-20.444445,-99.222221,-0.029089,1.055556,0.972222,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.013779,1.026316,0.986842,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-12.040575,-151.415848,-0.062056,1.044444,0.977778,46,74],
[3,0,520,302,82,93,-20.555555,-99.777779,-0.023271,1.044444,0.977778,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.011023,1.021053,0.989474,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-12.524874,-152.315826,-0.046542,1.033333,0.983333,46,74],
[3,0,520,302,82,93,-20.666666,-100.333336,-0.017453,1.033333,0.983333,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.008267,1.015790,0.992105,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-13.012890,-153.213196,-0.031028,1.022222,0.988889,46,74],
[3,0,520,302,82,93,-20.777779,-100.888885,-0.011636,1.022222,0.988889,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.005512,1.010526,0.994737,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-13.504604,-154.107925,-0.015514,1.011111,0.994444,46,74],
[3,0,520,302,82,93,-20.888889,-101.444443,-0.005818,1.011111,0.994444,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.002756,1.005263,0.997368,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[6,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[4,0,520,220,58,80,-14.0,-155.0,0.0,1.0,1.0,46,74],
[3,0,520,302,82,93,-21.0,-102.0,0.0,1.0,1.0,13,76],
[5,0,516,406,65,81,-31.0,-100.0,0.0,1.0,1.0,58,73],
[2,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
]
]
}
}
]

},{}],56:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-08-01.png"],
"name": "obj06_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 400,
"CanvasHeight": 500,
"MarginWidth": 208,
"MarginHeight": 258,
"parts": ["root","Obj","omote","omote_1","ura","ura_1","02","01","03","back"],
"ssa": [
[
[8,0,511,499,82,13,-27.0,-108.0,0.0,1.0,1.0,41,6],
[6,0,520,220,58,80,-14.0,-155.0,0.0,1.0,1.0,46,74],
[5,0,520,302,82,93,-21.0,-102.0,0.0,1.0,1.0,13,76],
[7,0,516,406,65,81,-31.0,-100.0,0.0,1.0,1.0,58,73],
[4,0,255,29,254,483,12.0,248.0,0.0,1.0,1.0,127,483]
],
[
[8,0,511,499,82,13,-27.018620,-108.074478,0.0,1.000690,1.000690,41,6,0,0,0.965517],
[6,0,520,220,58,80,-14.009655,-155.106888,0.0,1.000690,1.000690,46,74,0,0,0.965517],
[5,0,520,302,82,93,-21.014482,-102.070343,0.0,1.000690,1.000690,13,76,0,0,0.965517],
[7,0,516,406,65,81,-31.021378,-100.068962,0.0,1.000690,1.000690,58,73,0,0,0.965517],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.034483],
[4,0,255,29,254,483,12.008276,248.171021,0.0,1.000690,1.000690,127,483,0,0,0.965517]
],
[
[8,0,511,499,82,13,-27.037239,-108.148956,0.0,1.001379,1.001379,41,6,0,0,0.931035],
[6,0,520,220,58,80,-14.019310,-155.213791,0.0,1.001379,1.001379,46,74,0,0,0.931035],
[5,0,520,302,82,93,-21.028965,-102.140686,0.0,1.001379,1.001379,13,76,0,0,0.931035],
[7,0,516,406,65,81,-31.042757,-100.137924,0.0,1.001379,1.001379,58,73,0,0,0.931035],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.068966],
[4,0,255,29,254,483,12.016551,248.342056,0.0,1.001379,1.001379,127,483,0,0,0.931035]
],
[
[8,0,511,499,82,13,-27.055862,-108.223450,0.0,1.002069,1.002069,41,6,0,0,0.896552],
[6,0,520,220,58,80,-14.028967,-155.320694,0.0,1.002069,1.002069,46,74,0,0,0.896552],
[5,0,520,302,82,93,-21.043449,-102.211037,0.0,1.002069,1.002069,13,76,0,0,0.896552],
[7,0,516,406,65,81,-31.064138,-100.206902,0.0,1.002069,1.002069,58,73,0,0,0.896552],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.103448],
[4,0,255,29,254,483,12.024828,248.513107,0.0,1.002069,1.002069,127,483,0,0,0.896552]
],
[
[8,0,511,499,82,13,-27.074482,-108.297928,0.0,1.002759,1.002759,41,6,0,0,0.862069],
[6,0,520,220,58,80,-14.038622,-155.427582,0.0,1.002759,1.002759,46,74,0,0,0.862069],
[5,0,520,302,82,93,-21.057932,-102.281380,0.0,1.002759,1.002759,13,76,0,0,0.862069],
[7,0,516,406,65,81,-31.085518,-100.275864,0.0,1.002759,1.002759,58,73,0,0,0.862069],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.137931],
[4,0,255,29,254,483,12.033104,248.684143,0.0,1.002759,1.002759,127,483,0,0,0.862069]
],
[
[8,0,511,499,82,13,-27.093103,-108.372414,0.0,1.003448,1.003448,41,6,0,0,0.827586],
[6,0,520,220,58,80,-14.048275,-155.534485,0.0,1.003448,1.003448,46,74,0,0,0.827586],
[5,0,520,302,82,93,-21.072412,-102.351723,0.0,1.003448,1.003448,13,76,0,0,0.827586],
[7,0,516,406,65,81,-31.106895,-100.344826,0.0,1.003448,1.003448,58,73,0,0,0.827586],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.172414],
[4,0,255,29,254,483,12.041379,248.855164,0.0,1.003448,1.003448,127,483,0,0,0.827586]
],
[
[8,0,511,499,82,13,-27.111723,-108.446892,0.0,1.004138,1.004138,41,6,0,0,0.793103],
[6,0,520,220,58,80,-14.057930,-155.641373,0.0,1.004138,1.004138,46,74,0,0,0.793103],
[5,0,520,302,82,93,-21.086895,-102.422066,0.0,1.004138,1.004138,13,76,0,0,0.793103],
[7,0,516,406,65,81,-31.128275,-100.413788,0.0,1.004138,1.004138,58,73,0,0,0.793103],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.206897],
[4,0,255,29,254,483,12.049654,249.026199,0.0,1.004138,1.004138,127,483,0,0,0.793103]
],
[
[8,0,511,499,82,13,-27.130346,-108.521385,0.0,1.004828,1.004828,41,6,0,0,0.758621],
[6,0,520,220,58,80,-14.067586,-155.748276,0.0,1.004828,1.004828,46,74,0,0,0.758621],
[5,0,520,302,82,93,-21.101379,-102.492416,0.0,1.004828,1.004828,13,76,0,0,0.758621],
[7,0,516,406,65,81,-31.149656,-100.482765,0.0,1.004828,1.004828,58,73,0,0,0.758621],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.241379],
[4,0,255,29,254,483,12.057932,249.197250,0.0,1.004828,1.004828,127,483,0,0,0.758621]
],
[
[8,0,511,499,82,13,-27.148966,-108.595863,0.0,1.005517,1.005517,41,6,0,0,0.724138],
[6,0,520,220,58,80,-14.077241,-155.855179,0.0,1.005517,1.005517,46,74,0,0,0.724138],
[5,0,520,302,82,93,-21.115862,-102.562759,0.0,1.005517,1.005517,13,76,0,0,0.724138],
[7,0,516,406,65,81,-31.171034,-100.551727,0.0,1.005517,1.005517,58,73,0,0,0.724138],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.275862],
[4,0,255,29,254,483,12.066207,249.368271,0.0,1.005517,1.005517,127,483,0,0,0.724138]
],
[
[8,0,511,499,82,13,-27.167585,-108.670341,0.0,1.006207,1.006207,41,6,0,0,0.689655],
[6,0,520,220,58,80,-14.086897,-155.962067,0.0,1.006207,1.006207,46,74,0,0,0.689655],
[5,0,520,302,82,93,-21.130344,-102.633102,0.0,1.006207,1.006207,13,76,0,0,0.689655],
[7,0,516,406,65,81,-31.192413,-100.620689,0.0,1.006207,1.006207,58,73,0,0,0.689655],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.310345],
[4,0,255,29,254,483,12.074482,249.539307,0.0,1.006207,1.006207,127,483,0,0,0.689655]
],
[
[8,0,511,499,82,13,-27.186205,-108.744820,0.0,1.006896,1.006896,41,6,0,0,0.655172],
[6,0,520,220,58,80,-14.096552,-156.068954,0.0,1.006896,1.006896,46,74,0,0,0.655172],
[5,0,520,302,82,93,-21.144827,-102.703445,0.0,1.006896,1.006896,13,76,0,0,0.655172],
[7,0,516,406,65,81,-31.213791,-100.689651,0.0,1.006896,1.006896,58,73,0,0,0.655172],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.344828],
[4,0,255,29,254,483,12.082758,249.710327,0.0,1.006896,1.006896,127,483,0,0,0.655172]
],
[
[8,0,511,499,82,13,-27.204828,-108.819313,0.0,1.007586,1.007586,41,6,0,0,0.620690],
[6,0,520,220,58,80,-14.106208,-156.175873,0.0,1.007586,1.007586,46,74,0,0,0.620690],
[5,0,520,302,82,93,-21.159311,-102.773796,0.0,1.007586,1.007586,13,76,0,0,0.620690],
[7,0,516,406,65,81,-31.235174,-100.758621,0.0,1.007586,1.007586,58,73,0,0,0.620690],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.379310],
[4,0,255,29,254,483,12.091035,249.881393,0.0,1.007586,1.007586,127,483,0,0,0.620690]
],
[
[8,0,511,499,82,13,-27.223448,-108.893791,0.0,1.008276,1.008276,41,6,0,0,0.586207],
[6,0,520,220,58,80,-14.115863,-156.282761,0.0,1.008276,1.008276,46,74,0,0,0.586207],
[5,0,520,302,82,93,-21.173794,-102.844139,0.0,1.008276,1.008276,13,76,0,0,0.586207],
[7,0,516,406,65,81,-31.256552,-100.827583,0.0,1.008276,1.008276,58,73,0,0,0.586207],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.413793],
[4,0,255,29,254,483,12.099310,250.052414,0.0,1.008276,1.008276,127,483,0,0,0.586207]
],
[
[8,0,511,499,82,13,-27.242069,-108.968277,0.0,1.008965,1.008965,41,6,0,0,0.551724],
[6,0,520,220,58,80,-14.125516,-156.389648,0.0,1.008965,1.008965,46,74,0,0,0.551724],
[5,0,520,302,82,93,-21.188274,-102.914482,0.0,1.008965,1.008965,13,76,0,0,0.551724],
[7,0,516,406,65,81,-31.277931,-100.896545,0.0,1.008965,1.008965,58,73,0,0,0.551724],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.448276],
[4,0,255,29,254,483,12.107586,250.223450,0.0,1.008965,1.008965,127,483,0,0,0.551724]
],
[
[8,0,511,499,82,13,-27.260689,-109.042755,0.0,1.009655,1.009655,41,6,0,0,0.517241],
[6,0,520,220,58,80,-14.135171,-156.496552,0.0,1.009655,1.009655,46,74,0,0,0.517241],
[5,0,520,302,82,93,-21.202757,-102.984825,0.0,1.009655,1.009655,13,76,0,0,0.517241],
[7,0,516,406,65,81,-31.299309,-100.965515,0.0,1.009655,1.009655,58,73,0,0,0.517241],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.482759],
[4,0,255,29,254,483,12.115862,250.394470,0.0,1.009655,1.009655,127,483,0,0,0.517241]
],
[
[8,0,511,499,82,13,-27.279312,-109.117249,0.0,1.010345,1.010345,41,6,0,0,0.482759],
[6,0,520,220,58,80,-14.144827,-156.603455,0.0,1.010345,1.010345,46,74,0,0,0.482759],
[5,0,520,302,82,93,-21.217241,-103.055176,0.0,1.010345,1.010345,13,76,0,0,0.482759],
[7,0,516,406,65,81,-31.320690,-101.034485,0.0,1.010345,1.010345,58,73,0,0,0.482759],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.517241],
[4,0,255,29,254,483,12.124138,250.565521,0.0,1.010345,1.010345,127,483,0,0,0.482759]
],
[
[8,0,511,499,82,13,-27.297932,-109.191727,0.0,1.011034,1.011034,41,6,0,0,0.448276],
[6,0,520,220,58,80,-14.154482,-156.710342,0.0,1.011034,1.011034,46,74,0,0,0.448276],
[5,0,520,302,82,93,-21.231724,-103.125519,0.0,1.011034,1.011034,13,76,0,0,0.448276],
[7,0,516,406,65,81,-31.342070,-101.103447,0.0,1.011034,1.011034,58,73,0,0,0.448276],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.551724],
[4,0,255,29,254,483,12.132414,250.736557,0.0,1.011034,1.011034,127,483,0,0,0.448276]
],
[
[8,0,511,499,82,13,-27.316551,-109.266205,0.0,1.011724,1.011724,41,6,0,0,0.413793],
[6,0,520,220,58,80,-14.164137,-156.817245,0.0,1.011724,1.011724,46,74,0,0,0.413793],
[5,0,520,302,82,93,-21.246206,-103.195862,0.0,1.011724,1.011724,13,76,0,0,0.413793],
[7,0,516,406,65,81,-31.363447,-101.172409,0.0,1.011724,1.011724,58,73,0,0,0.413793],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.586207],
[4,0,255,29,254,483,12.140690,250.907578,0.0,1.011724,1.011724,127,483,0,0,0.413793]
],
[
[8,0,511,499,82,13,-27.335171,-109.340683,0.0,1.012414,1.012414,41,6,0,0,0.379310],
[6,0,520,220,58,80,-14.173793,-156.924133,0.0,1.012414,1.012414,46,74,0,0,0.379310],
[5,0,520,302,82,93,-21.260689,-103.266205,0.0,1.012414,1.012414,13,76,0,0,0.379310],
[7,0,516,406,65,81,-31.384827,-101.241371,0.0,1.012414,1.012414,58,73,0,0,0.379310],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.620690],
[4,0,255,29,254,483,12.148965,251.078613,0.0,1.012414,1.012414,127,483,0,0,0.379310]
],
[
[8,0,511,499,82,13,-27.353794,-109.415176,0.0,1.013103,1.013103,41,6,0,0,0.344828],
[6,0,520,220,58,80,-14.183449,-157.031036,0.0,1.013103,1.013103,46,74,0,0,0.344828],
[5,0,520,302,82,93,-21.275173,-103.336555,0.0,1.013103,1.013103,13,76,0,0,0.344828],
[7,0,516,406,65,81,-31.406208,-101.310349,0.0,1.013103,1.013103,58,73,0,0,0.344828],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.655172],
[4,0,255,29,254,483,12.157242,251.249664,0.0,1.013103,1.013103,127,483,0,0,0.344828]
],
[
[8,0,511,499,82,13,-27.372414,-109.489655,0.0,1.013793,1.013793,41,6,0,0,0.310345],
[6,0,520,220,58,80,-14.193104,-157.137939,0.0,1.013793,1.013793,46,74,0,0,0.310345],
[5,0,520,302,82,93,-21.289656,-103.406898,0.0,1.013793,1.013793,13,76,0,0,0.310345],
[7,0,516,406,65,81,-31.427586,-101.379311,0.0,1.013793,1.013793,58,73,0,0,0.310345],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.689655],
[4,0,255,29,254,483,12.165518,251.420685,0.0,1.013793,1.013793,127,483,0,0,0.310345]
],
[
[8,0,511,499,82,13,-27.391033,-109.564133,0.0,1.014483,1.014483,41,6,0,0,0.275862],
[6,0,520,220,58,80,-14.202759,-157.244827,0.0,1.014483,1.014483,46,74,0,0,0.275862],
[5,0,520,302,82,93,-21.304138,-103.477242,0.0,1.014483,1.014483,13,76,0,0,0.275862],
[7,0,516,406,65,81,-31.448965,-101.448273,0.0,1.014483,1.014483,58,73,0,0,0.275862],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.724138],
[4,0,255,29,254,483,12.173793,251.591721,0.0,1.014483,1.014483,127,483,0,0,0.275862]
],
[
[8,0,511,499,82,13,-27.409655,-109.638618,0.0,1.015172,1.015172,41,6,0,0,0.241379],
[6,0,520,220,58,80,-14.212412,-157.351715,0.0,1.015172,1.015172,46,74,0,0,0.241379],
[5,0,520,302,82,93,-21.318619,-103.547585,0.0,1.015172,1.015172,13,76,0,0,0.241379],
[7,0,516,406,65,81,-31.470343,-101.517235,0.0,1.015172,1.015172,58,73,0,0,0.241379],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.758621],
[4,0,255,29,254,483,12.182068,251.762741,0.0,1.015172,1.015172,127,483,0,0,0.241379]
],
[
[8,0,511,499,82,13,-27.428276,-109.713104,0.0,1.015862,1.015862,41,6,0,0,0.206897],
[6,0,520,220,58,80,-14.222071,-157.458618,0.0,1.015862,1.015862,46,74,0,0,0.206897],
[5,0,520,302,82,93,-21.333105,-103.617935,0.0,1.015862,1.015862,13,76,0,0,0.206897],
[7,0,516,406,65,81,-31.491726,-101.586212,0.0,1.015862,1.015862,58,73,0,0,0.206897],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.793103],
[4,0,255,29,254,483,12.190346,251.933807,0.0,1.015862,1.015862,127,483,0,0,0.206897]
],
[
[8,0,511,499,82,13,-27.446898,-109.787590,0.0,1.016552,1.016552,41,6,0,0,0.172414],
[6,0,520,220,58,80,-14.231724,-157.565521,0.0,1.016552,1.016552,46,74,0,0,0.172414],
[5,0,520,302,82,93,-21.347586,-103.688278,0.0,1.016552,1.016552,13,76,0,0,0.172414],
[7,0,516,406,65,81,-31.513103,-101.655174,0.0,1.016552,1.016552,58,73,0,0,0.172414],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.827586],
[4,0,255,29,254,483,12.198621,252.104828,0.0,1.016552,1.016552,127,483,0,0,0.172414]
],
[
[8,0,511,499,82,13,-27.465517,-109.862068,0.0,1.017241,1.017241,41,6,0,0,0.137931],
[6,0,520,220,58,80,-14.241379,-157.672409,0.0,1.017241,1.017241,46,74,0,0,0.137931],
[5,0,520,302,82,93,-21.362068,-103.758621,0.0,1.017241,1.017241,13,76,0,0,0.137931],
[7,0,516,406,65,81,-31.534483,-101.724136,0.0,1.017241,1.017241,58,73,0,0,0.137931],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.862069],
[4,0,255,29,254,483,12.206896,252.275864,0.0,1.017241,1.017241,127,483,0,0,0.137931]
],
[
[8,0,511,499,82,13,-27.484137,-109.936546,0.0,1.017931,1.017931,41,6,0,0,0.103448],
[6,0,520,220,58,80,-14.251034,-157.779297,0.0,1.017931,1.017931,46,74,0,0,0.103448],
[5,0,520,302,82,93,-21.376551,-103.828964,0.0,1.017931,1.017931,13,76,0,0,0.103448],
[7,0,516,406,65,81,-31.555861,-101.793098,0.0,1.017931,1.017931,58,73,0,0,0.103448],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.896552],
[4,0,255,29,254,483,12.215172,252.446884,0.0,1.017931,1.017931,127,483,0,0,0.103448]
],
[
[8,0,511,499,82,13,-27.502760,-110.011040,0.0,1.018621,1.018621,41,6,0,0,0.068965],
[6,0,520,220,58,80,-14.260690,-157.886215,0.0,1.018621,1.018621,46,74,0,0,0.068965],
[5,0,520,302,82,93,-21.391035,-103.899315,0.0,1.018621,1.018621,13,76,0,0,0.068965],
[7,0,516,406,65,81,-31.577242,-101.862076,0.0,1.018621,1.018621,58,73,0,0,0.068965],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.931035],
[4,0,255,29,254,483,12.223449,252.617935,0.0,1.018621,1.018621,127,483,0,0,0.068965]
],
[
[8,0,511,499,82,13,-27.521379,-110.085518,0.0,1.019310,1.019310,41,6,0,0,0.034483],
[6,0,520,220,58,80,-14.270346,-157.993103,0.0,1.019310,1.019310,46,74,0,0,0.034483],
[5,0,520,302,82,93,-21.405518,-103.969658,0.0,1.019310,1.019310,13,76,0,0,0.034483],
[7,0,516,406,65,81,-31.598621,-101.931038,0.0,1.019310,1.019310,58,73,0,0,0.034483],
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483,0,0,0.965517],
[4,0,255,29,254,483,12.231724,252.788971,0.0,1.019310,1.019310,127,483,0,0,0.034483]
],
[
[2,0,0,29,253,483,12.0,248.0,0.0,1.0,1.0,126,483]
]
]
}
}
]

},{}],57:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-09-01.png"],
"name": "obj01_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 600,
"MarginWidth": 108,
"MarginHeight": 308,
"parts": ["root","Obj","04","02_omote","01"],
"ssa": [
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
]
]
}
}
]

},{}],58:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-09-01.png"],
"name": "obj02_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 600,
"MarginWidth": 108,
"MarginHeight": 308,
"parts": ["root","Obj","04","02_omote","01"],
"ssa": [
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
]
]
}
}
]

},{}],59:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-09-01.png"],
"name": "obj03_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 600,
"MarginWidth": 108,
"MarginHeight": 308,
"parts": ["root","Obj","04","02_omote","01"],
"ssa": [
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
]
]
}
}
]

},{}],60:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-09-01.png"],
"name": "obj04_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 600,
"MarginWidth": 108,
"MarginHeight": 308,
"parts": ["root","Obj","04_1","omote","02_omote","01_1","ura","03","02_ura","01_2"],
"ssa": [
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.965517],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.965517],
[6,0,736,903,104,121,40.772415,184.495178,0.0,1.019310,1.019310,52,60,0,0,0.034483],
[7,0,368,457,182,567,0.0,0.0,0.0,1.019310,1.019310,91,283,0,0,0.034483],
[8,0,0,457,182,567,0.0,0.0,0.0,1.019310,1.019310,91,283,0,0,0.034483]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.931035],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.931035],
[6,0,736,903,104,121,40.744827,184.370346,0.0,1.018621,1.018621,52,60,0,0,0.068966],
[7,0,368,457,182,567,0.0,0.0,0.0,1.018621,1.018621,91,283,0,0,0.068966],
[8,0,0,457,182,567,0.0,0.0,0.0,1.018621,1.018621,91,283,0,0,0.068966]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.896552],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.896552],
[6,0,736,903,104,121,40.717239,184.245514,0.0,1.017931,1.017931,52,60,0,0,0.103448],
[7,0,368,457,182,567,0.0,0.0,0.0,1.017931,1.017931,91,283,0,0,0.103448],
[8,0,0,457,182,567,0.0,0.0,0.0,1.017931,1.017931,91,283,0,0,0.103448]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.862069],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.862069],
[6,0,736,903,104,121,40.689655,184.120682,0.0,1.017241,1.017241,52,60,0,0,0.137931],
[7,0,368,457,182,567,0.0,0.0,0.0,1.017241,1.017241,91,283,0,0,0.137931],
[8,0,0,457,182,567,0.0,0.0,0.0,1.017241,1.017241,91,283,0,0,0.137931]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.827586],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.827586],
[6,0,736,903,104,121,40.662071,183.995865,0.0,1.016552,1.016552,52,60,0,0,0.172414],
[7,0,368,457,182,567,0.0,0.0,0.0,1.016552,1.016552,91,283,0,0,0.172414],
[8,0,0,457,182,567,0.0,0.0,0.0,1.016552,1.016552,91,283,0,0,0.172414]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.793103],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.793103],
[6,0,736,903,104,121,40.634483,183.871048,0.0,1.015862,1.015862,52,60,0,0,0.206897],
[7,0,368,457,182,567,0.0,0.0,0.0,1.015862,1.015862,91,283,0,0,0.206897],
[8,0,0,457,182,567,0.0,0.0,0.0,1.015862,1.015862,91,283,0,0,0.206897]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.758621],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.758621],
[6,0,736,903,104,121,40.606895,183.746201,0.0,1.015172,1.015172,52,60,0,0,0.241379],
[7,0,368,457,182,567,0.0,0.0,0.0,1.015172,1.015172,91,283,0,0,0.241379],
[8,0,0,457,182,567,0.0,0.0,0.0,1.015172,1.015172,91,283,0,0,0.241379]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.724138],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.724138],
[6,0,736,903,104,121,40.579308,183.621368,0.0,1.014483,1.014483,52,60,0,0,0.275862],
[7,0,368,457,182,567,0.0,0.0,0.0,1.014483,1.014483,91,283,0,0,0.275862],
[8,0,0,457,182,567,0.0,0.0,0.0,1.014483,1.014483,91,283,0,0,0.275862]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.689655],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.689655],
[6,0,736,903,104,121,40.551723,183.496552,0.0,1.013793,1.013793,52,60,0,0,0.310345],
[7,0,368,457,182,567,0.0,0.0,0.0,1.013793,1.013793,91,283,0,0,0.310345],
[8,0,0,457,182,567,0.0,0.0,0.0,1.013793,1.013793,91,283,0,0,0.310345]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.655172],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.655172],
[6,0,736,903,104,121,40.524139,183.371735,0.0,1.013103,1.013103,52,60,0,0,0.344828],
[7,0,368,457,182,567,0.0,0.0,0.0,1.013103,1.013103,91,283,0,0,0.344828],
[8,0,0,457,182,567,0.0,0.0,0.0,1.013103,1.013103,91,283,0,0,0.344828]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.620690],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.620690],
[6,0,736,903,104,121,40.496552,183.246887,0.0,1.012414,1.012414,52,60,0,0,0.379310],
[7,0,368,457,182,567,0.0,0.0,0.0,1.012414,1.012414,91,283,0,0,0.379310],
[8,0,0,457,182,567,0.0,0.0,0.0,1.012414,1.012414,91,283,0,0,0.379310]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.586207],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.586207],
[6,0,736,903,104,121,40.468964,183.122070,0.0,1.011724,1.011724,52,60,0,0,0.413793],
[7,0,368,457,182,567,0.0,0.0,0.0,1.011724,1.011724,91,283,0,0,0.413793],
[8,0,0,457,182,567,0.0,0.0,0.0,1.011724,1.011724,91,283,0,0,0.413793]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.551724],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.551724],
[6,0,736,903,104,121,40.441380,182.997238,0.0,1.011034,1.011034,52,60,0,0,0.448276],
[7,0,368,457,182,567,0.0,0.0,0.0,1.011034,1.011034,91,283,0,0,0.448276],
[8,0,0,457,182,567,0.0,0.0,0.0,1.011034,1.011034,91,283,0,0,0.448276]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.517241],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.517241],
[6,0,736,903,104,121,40.413795,182.872421,0.0,1.010345,1.010345,52,60,0,0,0.482759],
[7,0,368,457,182,567,0.0,0.0,0.0,1.010345,1.010345,91,283,0,0,0.482759],
[8,0,0,457,182,567,0.0,0.0,0.0,1.010345,1.010345,91,283,0,0,0.482759]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.482759],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.482759],
[6,0,736,903,104,121,40.386204,182.747574,0.0,1.009655,1.009655,52,60,0,0,0.517241],
[7,0,368,457,182,567,0.0,0.0,0.0,1.009655,1.009655,91,283,0,0,0.517241],
[8,0,0,457,182,567,0.0,0.0,0.0,1.009655,1.009655,91,283,0,0,0.517241]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.448276],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.448276],
[6,0,736,903,104,121,40.358620,182.622757,0.0,1.008965,1.008965,52,60,0,0,0.551724],
[7,0,368,457,182,567,0.0,0.0,0.0,1.008965,1.008965,91,283,0,0,0.551724],
[8,0,0,457,182,567,0.0,0.0,0.0,1.008965,1.008965,91,283,0,0,0.551724]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.413793],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.413793],
[6,0,736,903,104,121,40.331036,182.497925,0.0,1.008276,1.008276,52,60,0,0,0.586207],
[7,0,368,457,182,567,0.0,0.0,0.0,1.008276,1.008276,91,283,0,0,0.586207],
[8,0,0,457,182,567,0.0,0.0,0.0,1.008276,1.008276,91,283,0,0,0.586207]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.379310],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.379310],
[6,0,736,903,104,121,40.303452,182.373108,0.0,1.007586,1.007586,52,60,0,0,0.620690],
[7,0,368,457,182,567,0.0,0.0,0.0,1.007586,1.007586,91,283,0,0,0.620690],
[8,0,0,457,182,567,0.0,0.0,0.0,1.007586,1.007586,91,283,0,0,0.620690]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.344828],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.344828],
[6,0,736,903,104,121,40.275860,182.248260,0.0,1.006896,1.006896,52,60,0,0,0.655172],
[7,0,368,457,182,567,0.0,0.0,0.0,1.006896,1.006896,91,283,0,0,0.655172],
[8,0,0,457,182,567,0.0,0.0,0.0,1.006896,1.006896,91,283,0,0,0.655172]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.310345],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.310345],
[6,0,736,903,104,121,40.248276,182.123444,0.0,1.006207,1.006207,52,60,0,0,0.689655],
[7,0,368,457,182,567,0.0,0.0,0.0,1.006207,1.006207,91,283,0,0,0.689655],
[8,0,0,457,182,567,0.0,0.0,0.0,1.006207,1.006207,91,283,0,0,0.689655]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.275862],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.275862],
[6,0,736,903,104,121,40.220688,181.998627,0.0,1.005517,1.005517,52,60,0,0,0.724138],
[7,0,368,457,182,567,0.0,0.0,0.0,1.005517,1.005517,91,283,0,0,0.724138],
[8,0,0,457,182,567,0.0,0.0,0.0,1.005517,1.005517,91,283,0,0,0.724138]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.241379],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.241379],
[6,0,736,903,104,121,40.193104,181.873795,0.0,1.004828,1.004828,52,60,0,0,0.758621],
[7,0,368,457,182,567,0.0,0.0,0.0,1.004828,1.004828,91,283,0,0,0.758621],
[8,0,0,457,182,567,0.0,0.0,0.0,1.004828,1.004828,91,283,0,0,0.758621]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.206897],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.206897],
[6,0,736,903,104,121,40.165516,181.748962,0.0,1.004138,1.004138,52,60,0,0,0.793103],
[7,0,368,457,182,567,0.0,0.0,0.0,1.004138,1.004138,91,283,0,0,0.793103],
[8,0,0,457,182,567,0.0,0.0,0.0,1.004138,1.004138,91,283,0,0,0.793103]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.172414],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.172414],
[6,0,736,903,104,121,40.137932,181.624130,0.0,1.003448,1.003448,52,60,0,0,0.827586],
[7,0,368,457,182,567,0.0,0.0,0.0,1.003448,1.003448,91,283,0,0,0.827586],
[8,0,0,457,182,567,0.0,0.0,0.0,1.003448,1.003448,91,283,0,0,0.827586]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.137931],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.137931],
[6,0,736,903,104,121,40.110344,181.499313,0.0,1.002759,1.002759,52,60,0,0,0.862069],
[7,0,368,457,182,567,0.0,0.0,0.0,1.002759,1.002759,91,283,0,0,0.862069],
[8,0,0,457,182,567,0.0,0.0,0.0,1.002759,1.002759,91,283,0,0,0.862069]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.103448],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.103448],
[6,0,736,903,104,121,40.082760,181.374481,0.0,1.002069,1.002069,52,60,0,0,0.896552],
[7,0,368,457,182,567,0.0,0.0,0.0,1.002069,1.002069,91,283,0,0,0.896552],
[8,0,0,457,182,567,0.0,0.0,0.0,1.002069,1.002069,91,283,0,0,0.896552]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.068965],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.068965],
[6,0,736,903,104,121,40.055168,181.249649,0.0,1.001379,1.001379,52,60,0,0,0.931035],
[7,0,368,457,182,567,0.0,0.0,0.0,1.001379,1.001379,91,283,0,0,0.931035],
[8,0,0,457,182,567,0.0,0.0,0.0,1.001379,1.001379,91,283,0,0,0.931035]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.034483],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.034483],
[6,0,736,903,104,121,40.027584,181.124817,0.0,1.000690,1.000690,52,60,0,0,0.965517],
[7,0,368,457,182,567,0.0,0.0,0.0,1.000690,1.000690,91,283,0,0,0.965517],
[8,0,0,457,182,567,0.0,0.0,0.0,1.000690,1.000690,91,283,0,0,0.965517]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[6,0,736,903,104,121,40.0,181.0,0.0,1.0,1.0,52,60],
[7,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[8,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
]
]
}
}
]

},{}],61:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-09-01.png"],
"name": "obj05_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 600,
"MarginWidth": 108,
"MarginHeight": 308,
"parts": ["root","Obj","04","03","02_ura","01"],
"ssa": [
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,181.0,0.0,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,181.142853,0.001247,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,181.285721,0.002493,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,181.428574,0.003740,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,181.571426,0.004987,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,181.714279,0.006233,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,181.857147,0.007480,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,182.0,0.008727,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,182.142853,0.009973,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,182.285721,0.011220,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,182.428574,0.012467,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,182.571426,0.013713,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,182.714279,0.014960,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,182.857147,0.016207,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,183.0,0.017453,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,182.866669,0.016290,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,182.733337,0.015126,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,182.600006,0.013963,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,182.466660,0.012799,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,182.333328,0.011636,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,182.199997,0.010472,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,182.066666,0.009308,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,181.933334,0.008145,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,181.800003,0.006981,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,181.666672,0.005818,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,181.533340,0.004654,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,181.399994,0.003491,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,181.266663,0.002327,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,181.133331,0.001164,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[2,0,736,903,104,121,40.0,181.0,0.0,1.0,1.0,52,60],
[3,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
]
]
}
}
]

},{}],62:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-09-01.png"],
"name": "obj06_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 200,
"CanvasHeight": 600,
"MarginWidth": 108,
"MarginHeight": 308,
"parts": ["root","Obj","04_1","omote","02_omote","01_1","ura","03","02_ura","01_2"],
"ssa": [
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[6,0,736,903,104,121,40.0,181.0,0.0,1.0,1.0,52,60],
[7,0,368,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[8,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.034483],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.034483],
[6,0,736,903,104,121,40.027584,181.124817,0.0,1.000690,1.000690,52,60,0,0,0.965517],
[7,0,368,457,182,567,0.0,0.0,0.0,1.000690,1.000690,91,283,0,0,0.965517],
[8,0,0,457,182,567,0.0,0.0,0.0,1.000690,1.000690,91,283,0,0,0.965517]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.068966],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.068966],
[6,0,736,903,104,121,40.055168,181.249649,0.0,1.001379,1.001379,52,60,0,0,0.931035],
[7,0,368,457,182,567,0.0,0.0,0.0,1.001379,1.001379,91,283,0,0,0.931035],
[8,0,0,457,182,567,0.0,0.0,0.0,1.001379,1.001379,91,283,0,0,0.931035]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.103448],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.103448],
[6,0,736,903,104,121,40.082760,181.374481,0.0,1.002069,1.002069,52,60,0,0,0.896552],
[7,0,368,457,182,567,0.0,0.0,0.0,1.002069,1.002069,91,283,0,0,0.896552],
[8,0,0,457,182,567,0.0,0.0,0.0,1.002069,1.002069,91,283,0,0,0.896552]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.137931],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.137931],
[6,0,736,903,104,121,40.110344,181.499313,0.0,1.002759,1.002759,52,60,0,0,0.862069],
[7,0,368,457,182,567,0.0,0.0,0.0,1.002759,1.002759,91,283,0,0,0.862069],
[8,0,0,457,182,567,0.0,0.0,0.0,1.002759,1.002759,91,283,0,0,0.862069]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.172414],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.172414],
[6,0,736,903,104,121,40.137932,181.624130,0.0,1.003448,1.003448,52,60,0,0,0.827586],
[7,0,368,457,182,567,0.0,0.0,0.0,1.003448,1.003448,91,283,0,0,0.827586],
[8,0,0,457,182,567,0.0,0.0,0.0,1.003448,1.003448,91,283,0,0,0.827586]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.206897],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.206897],
[6,0,736,903,104,121,40.165516,181.748962,0.0,1.004138,1.004138,52,60,0,0,0.793103],
[7,0,368,457,182,567,0.0,0.0,0.0,1.004138,1.004138,91,283,0,0,0.793103],
[8,0,0,457,182,567,0.0,0.0,0.0,1.004138,1.004138,91,283,0,0,0.793103]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.241379],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.241379],
[6,0,736,903,104,121,40.193104,181.873795,0.0,1.004828,1.004828,52,60,0,0,0.758621],
[7,0,368,457,182,567,0.0,0.0,0.0,1.004828,1.004828,91,283,0,0,0.758621],
[8,0,0,457,182,567,0.0,0.0,0.0,1.004828,1.004828,91,283,0,0,0.758621]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.275862],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.275862],
[6,0,736,903,104,121,40.220688,181.998627,0.0,1.005517,1.005517,52,60,0,0,0.724138],
[7,0,368,457,182,567,0.0,0.0,0.0,1.005517,1.005517,91,283,0,0,0.724138],
[8,0,0,457,182,567,0.0,0.0,0.0,1.005517,1.005517,91,283,0,0,0.724138]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.310345],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.310345],
[6,0,736,903,104,121,40.248276,182.123444,0.0,1.006207,1.006207,52,60,0,0,0.689655],
[7,0,368,457,182,567,0.0,0.0,0.0,1.006207,1.006207,91,283,0,0,0.689655],
[8,0,0,457,182,567,0.0,0.0,0.0,1.006207,1.006207,91,283,0,0,0.689655]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.344828],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.344828],
[6,0,736,903,104,121,40.275860,182.248260,0.0,1.006896,1.006896,52,60,0,0,0.655172],
[7,0,368,457,182,567,0.0,0.0,0.0,1.006896,1.006896,91,283,0,0,0.655172],
[8,0,0,457,182,567,0.0,0.0,0.0,1.006896,1.006896,91,283,0,0,0.655172]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.379310],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.379310],
[6,0,736,903,104,121,40.303452,182.373108,0.0,1.007586,1.007586,52,60,0,0,0.620690],
[7,0,368,457,182,567,0.0,0.0,0.0,1.007586,1.007586,91,283,0,0,0.620690],
[8,0,0,457,182,567,0.0,0.0,0.0,1.007586,1.007586,91,283,0,0,0.620690]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.413793],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.413793],
[6,0,736,903,104,121,40.331036,182.497925,0.0,1.008276,1.008276,52,60,0,0,0.586207],
[7,0,368,457,182,567,0.0,0.0,0.0,1.008276,1.008276,91,283,0,0,0.586207],
[8,0,0,457,182,567,0.0,0.0,0.0,1.008276,1.008276,91,283,0,0,0.586207]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.448276],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.448276],
[6,0,736,903,104,121,40.358620,182.622757,0.0,1.008965,1.008965,52,60,0,0,0.551724],
[7,0,368,457,182,567,0.0,0.0,0.0,1.008965,1.008965,91,283,0,0,0.551724],
[8,0,0,457,182,567,0.0,0.0,0.0,1.008965,1.008965,91,283,0,0,0.551724]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.482759],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.482759],
[6,0,736,903,104,121,40.386204,182.747574,0.0,1.009655,1.009655,52,60,0,0,0.517241],
[7,0,368,457,182,567,0.0,0.0,0.0,1.009655,1.009655,91,283,0,0,0.517241],
[8,0,0,457,182,567,0.0,0.0,0.0,1.009655,1.009655,91,283,0,0,0.517241]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.517241],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.517241],
[6,0,736,903,104,121,40.413795,182.872421,0.0,1.010345,1.010345,52,60,0,0,0.482759],
[7,0,368,457,182,567,0.0,0.0,0.0,1.010345,1.010345,91,283,0,0,0.482759],
[8,0,0,457,182,567,0.0,0.0,0.0,1.010345,1.010345,91,283,0,0,0.482759]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.551724],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.551724],
[6,0,736,903,104,121,40.441380,182.997238,0.0,1.011034,1.011034,52,60,0,0,0.448276],
[7,0,368,457,182,567,0.0,0.0,0.0,1.011034,1.011034,91,283,0,0,0.448276],
[8,0,0,457,182,567,0.0,0.0,0.0,1.011034,1.011034,91,283,0,0,0.448276]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.586207],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.586207],
[6,0,736,903,104,121,40.468964,183.122070,0.0,1.011724,1.011724,52,60,0,0,0.413793],
[7,0,368,457,182,567,0.0,0.0,0.0,1.011724,1.011724,91,283,0,0,0.413793],
[8,0,0,457,182,567,0.0,0.0,0.0,1.011724,1.011724,91,283,0,0,0.413793]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.620690],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.620690],
[6,0,736,903,104,121,40.496552,183.246887,0.0,1.012414,1.012414,52,60,0,0,0.379310],
[7,0,368,457,182,567,0.0,0.0,0.0,1.012414,1.012414,91,283,0,0,0.379310],
[8,0,0,457,182,567,0.0,0.0,0.0,1.012414,1.012414,91,283,0,0,0.379310]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.655172],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.655172],
[6,0,736,903,104,121,40.524139,183.371735,0.0,1.013103,1.013103,52,60,0,0,0.344828],
[7,0,368,457,182,567,0.0,0.0,0.0,1.013103,1.013103,91,283,0,0,0.344828],
[8,0,0,457,182,567,0.0,0.0,0.0,1.013103,1.013103,91,283,0,0,0.344828]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.689655],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.689655],
[6,0,736,903,104,121,40.551723,183.496552,0.0,1.013793,1.013793,52,60,0,0,0.310345],
[7,0,368,457,182,567,0.0,0.0,0.0,1.013793,1.013793,91,283,0,0,0.310345],
[8,0,0,457,182,567,0.0,0.0,0.0,1.013793,1.013793,91,283,0,0,0.310345]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.724138],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.724138],
[6,0,736,903,104,121,40.579308,183.621368,0.0,1.014483,1.014483,52,60,0,0,0.275862],
[7,0,368,457,182,567,0.0,0.0,0.0,1.014483,1.014483,91,283,0,0,0.275862],
[8,0,0,457,182,567,0.0,0.0,0.0,1.014483,1.014483,91,283,0,0,0.275862]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.758621],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.758621],
[6,0,736,903,104,121,40.606895,183.746201,0.0,1.015172,1.015172,52,60,0,0,0.241379],
[7,0,368,457,182,567,0.0,0.0,0.0,1.015172,1.015172,91,283,0,0,0.241379],
[8,0,0,457,182,567,0.0,0.0,0.0,1.015172,1.015172,91,283,0,0,0.241379]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.793103],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.793103],
[6,0,736,903,104,121,40.634483,183.871048,0.0,1.015862,1.015862,52,60,0,0,0.206897],
[7,0,368,457,182,567,0.0,0.0,0.0,1.015862,1.015862,91,283,0,0,0.206897],
[8,0,0,457,182,567,0.0,0.0,0.0,1.015862,1.015862,91,283,0,0,0.206897]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.827586],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.827586],
[6,0,736,903,104,121,40.662071,183.995865,0.0,1.016552,1.016552,52,60,0,0,0.172414],
[7,0,368,457,182,567,0.0,0.0,0.0,1.016552,1.016552,91,283,0,0,0.172414],
[8,0,0,457,182,567,0.0,0.0,0.0,1.016552,1.016552,91,283,0,0,0.172414]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.862069],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.862069],
[6,0,736,903,104,121,40.689655,184.120682,0.0,1.017241,1.017241,52,60,0,0,0.137931],
[7,0,368,457,182,567,0.0,0.0,0.0,1.017241,1.017241,91,283,0,0,0.137931],
[8,0,0,457,182,567,0.0,0.0,0.0,1.017241,1.017241,91,283,0,0,0.137931]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.896552],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.896552],
[6,0,736,903,104,121,40.717239,184.245514,0.0,1.017931,1.017931,52,60,0,0,0.103448],
[7,0,368,457,182,567,0.0,0.0,0.0,1.017931,1.017931,91,283,0,0,0.103448],
[8,0,0,457,182,567,0.0,0.0,0.0,1.017931,1.017931,91,283,0,0,0.103448]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.931035],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.931035],
[6,0,736,903,104,121,40.744827,184.370346,0.0,1.018621,1.018621,52,60,0,0,0.068965],
[7,0,368,457,182,567,0.0,0.0,0.0,1.018621,1.018621,91,283,0,0,0.068965],
[8,0,0,457,182,567,0.0,0.0,0.0,1.018621,1.018621,91,283,0,0,0.068965]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.965517],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283,0,0,0.965517],
[6,0,736,903,104,121,40.772415,184.495178,0.0,1.019310,1.019310,52,60,0,0,0.034483],
[7,0,368,457,182,567,0.0,0.0,0.0,1.019310,1.019310,91,283,0,0,0.034483],
[8,0,0,457,182,567,0.0,0.0,0.0,1.019310,1.019310,91,283,0,0,0.034483]
],
[
[1,0,552,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[3,0,184,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283],
[4,0,0,457,182,567,0.0,0.0,0.0,1.0,1.0,91,283]
]
]
}
}
]

},{}],63:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-10-01.png"],
"name": "obj01_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 340,
"CanvasHeight": 740,
"MarginWidth": 178,
"MarginHeight": 378,
"parts": ["root","Obj","01_omote","02_omote","03"],
"ssa": [
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.017453,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.013713,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.009973,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.006233,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.002493,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.001247,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.004987,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.008727,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.012467,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.016207,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.019947,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.023687,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.027427,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.031167,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.034907,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.031416,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.027925,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.024435,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.020944,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.017453,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.013963,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.010472,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.006981,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.003491,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.000000,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.003491,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.006981,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.010472,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.013963,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.017453,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
]
]
}
}
]

},{}],64:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-10-01.png"],
"name": "obj02_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 340,
"CanvasHeight": 740,
"MarginWidth": 178,
"MarginHeight": 378,
"parts": ["root","Obj","01_omote","02_omote","03"],
"ssa": [
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.017453,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.013713,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.009973,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.006233,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.002493,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.001247,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.004987,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.008727,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.012467,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.016207,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.019947,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.023687,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.027427,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.031167,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.034907,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.031416,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.027925,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.024435,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.020944,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.017453,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.013963,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.010472,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.006981,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.003491,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.000000,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.003491,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.006981,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.010472,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.013963,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.017453,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
]
]
}
}
]

},{}],65:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-10-01.png"],
"name": "obj03_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 340,
"CanvasHeight": 740,
"MarginWidth": 178,
"MarginHeight": 378,
"parts": ["root","Obj","01_omote","02_omote","03"],
"ssa": [
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.017453,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.013713,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.009973,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.006233,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.002493,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.001247,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.004987,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.008727,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.012467,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.016207,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.019947,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.023687,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.027427,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.031167,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.034907,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.031416,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.027925,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.024435,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.020944,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.017453,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.013963,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.010472,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.006981,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,-0.003491,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.000000,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.003491,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.006981,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.010472,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.013963,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,610,63,206,0.0,-30.0,0.017453,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
]
]
}
}
]

},{}],66:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-10-01.png"],
"name": "obj04_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 340,
"CanvasHeight": 740,
"MarginWidth": 178,
"MarginHeight": 378,
"parts": ["root","Obj","omote","01_omote","02_omote","03_1","ura","01_ura","02_omote_1","03"],
"ssa": [
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[3,0,819,610,63,206,0.0,-30.0,0.008727,1.0,1.0,22,3],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.965517],
[3,0,819,610,63,206,0.0,-30.0,0.005610,1.0,1.0,22,3,0,0,0.965517],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.965517],
[6,0,273,372,271,652,0.0,0.0,0.0,1.019310,1.019310,135,326,0,0,0.034483],
[7,0,819,818,63,206,0.0,-20.386208,0.001870,1.022223,1.022223,22,3,0,0,0.034483],
[8,0,546,372,270,652,0.0,0.0,0.0,1.019310,1.019310,135,326,0,0,0.034483]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.931035],
[3,0,819,610,63,206,0.0,-30.0,0.002493,1.0,1.0,22,3,0,0,0.931035],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.931035],
[6,0,273,372,271,652,0.0,0.0,0.0,1.018621,1.018621,135,326,0,0,0.068966],
[7,0,819,818,63,206,0.0,-20.372414,-0.004987,1.024441,1.024441,22,3,0,0,0.068966],
[8,0,546,372,270,652,0.0,0.0,0.0,1.018621,1.018621,135,326,0,0,0.068966]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.896552],
[3,0,819,610,63,206,0.0,-30.0,-0.000623,1.0,1.0,22,3,0,0,0.896552],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.896552],
[6,0,273,372,271,652,0.0,0.0,0.0,1.017931,1.017931,135,326,0,0,0.103448],
[7,0,819,818,63,206,0.0,-20.358620,-0.011843,1.026656,1.026656,22,3,0,0,0.103448],
[8,0,546,372,270,652,0.0,0.0,0.0,1.017931,1.017931,135,326,0,0,0.103448]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.862069],
[3,0,819,610,63,206,0.0,-30.0,-0.003740,1.0,1.0,22,3,0,0,0.862069],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.862069],
[6,0,273,372,271,652,0.0,0.0,0.0,1.017241,1.017241,135,326,0,0,0.137931],
[7,0,819,818,63,206,0.0,-20.344828,-0.018700,1.028867,1.028867,22,3,0,0,0.137931],
[8,0,546,372,270,652,0.0,0.0,0.0,1.017241,1.017241,135,326,0,0,0.137931]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.827586],
[3,0,819,610,63,206,0.0,-30.0,-0.006857,1.0,1.0,22,3,0,0,0.827586],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.827586],
[6,0,273,372,271,652,0.0,0.0,0.0,1.016552,1.016552,135,326,0,0,0.172414],
[7,0,819,818,63,206,0.0,-20.331036,-0.025557,1.031074,1.031074,22,3,0,0,0.172414],
[8,0,546,372,270,652,0.0,0.0,0.0,1.016552,1.016552,135,326,0,0,0.172414]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.793103],
[3,0,819,610,63,206,0.0,-30.0,-0.009973,1.0,1.0,22,3,0,0,0.793103],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.793103],
[6,0,273,372,271,652,0.0,0.0,0.0,1.015862,1.015862,135,326,0,0,0.206897],
[7,0,819,818,63,206,0.0,-20.317242,-0.032413,1.033277,1.033277,22,3,0,0,0.206897],
[8,0,546,372,270,652,0.0,0.0,0.0,1.015862,1.015862,135,326,0,0,0.206897]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.758621],
[3,0,819,610,63,206,0.0,-30.0,-0.013090,1.0,1.0,22,3,0,0,0.758621],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.758621],
[6,0,273,372,271,652,0.0,0.0,0.0,1.015172,1.015172,135,326,0,0,0.241379],
[7,0,819,818,63,206,0.0,-20.303448,-0.039270,1.035476,1.035476,22,3,0,0,0.241379],
[8,0,546,372,270,652,0.0,0.0,0.0,1.015172,1.015172,135,326,0,0,0.241379]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.724138],
[3,0,819,610,63,206,0.0,-30.0,-0.016207,1.0,1.0,22,3,0,0,0.724138],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.724138],
[6,0,273,372,271,652,0.0,0.0,0.0,1.014483,1.014483,135,326,0,0,0.275862],
[7,0,819,818,63,206,0.0,-20.289654,-0.046127,1.031874,1.031874,22,3,0,0,0.275862],
[8,0,546,372,270,652,0.0,0.0,0.0,1.014483,1.014483,135,326,0,0,0.275862]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.689655],
[3,0,819,610,63,206,0.0,-30.0,-0.019323,1.0,1.0,22,3,0,0,0.689655],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.689655],
[6,0,273,372,271,652,0.0,0.0,0.0,1.013793,1.013793,135,326,0,0,0.310345],
[7,0,819,818,63,206,0.0,-20.275862,-0.052983,1.028276,1.028276,22,3,0,0,0.310345],
[8,0,546,372,270,652,0.0,0.0,0.0,1.013793,1.013793,135,326,0,0,0.310345]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.655172],
[3,0,819,610,63,206,0.0,-30.0,-0.022440,1.0,1.0,22,3,0,0,0.655172],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.655172],
[6,0,273,372,271,652,0.0,0.0,0.0,1.013103,1.013103,135,326,0,0,0.344828],
[7,0,819,818,63,206,0.0,-20.262070,-0.059840,1.024682,1.024682,22,3,0,0,0.344828],
[8,0,546,372,270,652,0.0,0.0,0.0,1.013103,1.013103,135,326,0,0,0.344828]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.620690],
[3,0,819,610,63,206,0.0,-30.0,-0.025557,1.0,1.0,22,3,0,0,0.620690],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.620690],
[6,0,273,372,271,652,0.0,0.0,0.0,1.012414,1.012414,135,326,0,0,0.379310],
[7,0,819,818,63,206,0.0,-20.248276,-0.066697,1.021092,1.021092,22,3,0,0,0.379310],
[8,0,546,372,270,652,0.0,0.0,0.0,1.012414,1.012414,135,326,0,0,0.379310]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.586207],
[3,0,819,610,63,206,0.0,-30.0,-0.028673,1.0,1.0,22,3,0,0,0.586207],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.586207],
[6,0,273,372,271,652,0.0,0.0,0.0,1.011724,1.011724,135,326,0,0,0.413793],
[7,0,819,818,63,206,0.0,-20.234482,-0.073553,1.017505,1.017505,22,3,0,0,0.413793],
[8,0,546,372,270,652,0.0,0.0,0.0,1.011724,1.011724,135,326,0,0,0.413793]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.551724],
[3,0,819,610,63,206,0.0,-30.0,-0.031790,1.0,1.0,22,3,0,0,0.551724],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.551724],
[6,0,273,372,271,652,0.0,0.0,0.0,1.011034,1.011034,135,326,0,0,0.448276],
[7,0,819,818,63,206,0.0,-20.220690,-0.080410,1.013923,1.013923,22,3,0,0,0.448276],
[8,0,546,372,270,652,0.0,0.0,0.0,1.011034,1.011034,135,326,0,0,0.448276]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.517241],
[3,0,819,610,63,206,0.0,-30.0,-0.034907,1.0,1.0,22,3,0,0,0.517241],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.517241],
[6,0,273,372,271,652,0.0,0.0,0.0,1.010345,1.010345,135,326,0,0,0.482759],
[7,0,819,818,63,206,0.0,-20.206898,-0.087266,1.010345,1.010345,22,3,0,0,0.482759],
[8,0,546,372,270,652,0.0,0.0,0.0,1.010345,1.010345,135,326,0,0,0.482759]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.482759],
[3,0,819,610,63,206,0.0,-30.0,-0.031998,1.0,1.0,22,3,0,0,0.482759],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.482759],
[6,0,273,372,271,652,0.0,0.0,0.0,1.009655,1.009655,135,326,0,0,0.517241],
[7,0,819,818,63,206,0.0,-20.193102,-0.080867,1.012179,1.012179,22,3,0,0,0.517241],
[8,0,546,372,270,652,0.0,0.0,0.0,1.009655,1.009655,135,326,0,0,0.517241]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.448276],
[3,0,819,610,63,206,0.0,-30.0,-0.029089,1.0,1.0,22,3,0,0,0.448276],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.448276],
[6,0,273,372,271,652,0.0,0.0,0.0,1.008965,1.008965,135,326,0,0,0.551724],
[7,0,819,818,63,206,0.0,-20.179310,-0.074467,1.014010,1.014010,22,3,0,0,0.551724],
[8,0,546,372,270,652,0.0,0.0,0.0,1.008965,1.008965,135,326,0,0,0.551724]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.413793],
[3,0,819,610,63,206,0.0,-30.0,-0.026180,1.0,1.0,22,3,0,0,0.413793],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.413793],
[6,0,273,372,271,652,0.0,0.0,0.0,1.008276,1.008276,135,326,0,0,0.586207],
[7,0,819,818,63,206,0.0,-20.165518,-0.068068,1.015838,1.015838,22,3,0,0,0.586207],
[8,0,546,372,270,652,0.0,0.0,0.0,1.008276,1.008276,135,326,0,0,0.586207]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.379310],
[3,0,819,610,63,206,0.0,-30.0,-0.023271,1.0,1.0,22,3,0,0,0.379310],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.379310],
[6,0,273,372,271,652,0.0,0.0,0.0,1.007586,1.007586,135,326,0,0,0.620690],
[7,0,819,818,63,206,0.0,-20.151726,-0.061668,1.017662,1.017662,22,3,0,0,0.620690],
[8,0,546,372,270,652,0.0,0.0,0.0,1.007586,1.007586,135,326,0,0,0.620690]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.344828],
[3,0,819,610,63,206,0.0,-30.0,-0.020362,1.0,1.0,22,3,0,0,0.344828],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.344828],
[6,0,273,372,271,652,0.0,0.0,0.0,1.006896,1.006896,135,326,0,0,0.655172],
[7,0,819,818,63,206,0.0,-20.137930,-0.055269,1.019483,1.019483,22,3,0,0,0.655172],
[8,0,546,372,270,652,0.0,0.0,0.0,1.006896,1.006896,135,326,0,0,0.655172]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.310345],
[3,0,819,610,63,206,0.0,-30.0,-0.017453,1.0,1.0,22,3,0,0,0.310345],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.310345],
[6,0,273,372,271,652,0.0,0.0,0.0,1.006207,1.006207,135,326,0,0,0.689655],
[7,0,819,818,63,206,0.0,-20.124138,-0.048869,1.021300,1.021300,22,3,0,0,0.689655],
[8,0,546,372,270,652,0.0,0.0,0.0,1.006207,1.006207,135,326,0,0,0.689655]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.275862],
[3,0,819,610,63,206,0.0,-30.0,-0.014544,1.0,1.0,22,3,0,0,0.275862],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.275862],
[6,0,273,372,271,652,0.0,0.0,0.0,1.005517,1.005517,135,326,0,0,0.724138],
[7,0,819,818,63,206,0.0,-20.110344,-0.042470,1.023114,1.023114,22,3,0,0,0.724138],
[8,0,546,372,270,652,0.0,0.0,0.0,1.005517,1.005517,135,326,0,0,0.724138]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.241379],
[3,0,819,610,63,206,0.0,-30.0,-0.011636,1.0,1.0,22,3,0,0,0.241379],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.241379],
[6,0,273,372,271,652,0.0,0.0,0.0,1.004828,1.004828,135,326,0,0,0.758621],
[7,0,819,818,63,206,0.0,-20.096552,-0.036070,1.024924,1.024924,22,3,0,0,0.758621],
[8,0,546,372,270,652,0.0,0.0,0.0,1.004828,1.004828,135,326,0,0,0.758621]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.206897],
[3,0,819,610,63,206,0.0,-30.0,-0.008727,1.0,1.0,22,3,0,0,0.206897],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.206897],
[6,0,273,372,271,652,0.0,0.0,0.0,1.004138,1.004138,135,326,0,0,0.793103],
[7,0,819,818,63,206,0.0,-20.082758,-0.029671,1.021352,1.021352,22,3,0,0,0.793103],
[8,0,546,372,270,652,0.0,0.0,0.0,1.004138,1.004138,135,326,0,0,0.793103]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.172414],
[3,0,819,610,63,206,0.0,-30.0,-0.005818,1.0,1.0,22,3,0,0,0.172414],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.172414],
[6,0,273,372,271,652,0.0,0.0,0.0,1.003448,1.003448,135,326,0,0,0.827586],
[7,0,819,818,63,206,0.0,-20.068966,-0.023271,1.017783,1.017783,22,3,0,0,0.827586],
[8,0,546,372,270,652,0.0,0.0,0.0,1.003448,1.003448,135,326,0,0,0.827586]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.137931],
[3,0,819,610,63,206,0.0,-30.0,-0.002909,1.0,1.0,22,3,0,0,0.137931],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.137931],
[6,0,273,372,271,652,0.0,0.0,0.0,1.002759,1.002759,135,326,0,0,0.862069],
[7,0,819,818,63,206,0.0,-20.055172,-0.016872,1.014219,1.014219,22,3,0,0,0.862069],
[8,0,546,372,270,652,0.0,0.0,0.0,1.002759,1.002759,135,326,0,0,0.862069]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.103448],
[3,0,819,610,63,206,0.0,-30.0,0.000000,1.0,1.0,22,3,0,0,0.103448],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.103448],
[6,0,273,372,271,652,0.0,0.0,0.0,1.002069,1.002069,135,326,0,0,0.896552],
[7,0,819,818,63,206,0.0,-20.041380,-0.010472,1.010658,1.010658,22,3,0,0,0.896552],
[8,0,546,372,270,652,0.0,0.0,0.0,1.002069,1.002069,135,326,0,0,0.896552]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.068965],
[3,0,819,610,63,206,0.0,-30.0,0.002909,1.0,1.0,22,3,0,0,0.068965],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.068965],
[6,0,273,372,271,652,0.0,0.0,0.0,1.001379,1.001379,135,326,0,0,0.931035],
[7,0,819,818,63,206,0.0,-20.027584,-0.004072,1.007101,1.007101,22,3,0,0,0.931035],
[8,0,546,372,270,652,0.0,0.0,0.0,1.001379,1.001379,135,326,0,0,0.931035]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.034483],
[3,0,819,610,63,206,0.0,-30.0,0.005818,1.0,1.0,22,3,0,0,0.034483],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.034483],
[6,0,273,372,271,652,0.0,0.0,0.0,1.000690,1.000690,135,326,0,0,0.965517],
[7,0,819,818,63,206,0.0,-20.013792,0.002327,1.003549,1.003549,22,3,0,0,0.965517],
[8,0,546,372,270,652,0.0,0.0,0.0,1.000690,1.000690,135,326,0,0,0.965517]
],
[
[6,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[7,0,819,818,63,206,0.0,-20.0,0.008727,1.0,1.0,22,3],
[8,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
]
]
}
}
]

},{}],67:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-10-01.png"],
"name": "obj05_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 340,
"CanvasHeight": 740,
"MarginWidth": 178,
"MarginHeight": 378,
"parts": ["root","Obj","01_ura","02_omote_1","03"],
"ssa": [
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,0.008727,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,0.001870,1.002857,1.002857,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.004987,1.005714,1.005714,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.011843,1.008571,1.008571,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.018700,1.011429,1.011429,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.025557,1.014286,1.014286,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.032413,1.017143,1.017143,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.039270,1.020000,1.020000,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.046127,1.017143,1.017143,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.052983,1.014286,1.014286,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.059840,1.011429,1.011429,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.066697,1.008571,1.008571,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.073553,1.005714,1.005714,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.080410,1.002857,1.002857,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.087266,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.080867,1.002500,1.002500,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.074467,1.005000,1.005000,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.068068,1.007500,1.007500,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.061668,1.010000,1.010000,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.055269,1.012500,1.012500,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.048869,1.015000,1.015000,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.042470,1.017500,1.017500,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.036070,1.020000,1.020000,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.029671,1.017143,1.017143,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.023271,1.014286,1.014286,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.016872,1.011429,1.011429,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.010472,1.008571,1.008571,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,-0.004072,1.005714,1.005714,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,0.002327,1.002857,1.002857,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[1,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[2,0,819,818,63,206,0.0,-20.0,0.008727,1.0,1.0,22,3],
[3,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
]
]
}
}
]

},{}],68:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-10-01.png"],
"name": "obj06_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 340,
"CanvasHeight": 740,
"MarginWidth": 178,
"MarginHeight": 378,
"parts": ["root","Obj","omote","01_omote","02_omote","03_1","ura","01_ura","02_omote_1","03"],
"ssa": [
[
[6,0,273,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[7,0,819,818,63,206,0.0,-20.0,0.008727,1.0,1.0,22,3],
[8,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.034483],
[3,0,819,610,63,206,0.0,-30.0,0.005610,1.0,1.0,22,3,0,0,0.034483],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.034483],
[6,0,273,372,271,652,0.0,0.0,0.0,1.000690,1.000690,135,326,0,0,0.965517],
[7,0,819,818,63,206,0.0,-20.013792,0.001870,1.003549,1.003549,22,3,0,0,0.965517],
[8,0,546,372,270,652,0.0,0.0,0.0,1.000690,1.000690,135,326,0,0,0.965517]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.068966],
[3,0,819,610,63,206,0.0,-30.0,0.002493,1.0,1.0,22,3,0,0,0.068966],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.068966],
[6,0,273,372,271,652,0.0,0.0,0.0,1.001379,1.001379,135,326,0,0,0.931035],
[7,0,819,818,63,206,0.0,-20.027584,-0.004987,1.007101,1.007101,22,3,0,0,0.931035],
[8,0,546,372,270,652,0.0,0.0,0.0,1.001379,1.001379,135,326,0,0,0.931035]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.103448],
[3,0,819,610,63,206,0.0,-30.0,-0.000623,1.0,1.0,22,3,0,0,0.103448],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.103448],
[6,0,273,372,271,652,0.0,0.0,0.0,1.002069,1.002069,135,326,0,0,0.896552],
[7,0,819,818,63,206,0.0,-20.041380,-0.011843,1.010658,1.010658,22,3,0,0,0.896552],
[8,0,546,372,270,652,0.0,0.0,0.0,1.002069,1.002069,135,326,0,0,0.896552]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.137931],
[3,0,819,610,63,206,0.0,-30.0,-0.003740,1.0,1.0,22,3,0,0,0.137931],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.137931],
[6,0,273,372,271,652,0.0,0.0,0.0,1.002759,1.002759,135,326,0,0,0.862069],
[7,0,819,818,63,206,0.0,-20.055172,-0.018700,1.014219,1.014219,22,3,0,0,0.862069],
[8,0,546,372,270,652,0.0,0.0,0.0,1.002759,1.002759,135,326,0,0,0.862069]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.172414],
[3,0,819,610,63,206,0.0,-30.0,-0.006857,1.0,1.0,22,3,0,0,0.172414],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.172414],
[6,0,273,372,271,652,0.0,0.0,0.0,1.003448,1.003448,135,326,0,0,0.827586],
[7,0,819,818,63,206,0.0,-20.068966,-0.025557,1.017783,1.017783,22,3,0,0,0.827586],
[8,0,546,372,270,652,0.0,0.0,0.0,1.003448,1.003448,135,326,0,0,0.827586]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.206897],
[3,0,819,610,63,206,0.0,-30.0,-0.009973,1.0,1.0,22,3,0,0,0.206897],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.206897],
[6,0,273,372,271,652,0.0,0.0,0.0,1.004138,1.004138,135,326,0,0,0.793103],
[7,0,819,818,63,206,0.0,-20.082758,-0.032413,1.021352,1.021352,22,3,0,0,0.793103],
[8,0,546,372,270,652,0.0,0.0,0.0,1.004138,1.004138,135,326,0,0,0.793103]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.241379],
[3,0,819,610,63,206,0.0,-30.0,-0.013090,1.0,1.0,22,3,0,0,0.241379],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.241379],
[6,0,273,372,271,652,0.0,0.0,0.0,1.004828,1.004828,135,326,0,0,0.758621],
[7,0,819,818,63,206,0.0,-20.096552,-0.039270,1.024924,1.024924,22,3,0,0,0.758621],
[8,0,546,372,270,652,0.0,0.0,0.0,1.004828,1.004828,135,326,0,0,0.758621]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.275862],
[3,0,819,610,63,206,0.0,-30.0,-0.016207,1.0,1.0,22,3,0,0,0.275862],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.275862],
[6,0,273,372,271,652,0.0,0.0,0.0,1.005517,1.005517,135,326,0,0,0.724138],
[7,0,819,818,63,206,0.0,-20.110344,-0.046127,1.022755,1.022755,22,3,0,0,0.724138],
[8,0,546,372,270,652,0.0,0.0,0.0,1.005517,1.005517,135,326,0,0,0.724138]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.310345],
[3,0,819,610,63,206,0.0,-30.0,-0.019323,1.0,1.0,22,3,0,0,0.310345],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.310345],
[6,0,273,372,271,652,0.0,0.0,0.0,1.006207,1.006207,135,326,0,0,0.689655],
[7,0,819,818,63,206,0.0,-20.124138,-0.052983,1.020581,1.020581,22,3,0,0,0.689655],
[8,0,546,372,270,652,0.0,0.0,0.0,1.006207,1.006207,135,326,0,0,0.689655]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.344828],
[3,0,819,610,63,206,0.0,-30.0,-0.022440,1.0,1.0,22,3,0,0,0.344828],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.344828],
[6,0,273,372,271,652,0.0,0.0,0.0,1.006896,1.006896,135,326,0,0,0.655172],
[7,0,819,818,63,206,0.0,-20.137930,-0.059840,1.018404,1.018404,22,3,0,0,0.655172],
[8,0,546,372,270,652,0.0,0.0,0.0,1.006896,1.006896,135,326,0,0,0.655172]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.379310],
[3,0,819,610,63,206,0.0,-30.0,-0.025557,1.0,1.0,22,3,0,0,0.379310],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.379310],
[6,0,273,372,271,652,0.0,0.0,0.0,1.007586,1.007586,135,326,0,0,0.620690],
[7,0,819,818,63,206,0.0,-20.151726,-0.066697,1.016223,1.016223,22,3,0,0,0.620690],
[8,0,546,372,270,652,0.0,0.0,0.0,1.007586,1.007586,135,326,0,0,0.620690]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.413793],
[3,0,819,610,63,206,0.0,-30.0,-0.028673,1.0,1.0,22,3,0,0,0.413793],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.413793],
[6,0,273,372,271,652,0.0,0.0,0.0,1.008276,1.008276,135,326,0,0,0.586207],
[7,0,819,818,63,206,0.0,-20.165518,-0.073553,1.014037,1.014037,22,3,0,0,0.586207],
[8,0,546,372,270,652,0.0,0.0,0.0,1.008276,1.008276,135,326,0,0,0.586207]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.448276],
[3,0,819,610,63,206,0.0,-30.0,-0.031790,1.0,1.0,22,3,0,0,0.448276],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.448276],
[6,0,273,372,271,652,0.0,0.0,0.0,1.008965,1.008965,135,326,0,0,0.551724],
[7,0,819,818,63,206,0.0,-20.179310,-0.080410,1.011848,1.011848,22,3,0,0,0.551724],
[8,0,546,372,270,652,0.0,0.0,0.0,1.008965,1.008965,135,326,0,0,0.551724]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.482759],
[3,0,819,610,63,206,0.0,-30.0,-0.034907,1.0,1.0,22,3,0,0,0.482759],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.482759],
[6,0,273,372,271,652,0.0,0.0,0.0,1.009655,1.009655,135,326,0,0,0.517241],
[7,0,819,818,63,206,0.0,-20.193102,-0.087266,1.009655,1.009655,22,3,0,0,0.517241],
[8,0,546,372,270,652,0.0,0.0,0.0,1.009655,1.009655,135,326,0,0,0.517241]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.517241],
[3,0,819,610,63,206,0.0,-30.0,-0.031998,1.0,1.0,22,3,0,0,0.517241],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.517241],
[6,0,273,372,271,652,0.0,0.0,0.0,1.010345,1.010345,135,326,0,0,0.482759],
[7,0,819,818,63,206,0.0,-20.206898,-0.080867,1.012871,1.012871,22,3,0,0,0.482759],
[8,0,546,372,270,652,0.0,0.0,0.0,1.010345,1.010345,135,326,0,0,0.482759]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.551724],
[3,0,819,610,63,206,0.0,-30.0,-0.029089,1.0,1.0,22,3,0,0,0.551724],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.551724],
[6,0,273,372,271,652,0.0,0.0,0.0,1.011034,1.011034,135,326,0,0,0.448276],
[7,0,819,818,63,206,0.0,-20.220690,-0.074467,1.016090,1.016090,22,3,0,0,0.448276],
[8,0,546,372,270,652,0.0,0.0,0.0,1.011034,1.011034,135,326,0,0,0.448276]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.586207],
[3,0,819,610,63,206,0.0,-30.0,-0.026180,1.0,1.0,22,3,0,0,0.586207],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.586207],
[6,0,273,372,271,652,0.0,0.0,0.0,1.011724,1.011724,135,326,0,0,0.413793],
[7,0,819,818,63,206,0.0,-20.234482,-0.068068,1.019312,1.019312,22,3,0,0,0.413793],
[8,0,546,372,270,652,0.0,0.0,0.0,1.011724,1.011724,135,326,0,0,0.413793]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.620690],
[3,0,819,610,63,206,0.0,-30.0,-0.023271,1.0,1.0,22,3,0,0,0.620690],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.620690],
[6,0,273,372,271,652,0.0,0.0,0.0,1.012414,1.012414,135,326,0,0,0.379310],
[7,0,819,818,63,206,0.0,-20.248276,-0.061668,1.022538,1.022538,22,3,0,0,0.379310],
[8,0,546,372,270,652,0.0,0.0,0.0,1.012414,1.012414,135,326,0,0,0.379310]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.655172],
[3,0,819,610,63,206,0.0,-30.0,-0.020362,1.0,1.0,22,3,0,0,0.655172],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.655172],
[6,0,273,372,271,652,0.0,0.0,0.0,1.013103,1.013103,135,326,0,0,0.344828],
[7,0,819,818,63,206,0.0,-20.262070,-0.055269,1.025767,1.025767,22,3,0,0,0.344828],
[8,0,546,372,270,652,0.0,0.0,0.0,1.013103,1.013103,135,326,0,0,0.344828]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.689655],
[3,0,819,610,63,206,0.0,-30.0,-0.017453,1.0,1.0,22,3,0,0,0.689655],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.689655],
[6,0,273,372,271,652,0.0,0.0,0.0,1.013793,1.013793,135,326,0,0,0.310345],
[7,0,819,818,63,206,0.0,-20.275862,-0.048869,1.029000,1.029000,22,3,0,0,0.310345],
[8,0,546,372,270,652,0.0,0.0,0.0,1.013793,1.013793,135,326,0,0,0.310345]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.724138],
[3,0,819,610,63,206,0.0,-30.0,-0.014544,1.0,1.0,22,3,0,0,0.724138],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.724138],
[6,0,273,372,271,652,0.0,0.0,0.0,1.014483,1.014483,135,326,0,0,0.275862],
[7,0,819,818,63,206,0.0,-20.289654,-0.042470,1.032236,1.032236,22,3,0,0,0.275862],
[8,0,546,372,270,652,0.0,0.0,0.0,1.014483,1.014483,135,326,0,0,0.275862]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.758621],
[3,0,819,610,63,206,0.0,-30.0,-0.011636,1.0,1.0,22,3,0,0,0.758621],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.758621],
[6,0,273,372,271,652,0.0,0.0,0.0,1.015172,1.015172,135,326,0,0,0.241379],
[7,0,819,818,63,206,0.0,-20.303448,-0.036070,1.035476,1.035476,22,3,0,0,0.241379],
[8,0,546,372,270,652,0.0,0.0,0.0,1.015172,1.015172,135,326,0,0,0.241379]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.793103],
[3,0,819,610,63,206,0.0,-30.0,-0.008727,1.0,1.0,22,3,0,0,0.793103],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.793103],
[6,0,273,372,271,652,0.0,0.0,0.0,1.015862,1.015862,135,326,0,0,0.206897],
[7,0,819,818,63,206,0.0,-20.317242,-0.029671,1.033277,1.033277,22,3,0,0,0.206897],
[8,0,546,372,270,652,0.0,0.0,0.0,1.015862,1.015862,135,326,0,0,0.206897]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.827586],
[3,0,819,610,63,206,0.0,-30.0,-0.005818,1.0,1.0,22,3,0,0,0.827586],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.827586],
[6,0,273,372,271,652,0.0,0.0,0.0,1.016552,1.016552,135,326,0,0,0.172414],
[7,0,819,818,63,206,0.0,-20.331036,-0.023271,1.031074,1.031074,22,3,0,0,0.172414],
[8,0,546,372,270,652,0.0,0.0,0.0,1.016552,1.016552,135,326,0,0,0.172414]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.862069],
[3,0,819,610,63,206,0.0,-30.0,-0.002909,1.0,1.0,22,3,0,0,0.862069],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.862069],
[6,0,273,372,271,652,0.0,0.0,0.0,1.017241,1.017241,135,326,0,0,0.137931],
[7,0,819,818,63,206,0.0,-20.344828,-0.016872,1.028867,1.028867,22,3,0,0,0.137931],
[8,0,546,372,270,652,0.0,0.0,0.0,1.017241,1.017241,135,326,0,0,0.137931]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.896552],
[3,0,819,610,63,206,0.0,-30.0,0.000000,1.0,1.0,22,3,0,0,0.896552],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.896552],
[6,0,273,372,271,652,0.0,0.0,0.0,1.017931,1.017931,135,326,0,0,0.103448],
[7,0,819,818,63,206,0.0,-20.358620,-0.010472,1.026656,1.026656,22,3,0,0,0.103448],
[8,0,546,372,270,652,0.0,0.0,0.0,1.017931,1.017931,135,326,0,0,0.103448]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.931035],
[3,0,819,610,63,206,0.0,-30.0,0.002909,1.0,1.0,22,3,0,0,0.931035],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.931035],
[6,0,273,372,271,652,0.0,0.0,0.0,1.018621,1.018621,135,326,0,0,0.068965],
[7,0,819,818,63,206,0.0,-20.372414,-0.004072,1.024441,1.024441,22,3,0,0,0.068965],
[8,0,546,372,270,652,0.0,0.0,0.0,1.018621,1.018621,135,326,0,0,0.068965]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.965517],
[3,0,819,610,63,206,0.0,-30.0,0.005818,1.0,1.0,22,3,0,0,0.965517],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326,0,0,0.965517],
[6,0,273,372,271,652,0.0,0.0,0.0,1.019310,1.019310,135,326,0,0,0.034483],
[7,0,819,818,63,206,0.0,-20.386208,0.002327,1.022223,1.022223,22,3,0,0,0.034483],
[8,0,546,372,270,652,0.0,0.0,0.0,1.019310,1.019310,135,326,0,0,0.034483]
],
[
[2,0,0,372,271,652,0.0,0.0,0.0,1.0,1.0,135,326],
[3,0,819,610,63,206,0.0,-30.0,0.008727,1.0,1.0,22,3],
[4,0,546,372,270,652,0.0,0.0,0.0,1.0,1.0,135,326]
]
]
}
}
]

},{}],69:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-11-01.png"],
"name": "obj01_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 1500,
"CanvasHeight": 420,
"MarginWidth": 758,
"MarginHeight": 218,
"parts": ["root","Obj","01_omote"],
"ssa": [
[
[1,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175]
],
[
[1,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175]
]
]
}
}
]

},{}],70:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-11-01.png"],
"name": "obj02_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 1500,
"CanvasHeight": 420,
"MarginWidth": 758,
"MarginHeight": 218,
"parts": ["root","Obj","01_omote"],
"ssa": [
[
[1,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175]
],
[
[1,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175]
]
]
}
}
]

},{}],71:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-11-01.png"],
"name": "obj03_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 1500,
"CanvasHeight": 420,
"MarginWidth": 758,
"MarginHeight": 218,
"parts": ["root","Obj","01_omote"],
"ssa": [
[
[1,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175]
],
[
[1,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175]
]
]
}
}
]

},{}],72:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-11-01.png"],
"name": "obj04_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 1500,
"CanvasHeight": 420,
"MarginWidth": 758,
"MarginHeight": 218,
"parts": ["root","Obj","omote","01_omote","ura","02_ura_01","01_ura"],
"ssa": [
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.965517],
[4,0,0,48,419,270,-58.100689,-100.911728,0.0,1.019310,1.019310,209,135,0,0,0.034483],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.019310,1.019310,713,175,0,0,0.034483]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.931035],
[4,0,0,48,419,270,-58.061382,-100.843452,0.0,1.018621,1.018621,209,135,0,0,0.068966],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.018621,1.018621,713,175,0,0,0.068966]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.896552],
[4,0,0,48,419,270,-58.022064,-100.775169,0.0,1.017931,1.017931,209,135,0,0,0.103448],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.017931,1.017931,713,175,0,0,0.103448]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.862069],
[4,0,0,48,419,270,-57.982758,-100.706894,0.0,1.017241,1.017241,209,135,0,0,0.137931],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.017241,1.017241,713,175,0,0,0.137931]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.827586],
[4,0,0,48,419,270,-57.943447,-100.638618,0.0,1.016552,1.016552,209,135,0,0,0.172414],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.016552,1.016552,713,175,0,0,0.172414]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.793103],
[4,0,0,48,419,270,-57.904140,-100.570351,0.0,1.015862,1.015862,209,135,0,0,0.206897],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.015862,1.015862,713,175,0,0,0.206897]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.758621],
[4,0,0,48,419,270,-57.864826,-100.502068,0.0,1.015172,1.015172,209,135,0,0,0.241379],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.015172,1.015172,713,175,0,0,0.241379]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.724138],
[4,0,0,48,419,270,-57.825516,-100.433792,0.0,1.014483,1.014483,209,135,0,0,0.275862],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.014483,1.014483,713,175,0,0,0.275862]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.689655],
[4,0,0,48,419,270,-57.786209,-100.365517,0.0,1.013793,1.013793,209,135,0,0,0.310345],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.013793,1.013793,713,175,0,0,0.310345]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.655172],
[4,0,0,48,419,270,-57.746899,-100.297241,0.0,1.013103,1.013103,209,135,0,0,0.344828],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.013103,1.013103,713,175,0,0,0.344828]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.620690],
[4,0,0,48,419,270,-57.707584,-100.228958,0.0,1.012414,1.012414,209,135,0,0,0.379310],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.012414,1.012414,713,175,0,0,0.379310]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.586207],
[4,0,0,48,419,270,-57.668274,-100.160690,0.0,1.011724,1.011724,209,135,0,0,0.413793],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.011724,1.011724,713,175,0,0,0.413793]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.551724],
[4,0,0,48,419,270,-57.628967,-100.092415,0.0,1.011034,1.011034,209,135,0,0,0.448276],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.011034,1.011034,713,175,0,0,0.448276]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.517241],
[4,0,0,48,419,270,-57.589657,-100.024139,0.0,1.010345,1.010345,209,135,0,0,0.482759],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.010345,1.010345,713,175,0,0,0.482759]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.482759],
[4,0,0,48,419,270,-57.550343,-99.955856,0.0,1.009655,1.009655,209,135,0,0,0.517241],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.009655,1.009655,713,175,0,0,0.517241]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.448276],
[4,0,0,48,419,270,-57.511032,-99.887581,0.0,1.008965,1.008965,209,135,0,0,0.551724],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.008965,1.008965,713,175,0,0,0.551724]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.413793],
[4,0,0,48,419,270,-57.471725,-99.819313,0.0,1.008276,1.008276,209,135,0,0,0.586207],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.008276,1.008276,713,175,0,0,0.586207]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.379310],
[4,0,0,48,419,270,-57.432415,-99.751038,0.0,1.007586,1.007586,209,135,0,0,0.620690],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.007586,1.007586,713,175,0,0,0.620690]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.344828],
[4,0,0,48,419,270,-57.393101,-99.682755,0.0,1.006896,1.006896,209,135,0,0,0.655172],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.006896,1.006896,713,175,0,0,0.655172]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.310345],
[4,0,0,48,419,270,-57.353790,-99.614479,0.0,1.006207,1.006207,209,135,0,0,0.689655],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.006207,1.006207,713,175,0,0,0.689655]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.275862],
[4,0,0,48,419,270,-57.314484,-99.546204,0.0,1.005517,1.005517,209,135,0,0,0.724138],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.005517,1.005517,713,175,0,0,0.724138]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.241379],
[4,0,0,48,419,270,-57.275173,-99.477936,0.0,1.004828,1.004828,209,135,0,0,0.758621],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.004828,1.004828,713,175,0,0,0.758621]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.206897],
[4,0,0,48,419,270,-57.235859,-99.409653,0.0,1.004138,1.004138,209,135,0,0,0.793103],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.004138,1.004138,713,175,0,0,0.793103]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.172414],
[4,0,0,48,419,270,-57.196548,-99.341377,0.0,1.003448,1.003448,209,135,0,0,0.827586],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.003448,1.003448,713,175,0,0,0.827586]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.137931],
[4,0,0,48,419,270,-57.157242,-99.273102,0.0,1.002759,1.002759,209,135,0,0,0.862069],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.002759,1.002759,713,175,0,0,0.862069]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.103448],
[4,0,0,48,419,270,-57.117931,-99.204834,0.0,1.002069,1.002069,209,135,0,0,0.896552],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.002069,1.002069,713,175,0,0,0.896552]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.068965],
[4,0,0,48,419,270,-57.078617,-99.136543,0.0,1.001379,1.001379,209,135,0,0,0.931035],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.001379,1.001379,713,175,0,0,0.931035]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.034483],
[4,0,0,48,419,270,-57.039310,-99.068275,0.0,1.000690,1.000690,209,135,0,0,0.965517],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.000690,1.000690,713,175,0,0,0.965517]
],
[
[4,0,0,48,419,270,-57.0,-99.0,0.0,1.0,1.0,209,135],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.0,1.0,713,175]
]
]
}
}
]

},{}],73:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-11-01.png"],
"name": "obj05_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 1500,
"CanvasHeight": 420,
"MarginWidth": 758,
"MarginHeight": 218,
"parts": ["root","Obj","02_ura_01","01_ura"],
"ssa": [
[
[1,0,0,48,419,270,-57.0,-99.0,0.0,1.0,1.0,209,135],
[2,0,0,320,1426,351,0.0,0.0,0.0,1.0,1.0,713,175]
],
[
[1,0,0,48,419,270,-57.0,-99.0,0.0,1.0,1.0,209,135],
[2,0,0,320,1426,351,0.0,0.0,0.0,1.0,1.0,713,175]
]
]
}
}
]

},{}],74:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-mspassage-obj-11-01.png"],
"name": "obj06_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 1500,
"CanvasHeight": 420,
"MarginWidth": 758,
"MarginHeight": 218,
"parts": ["root","Obj","omote","01_omote","ura","02_ura_01","01_ura"],
"ssa": [
[
[4,0,0,48,419,270,-57.0,-99.0,0.0,1.0,1.0,209,135],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.0,1.0,713,175]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.034483],
[4,0,0,48,419,270,-57.039310,-99.068275,0.0,1.000690,1.000690,209,135,0,0,0.965517],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.000690,1.000690,713,175,0,0,0.965517]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.068966],
[4,0,0,48,419,270,-57.078617,-99.136543,0.0,1.001379,1.001379,209,135,0,0,0.931035],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.001379,1.001379,713,175,0,0,0.931035]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.103448],
[4,0,0,48,419,270,-57.117931,-99.204834,0.0,1.002069,1.002069,209,135,0,0,0.896552],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.002069,1.002069,713,175,0,0,0.896552]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.137931],
[4,0,0,48,419,270,-57.157242,-99.273102,0.0,1.002759,1.002759,209,135,0,0,0.862069],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.002759,1.002759,713,175,0,0,0.862069]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.172414],
[4,0,0,48,419,270,-57.196548,-99.341377,0.0,1.003448,1.003448,209,135,0,0,0.827586],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.003448,1.003448,713,175,0,0,0.827586]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.206897],
[4,0,0,48,419,270,-57.235859,-99.409653,0.0,1.004138,1.004138,209,135,0,0,0.793103],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.004138,1.004138,713,175,0,0,0.793103]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.241379],
[4,0,0,48,419,270,-57.275173,-99.477936,0.0,1.004828,1.004828,209,135,0,0,0.758621],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.004828,1.004828,713,175,0,0,0.758621]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.275862],
[4,0,0,48,419,270,-57.314484,-99.546204,0.0,1.005517,1.005517,209,135,0,0,0.724138],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.005517,1.005517,713,175,0,0,0.724138]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.310345],
[4,0,0,48,419,270,-57.353790,-99.614479,0.0,1.006207,1.006207,209,135,0,0,0.689655],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.006207,1.006207,713,175,0,0,0.689655]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.344828],
[4,0,0,48,419,270,-57.393101,-99.682755,0.0,1.006896,1.006896,209,135,0,0,0.655172],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.006896,1.006896,713,175,0,0,0.655172]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.379310],
[4,0,0,48,419,270,-57.432415,-99.751038,0.0,1.007586,1.007586,209,135,0,0,0.620690],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.007586,1.007586,713,175,0,0,0.620690]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.413793],
[4,0,0,48,419,270,-57.471725,-99.819313,0.0,1.008276,1.008276,209,135,0,0,0.586207],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.008276,1.008276,713,175,0,0,0.586207]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.448276],
[4,0,0,48,419,270,-57.511032,-99.887581,0.0,1.008965,1.008965,209,135,0,0,0.551724],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.008965,1.008965,713,175,0,0,0.551724]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.482759],
[4,0,0,48,419,270,-57.550343,-99.955856,0.0,1.009655,1.009655,209,135,0,0,0.517241],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.009655,1.009655,713,175,0,0,0.517241]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.517241],
[4,0,0,48,419,270,-57.589657,-100.024139,0.0,1.010345,1.010345,209,135,0,0,0.482759],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.010345,1.010345,713,175,0,0,0.482759]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.551724],
[4,0,0,48,419,270,-57.628967,-100.092415,0.0,1.011034,1.011034,209,135,0,0,0.448276],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.011034,1.011034,713,175,0,0,0.448276]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.586207],
[4,0,0,48,419,270,-57.668274,-100.160690,0.0,1.011724,1.011724,209,135,0,0,0.413793],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.011724,1.011724,713,175,0,0,0.413793]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.620690],
[4,0,0,48,419,270,-57.707584,-100.228958,0.0,1.012414,1.012414,209,135,0,0,0.379310],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.012414,1.012414,713,175,0,0,0.379310]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.655172],
[4,0,0,48,419,270,-57.746899,-100.297241,0.0,1.013103,1.013103,209,135,0,0,0.344828],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.013103,1.013103,713,175,0,0,0.344828]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.689655],
[4,0,0,48,419,270,-57.786209,-100.365517,0.0,1.013793,1.013793,209,135,0,0,0.310345],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.013793,1.013793,713,175,0,0,0.310345]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.724138],
[4,0,0,48,419,270,-57.825516,-100.433792,0.0,1.014483,1.014483,209,135,0,0,0.275862],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.014483,1.014483,713,175,0,0,0.275862]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.758621],
[4,0,0,48,419,270,-57.864826,-100.502068,0.0,1.015172,1.015172,209,135,0,0,0.241379],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.015172,1.015172,713,175,0,0,0.241379]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.793103],
[4,0,0,48,419,270,-57.904140,-100.570351,0.0,1.015862,1.015862,209,135,0,0,0.206897],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.015862,1.015862,713,175,0,0,0.206897]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.827586],
[4,0,0,48,419,270,-57.943447,-100.638618,0.0,1.016552,1.016552,209,135,0,0,0.172414],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.016552,1.016552,713,175,0,0,0.172414]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.862069],
[4,0,0,48,419,270,-57.982758,-100.706894,0.0,1.017241,1.017241,209,135,0,0,0.137931],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.017241,1.017241,713,175,0,0,0.137931]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.896552],
[4,0,0,48,419,270,-58.022064,-100.775169,0.0,1.017931,1.017931,209,135,0,0,0.103448],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.017931,1.017931,713,175,0,0,0.103448]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.931035],
[4,0,0,48,419,270,-58.061382,-100.843452,0.0,1.018621,1.018621,209,135,0,0,0.068965],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.018621,1.018621,713,175,0,0,0.068965]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175,0,0,0.965517],
[4,0,0,48,419,270,-58.100689,-100.911728,0.0,1.019310,1.019310,209,135,0,0,0.034483],
[5,0,0,320,1426,351,0.0,0.0,0.0,1.019310,1.019310,713,175,0,0,0.034483]
],
[
[2,0,0,673,1426,351,0.0,0.0,0.0,1.0,1.0,713,175]
]
]
}
}
]

},{}],75:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-myroom-obj-02-01.png"],
"name": "obj01_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 500,
"MarginWidth": 258,
"MarginHeight": 258,
"parts": ["root","Obj","01"],
"ssa": [
[
[1,0,0,268,348,244,0.0,0.0,0.0,0.500000,0.500000,174,122]
],
[
[1,0,0,268,348,244,0.0,0.0,0.0,0.500000,0.500000,174,122]
]
]
}
}
]

},{}],76:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-myroom-obj-02-01.png"],
"name": "obj02_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 500,
"MarginWidth": 258,
"MarginHeight": 258,
"parts": ["root","Obj","03","02","01"],
"ssa": [
[
[3,0,0,268,348,244,0.0,0.0,0.0,0.500000,0.500000,174,122]
],
[
[2,0,350,268,348,244,0.0,0.0,0.0,0.505000,0.505000,174,122,0,0,0.400000],
[3,0,0,268,348,244,0.0,0.0,0.0,0.505000,0.505000,174,122,0,0,0.900000]
],
[
[2,0,350,268,348,244,0.0,0.0,0.0,0.510000,0.510000,174,122,0,0,0.466667],
[3,0,0,268,348,244,0.0,0.0,0.0,0.510000,0.510000,174,122,0,0,0.800000]
],
[
[2,0,350,268,348,244,0.0,0.0,0.0,0.515000,0.515000,174,122,0,0,0.533333],
[3,0,0,268,348,244,0.0,0.0,0.0,0.515000,0.515000,174,122,0,0,0.700000]
],
[
[2,0,350,268,348,244,0.0,0.0,0.0,0.520000,0.520000,174,122,0,0,0.600000],
[3,0,0,268,348,244,0.0,0.0,0.0,0.520000,0.520000,174,122,0,0,0.600000]
],
[
[2,0,350,268,348,244,0.0,0.0,0.0,0.525000,0.525000,174,122,0,0,0.666667],
[3,0,0,268,348,244,0.0,0.0,0.0,0.525000,0.525000,174,122,0,0,0.500000]
],
[
[2,0,350,268,348,244,0.0,0.0,0.0,0.530000,0.530000,174,122,0,0,0.733333],
[3,0,0,268,348,244,0.0,0.0,0.0,0.530000,0.530000,174,122,0,0,0.400000]
],
[
[2,0,350,268,348,244,0.0,0.0,0.0,0.535000,0.535000,174,122,0,0,0.800000],
[3,0,0,268,348,244,0.0,0.0,0.0,0.535000,0.535000,174,122,0,0,0.300000]
],
[
[2,0,350,268,348,244,0.0,0.0,0.0,0.540000,0.540000,174,122,0,0,0.866667],
[3,0,0,268,348,244,0.0,0.0,0.0,0.540000,0.540000,174,122,0,0,0.200000]
],
[
[2,0,350,268,348,244,0.0,0.0,0.0,0.545000,0.545000,174,122,0,0,0.933333],
[3,0,0,268,348,244,0.0,0.0,0.0,0.545000,0.545000,174,122,0,0,0.100000]
],
[
[2,0,350,268,348,244,0.0,0.0,0.0,0.550000,0.550000,174,122]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.545000,0.545000,174,122,0,0,0.400000],
[2,0,350,268,348,244,0.0,0.0,0.0,0.545000,0.545000,174,122,0,0,0.900000]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.540000,0.540000,174,122,0,0,0.466667],
[2,0,350,268,348,244,0.0,0.0,0.0,0.540000,0.540000,174,122,0,0,0.800000]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.535000,0.535000,174,122,0,0,0.533333],
[2,0,350,268,348,244,0.0,0.0,0.0,0.535000,0.535000,174,122,0,0,0.700000]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.530000,0.530000,174,122,0,0,0.600000],
[2,0,350,268,348,244,0.0,0.0,0.0,0.530000,0.530000,174,122,0,0,0.600000]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.525000,0.525000,174,122,0,0,0.666667],
[2,0,350,268,348,244,0.0,0.0,0.0,0.525000,0.525000,174,122,0,0,0.500000]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.520000,0.520000,174,122,0,0,0.733333],
[2,0,350,268,348,244,0.0,0.0,0.0,0.520000,0.520000,174,122,0,0,0.400000]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.515000,0.515000,174,122,0,0,0.800000],
[2,0,350,268,348,244,0.0,0.0,0.0,0.515000,0.515000,174,122,0,0,0.300000]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.510000,0.510000,174,122,0,0,0.866667],
[2,0,350,268,348,244,0.0,0.0,0.0,0.510000,0.510000,174,122,0,0,0.200000]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.505000,0.505000,174,122,0,0,0.933333],
[2,0,350,268,348,244,0.0,0.0,0.0,0.505000,0.505000,174,122,0,0,0.100000]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.500000,0.500000,174,122]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.500000,0.500000,174,122]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.500000,0.500000,174,122]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.500000,0.500000,174,122]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.500000,0.500000,174,122]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.500000,0.500000,174,122]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.500000,0.500000,174,122]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.500000,0.500000,174,122]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.500000,0.500000,174,122]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.500000,0.500000,174,122]
]
]
}
}
]

},{}],77:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-myroom-obj-02-01.png"],
"name": "obj03_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 500,
"MarginWidth": 258,
"MarginHeight": 258,
"parts": ["root","Obj","03"],
"ssa": [
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.500000,0.500000,174,122]
],
[
[1,0,0,22,348,244,0.0,0.0,0.0,0.500000,0.500000,174,122]
]
]
}
}
]

},{}],78:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-myroom-obj-03-01.png"],
"name": "obj01_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 500,
"MarginWidth": 258,
"MarginHeight": 258,
"parts": ["root","Obj","01","02"],
"ssa": [
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,-31.0,3.500000,2.722714,0.380000,0.380000,37,12,0,1]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,-31.0,3.500000,2.722714,0.380000,0.380000,37,12,0,1]
]
]
}
}
]

},{}],79:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-myroom-obj-03-01.png"],
"name": "obj02_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 500,
"MarginWidth": 258,
"MarginHeight": 258,
"parts": ["root","Obj","01","02"],
"ssa": [
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,84.0,11.500000,0.244346,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,84.250000,12.075000,0.232129,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,84.500000,12.650000,0.219911,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,84.750000,13.225000,0.207694,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,85.0,13.800000,0.195477,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,85.250000,14.375000,0.183260,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,85.500000,14.950000,0.171042,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,85.750000,15.525000,0.158825,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,86.0,16.100000,0.146608,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,86.250000,16.674999,0.134390,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,86.500000,17.250000,0.122173,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,86.750000,17.825001,0.109956,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,87.0,18.400000,0.097738,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,87.250000,18.975000,0.085521,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,87.500000,19.549999,0.073304,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,87.750000,20.125000,0.061087,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,88.0,20.700001,0.048869,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,88.250000,21.275000,0.036652,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,88.500000,21.850000,0.024435,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,88.750000,22.424999,0.012217,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,89.0,23.0,0.0,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,89.0,23.0,0.0,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,89.0,23.0,0.0,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,89.0,23.0,0.0,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,89.0,23.0,0.0,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,89.0,23.0,0.0,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,89.0,23.0,0.0,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,89.0,23.0,0.0,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,89.0,23.0,0.0,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,89.0,23.0,0.0,0.500000,0.500000,37,12]
]
]
}
}
]

},{}],80:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-myroom-obj-03-01.png"],
"name": "obj03_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 500,
"MarginWidth": 258,
"MarginHeight": 258,
"parts": ["root","Obj","01","02"],
"ssa": [
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,89.0,23.0,0.0,0.500000,0.500000,37,12]
],
[
[1,0,0,38,232,90,0.0,0.0,0.0,0.500000,0.500000,116,45],
[2,0,0,12,75,24,89.0,23.0,0.0,0.500000,0.500000,37,12]
]
]
}
}
]

},{}],81:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-myroom-obj-04-01.png"],
"name": "obj01_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 800,
"MarginWidth": 258,
"MarginHeight": 408,
"parts": ["root","Obj","01","03","02"],
"ssa": [
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,61.500000,0.0,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,61.400002,0.000582,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,61.299999,0.001164,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,61.200001,0.001745,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,61.099998,0.002327,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,61.0,0.002909,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.900002,0.003491,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.799999,0.004072,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.700001,0.004654,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.599998,0.005236,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.500000,0.005818,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.400002,0.006400,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.299999,0.006981,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.200001,0.007563,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.099998,0.008145,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.0,0.008727,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.107143,0.008103,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.214287,0.007480,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.321430,0.006857,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.428570,0.006233,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.535713,0.005610,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.642857,0.004987,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.750000,0.004363,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.857143,0.003740,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,60.964287,0.003117,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,61.071430,0.002493,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,61.178570,0.001870,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,61.285713,0.001247,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,61.392857,0.000623,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,61.500000,0.0,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
]
]
}
}
]

},{}],82:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-myroom-obj-04-01.png"],
"name": "obj02_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 800,
"MarginWidth": 258,
"MarginHeight": 408,
"parts": ["root","Obj","01","03","02"],
"ssa": [
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,43.0,61.500000,0.0,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,40.250000,59.250000,0.016020,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,37.500000,57.0,0.032039,0.500000,0.500000,94,161],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,38.700001,57.700001,0.048059,0.500000,0.500000,94,161,0,0,0.800000,0,23,4,0,12,20,-5,-2,-7],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,39.900002,58.400002,0.064079,0.500000,0.500000,94,161,0,0,0.600000,0,47,8,0,25,40,-10,-4,-14],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,41.099998,59.099998,0.080098,0.500000,0.500000,94,161,0,0,0.400000,0,71,13,1,38,60,-16,-6,-21],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,696,702,188,322,42.299999,59.799999,0.096118,0.500000,0.500000,94,161,0,0,0.200000,0,95,17,1,51,80,-21,-8,-28],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[3,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
]
]
}
}
]

},{}],83:[function(require,module,exports){
module.exports=[
{
"images":["chapter0-myroom-obj-04-01.png"],
"name": "obj03_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 800,
"MarginWidth": 258,
"MarginHeight": 408,
"parts": ["root","Obj","01","02"],
"ssa": [
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
],
[
[1,0,0,299,339,725,0.0,0.0,0.0,0.500000,0.500000,169,362],
[2,0,341,267,353,757,6.0,5.500000,0.0,0.500000,0.500000,176,378]
]
]
}
}
]

},{}],84:[function(require,module,exports){
module.exports=[
{
"images":["koishi.png"],
"name": "reaction_3rdeye_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 500,
"MarginWidth": 258,
"MarginHeight": 508,
"parts": ["root","Chara","koishi0_bottom0","koishi0_thighs_l0","koishi0_calf_l0","koishi0_foot_l0","koishi0_thighs_r0","koishi0_calf_r0","koishi0_foot_r0","koishi0_body","koishi0_arm0_r0","koishi0_arm0_l0","koishi0_head0","koishi0_hear_b0","koishi0_hear_f1","koishi0_hear_f0","koishi0_mouth0","koishi0_eye0_l0","koishi0_eye0_l1","koishi0_eye0_l2","koishi0_eye1_l0","koishi0_eye0_r0","koishi0_eye0_r1","koishi0_eye0_r2","koishi0_eye1_r0","koishi0_hat0_f0","koishi0_hat0_b0","koishi0_hat0_obj0","3rdeye0_all","3rdeye0_cord_b0","3rdeye0_cord_f0","3rdeye0_body0","3rdeye0_eye0","3rdeye0_light0","3rdeye0_eye1"],
"ssa": [
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-173.0,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-10.0,-292.0,0.0,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-300.0,0.0,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-210.0,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-270.0,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-263.0,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-209.0,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-270.0,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-263.0,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-268.0,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-261.0,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-270.0,0.0,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-300.0,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-158.0,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-168.0,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.0,-171.0,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.0,-170.0,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-306.0,0.0,1.0,1.0,133,48],
[26,0,906,146,76,96,-64.0,-294.0,0.0,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.047977,-172.491165,-0.004363,1.0,1.0,135,10],
[25,0,658,2,266,80,-5.771787,-288.995056,-0.004363,1.0,1.0,133,40],
[12,0,214,2,174,170,-22.869995,-297.466949,-0.018908,1.0,1.0,62,27],
[10,0,554,100,70,140,17.939405,-197.699768,0.283616,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.0,-0.021817,1.0,1.0,104,104],
[9,0,926,2,74,142,-36.613068,-195.889404,0.231256,1.0,1.0,40,13],
[11,0,658,84,138,126,-7.363646,-207.003967,-0.027634,1.0,1.0,60,120],
[16,0,336,202,20,26,54.271301,-265.323212,-0.027634,1.0,1.0,10,13],
[20,0,278,202,34,28,-1.900737,-259.873199,-0.027634,1.0,1.0,17,14],
[15,0,414,202,22,6,18.598797,-205.285950,-0.027634,1.0,1.0,11,3],
[17,0,1014,92,4,6,58.269775,-265.212677,-0.027634,1.0,1.0,2,3],
[21,0,1012,84,6,6,4.096972,-259.707428,-0.027634,1.0,1.0,3,3],
[18,0,650,100,4,4,52.216805,-263.379242,-0.027634,1.0,1.0,2,2],
[22,0,1002,96,10,4,-4.954853,-257.956848,-0.027634,1.0,1.0,5,2],
[13,0,798,84,106,150,-56.936226,-268.397156,-0.036361,1.0,1.0,58,34],
[14,0,390,100,162,78,6.118933,-296.665649,-0.027634,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.017282,-157.578583,-0.004363,1.0,1.0,118,15],
[30,0,512,180,40,54,100.025230,-167.063614,-0.004363,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.038261,-170.037399,-0.004363,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.033936,-169.054871,-0.004363,1.0,1.0,3,1],
[24,0,390,2,266,96,-5.710701,-302.994934,-0.004363,1.0,1.0,133,48],
[26,0,906,146,76,96,-59.762547,-291.230652,-0.004363,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.095916,-171.982132,-0.008727,1.0,1.0,135,10],
[25,0,658,2,266,80,-1.588758,-285.882355,-0.008727,1.0,1.0,133,40],
[12,0,214,2,174,170,-18.772072,-294.830109,-0.037815,1.0,1.0,62,27],
[10,0,554,100,70,140,9.668316,-190.787170,0.567232,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-130.0,-0.043633,1.0,1.0,104,104],
[9,0,926,2,74,142,-33.377998,-190.664703,0.567232,1.0,1.0,40,13],
[11,0,658,84,138,126,-5.771214,-203.973190,-0.055269,1.0,1.0,60,120],
[16,0,336,202,20,26,57.451607,-260.567139,-0.055269,1.0,1.0,10,13],
[20,0,278,202,34,28,1.150432,-256.671295,-0.055269,1.0,1.0,17,14],
[15,0,414,202,22,6,20.133846,-201.538467,-0.055269,1.0,1.0,11,3],
[17,0,1014,92,4,6,61.445499,-260.346191,-0.055269,1.0,1.0,2,3],
[21,0,1012,84,6,6,7.141271,-256.339844,-0.055269,1.0,1.0,3,3],
[18,0,650,100,4,4,55.344181,-258.680664,-0.055269,1.0,1.0,2,2],
[22,0,1002,96,10,4,-1.955468,-254.840073,-0.055269,1.0,1.0,5,2],
[13,0,798,84,106,150,-53.878139,-266.726471,-0.072722,1.0,1.0,58,34],
[14,0,390,100,162,78,10.183647,-293.228119,-0.055269,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.034222,-157.157227,-0.008727,1.0,1.0,118,15],
[30,0,512,180,40,54,100.048553,-166.127121,-0.008727,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.074501,-169.074646,-0.008727,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.065933,-168.109589,-0.008727,1.0,1.0,3,1],
[24,0,390,2,266,96,-1.466586,-299.881836,-0.008727,1.0,1.0,133,48],
[26,0,906,146,76,96,-55.569248,-288.353516,-0.008727,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.143814,-171.472885,-0.013090,1.0,1.0,135,10],
[25,0,658,2,266,80,2.546338,-282.663391,-0.013090,1.0,1.0,133,40],
[12,0,214,2,174,170,-14.708871,-292.090546,-0.056723,1.0,1.0,62,27],
[10,0,554,100,70,140,1.199852,-184.268768,0.850848,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-128.0,-0.065450,1.0,1.0,104,104],
[11,0,658,84,138,126,-4.223431,-200.909103,-0.082903,1.0,1.0,60,120],
[9,0,926,2,74,142,-30.298107,-185.331116,0.903208,1.0,1.0,40,13],
[16,0,336,202,20,26,60.538990,-255.734543,-0.082903,1.0,1.0,10,13],
[20,0,278,202,34,28,4.151667,-253.395844,-0.082903,1.0,1.0,17,14],
[15,0,414,202,22,6,21.604464,-197.759521,-0.082903,1.0,1.0,11,3],
[17,0,1014,92,4,6,64.525253,-255.403305,-0.082903,1.0,1.0,2,3],
[21,0,1012,84,6,6,10.131060,-252.898987,-0.082903,1.0,1.0,3,3],
[18,0,650,100,4,4,58.380241,-253.907028,-0.082903,1.0,1.0,2,2],
[22,0,1002,96,10,4,0.996354,-251.651138,-0.082903,1.0,1.0,5,2],
[13,0,798,84,106,150,-50.827202,-264.988342,-0.109083,1.0,1.0,58,34],
[14,0,390,100,162,78,14.191528,-289.689117,-0.082903,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.050816,-156.735962,-0.013090,1.0,1.0,118,15],
[30,0,512,180,40,54,100.069969,-165.190521,-0.013090,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.108727,-168.111725,-0.013090,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.095978,-167.164169,-0.013090,1.0,1.0,3,1],
[24,0,390,2,266,96,2.729592,-296.662201,-0.013090,1.0,1.0,133,48],
[26,0,906,146,76,96,-51.422859,-285.370056,-0.013090,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.191672,-170.963425,-0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,6.165666,-279.355560,-0.050698,1.0,1.0,133,40],
[12,0,214,2,174,170,-10.682995,-289.249512,-0.075631,1.0,1.0,62,27],
[10,0,554,100,70,140,-7.452680,-178.150742,1.134464,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-126.0,-0.087266,1.0,1.0,104,104],
[29,0,2,180,236,30,-18.067068,-156.314758,-0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,100.089485,-164.253845,-0.017453,1.0,1.0,20,27],
[11,0,658,84,138,126,-2.720981,-197.813171,-0.110538,1.0,1.0,60,120],
[9,0,926,2,74,142,-27.376574,-179.893860,1.239184,1.0,1.0,40,13],
[16,0,336,202,20,26,63.531590,-250.828232,-0.110538,1.0,1.0,10,13],
[20,0,278,202,34,28,7.101173,-250.048462,-0.110538,1.0,1.0,17,14],
[15,0,414,202,22,6,23.010029,-193.951141,-0.110538,1.0,1.0,11,3],
[17,0,1014,92,4,6,67.507179,-250.386978,-0.110538,1.0,1.0,2,3],
[21,0,1012,84,6,6,13.064555,-249.386581,-0.110538,1.0,1.0,3,3],
[18,0,650,100,4,4,61.323170,-249.061066,-0.110538,1.0,1.0,2,2],
[22,0,1002,96,10,4,3.898857,-248.391602,-0.110538,1.0,1.0,5,2],
[13,0,798,84,106,150,-47.784870,-263.183228,-0.145444,1.0,1.0,58,34],
[14,0,390,100,162,78,18.140018,-286.050476,-0.110538,1.0,1.0,81,39],
[31,0,1002,84,8,10,106.140930,-167.148666,-0.017453,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.124084,-166.218643,-0.017453,1.0,1.0,3,1],
[24,0,390,2,266,96,6.875129,-293.337585,-0.050698,1.0,1.0,133,48],
[26,0,906,146,76,96,-47.663601,-284.089508,-0.050698,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.191672,-171.463425,-0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,6.413389,-279.148224,-0.066489,1.0,1.0,133,40],
[12,0,214,2,174,170,-10.238064,-289.131439,-0.087266,1.0,1.0,62,27],
[10,0,554,100,70,140,-7.452680,-178.984085,1.134464,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-126.833336,-0.087266,1.0,1.0,104,104],
[29,0,2,180,236,30,-18.067068,-156.814758,-0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,100.089485,-164.753845,-0.017453,1.0,1.0,20,27],
[11,0,658,84,138,126,-2.808136,-197.650314,-0.116355,1.0,1.0,60,120],
[9,0,926,2,74,142,-27.376574,-180.727203,1.239184,1.0,1.0,40,13],
[16,0,336,202,20,26,63.751740,-250.279037,-0.116355,1.0,1.0,10,13],
[20,0,278,202,34,28,7.317742,-249.827576,-0.116355,1.0,1.0,17,14],
[15,0,414,202,22,6,22.899969,-193.638657,-0.116355,1.0,1.0,11,3],
[17,0,1014,92,4,6,67.724693,-249.814667,-0.116355,1.0,1.0,2,3],
[21,0,1012,84,6,6,13.277172,-249.131012,-0.116355,1.0,1.0,3,3],
[18,0,650,100,4,4,61.533077,-248.524750,-0.116355,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.105841,-248.189377,-0.116355,1.0,1.0,5,2],
[13,0,798,84,106,150,-47.325413,-263.262085,-0.145444,1.0,1.0,58,34],
[14,0,390,100,162,78,18.565849,-285.764740,-0.116355,1.0,1.0,81,39],
[31,0,1002,84,8,10,106.140930,-167.648666,-0.017453,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.124084,-166.718643,-0.017453,1.0,1.0,3,1],
[24,0,390,2,266,96,7.343545,-293.117279,-0.066489,1.0,1.0,133,48],
[26,0,906,146,76,96,-47.334415,-284.731537,-0.066489,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.191672,-171.963425,-0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,6.661002,-278.941132,-0.082280,1.0,1.0,133,40],
[12,0,214,2,174,170,-9.792881,-289.010254,-0.098902,1.0,1.0,62,27],
[10,0,554,100,70,140,-7.452680,-179.817413,1.134464,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-127.666664,-0.087266,1.0,1.0,104,104],
[29,0,2,180,236,30,-18.067068,-157.314758,-0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,100.089485,-165.253845,-0.017453,1.0,1.0,20,27],
[11,0,658,84,138,126,-2.895292,-197.487457,-0.122173,1.0,1.0,60,120],
[9,0,926,2,74,142,-27.376574,-181.560532,1.239184,1.0,1.0,40,13],
[16,0,336,202,20,26,63.969635,-249.728058,-0.122173,1.0,1.0,10,13],
[20,0,278,202,34,28,7.533968,-249.604919,-0.122173,1.0,1.0,17,14],
[15,0,414,202,22,6,22.789038,-193.326309,-0.122173,1.0,1.0,11,3],
[17,0,1014,92,4,6,67.939819,-249.240585,-0.122173,1.0,1.0,2,3],
[21,0,1012,84,6,6,13.489244,-248.873703,-0.122173,1.0,1.0,3,3],
[18,0,650,100,4,4,61.740803,-247.986710,-0.122173,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.312591,-247.985428,-0.122173,1.0,1.0,5,2],
[13,0,798,84,106,150,-46.864685,-263.336792,-0.145444,1.0,1.0,58,34],
[14,0,390,100,162,78,18.990957,-285.476044,-0.122173,1.0,1.0,81,39],
[31,0,1002,84,8,10,106.140930,-168.148666,-0.017453,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.124084,-167.218643,-0.017453,1.0,1.0,3,1],
[24,0,390,2,266,96,7.811620,-292.893768,-0.082280,1.0,1.0,133,48],
[26,0,906,146,76,96,-46.991940,-285.372467,-0.082280,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.191672,-172.463425,-0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,6.521907,-279.786621,-0.092253,1.0,1.0,133,40],
[12,0,214,2,174,170,-9.792881,-289.843597,-0.104720,1.0,1.0,62,27],
[10,0,554,100,70,140,-7.452680,-180.650742,1.134464,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-128.500000,-0.087266,1.0,1.0,104,104],
[29,0,2,180,236,30,-18.067068,-157.814758,-0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,100.089485,-165.753845,-0.017453,1.0,1.0,20,27],
[11,0,658,84,138,126,-2.895292,-198.320786,-0.122173,1.0,1.0,60,120],
[9,0,926,2,74,142,-27.376574,-182.393860,1.239184,1.0,1.0,40,13],
[16,0,336,202,20,26,63.969635,-250.561401,-0.122173,1.0,1.0,10,13],
[20,0,278,202,34,28,7.533968,-250.438263,-0.122173,1.0,1.0,17,14],
[15,0,414,202,22,6,22.789038,-194.159637,-0.122173,1.0,1.0,11,3],
[17,0,1014,92,4,6,67.939819,-250.073929,-0.122173,1.0,1.0,2,3],
[21,0,1012,84,6,6,13.489244,-249.707047,-0.122173,1.0,1.0,3,3],
[18,0,650,100,4,4,61.740803,-248.820053,-0.122173,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.312591,-248.818771,-0.122173,1.0,1.0,5,2],
[13,0,798,84,106,150,-46.699257,-264.149841,-0.139626,1.0,1.0,58,34],
[14,0,390,100,162,78,18.990957,-286.309387,-0.122173,1.0,1.0,81,39],
[31,0,1002,84,8,10,106.140930,-168.648666,-0.017453,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.124084,-167.718643,-0.017453,1.0,1.0,3,1],
[24,0,390,2,266,96,7.811620,-293.727081,-0.092253,1.0,1.0,133,48],
[26,0,906,146,76,96,-47.064224,-286.752716,-0.092253,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.191672,-172.963425,-0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,6.382941,-280.633514,-0.102226,1.0,1.0,133,40],
[12,0,214,2,174,170,-9.792881,-290.676910,-0.110538,1.0,1.0,62,27],
[10,0,554,100,70,140,-7.452680,-181.484070,1.134464,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-129.333328,-0.087266,1.0,1.0,104,104],
[29,0,2,180,236,30,-18.067068,-158.314758,-0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,100.089485,-166.253845,-0.017453,1.0,1.0,20,27],
[11,0,658,84,138,126,-2.895292,-199.154114,-0.122173,1.0,1.0,60,120],
[9,0,926,2,74,142,-27.376574,-183.227188,1.239184,1.0,1.0,40,13],
[16,0,336,202,20,26,63.969635,-251.394714,-0.122173,1.0,1.0,10,13],
[20,0,278,202,34,28,7.533968,-251.271576,-0.122173,1.0,1.0,17,14],
[15,0,414,202,22,6,22.789038,-194.992966,-0.122173,1.0,1.0,11,3],
[17,0,1014,92,4,6,67.939819,-250.907242,-0.122173,1.0,1.0,2,3],
[21,0,1012,84,6,6,13.489244,-250.540359,-0.122173,1.0,1.0,3,3],
[18,0,650,100,4,4,61.740803,-249.653366,-0.122173,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.312591,-249.652084,-0.122173,1.0,1.0,5,2],
[13,0,798,84,106,150,-46.533829,-264.962830,-0.133809,1.0,1.0,58,34],
[14,0,390,100,162,78,18.990957,-287.142700,-0.122173,1.0,1.0,81,39],
[31,0,1002,84,8,10,106.140930,-169.148666,-0.017453,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.124084,-168.218643,-0.017453,1.0,1.0,3,1],
[24,0,390,2,266,96,7.811620,-294.560425,-0.102226,1.0,1.0,133,48],
[26,0,906,146,76,96,-47.131050,-288.133698,-0.102226,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.191672,-173.463425,-0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,6.244117,-281.481812,-0.112200,1.0,1.0,133,40],
[12,0,214,2,174,170,-9.792881,-291.510254,-0.116355,1.0,1.0,62,27],
[10,0,554,100,70,140,-7.452680,-182.317413,1.134464,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-130.166672,-0.087266,1.0,1.0,104,104],
[29,0,2,180,236,30,-18.067068,-158.814758,-0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,100.089485,-166.753845,-0.017453,1.0,1.0,20,27],
[11,0,658,84,138,126,-2.895292,-199.987457,-0.122173,1.0,1.0,60,120],
[9,0,926,2,74,142,-27.376574,-184.060532,1.239184,1.0,1.0,40,13],
[16,0,336,202,20,26,63.969635,-252.228058,-0.122173,1.0,1.0,10,13],
[20,0,278,202,34,28,7.533968,-252.104919,-0.122173,1.0,1.0,17,14],
[15,0,414,202,22,6,22.789038,-195.826309,-0.122173,1.0,1.0,11,3],
[17,0,1014,92,4,6,67.939819,-251.740585,-0.122173,1.0,1.0,2,3],
[21,0,1012,84,6,6,13.489244,-251.373703,-0.122173,1.0,1.0,3,3],
[18,0,650,100,4,4,61.740803,-250.486710,-0.122173,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.312591,-250.485428,-0.122173,1.0,1.0,5,2],
[13,0,798,84,106,150,-46.368408,-265.775879,-0.127991,1.0,1.0,58,34],
[14,0,390,100,162,78,18.990957,-287.976044,-0.122173,1.0,1.0,81,39],
[31,0,1002,84,8,10,106.140930,-169.648666,-0.017453,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.124084,-168.718643,-0.017453,1.0,1.0,3,1],
[24,0,390,2,266,96,7.811620,-295.393768,-0.112200,1.0,1.0,133,48],
[26,0,906,146,76,96,-47.192413,-289.515289,-0.112200,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.191672,-173.963425,-0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,6.105449,-282.331421,-0.122173,1.0,1.0,133,40],
[12,0,214,2,174,170,-9.792881,-292.343597,-0.122173,1.0,1.0,62,27],
[10,0,554,100,70,140,-7.452680,-183.150742,1.134464,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-131.0,-0.087266,1.0,1.0,104,104],
[29,0,2,180,236,30,-18.067068,-159.314758,-0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,100.089485,-167.253845,-0.017453,1.0,1.0,20,27],
[11,0,658,84,138,126,-2.895292,-200.820786,-0.122173,1.0,1.0,60,120],
[9,0,926,2,74,142,-27.376574,-184.893860,1.239184,1.0,1.0,40,13],
[16,0,336,202,20,26,63.969635,-253.061401,-0.122173,1.0,1.0,10,13],
[20,0,278,202,34,28,7.533968,-252.938263,-0.122173,1.0,1.0,17,14],
[15,0,414,202,22,6,22.789038,-196.659637,-0.122173,1.0,1.0,11,3],
[17,0,1014,92,4,6,67.939819,-252.573929,-0.122173,1.0,1.0,2,3],
[21,0,1012,84,6,6,13.489244,-252.207047,-0.122173,1.0,1.0,3,3],
[18,0,650,100,4,4,61.740803,-251.320053,-0.122173,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.312591,-251.318771,-0.122173,1.0,1.0,5,2],
[13,0,798,84,106,150,-46.202988,-266.588898,-0.122173,1.0,1.0,58,34],
[14,0,390,100,162,78,18.990957,-288.809387,-0.122173,1.0,1.0,81,39],
[31,0,1002,84,8,10,106.140930,-170.148666,-0.017453,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.124084,-169.218643,-0.017453,1.0,1.0,3,1],
[24,0,390,2,266,96,7.811620,-296.227081,-0.122173,1.0,1.0,133,48],
[26,0,906,146,76,96,-47.248306,-290.897461,-0.122173,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.191672,-173.963425,-0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,6.105449,-282.331421,-0.122173,1.0,1.0,133,40],
[12,0,214,2,174,170,-9.792881,-292.343597,-0.122173,1.0,1.0,62,27],
[10,0,554,100,70,140,-7.452680,-183.150742,1.134464,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-131.0,-0.087266,1.0,1.0,104,104],
[29,0,2,180,236,30,-18.067068,-159.314758,-0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,100.089485,-167.253845,-0.017453,1.0,1.0,20,27],
[11,0,658,84,138,126,-2.895292,-200.820786,-0.122173,1.0,1.0,60,120],
[9,0,926,2,74,142,-27.376574,-184.893860,1.239184,1.0,1.0,40,13],
[16,0,336,202,20,26,63.969635,-253.061401,-0.122173,1.0,1.0,10,13],
[20,0,278,202,34,28,7.533968,-252.938263,-0.122173,1.0,1.0,17,14],
[15,0,414,202,22,6,22.789038,-196.659637,-0.122173,1.0,1.0,11,3],
[17,0,1014,92,4,6,67.939819,-252.573929,-0.122173,1.0,1.0,2,3],
[21,0,1012,84,6,6,13.489244,-252.207047,-0.122173,1.0,1.0,3,3],
[18,0,650,100,4,4,61.740803,-251.320053,-0.122173,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.312591,-251.318771,-0.122173,1.0,1.0,5,2],
[13,0,798,84,106,150,-46.202988,-266.588898,-0.122173,1.0,1.0,58,34],
[14,0,390,100,162,78,18.990957,-288.809387,-0.122173,1.0,1.0,81,39],
[31,0,1002,84,8,10,106.140930,-170.148666,-0.017453,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.124084,-169.218643,-0.017453,1.0,1.0,3,1],
[24,0,390,2,266,96,7.811620,-296.227081,-0.122173,1.0,1.0,133,48],
[26,0,906,146,76,96,-47.248306,-290.897461,-0.122173,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.191672,-173.963425,-0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,6.105449,-282.331421,-0.122173,1.0,1.0,133,40],
[12,0,214,2,174,170,-9.792881,-292.343597,-0.122173,1.0,1.0,62,27],
[10,0,554,100,70,140,-7.452680,-183.150742,1.134464,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-131.0,-0.087266,1.0,1.0,104,104],
[29,0,2,180,236,30,-18.067068,-159.314758,-0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,100.089485,-167.253845,-0.017453,1.0,1.0,20,27],
[11,0,658,84,138,126,-2.895292,-200.820786,-0.122173,1.0,1.0,60,120],
[9,0,926,2,74,142,-27.376574,-184.893860,1.239184,1.0,1.0,40,13],
[16,0,336,202,20,26,63.969635,-253.061401,-0.122173,1.0,1.0,10,13],
[20,0,278,202,34,28,7.533968,-252.938263,-0.122173,1.0,1.0,17,14],
[15,0,414,202,22,6,22.789038,-196.659637,-0.122173,1.0,1.0,11,3],
[17,0,1014,92,4,6,67.939819,-252.573929,-0.122173,1.0,1.0,2,3],
[21,0,1012,84,6,6,13.489244,-252.207047,-0.122173,1.0,1.0,3,3],
[18,0,650,100,4,4,61.740803,-251.320053,-0.122173,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.312591,-251.318771,-0.122173,1.0,1.0,5,2],
[13,0,798,84,106,150,-46.202988,-266.588898,-0.122173,1.0,1.0,58,34],
[14,0,390,100,162,78,18.990957,-288.809387,-0.122173,1.0,1.0,81,39],
[31,0,1002,84,8,10,106.140930,-170.148666,-0.017453,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.124084,-169.218643,-0.017453,1.0,1.0,3,1],
[24,0,390,2,266,96,7.811620,-296.227081,-0.122173,1.0,1.0,133,48],
[26,0,906,146,76,96,-47.248306,-290.897461,-0.122173,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.191672,-173.963425,-0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,6.105449,-282.331421,-0.122173,1.0,1.0,133,40],
[12,0,214,2,174,170,-9.792881,-292.343597,-0.122173,1.0,1.0,62,27],
[10,0,554,100,70,140,-7.452680,-183.150742,1.134464,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-131.0,-0.087266,1.0,1.0,104,104],
[29,0,2,180,236,30,-18.067068,-159.314758,-0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,100.089485,-167.253845,-0.017453,1.0,1.0,20,27],
[11,0,658,84,138,126,-2.895292,-200.820786,-0.122173,1.0,1.0,60,120],
[9,0,926,2,74,142,-27.376574,-184.893860,1.239184,1.0,1.0,40,13],
[16,0,336,202,20,26,63.969635,-253.061401,-0.122173,1.0,1.0,10,13],
[20,0,278,202,34,28,7.533968,-252.938263,-0.122173,1.0,1.0,17,14],
[15,0,414,202,22,6,22.789038,-196.659637,-0.122173,1.0,1.0,11,3],
[17,0,1014,92,4,6,67.939819,-252.573929,-0.122173,1.0,1.0,2,3],
[21,0,1012,84,6,6,13.489244,-252.207047,-0.122173,1.0,1.0,3,3],
[18,0,650,100,4,4,61.740803,-251.320053,-0.122173,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.312591,-251.318771,-0.122173,1.0,1.0,5,2],
[13,0,798,84,106,150,-46.202988,-266.588898,-0.122173,1.0,1.0,58,34],
[14,0,390,100,162,78,18.990957,-288.809387,-0.122173,1.0,1.0,81,39],
[31,0,1002,84,8,10,106.140930,-170.148666,-0.017453,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.124084,-169.218643,-0.017453,1.0,1.0,3,1],
[24,0,390,2,266,96,7.811620,-296.227081,-0.122173,1.0,1.0,133,48],
[26,0,906,146,76,96,-47.248306,-290.897461,-0.122173,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.191672,-173.963425,-0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,6.105449,-282.331421,-0.122173,1.0,1.0,133,40],
[12,0,214,2,174,170,-9.792881,-292.343597,-0.122173,1.0,1.0,62,27],
[10,0,554,100,70,140,-7.452680,-183.150742,1.134464,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-131.0,-0.087266,1.0,1.0,104,104],
[29,0,2,180,236,30,-18.067068,-159.314758,-0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,100.089485,-167.253845,-0.017453,1.0,1.0,20,27],
[11,0,658,84,138,126,-2.895292,-200.820786,-0.122173,1.0,1.0,60,120],
[9,0,926,2,74,142,-27.376574,-184.893860,1.239184,1.0,1.0,40,13],
[16,0,336,202,20,26,63.969635,-253.061401,-0.122173,1.0,1.0,10,13],
[20,0,278,202,34,28,7.533968,-252.938263,-0.122173,1.0,1.0,17,14],
[15,0,414,202,22,6,22.789038,-196.659637,-0.122173,1.0,1.0,11,3],
[17,0,1014,92,4,6,67.939819,-252.573929,-0.122173,1.0,1.0,2,3],
[21,0,1012,84,6,6,13.489244,-252.207047,-0.122173,1.0,1.0,3,3],
[18,0,650,100,4,4,61.740803,-251.320053,-0.122173,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.312591,-251.318771,-0.122173,1.0,1.0,5,2],
[13,0,798,84,106,150,-46.202988,-266.588898,-0.122173,1.0,1.0,58,34],
[14,0,390,100,162,78,18.990957,-288.809387,-0.122173,1.0,1.0,81,39],
[31,0,1002,84,8,10,106.140930,-170.148666,-0.017453,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.124084,-169.218643,-0.017453,1.0,1.0,3,1],
[24,0,390,2,266,96,7.811620,-296.227081,-0.122173,1.0,1.0,133,48],
[26,0,906,146,76,96,-47.248306,-290.897461,-0.122173,1.0,1.0,48,90]
]
]
}
}
]

},{}],85:[function(require,module,exports){
module.exports=[
{
"images":["koishi.png"],
"name": "reaction_look_bottom_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 500,
"MarginWidth": 258,
"MarginHeight": 508,
"parts": ["root","Chara","koishi0_bottom0","koishi0_thighs_l0","koishi0_calf_l0","koishi0_foot_l0","koishi0_thighs_r0","koishi0_calf_r0","koishi0_foot_r0","koishi0_body","koishi0_arm0_r0","koishi0_arm0_l0","koishi0_head0","koishi0_hear_b0","koishi0_hear_f1","koishi0_hear_f0","koishi0_mouth0","koishi0_eye0_l0","koishi0_eye0_l1","koishi0_eye0_l2","koishi0_eye1_l0","koishi0_eye0_r0","koishi0_eye0_r1","koishi0_eye0_r2","koishi0_eye1_r0","koishi0_hat0_f0","koishi0_hat0_b0","koishi0_hat0_obj0","3rdeye0_all","3rdeye0_cord_b0","3rdeye0_cord_f0","3rdeye0_body0","3rdeye0_eye0","3rdeye0_light0","3rdeye0_eye1"],
"ssa": [
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-173.0,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-10.0,-292.0,0.0,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-300.0,0.0,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-210.0,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-270.0,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-263.0,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-209.0,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-270.0,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-263.0,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-268.0,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-261.0,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-270.0,0.0,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-300.0,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-158.0,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-168.0,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.0,-171.0,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.0,-170.0,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-306.0,0.0,1.0,1.0,133,48],
[26,0,906,146,76,96,-64.0,-294.0,0.0,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.095916,-172.982132,-0.008727,1.0,1.0,135,10],
[25,0,658,2,266,80,-6.064755,-291.486816,-0.023271,1.0,1.0,133,40],
[12,0,214,2,174,170,-22.672369,-300.021973,-0.027634,1.0,1.0,62,27],
[10,0,554,100,70,140,26.412483,-204.800995,0.011636,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.005818,1.0,1.0,104,104],
[9,0,926,2,74,142,-39.609673,-201.185028,-0.136717,1.0,1.0,40,13],
[11,0,658,84,138,126,-7.810757,-209.500183,-0.031998,1.0,1.0,60,120],
[16,0,336,202,20,26,54.078064,-267.549927,-0.031998,1.0,1.0,10,13],
[20,0,278,202,34,28,-2.117216,-262.345093,-0.031998,1.0,1.0,17,14],
[15,0,414,202,22,6,16.378841,-207.225143,-0.031998,1.0,1.0,11,3],
[17,0,1014,92,4,6,57.270412,-265.696838,-0.031998,1.0,1.0,2,3],
[21,0,1012,84,6,6,3.581853,-260.661896,-0.031998,1.0,1.0,3,3],
[18,0,650,100,4,4,52.015102,-265.614929,-0.031998,1.0,1.0,2,2],
[22,0,1002,96,10,4,-5.179665,-260.442108,-0.031998,1.0,1.0,5,2],
[13,0,798,84,106,150,-57.114986,-271.109070,-0.040724,1.0,1.0,58,34],
[14,0,390,100,162,78,6.062914,-299.102203,-0.031998,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.034222,-158.157227,-0.008727,1.0,1.0,118,15],
[30,0,512,180,40,54,100.045639,-166.793793,-0.037815,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.116959,-168.565521,-0.037815,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.119820,-168.716751,-0.037815,1.0,1.0,3,1],
[24,0,390,2,266,96,-5.738990,-305.483032,-0.023271,1.0,1.0,133,48],
[26,0,906,146,76,96,-60.003597,-294.742798,-0.009308,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.191672,-172.963425,-0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,-2.137330,-290.871704,-0.046542,1.0,1.0,133,40],
[12,0,214,2,174,170,-18.335911,-299.924011,-0.055269,1.0,1.0,62,27],
[10,0,554,100,70,140,26.823803,-204.599594,0.023271,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.011636,1.0,1.0,104,104],
[9,0,926,2,74,142,-39.218269,-201.367798,-0.168715,1.0,1.0,40,13],
[11,0,658,84,138,126,-6.627389,-208.989105,-0.063995,1.0,1.0,60,120],
[16,0,336,202,20,26,57.086895,-265.029175,-0.063995,1.0,1.0,10,13],
[20,0,278,202,34,28,0.753865,-261.624817,-0.063995,1.0,1.0,17,14],
[15,0,414,202,22,6,15.698649,-205.554291,-0.063995,1.0,1.0,11,3],
[17,0,1014,92,4,6,59.357948,-261.376465,-0.063995,1.0,1.0,2,3],
[21,0,1012,84,6,6,6.050751,-258.279236,-0.063995,1.0,1.0,3,3],
[18,0,650,100,4,4,54.963085,-263.161163,-0.063995,1.0,1.0,2,2],
[22,0,1002,96,10,4,-2.367898,-259.820770,-0.063995,1.0,1.0,5,2],
[13,0,798,84,106,150,-54.184864,-272.159790,-0.081449,1.0,1.0,58,34],
[14,0,390,100,162,78,10.105750,-298.101410,-0.063995,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.067068,-158.314758,-0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,100.077850,-165.587280,-0.075631,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.136261,-166.131073,-0.075631,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.223251,-167.430450,-0.075631,1.0,1.0,3,1],
[24,0,390,2,266,96,-1.485976,-304.856537,-0.046542,1.0,1.0,133,48],
[26,0,906,146,76,96,-55.985806,-295.381897,-0.018617,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.287261,-172.943878,-0.026180,1.0,1.0,135,10],
[25,0,658,2,266,80,1.779219,-290.154785,-0.069813,1.0,1.0,133,40],
[12,0,214,2,174,170,-13.994453,-299.705811,-0.082903,1.0,1.0,62,27],
[10,0,554,100,70,140,27.233944,-204.395813,0.034907,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.017453,1.0,1.0,104,104],
[9,0,926,2,74,142,-38.825813,-201.548279,-0.200713,1.0,1.0,40,13],
[11,0,658,84,138,126,-5.449986,-208.466827,-0.095993,1.0,1.0,60,120],
[16,0,336,202,20,26,60.024532,-262.439850,-0.095993,1.0,1.0,10,13],
[20,0,278,202,34,28,3.611423,-260.839447,-0.095993,1.0,1.0,17,14],
[15,0,414,202,22,6,14.964869,-203.989532,-0.095993,1.0,1.0,11,3],
[17,0,1014,92,4,6,61.263287,-257.046295,-0.095993,1.0,1.0,2,3],
[21,0,1012,84,6,6,8.405948,-255.856979,-0.095993,1.0,1.0,3,3],
[18,0,650,100,4,4,57.842049,-260.640747,-0.095993,1.0,1.0,2,2],
[22,0,1002,96,10,4,0.433543,-259.136200,-0.095993,1.0,1.0,5,2],
[13,0,798,84,106,150,-51.210995,-273.150635,-0.122173,1.0,1.0,58,34],
[14,0,390,100,162,78,14.125489,-296.998169,-0.095993,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.098539,-158.472549,-0.026180,1.0,1.0,118,15],
[30,0,512,180,40,54,100.096619,-164.380585,-0.113446,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.058052,-163.701370,-0.113446,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.310165,-166.141327,-0.113446,1.0,1.0,3,1],
[24,0,390,2,266,96,2.755810,-304.120697,-0.069813,1.0,1.0,133,48],
[26,0,906,146,76,96,-51.949726,-295.916779,-0.027925,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,5.681841,-289.336426,-0.093084,1.0,1.0,133,40],
[12,0,214,2,174,170,-9.651836,-299.367157,-0.110538,1.0,1.0,62,27],
[10,0,554,100,70,140,27.642891,-204.189636,0.046542,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.023271,1.0,1.0,104,104],
[9,0,926,2,74,142,-38.432316,-201.726471,-0.232711,1.0,1.0,40,13],
[11,0,658,84,138,126,-4.278639,-207.933426,-0.127991,1.0,1.0,60,120],
[16,0,336,202,20,26,62.889076,-259.784149,-0.127991,1.0,1.0,10,13],
[20,0,278,202,34,28,6.453650,-259.989349,-0.127991,1.0,1.0,17,14],
[15,0,414,202,22,6,14.183023,-202.532776,-0.127991,1.0,1.0,11,3],
[17,0,1014,92,4,6,62.987404,-252.713760,-0.127991,1.0,1.0,2,3],
[21,0,1012,84,6,6,10.646902,-253.400223,-0.127991,1.0,1.0,3,3],
[18,0,650,100,4,4,60.650154,-258.055786,-0.127991,1.0,1.0,2,2],
[22,0,1002,96,10,4,3.222905,-258.388641,-0.127991,1.0,1.0,5,2],
[13,0,798,84,106,150,-48.194801,-274.080017,-0.162897,1.0,1.0,58,34],
[14,0,390,100,162,78,18.119133,-295.793213,-0.127991,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,100.101944,-163.173874,-0.151262,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.882751,-161.281174,-0.151262,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.380478,-164.849670,-0.151262,1.0,1.0,3,1],
[24,0,390,2,266,96,6.983139,-303.275818,-0.093084,1.0,1.0,133,48],
[26,0,906,146,76,96,-47.898483,-296.347046,-0.037234,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.477910,-172.902298,-0.043633,1.0,1.0,135,10],
[25,0,658,2,266,80,6.536694,-289.259125,-0.102393,1.0,1.0,133,40],
[12,0,214,2,174,170,-8.854922,-299.396210,-0.119264,1.0,1.0,62,27],
[10,0,554,100,70,140,28.050632,-203.981079,0.058178,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.029089,1.0,1.0,104,104],
[9,0,926,2,74,142,-38.037788,-201.902374,-0.264708,1.0,1.0,40,13],
[11,0,658,84,138,126,-3.848577,-207.910522,-0.133809,1.0,1.0,60,120],
[16,0,336,202,20,26,63.619663,-259.369598,-0.133809,1.0,1.0,10,13],
[20,0,278,202,34,28,7.186378,-259.903107,-0.133809,1.0,1.0,17,14],
[15,0,414,202,22,6,14.581352,-202.402557,-0.133809,1.0,1.0,11,3],
[17,0,1014,92,4,6,63.676857,-252.298767,-0.133809,1.0,1.0,2,3],
[21,0,1012,84,6,6,11.341225,-253.289688,-0.133809,1.0,1.0,3,3],
[18,0,650,100,4,4,61.370724,-257.654297,-0.133809,1.0,1.0,2,2],
[22,0,1002,96,10,4,3.946376,-258.321228,-0.133809,1.0,1.0,5,2],
[13,0,798,84,106,150,-47.213989,-274.289246,-0.162897,1.0,1.0,58,34],
[14,0,390,100,162,78,19.059961,-295.638489,-0.133809,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.157345,-158.788956,-0.043633,1.0,1.0,118,15],
[30,0,512,180,40,54,100.093842,-161.967270,-0.189077,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.798958,-159.857376,-0.189077,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.434105,-163.555725,-0.189077,1.0,1.0,3,1],
[24,0,390,2,266,96,7.967687,-303.185791,-0.102393,1.0,1.0,133,48],
[26,0,906,146,76,96,-46.976051,-296.768188,-0.032579,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.572955,-172.880249,-0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,7.391129,-289.177277,-0.111701,1.0,1.0,133,40],
[12,0,214,2,174,170,-8.057724,-299.421600,-0.127991,1.0,1.0,62,27],
[10,0,554,100,70,140,28.457153,-203.770172,0.069813,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-37.642242,-202.075958,-0.296706,1.0,1.0,40,13],
[11,0,658,84,138,126,-3.418655,-207.885132,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,64.347816,-258.950836,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,7.918591,-259.812653,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,14.978918,-202.270035,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,64.363876,-251.879791,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,12.034893,-253.175171,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,62.088936,-257.248657,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.669441,-258.249634,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-46.232121,-274.491821,-0.162897,1.0,1.0,58,34],
[14,0,390,100,162,78,19.999872,-295.478363,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.184675,-158.947525,-0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,100.072296,-160.760925,-0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.693565,-158.436844,-0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.470940,-162.259766,-0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,8.951694,-303.090027,-0.111701,1.0,1.0,133,48],
[26,0,906,146,76,96,-46.049400,-297.184143,-0.055851,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.572955,-172.880249,-0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,7.342575,-289.182800,-0.115192,1.0,1.0,133,40],
[12,0,214,2,174,170,-8.222768,-299.444794,-0.130900,1.0,1.0,62,27],
[10,0,554,100,70,140,28.457153,-203.770172,0.087266,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-37.642242,-202.075958,-0.322886,1.0,1.0,40,13],
[11,0,658,84,138,126,-3.418655,-207.885132,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,64.347816,-258.950836,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,7.918591,-259.812653,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,14.978918,-202.270035,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,64.363876,-251.879791,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,12.034893,-253.175171,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,62.088936,-257.248657,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.669441,-258.249634,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-46.067074,-274.468628,-0.157080,1.0,1.0,58,34],
[14,0,390,100,162,78,19.999872,-295.478363,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.184675,-158.947525,-0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,100.072296,-160.760925,-0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.693565,-158.436844,-0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.470940,-162.259766,-0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,8.951694,-303.090027,-0.115192,1.0,1.0,133,48],
[26,0,906,146,76,96,-46.069679,-297.376160,-0.073304,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.572955,-172.880249,-0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,7.294039,-289.188507,-0.118682,1.0,1.0,133,40],
[12,0,214,2,174,170,-8.387812,-299.467987,-0.133809,1.0,1.0,62,27],
[10,0,554,100,70,140,28.457153,-203.770172,0.104720,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-37.642242,-202.075958,-0.349066,1.0,1.0,40,13],
[11,0,658,84,138,126,-3.418655,-207.885132,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,64.347816,-258.950836,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,7.918591,-259.812653,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,14.978918,-202.270035,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,64.363876,-251.879791,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,12.034893,-253.175171,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,62.088936,-257.248657,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.669441,-258.249634,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-45.902027,-274.445435,-0.151262,1.0,1.0,58,34],
[14,0,390,100,162,78,19.999872,-295.478363,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.184675,-158.947525,-0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,100.072296,-160.760925,-0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.693565,-158.436844,-0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.470940,-162.259766,-0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,8.951694,-303.090027,-0.118682,1.0,1.0,133,48],
[26,0,906,146,76,96,-46.089291,-297.568268,-0.090757,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.572955,-172.880249,-0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,7.245523,-289.194366,-0.122173,1.0,1.0,133,40],
[12,0,214,2,174,170,-8.552857,-299.491180,-0.136717,1.0,1.0,62,27],
[10,0,554,100,70,140,28.457153,-203.770172,0.122173,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-37.642242,-202.075958,-0.375246,1.0,1.0,40,13],
[11,0,658,84,138,126,-3.418655,-207.885132,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,64.347816,-258.950836,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,7.918591,-259.812653,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,14.978918,-202.270035,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,64.363876,-251.879791,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,12.034893,-253.175171,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,62.088936,-257.248657,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.669441,-258.249634,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-45.736988,-274.422241,-0.145444,1.0,1.0,58,34],
[14,0,390,100,162,78,19.999872,-295.478363,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.184675,-158.947525,-0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,100.072296,-160.760925,-0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.693565,-158.436844,-0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.470940,-162.259766,-0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,8.951694,-303.090027,-0.122173,1.0,1.0,133,48],
[26,0,906,146,76,96,-46.108231,-297.760406,-0.108210,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.572955,-172.880249,-0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,7.197029,-289.200409,-0.125664,1.0,1.0,133,40],
[12,0,214,2,174,170,-8.717901,-299.514374,-0.139626,1.0,1.0,62,27],
[10,0,554,100,70,140,28.457153,-203.770172,0.139626,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-37.642242,-202.075958,-0.401426,1.0,1.0,40,13],
[11,0,658,84,138,126,-3.418655,-207.885132,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,64.347816,-258.950836,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,7.918591,-259.812653,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,14.978918,-202.270035,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,64.363876,-251.879791,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,12.034893,-253.175171,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,62.088936,-257.248657,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.669441,-258.249634,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-45.571941,-274.399048,-0.139626,1.0,1.0,58,34],
[14,0,390,100,162,78,19.999872,-295.478363,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.184675,-158.947525,-0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,100.072296,-160.760925,-0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.693565,-158.436844,-0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.470940,-162.259766,-0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,8.951694,-303.090027,-0.125664,1.0,1.0,133,48],
[26,0,906,146,76,96,-46.126499,-297.952637,-0.125664,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.572955,-172.880249,-0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,7.148556,-289.206635,-0.129154,1.0,1.0,133,40],
[12,0,214,2,174,170,-8.717901,-299.514374,-0.139626,1.0,1.0,62,27],
[10,0,554,100,70,140,28.457153,-203.770172,0.139626,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-37.642242,-202.075958,-0.401426,1.0,1.0,40,13],
[11,0,658,84,138,126,-3.418655,-207.885132,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,64.347816,-258.950836,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,7.918591,-259.812653,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,14.978918,-202.270035,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,64.363876,-251.879791,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,12.034893,-253.175171,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,62.088936,-257.248657,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.669441,-258.249634,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-45.571941,-274.399048,-0.139626,1.0,1.0,58,34],
[14,0,390,100,162,78,19.999872,-295.478363,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.184675,-158.947525,-0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,100.072296,-160.760925,-0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.693565,-158.436844,-0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.470940,-162.259766,-0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,8.951694,-303.090027,-0.129154,1.0,1.0,133,48],
[26,0,906,146,76,96,-46.144096,-298.144928,-0.129154,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.572955,-172.880249,-0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,7.100105,-289.213013,-0.132645,1.0,1.0,133,40],
[12,0,214,2,174,170,-8.717901,-299.514374,-0.139626,1.0,1.0,62,27],
[10,0,554,100,70,140,28.457153,-203.770172,0.139626,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-37.642242,-202.075958,-0.401426,1.0,1.0,40,13],
[11,0,658,84,138,126,-3.418655,-207.885132,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,64.347816,-258.950836,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,7.918591,-259.812653,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,14.978918,-202.270035,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,64.363876,-251.879791,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,12.034893,-253.175171,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,62.088936,-257.248657,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.669441,-258.249634,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-45.571941,-274.399048,-0.139626,1.0,1.0,58,34],
[14,0,390,100,162,78,19.999872,-295.478363,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.184675,-158.947525,-0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,100.072296,-160.760925,-0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.693565,-158.436844,-0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.470940,-162.259766,-0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,8.951694,-303.090027,-0.132645,1.0,1.0,133,48],
[26,0,906,146,76,96,-46.161022,-298.337280,-0.132645,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.572955,-172.880249,-0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,7.051677,-289.219543,-0.136136,1.0,1.0,133,40],
[12,0,214,2,174,170,-8.717901,-299.514374,-0.139626,1.0,1.0,62,27],
[10,0,554,100,70,140,28.457153,-203.770172,0.139626,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-37.642242,-202.075958,-0.401426,1.0,1.0,40,13],
[11,0,658,84,138,126,-3.418655,-207.885132,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,64.347816,-258.950836,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,7.918591,-259.812653,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,14.978918,-202.270035,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,64.363876,-251.879791,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,12.034893,-253.175171,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,62.088936,-257.248657,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.669441,-258.249634,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-45.571941,-274.399048,-0.139626,1.0,1.0,58,34],
[14,0,390,100,162,78,19.999872,-295.478363,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.184675,-158.947525,-0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,100.072296,-160.760925,-0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.693565,-158.436844,-0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.470940,-162.259766,-0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,8.951694,-303.090027,-0.136136,1.0,1.0,133,48],
[26,0,906,146,76,96,-46.177277,-298.529694,-0.136136,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.572955,-172.880249,-0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,7.003271,-289.226288,-0.139626,1.0,1.0,133,40],
[12,0,214,2,174,170,-8.717901,-299.514374,-0.139626,1.0,1.0,62,27],
[10,0,554,100,70,140,28.457153,-203.770172,0.139626,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-37.642242,-202.075958,-0.401426,1.0,1.0,40,13],
[11,0,658,84,138,126,-3.418655,-207.885132,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,64.347816,-258.950836,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,7.918591,-259.812653,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,14.978918,-202.270035,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,64.363876,-251.879791,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,12.034893,-253.175171,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,62.088936,-257.248657,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,4.669441,-258.249634,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-45.571941,-274.399048,-0.139626,1.0,1.0,58,34],
[14,0,390,100,162,78,19.999872,-295.478363,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.184675,-158.947525,-0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,100.072296,-160.760925,-0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.693565,-158.436844,-0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.470940,-162.259766,-0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,8.951694,-303.090027,-0.139626,1.0,1.0,133,48],
[26,0,906,146,76,96,-46.192860,-298.722168,-0.139626,1.0,1.0,48,90]
]
]
}
}
]

},{}],86:[function(require,module,exports){
module.exports=[
{
"images":["koishi.png"],
"name": "reaction_look_front_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 500,
"MarginWidth": 258,
"MarginHeight": 508,
"parts": ["root","Chara","koishi0_bottom0","koishi0_thighs_l0","koishi0_calf_l0","koishi0_foot_l0","koishi0_thighs_r0","koishi0_calf_r0","koishi0_foot_r0","koishi0_body","koishi0_arm0_r0","koishi0_arm0_l0","koishi0_head0","koishi0_hear_b0","koishi0_hear_f1","koishi0_hear_f0","koishi0_mouth0","koishi0_eye0_l0","koishi0_eye0_l1","koishi0_eye0_l2","koishi0_eye1_l0","koishi0_eye0_r0","koishi0_eye0_r1","koishi0_eye0_r2","koishi0_eye1_r0","koishi0_hat0_f0","koishi0_hat0_b0","koishi0_hat0_obj0","3rdeye0_all","3rdeye0_cord_b0","3rdeye0_cord_f0","3rdeye0_body0","3rdeye0_eye0","3rdeye0_light0","3rdeye0_eye1"],
"ssa": [
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-173.0,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-10.0,-292.0,0.0,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-300.0,0.0,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-210.0,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-270.0,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-263.0,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-209.0,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-270.0,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-263.0,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-268.0,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-261.0,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-270.0,0.0,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-300.0,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-158.0,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-168.0,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.0,-171.0,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.0,-170.0,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-306.0,0.0,1.0,1.0,133,48],
[26,0,906,146,76,96,-64.0,-294.0,0.0,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,3.063961,-172.988174,-0.005818,1.0,1.0,135,10],
[25,0,658,2,266,80,-6.884779,-291.988953,0.008727,1.0,1.0,133,40],
[12,0,214,2,174,170,-23.756950,-299.988434,0.004363,1.0,1.0,62,27],
[10,0,554,100,70,140,27.900610,-204.395813,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-7.333333,-134.0,-0.017453,1.0,1.0,104,104],
[9,0,926,2,74,142,-38.159149,-201.548279,-0.148353,1.0,1.0,40,13],
[11,0,658,84,138,126,-6.006950,-209.988434,-0.000000,1.0,1.0,60,120],
[16,0,336,202,20,26,53.993050,-269.988434,-0.000000,1.0,1.0,10,13],
[20,0,278,202,34,28,-2.006950,-262.988434,-0.000000,1.0,1.0,17,14],
[15,0,414,202,22,6,18.243050,-208.488434,-0.000000,1.0,1.0,11,3],
[17,0,1014,92,4,6,58.243050,-269.988434,-0.000000,1.0,1.0,2,3],
[21,0,1012,84,6,6,4.493050,-262.988434,-0.000000,1.0,1.0,3,3],
[18,0,650,100,4,4,51.993050,-267.988434,-0.000000,1.0,1.0,2,2],
[22,0,1002,96,10,4,-5.006950,-260.988434,-0.000000,1.0,1.0,5,2],
[13,0,798,84,106,150,-57.256950,-269.988434,-0.008727,1.0,1.0,58,34],
[14,0,390,100,162,78,4.993050,-299.988434,-0.000000,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.022966,-158.104782,-0.005818,1.0,1.0,118,15],
[30,0,512,180,40,54,101.699867,-167.414246,-0.017453,1.0,1.0,20,27],
[31,0,1002,84,8,10,108.251236,-170.300354,-0.017453,1.0,1.0,4,5],
[32,0,1014,100,6,2,103.734467,-169.379044,-0.017453,1.0,1.0,3,1],
[24,0,390,2,266,96,-7.006950,-305.988434,0.008727,1.0,1.0,133,48],
[26,0,906,146,76,96,-60.900177,-293.517670,0.022689,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,4.127852,-172.975983,-0.011636,1.0,1.0,135,10],
[25,0,658,2,266,80,-3.770579,-291.920929,0.017453,1.0,1.0,133,40],
[12,0,214,2,174,170,-20.514914,-299.918793,0.008727,1.0,1.0,62,27],
[10,0,554,100,70,140,29.790487,-203.770172,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-6.666667,-134.0,-0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-36.308907,-202.075958,-0.191986,1.0,1.0,40,13],
[11,0,658,84,138,126,-3.014914,-209.918793,-0.000000,1.0,1.0,60,120],
[16,0,336,202,20,26,56.985085,-269.918793,-0.000000,1.0,1.0,10,13],
[20,0,278,202,34,28,0.985086,-262.918793,-0.000000,1.0,1.0,17,14],
[15,0,414,202,22,6,19.485086,-207.918793,-0.000000,1.0,1.0,11,3],
[17,0,1014,92,4,6,61.485085,-269.918793,-0.000000,1.0,1.0,2,3],
[21,0,1012,84,6,6,7.985086,-262.918793,-0.000000,1.0,1.0,3,3],
[18,0,650,100,4,4,54.985085,-267.918793,-0.000000,1.0,1.0,2,2],
[22,0,1002,96,10,4,-2.014914,-260.918793,-0.000000,1.0,1.0,5,2],
[13,0,798,84,106,150,-54.514915,-269.918793,-0.017453,1.0,1.0,58,34],
[14,0,390,100,162,78,7.985086,-299.918793,-0.000000,1.0,1.0,81,39],
[29,0,2,180,236,30,-16.045322,-158.209702,-0.011636,1.0,1.0,118,15],
[30,0,512,180,40,54,103.396286,-166.820557,-0.034907,1.0,1.0,20,27],
[31,0,1002,84,8,10,110.496719,-169.574432,-0.034907,1.0,1.0,4,5],
[32,0,1014,100,6,2,105.464867,-168.749542,-0.034907,1.0,1.0,3,1],
[24,0,390,2,266,96,-4.014913,-305.918793,0.017453,1.0,1.0,133,48],
[26,0,906,146,76,96,-57.797256,-292.978180,0.045379,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,5.191672,-172.963425,-0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,-0.658731,-291.795959,0.026180,1.0,1.0,133,40],
[12,0,214,2,174,170,-17.275208,-299.791168,0.013090,1.0,1.0,62,27],
[10,0,554,100,70,140,31.669258,-203.123276,0.000000,1.0,1.0,20,13],
[8,0,2,2,210,176,-6.0,-134.0,-0.052360,1.0,1.0,104,104],
[9,0,926,2,74,142,-34.449638,-202.582932,-0.235619,1.0,1.0,40,13],
[11,0,658,84,138,126,-0.025208,-209.791168,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,59.974792,-269.791168,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,3.974792,-262.791168,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,20.724792,-207.291168,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,64.724792,-269.791168,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,11.474792,-262.791168,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,57.974792,-267.791168,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,0.974792,-260.791168,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-51.775208,-269.791168,-0.026180,1.0,1.0,58,34],
[14,0,390,100,162,78,10.974792,-299.791168,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-15.067068,-158.314758,-0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,105.089180,-166.218933,-0.052360,1.0,1.0,20,27],
[31,0,1002,84,8,10,112.735909,-168.822296,-0.052360,1.0,1.0,4,5],
[32,0,1014,100,6,2,107.191109,-168.111526,-0.052360,1.0,1.0,3,1],
[24,0,390,2,266,96,-1.025208,-305.791168,0.026180,1.0,1.0,133,48],
[26,0,906,146,76,96,-54.692581,-292.381714,0.068068,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,6.255417,-172.950485,-0.023271,1.0,1.0,135,10],
[25,0,658,2,266,80,2.449445,-291.614105,0.034907,1.0,1.0,133,40],
[12,0,214,2,174,170,-14.039148,-299.605591,0.017453,1.0,1.0,62,27],
[10,0,554,100,70,140,33.536556,-202.455322,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-5.333333,-134.0,-0.069813,1.0,1.0,104,104],
[9,0,926,2,74,142,-32.581699,-203.069000,-0.279253,1.0,1.0,40,13],
[11,0,658,84,138,126,2.960852,-209.605591,-0.000000,1.0,1.0,60,120],
[16,0,336,202,20,26,62.960854,-269.605591,-0.000000,1.0,1.0,10,13],
[20,0,278,202,34,28,6.960852,-262.605591,-0.000000,1.0,1.0,17,14],
[15,0,414,202,22,6,21.960852,-206.605591,-0.000000,1.0,1.0,11,3],
[17,0,1014,92,4,6,67.960854,-269.605591,-0.000000,1.0,1.0,2,3],
[21,0,1012,84,6,6,14.960852,-262.605591,-0.000000,1.0,1.0,3,3],
[18,0,650,100,4,4,60.960854,-267.605591,-0.000000,1.0,1.0,2,2],
[22,0,1002,96,10,4,3.960852,-260.605591,-0.000000,1.0,1.0,5,2],
[13,0,798,84,106,150,-49.039146,-269.605591,-0.034907,1.0,1.0,58,34],
[14,0,390,100,162,78,13.960853,-299.605591,-0.000000,1.0,1.0,81,39],
[29,0,2,180,236,30,-14.088202,-158.419922,-0.023271,1.0,1.0,118,15],
[30,0,512,180,40,54,106.778481,-165.609436,-0.069813,1.0,1.0,20,27],
[31,0,1002,84,8,10,114.968262,-168.044083,-0.069813,1.0,1.0,4,5],
[32,0,1014,100,6,2,108.913124,-167.465057,-0.069813,1.0,1.0,3,1],
[24,0,390,2,266,96,1.960852,-305.605591,0.034907,1.0,1.0,133,48],
[26,0,906,146,76,96,-51.587456,-291.728333,0.090757,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,7.319086,-172.937180,-0.029089,1.0,1.0,135,10],
[25,0,658,2,266,80,5.816806,-291.453552,0.013963,1.0,1.0,133,40],
[12,0,214,2,174,170,-10.647582,-299.735229,-0.002909,1.0,1.0,62,27],
[10,0,554,100,70,140,35.392010,-201.766525,0.000000,1.0,1.0,20,13],
[8,0,2,2,210,176,-4.666667,-134.0,-0.087266,1.0,1.0,104,104],
[9,0,926,2,74,142,-30.705463,-203.534027,-0.322886,1.0,1.0,40,13],
[11,0,658,84,138,126,4.945753,-209.449341,-0.017453,1.0,1.0,60,120],
[16,0,336,202,20,26,65.983757,-268.393066,-0.017453,1.0,1.0,10,13],
[20,0,278,202,34,28,9.870121,-262.371460,-0.017453,1.0,1.0,17,14],
[15,0,414,202,22,6,23.890503,-206.118195,-0.017453,1.0,1.0,11,3],
[17,0,1014,92,4,6,70.982994,-268.305817,-0.017453,1.0,1.0,2,3],
[21,0,1012,84,6,6,17.868902,-262.231842,-0.017453,1.0,1.0,3,3],
[18,0,650,100,4,4,63.949158,-266.428284,-0.017453,1.0,1.0,2,2],
[22,0,1002,96,10,4,6.835673,-260.424133,-0.017453,1.0,1.0,5,2],
[13,0,798,84,106,150,-45.832542,-270.344818,-0.046542,1.0,1.0,58,34],
[14,0,390,100,162,78,17.514793,-299.243652,-0.017453,1.0,1.0,81,39],
[29,0,2,180,236,30,-13.108725,-158.525223,-0.029089,1.0,1.0,118,15],
[30,0,512,180,40,54,108.464127,-164.992035,-0.087266,1.0,1.0,20,27],
[31,0,1002,84,8,10,116.695152,-167.283371,-0.087266,1.0,1.0,4,5],
[32,0,1014,100,6,2,110.630829,-166.810120,-0.087266,1.0,1.0,3,1],
[24,0,390,2,266,96,5.621336,-305.452179,0.013963,1.0,1.0,133,48],
[26,0,906,146,76,96,-48.205856,-292.699402,0.083776,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,9.180953,-291.246826,-0.006981,1.0,1.0,133,40],
[12,0,214,2,174,170,-7.254091,-299.820190,-0.023271,1.0,1.0,62,27],
[10,0,554,100,70,140,37.235264,-201.057083,0.000000,1.0,1.0,20,13],
[8,0,2,2,210,176,-4.0,-134.0,-0.104720,1.0,1.0,104,104],
[9,0,926,2,74,142,-28.821293,-203.977875,-0.366519,1.0,1.0,40,13],
[11,0,658,84,138,126,6.927729,-209.270081,-0.034907,1.0,1.0,60,120],
[16,0,336,202,20,26,68.985146,-267.139557,-0.034907,1.0,1.0,10,13],
[20,0,278,202,34,28,12.774965,-262.098206,-0.034907,1.0,1.0,17,14],
[15,0,414,202,22,6,25.811457,-205.608810,-0.034907,1.0,1.0,11,3],
[17,0,1014,92,4,6,73.982101,-266.965057,-0.034907,1.0,1.0,2,3],
[21,0,1012,84,6,6,20.770092,-261.819000,-0.034907,1.0,1.0,3,3],
[18,0,650,100,4,4,66.916565,-265.210571,-0.034907,1.0,1.0,2,2],
[22,0,1002,96,10,4,9.706994,-260.204132,-0.034907,1.0,1.0,5,2],
[13,0,798,84,106,150,-42.613495,-271.036682,-0.058178,1.0,1.0,58,34],
[14,0,390,100,162,78,21.061983,-298.831360,-0.034907,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,110.146042,-164.366791,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,118.415802,-166.514130,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,112.344139,-166.146774,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,9.278690,-305.246490,-0.006981,1.0,1.0,133,48],
[26,0,906,146,76,96,-44.803768,-293.623779,0.048869,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,9.132085,-291.247253,-0.010472,1.0,1.0,133,40],
[12,0,214,2,174,170,-7.420656,-299.825989,-0.026180,1.0,1.0,62,27],
[10,0,554,100,70,140,37.235264,-201.057083,0.017453,1.0,1.0,20,13],
[8,0,2,2,210,176,-4.0,-134.0,-0.104720,1.0,1.0,104,104],
[9,0,926,2,74,142,-28.821293,-203.977875,-0.392699,1.0,1.0,40,13],
[11,0,658,84,138,126,6.927729,-209.270081,-0.034907,1.0,1.0,60,120],
[16,0,336,202,20,26,68.985146,-267.139557,-0.034907,1.0,1.0,10,13],
[20,0,278,202,34,28,12.774965,-262.098206,-0.034907,1.0,1.0,17,14],
[15,0,414,202,22,6,25.811457,-205.608810,-0.034907,1.0,1.0,11,3],
[17,0,1014,92,4,6,73.982101,-266.965057,-0.034907,1.0,1.0,2,3],
[21,0,1012,84,6,6,20.770092,-261.819000,-0.034907,1.0,1.0,3,3],
[18,0,650,100,4,4,66.916565,-265.210571,-0.034907,1.0,1.0,2,2],
[22,0,1002,96,10,4,9.706994,-260.204132,-0.034907,1.0,1.0,5,2],
[13,0,798,84,106,150,-42.446930,-271.030853,-0.052360,1.0,1.0,58,34],
[14,0,390,100,162,78,21.061983,-298.831360,-0.034907,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,110.146042,-164.366791,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,118.415802,-166.514130,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,112.344139,-166.146774,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,9.278690,-305.246490,-0.010472,1.0,1.0,133,48],
[26,0,906,146,76,96,-44.844009,-293.812622,0.031416,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,9.083220,-291.247864,-0.013963,1.0,1.0,133,40],
[12,0,214,2,174,170,-7.587220,-299.831818,-0.029089,1.0,1.0,62,27],
[10,0,554,100,70,140,37.235264,-201.057083,0.034907,1.0,1.0,20,13],
[8,0,2,2,210,176,-4.0,-134.0,-0.104720,1.0,1.0,104,104],
[9,0,926,2,74,142,-28.821293,-203.977875,-0.418879,1.0,1.0,40,13],
[11,0,658,84,138,126,6.927729,-209.270081,-0.034907,1.0,1.0,60,120],
[16,0,336,202,20,26,68.985146,-267.139557,-0.034907,1.0,1.0,10,13],
[20,0,278,202,34,28,12.774965,-262.098206,-0.034907,1.0,1.0,17,14],
[15,0,414,202,22,6,25.811457,-205.608810,-0.034907,1.0,1.0,11,3],
[17,0,1014,92,4,6,73.982101,-266.965057,-0.034907,1.0,1.0,2,3],
[21,0,1012,84,6,6,20.770092,-261.819000,-0.034907,1.0,1.0,3,3],
[18,0,650,100,4,4,66.916565,-265.210571,-0.034907,1.0,1.0,2,2],
[22,0,1002,96,10,4,9.706994,-260.204132,-0.034907,1.0,1.0,5,2],
[13,0,798,84,106,150,-42.280365,-271.025024,-0.046542,1.0,1.0,58,34],
[14,0,390,100,162,78,21.061983,-298.831360,-0.034907,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,110.146042,-164.366791,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,118.415802,-166.514130,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,112.344139,-166.146774,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,9.278690,-305.246490,-0.013963,1.0,1.0,133,48],
[26,0,906,146,76,96,-44.883591,-294.001617,0.013963,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,9.034357,-291.248627,-0.017453,1.0,1.0,133,40],
[12,0,214,2,174,170,-7.753787,-299.837646,-0.031998,1.0,1.0,62,27],
[10,0,554,100,70,140,37.235264,-201.057083,0.052360,1.0,1.0,20,13],
[8,0,2,2,210,176,-4.0,-134.0,-0.104720,1.0,1.0,104,104],
[9,0,926,2,74,142,-28.821293,-203.977875,-0.445059,1.0,1.0,40,13],
[11,0,658,84,138,126,6.927729,-209.270081,-0.034907,1.0,1.0,60,120],
[16,0,336,202,20,26,68.985146,-267.139557,-0.034907,1.0,1.0,10,13],
[20,0,278,202,34,28,12.774965,-262.098206,-0.034907,1.0,1.0,17,14],
[15,0,414,202,22,6,25.811457,-205.608810,-0.034907,1.0,1.0,11,3],
[17,0,1014,92,4,6,73.982101,-266.965057,-0.034907,1.0,1.0,2,3],
[21,0,1012,84,6,6,20.770092,-261.819000,-0.034907,1.0,1.0,3,3],
[18,0,650,100,4,4,66.916565,-265.210571,-0.034907,1.0,1.0,2,2],
[22,0,1002,96,10,4,9.706994,-260.204132,-0.034907,1.0,1.0,5,2],
[13,0,798,84,106,150,-42.113800,-271.019226,-0.040724,1.0,1.0,58,34],
[14,0,390,100,162,78,21.061983,-298.831360,-0.034907,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,110.146042,-164.366791,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,118.415802,-166.514130,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,112.344139,-166.146774,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,9.278690,-305.246490,-0.017453,1.0,1.0,133,48],
[26,0,906,146,76,96,-44.922516,-294.190735,-0.003491,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,8.985497,-291.249573,-0.020944,1.0,1.0,133,40],
[12,0,214,2,174,170,-7.920351,-299.843445,-0.034907,1.0,1.0,62,27],
[10,0,554,100,70,140,37.235264,-201.057083,0.069813,1.0,1.0,20,13],
[8,0,2,2,210,176,-4.0,-134.0,-0.104720,1.0,1.0,104,104],
[9,0,926,2,74,142,-28.821293,-203.977875,-0.471239,1.0,1.0,40,13],
[11,0,658,84,138,126,6.927729,-209.270081,-0.034907,1.0,1.0,60,120],
[16,0,336,202,20,26,68.985146,-267.139557,-0.034907,1.0,1.0,10,13],
[20,0,278,202,34,28,12.774965,-262.098206,-0.034907,1.0,1.0,17,14],
[15,0,414,202,22,6,25.811457,-205.608810,-0.034907,1.0,1.0,11,3],
[17,0,1014,92,4,6,73.982101,-266.965057,-0.034907,1.0,1.0,2,3],
[21,0,1012,84,6,6,20.770092,-261.819000,-0.034907,1.0,1.0,3,3],
[18,0,650,100,4,4,66.916565,-265.210571,-0.034907,1.0,1.0,2,2],
[22,0,1002,96,10,4,9.706994,-260.204132,-0.034907,1.0,1.0,5,2],
[13,0,798,84,106,150,-41.947235,-271.013397,-0.034907,1.0,1.0,58,34],
[14,0,390,100,162,78,21.061983,-298.831360,-0.034907,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,110.146042,-164.366791,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,118.415802,-166.514130,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,112.344139,-166.146774,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,9.278690,-305.246490,-0.020944,1.0,1.0,133,48],
[26,0,906,146,76,96,-44.960777,-294.380005,-0.020944,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,8.936640,-291.250671,-0.024435,1.0,1.0,133,40],
[12,0,214,2,174,170,-7.920351,-299.843445,-0.034907,1.0,1.0,62,27],
[10,0,554,100,70,140,37.235264,-201.057083,0.069813,1.0,1.0,20,13],
[8,0,2,2,210,176,-4.0,-134.0,-0.104720,1.0,1.0,104,104],
[9,0,926,2,74,142,-28.821293,-203.977875,-0.471239,1.0,1.0,40,13],
[11,0,658,84,138,126,6.927729,-209.270081,-0.034907,1.0,1.0,60,120],
[16,0,336,202,20,26,68.985146,-267.139557,-0.034907,1.0,1.0,10,13],
[20,0,278,202,34,28,12.774965,-262.098206,-0.034907,1.0,1.0,17,14],
[15,0,414,202,22,6,25.811457,-205.608810,-0.034907,1.0,1.0,11,3],
[17,0,1014,92,4,6,73.982101,-266.965057,-0.034907,1.0,1.0,2,3],
[21,0,1012,84,6,6,20.770092,-261.819000,-0.034907,1.0,1.0,3,3],
[18,0,650,100,4,4,66.916565,-265.210571,-0.034907,1.0,1.0,2,2],
[22,0,1002,96,10,4,9.706994,-260.204132,-0.034907,1.0,1.0,5,2],
[13,0,798,84,106,150,-41.947235,-271.013397,-0.034907,1.0,1.0,58,34],
[14,0,390,100,162,78,21.061983,-298.831360,-0.034907,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,110.146042,-164.366791,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,118.415802,-166.514130,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,112.344139,-166.146774,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,9.278690,-305.246490,-0.024435,1.0,1.0,133,48],
[26,0,906,146,76,96,-44.998375,-294.569397,-0.024435,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,8.887787,-291.251953,-0.027925,1.0,1.0,133,40],
[12,0,214,2,174,170,-7.920351,-299.843445,-0.034907,1.0,1.0,62,27],
[10,0,554,100,70,140,37.235264,-201.057083,0.069813,1.0,1.0,20,13],
[8,0,2,2,210,176,-4.0,-134.0,-0.104720,1.0,1.0,104,104],
[9,0,926,2,74,142,-28.821293,-203.977875,-0.471239,1.0,1.0,40,13],
[11,0,658,84,138,126,6.927729,-209.270081,-0.034907,1.0,1.0,60,120],
[16,0,336,202,20,26,68.985146,-267.139557,-0.034907,1.0,1.0,10,13],
[20,0,278,202,34,28,12.774965,-262.098206,-0.034907,1.0,1.0,17,14],
[15,0,414,202,22,6,25.811457,-205.608810,-0.034907,1.0,1.0,11,3],
[17,0,1014,92,4,6,73.982101,-266.965057,-0.034907,1.0,1.0,2,3],
[21,0,1012,84,6,6,20.770092,-261.819000,-0.034907,1.0,1.0,3,3],
[18,0,650,100,4,4,66.916565,-265.210571,-0.034907,1.0,1.0,2,2],
[22,0,1002,96,10,4,9.706994,-260.204132,-0.034907,1.0,1.0,5,2],
[13,0,798,84,106,150,-41.947235,-271.013397,-0.034907,1.0,1.0,58,34],
[14,0,390,100,162,78,21.061983,-298.831360,-0.034907,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,110.146042,-164.366791,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,118.415802,-166.514130,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,112.344139,-166.146774,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,9.278690,-305.246490,-0.027925,1.0,1.0,133,48],
[26,0,906,146,76,96,-45.035316,-294.758942,-0.027925,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,8.838940,-291.253387,-0.031416,1.0,1.0,133,40],
[12,0,214,2,174,170,-7.920351,-299.843445,-0.034907,1.0,1.0,62,27],
[10,0,554,100,70,140,37.235264,-201.057083,0.069813,1.0,1.0,20,13],
[8,0,2,2,210,176,-4.0,-134.0,-0.104720,1.0,1.0,104,104],
[9,0,926,2,74,142,-28.821293,-203.977875,-0.471239,1.0,1.0,40,13],
[11,0,658,84,138,126,6.927729,-209.270081,-0.034907,1.0,1.0,60,120],
[16,0,336,202,20,26,68.985146,-267.139557,-0.034907,1.0,1.0,10,13],
[20,0,278,202,34,28,12.774965,-262.098206,-0.034907,1.0,1.0,17,14],
[15,0,414,202,22,6,25.811457,-205.608810,-0.034907,1.0,1.0,11,3],
[17,0,1014,92,4,6,73.982101,-266.965057,-0.034907,1.0,1.0,2,3],
[21,0,1012,84,6,6,20.770092,-261.819000,-0.034907,1.0,1.0,3,3],
[18,0,650,100,4,4,66.916565,-265.210571,-0.034907,1.0,1.0,2,2],
[22,0,1002,96,10,4,9.706994,-260.204132,-0.034907,1.0,1.0,5,2],
[13,0,798,84,106,150,-41.947235,-271.013397,-0.034907,1.0,1.0,58,34],
[14,0,390,100,162,78,21.061983,-298.831360,-0.034907,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,110.146042,-164.366791,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,118.415802,-166.514130,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,112.344139,-166.146774,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,9.278690,-305.246490,-0.031416,1.0,1.0,133,48],
[26,0,906,146,76,96,-45.071594,-294.948608,-0.031416,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,8.790097,-291.255005,-0.034907,1.0,1.0,133,40],
[12,0,214,2,174,170,-7.920351,-299.843445,-0.034907,1.0,1.0,62,27],
[10,0,554,100,70,140,37.235264,-201.057083,0.069813,1.0,1.0,20,13],
[8,0,2,2,210,176,-4.0,-134.0,-0.104720,1.0,1.0,104,104],
[9,0,926,2,74,142,-28.821293,-203.977875,-0.471239,1.0,1.0,40,13],
[11,0,658,84,138,126,6.927729,-209.270081,-0.034907,1.0,1.0,60,120],
[16,0,336,202,20,26,68.985146,-267.139557,-0.034907,1.0,1.0,10,13],
[20,0,278,202,34,28,12.774965,-262.098206,-0.034907,1.0,1.0,17,14],
[15,0,414,202,22,6,25.811457,-205.608810,-0.034907,1.0,1.0,11,3],
[17,0,1014,92,4,6,73.982101,-266.965057,-0.034907,1.0,1.0,2,3],
[21,0,1012,84,6,6,20.770092,-261.819000,-0.034907,1.0,1.0,3,3],
[18,0,650,100,4,4,66.916565,-265.210571,-0.034907,1.0,1.0,2,2],
[22,0,1002,96,10,4,9.706994,-260.204132,-0.034907,1.0,1.0,5,2],
[13,0,798,84,106,150,-41.947235,-271.013397,-0.034907,1.0,1.0,58,34],
[14,0,390,100,162,78,21.061983,-298.831360,-0.034907,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,110.146042,-164.366791,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,118.415802,-166.514130,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,112.344139,-166.146774,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,9.278690,-305.246490,-0.034907,1.0,1.0,133,48],
[26,0,906,146,76,96,-45.107208,-295.138367,-0.034907,1.0,1.0,48,90]
]
]
}
}
]

},{}],87:[function(require,module,exports){
module.exports=[
{
"images":["koishi.png"],
"name": "reaction_look_top_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 500,
"MarginWidth": 258,
"MarginHeight": 508,
"parts": ["root","Chara","koishi0_bottom0","koishi0_thighs_l0","koishi0_calf_l0","koishi0_foot_l0","koishi0_thighs_r0","koishi0_calf_r0","koishi0_foot_r0","koishi0_body","koishi0_arm0_r0","koishi0_arm0_l0","koishi0_head0","koishi0_hear_b0","koishi0_hear_f1","koishi0_hear_f0","koishi0_mouth0","koishi0_eye0_l0","koishi0_eye0_l1","koishi0_eye0_l2","koishi0_eye1_l0","koishi0_eye0_r0","koishi0_eye0_r1","koishi0_eye0_r2","koishi0_eye1_r0","koishi0_hat0_f0","koishi0_hat0_b0","koishi0_hat0_obj0","3rdeye0_all","3rdeye0_cord_b0","3rdeye0_cord_f0","3rdeye0_body0","3rdeye0_eye0","3rdeye0_light0","3rdeye0_eye1"],
"ssa": [
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-173.0,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-10.0,-292.0,0.0,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-300.0,0.0,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-210.0,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-270.0,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-263.0,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-209.0,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-270.0,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-263.0,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-268.0,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-261.0,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-270.0,0.0,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-300.0,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-158.0,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-168.0,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.0,-171.0,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.0,-170.0,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-306.0,0.0,1.0,1.0,133,48],
[26,0,906,146,76,96,-64.0,-294.0,0.0,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.903932,-173.017029,0.008727,1.0,1.0,135,10],
[25,0,658,2,266,80,-12.942891,-291.923340,0.040724,1.0,1.0,133,40],
[12,0,214,2,174,170,-30.062347,-299.378967,0.036361,1.0,1.0,62,27],
[10,0,554,100,70,140,25.586365,-205.196594,0.023271,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.005818,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.389248,-200.812698,-0.125082,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.442131,-209.992889,0.031998,1.0,1.0,60,120],
[16,0,336,202,20,26,48.607620,-271.881714,0.031998,1.0,1.0,10,13],
[20,0,278,202,34,28,-7.139768,-263.093719,0.031998,1.0,1.0,17,14],
[15,0,414,202,22,6,14.843445,-209.269470,0.031998,1.0,1.0,11,3],
[17,0,1014,92,4,6,51.316223,-273.219055,0.031998,1.0,1.0,2,3],
[21,0,1012,84,6,6,-1.940444,-264.760925,0.031998,1.0,1.0,3,3],
[18,0,650,100,4,4,46.672630,-269.818756,0.031998,1.0,1.0,2,2],
[22,0,1002,96,10,4,-10.074247,-260.998779,0.031998,1.0,1.0,5,2],
[13,0,798,84,106,150,-62.585430,-268.322571,0.023271,1.0,1.0,58,34],
[14,0,390,100,162,78,-1.327064,-300.298737,0.031998,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.964409,-157.843079,0.008727,1.0,1.0,118,15],
[30,0,512,180,40,54,99.940926,-169.205750,0.037815,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.285767,-173.410828,0.037815,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.863884,-171.279938,0.037815,1.0,1.0,3,1],
[24,0,390,2,266,96,-13.512875,-305.911743,0.040724,1.0,1.0,133,48],
[26,0,906,146,76,96,-66.979546,-291.723175,0.054687,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.807719,-173.033234,0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,-15.882511,-291.769165,0.081449,1.0,1.0,133,40],
[12,0,214,2,174,170,-33.104046,-298.679840,0.072722,1.0,1.0,62,27],
[10,0,554,100,70,140,25.171593,-205.390793,0.046542,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.011636,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.777397,-200.623138,-0.145444,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.884212,-209.983215,0.063995,1.0,1.0,60,120],
[16,0,336,202,20,26,46.155865,-273.697510,0.063995,1.0,1.0,10,13],
[20,0,278,202,34,28,-9.281842,-263.130524,0.063995,1.0,1.0,17,14],
[15,0,414,202,22,6,12.697634,-209.426224,0.063995,1.0,1.0,11,3],
[17,0,1014,92,4,6,47.492916,-276.288330,0.063995,1.0,1.0,2,3],
[21,0,1012,84,6,6,-4.982909,-266.412170,0.063995,1.0,1.0,3,3],
[18,0,650,100,4,4,44.287861,-271.573700,0.063995,1.0,1.0,2,2],
[22,0,1002,96,10,4,-12.147798,-260.942749,0.063995,1.0,1.0,5,2],
[13,0,798,84,106,150,-65.115891,-266.566895,0.046542,1.0,1.0,58,34],
[14,0,390,100,162,78,-4.662385,-300.502441,0.063995,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.927448,-157.686462,0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,99.868423,-170.410889,0.075631,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.476334,-175.774384,0.075631,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.711586,-172.556290,0.075631,1.0,1.0,3,1],
[24,0,390,2,266,96,-17.021532,-305.722748,0.081449,1.0,1.0,133,48],
[26,0,906,146,76,96,-69.866211,-289.369171,0.109374,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.711368,-173.048584,0.026180,1.0,1.0,135,10],
[25,0,658,2,266,80,-18.816648,-291.537506,0.122173,1.0,1.0,133,40],
[12,0,214,2,174,170,-36.122932,-297.903290,0.109083,1.0,1.0,62,27],
[10,0,554,100,70,140,24.755699,-205.582565,0.069813,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.017453,1.0,1.0,104,104],
[9,0,926,2,74,142,-41.164436,-200.431320,-0.165806,1.0,1.0,40,13],
[11,0,658,84,138,126,-10.326231,-209.970978,0.095993,1.0,1.0,60,120],
[16,0,336,202,20,26,43.646797,-275.445496,0.095993,1.0,1.0,10,13],
[20,0,278,202,34,28,-11.424471,-263.110352,0.095993,1.0,1.0,17,14],
[15,0,414,202,22,6,10.567854,-209.471283,0.095993,1.0,1.0,11,3],
[17,0,1014,92,4,6,43.536224,-279.202179,0.095993,1.0,1.0,2,3],
[21,0,1012,84,6,6,-8.123041,-267.949066,0.095993,1.0,1.0,3,3],
[18,0,650,100,4,4,41.847694,-273.263000,0.095993,1.0,1.0,2,2],
[22,0,1002,96,10,4,-14.218967,-260.832031,0.095993,1.0,1.0,5,2],
[13,0,798,84,106,150,-67.588730,-264.734741,0.069813,1.0,1.0,58,34],
[14,0,390,100,162,78,-8.002991,-300.610931,0.095993,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.889124,-157.530182,0.026180,1.0,1.0,118,15],
[30,0,512,180,40,54,99.782494,-171.615295,0.113446,1.0,1.0,20,27],
[31,0,1002,84,8,10,103.574348,-178.086136,0.113446,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.543228,-173.828842,0.113446,1.0,1.0,3,1],
[24,0,390,2,266,96,-20.522820,-305.433167,0.122173,1.0,1.0,133,48],
[26,0,906,146,76,96,-72.657883,-286.941681,0.164061,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.614887,-173.063095,0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,-21.743097,-291.228607,0.162897,1.0,1.0,133,40],
[12,0,214,2,174,170,-39.116863,-297.050079,0.145444,1.0,1.0,62,27],
[10,0,554,100,70,140,24.338699,-205.771912,0.093084,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.023271,1.0,1.0,104,104],
[9,0,926,2,74,142,-41.550354,-200.237244,-0.186168,1.0,1.0,40,13],
[11,0,658,84,138,126,-10.768170,-209.956146,0.127991,1.0,1.0,60,120],
[16,0,336,202,20,26,41.082554,-277.123871,0.127991,1.0,1.0,10,13],
[20,0,278,202,34,28,-13.565896,-263.033203,0.127991,1.0,1.0,17,14],
[15,0,414,202,22,6,8.459342,-209.405884,0.127991,1.0,1.0,11,3],
[17,0,1014,92,4,6,39.452526,-281.955322,0.127991,1.0,1.0,2,3],
[21,0,1012,84,6,6,-11.356285,-269.367065,0.127991,1.0,1.0,3,3],
[18,0,650,100,4,4,39.354195,-274.884949,0.127991,1.0,1.0,2,2],
[22,0,1002,96,10,4,-16.286074,-260.666626,0.127991,1.0,1.0,5,2],
[13,0,798,84,106,150,-70.001328,-262.828003,0.093084,1.0,1.0,58,34],
[14,0,390,100,162,78,-11.345895,-300.624023,0.127991,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.849438,-157.374252,0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,99.683151,-172.818817,0.151262,1.0,1.0,20,27],
[31,0,1002,84,8,10,102.582680,-180.341629,0.151262,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.358940,-175.097351,0.151262,1.0,1.0,3,1],
[24,0,390,2,266,96,-24.013588,-305.043274,0.162897,1.0,1.0,133,48],
[26,0,906,146,76,96,-75.352577,-284.444519,0.218748,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.518283,-173.076767,0.043633,1.0,1.0,135,10],
[25,0,658,2,266,80,-22.705769,-291.137878,0.165225,1.0,1.0,133,40],
[12,0,214,2,174,170,-40.230095,-296.844055,0.148353,1.0,1.0,62,27],
[10,0,554,100,70,140,23.920601,-205.958847,0.116355,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.029089,1.0,1.0,104,104],
[9,0,926,2,74,142,-41.935139,-200.040955,-0.206531,1.0,1.0,40,13],
[11,0,658,84,138,126,-11.210015,-209.938766,0.133809,1.0,1.0,60,120],
[16,0,336,202,20,26,40.249065,-277.407013,0.133809,1.0,1.0,10,13],
[20,0,278,202,34,28,-14.316483,-262.998627,0.133809,1.0,1.0,17,14],
[15,0,414,202,22,6,8.020371,-209.500366,0.133809,1.0,1.0,11,3],
[17,0,1014,92,4,6,38.590958,-282.228912,0.133809,1.0,1.0,2,3],
[21,0,1012,84,6,6,-12.143757,-269.345215,0.133809,1.0,1.0,3,3],
[18,0,650,100,4,4,38.533764,-275.158081,0.133809,1.0,1.0,2,2],
[22,0,1002,96,10,4,-17.022846,-260.616272,0.133809,1.0,1.0,5,2],
[13,0,798,84,106,150,-70.584587,-262.487366,0.104720,1.0,1.0,58,34],
[14,0,390,100,162,78,-12.315212,-300.601746,0.133809,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.808390,-157.218658,0.043633,1.0,1.0,118,15],
[30,0,512,180,40,54,99.570404,-174.021301,0.189077,1.0,1.0,20,27],
[31,0,1002,84,8,10,102.183449,-181.648361,0.189077,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.158852,-176.361557,0.189077,1.0,1.0,3,1],
[24,0,390,2,266,96,-25.008402,-304.947205,0.165225,1.0,1.0,133,48],
[26,0,906,146,76,96,-76.299316,-284.229034,0.235038,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.421564,-173.089600,0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,-23.667875,-291.041382,0.167552,1.0,1.0,133,40],
[12,0,214,2,174,170,-41.341980,-296.630585,0.151262,1.0,1.0,62,27],
[10,0,554,100,70,140,23.501425,-206.143341,0.139626,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-42.318771,-199.842407,-0.226893,1.0,1.0,40,13],
[11,0,658,84,138,126,-11.651752,-209.918793,0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,39.413944,-277.685272,0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,-15.066854,-262.959686,0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,7.580860,-209.592270,0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,37.727810,-282.497437,0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,-12.931089,-269.318817,0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,37.711754,-275.426392,0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,-17.759312,-260.561646,0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-71.165985,-262.144257,0.116355,1.0,1.0,58,34],
[14,0,390,100,162,78,-13.284383,-300.573822,0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.765987,-157.063431,0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,99.444267,-175.222626,0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,101.767090,-182.943024,0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.943108,-177.621262,0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,-26.002638,-304.845337,0.167552,1.0,1.0,133,48],
[26,0,906,146,76,96,-77.245201,-284.007874,0.223402,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.421564,-173.089600,0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,-23.716074,-291.033325,0.164061,1.0,1.0,133,40],
[12,0,214,2,174,170,-41.507023,-296.607391,0.148353,1.0,1.0,62,27],
[10,0,554,100,70,140,23.501425,-206.143341,0.157080,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-42.318771,-199.842407,-0.253073,1.0,1.0,40,13],
[11,0,658,84,138,126,-11.651752,-209.918793,0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,39.413944,-277.685272,0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,-15.066854,-262.959686,0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,7.580860,-209.592270,0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,37.727810,-282.497437,0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,-12.931089,-269.318817,0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,37.711754,-275.426392,0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,-17.759312,-260.561646,0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-71.000946,-262.167450,0.122173,1.0,1.0,58,34],
[14,0,390,100,162,78,-13.284383,-300.573822,0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.765987,-157.063431,0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,99.444267,-175.222626,0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,101.767090,-182.943024,0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.943108,-177.621262,0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,-26.002638,-304.845337,0.164061,1.0,1.0,133,48],
[26,0,906,146,76,96,-77.317619,-284.186859,0.205949,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.421564,-173.089600,0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,-23.764301,-291.025421,0.160570,1.0,1.0,133,40],
[12,0,214,2,174,170,-41.672066,-296.584198,0.145444,1.0,1.0,62,27],
[10,0,554,100,70,140,23.501425,-206.143341,0.174533,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-42.318771,-199.842407,-0.279253,1.0,1.0,40,13],
[11,0,658,84,138,126,-11.651752,-209.918793,0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,39.413944,-277.685272,0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,-15.066854,-262.959686,0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,7.580860,-209.592270,0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,37.727810,-282.497437,0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,-12.931089,-269.318817,0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,37.711754,-275.426392,0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,-17.759312,-260.561646,0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-70.835899,-262.190674,0.127991,1.0,1.0,58,34],
[14,0,390,100,162,78,-13.284383,-300.573822,0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.765987,-157.063431,0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,99.444267,-175.222626,0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,101.767090,-182.943024,0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.943108,-177.621262,0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,-26.002638,-304.845337,0.160570,1.0,1.0,133,48],
[26,0,906,146,76,96,-77.389420,-284.366119,0.188496,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.421564,-173.089600,0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,-23.812555,-291.017700,0.157080,1.0,1.0,133,40],
[12,0,214,2,174,170,-41.837112,-296.561005,0.142535,1.0,1.0,62,27],
[10,0,554,100,70,140,23.501425,-206.143341,0.191986,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-42.318771,-199.842407,-0.305433,1.0,1.0,40,13],
[11,0,658,84,138,126,-11.651752,-209.918793,0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,39.413944,-277.685272,0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,-15.066854,-262.959686,0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,7.580860,-209.592270,0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,37.727810,-282.497437,0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,-12.931089,-269.318817,0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,37.711754,-275.426392,0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,-17.759312,-260.561646,0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-70.670853,-262.213867,0.133809,1.0,1.0,58,34],
[14,0,390,100,162,78,-13.284383,-300.573822,0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.765987,-157.063431,0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,99.444267,-175.222626,0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,101.767090,-182.943024,0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.943108,-177.621262,0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,-26.002638,-304.845337,0.157080,1.0,1.0,133,48],
[26,0,906,146,76,96,-77.460594,-284.545624,0.171042,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.421564,-173.089600,0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,-23.860836,-291.010132,0.153589,1.0,1.0,133,40],
[12,0,214,2,174,170,-42.002159,-296.537811,0.139626,1.0,1.0,62,27],
[10,0,554,100,70,140,23.501425,-206.143341,0.209440,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-42.318771,-199.842407,-0.331613,1.0,1.0,40,13],
[11,0,658,84,138,126,-11.651752,-209.918793,0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,39.413944,-277.685272,0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,-15.066854,-262.959686,0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,7.580860,-209.592270,0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,37.727810,-282.497437,0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,-12.931089,-269.318817,0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,37.711754,-275.426392,0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,-17.759312,-260.561646,0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-70.505814,-262.237061,0.139626,1.0,1.0,58,34],
[14,0,390,100,162,78,-13.284383,-300.573822,0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.765987,-157.063431,0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,99.444267,-175.222626,0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,101.767090,-182.943024,0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.943108,-177.621262,0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,-26.002638,-304.845337,0.153589,1.0,1.0,133,48],
[26,0,906,146,76,96,-77.531143,-284.725372,0.153589,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.421564,-173.089600,0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,-23.909143,-291.002747,0.150098,1.0,1.0,133,40],
[12,0,214,2,174,170,-42.002159,-296.537811,0.139626,1.0,1.0,62,27],
[10,0,554,100,70,140,23.501425,-206.143341,0.209440,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-42.318771,-199.842407,-0.331613,1.0,1.0,40,13],
[11,0,658,84,138,126,-11.651752,-209.918793,0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,39.413944,-277.685272,0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,-15.066854,-262.959686,0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,7.580860,-209.592270,0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,37.727810,-282.497437,0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,-12.931089,-269.318817,0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,37.711754,-275.426392,0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,-17.759312,-260.561646,0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-70.505814,-262.237061,0.139626,1.0,1.0,58,34],
[14,0,390,100,162,78,-13.284383,-300.573822,0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.765987,-157.063431,0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,99.444267,-175.222626,0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,101.767090,-182.943024,0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.943108,-177.621262,0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,-26.002638,-304.845337,0.150098,1.0,1.0,133,48],
[26,0,906,146,76,96,-77.601059,-284.905365,0.150098,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.421564,-173.089600,0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,-23.957476,-290.995514,0.146608,1.0,1.0,133,40],
[12,0,214,2,174,170,-42.002159,-296.537811,0.139626,1.0,1.0,62,27],
[10,0,554,100,70,140,23.501425,-206.143341,0.209440,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-42.318771,-199.842407,-0.331613,1.0,1.0,40,13],
[11,0,658,84,138,126,-11.651752,-209.918793,0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,39.413944,-277.685272,0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,-15.066854,-262.959686,0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,7.580860,-209.592270,0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,37.727810,-282.497437,0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,-12.931089,-269.318817,0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,37.711754,-275.426392,0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,-17.759312,-260.561646,0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-70.505814,-262.237061,0.139626,1.0,1.0,58,34],
[14,0,390,100,162,78,-13.284383,-300.573822,0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.765987,-157.063431,0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,99.444267,-175.222626,0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,101.767090,-182.943024,0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.943108,-177.621262,0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,-26.002638,-304.845337,0.146608,1.0,1.0,133,48],
[26,0,906,146,76,96,-77.670349,-285.085571,0.146608,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.421564,-173.089600,0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,-24.005833,-290.988464,0.143117,1.0,1.0,133,40],
[12,0,214,2,174,170,-42.002159,-296.537811,0.139626,1.0,1.0,62,27],
[10,0,554,100,70,140,23.501425,-206.143341,0.209440,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-42.318771,-199.842407,-0.331613,1.0,1.0,40,13],
[11,0,658,84,138,126,-11.651752,-209.918793,0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,39.413944,-277.685272,0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,-15.066854,-262.959686,0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,7.580860,-209.592270,0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,37.727810,-282.497437,0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,-12.931089,-269.318817,0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,37.711754,-275.426392,0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,-17.759312,-260.561646,0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-70.505814,-262.237061,0.139626,1.0,1.0,58,34],
[14,0,390,100,162,78,-13.284383,-300.573822,0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.765987,-157.063431,0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,99.444267,-175.222626,0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,101.767090,-182.943024,0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.943108,-177.621262,0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,-26.002638,-304.845337,0.143117,1.0,1.0,133,48],
[26,0,906,146,76,96,-77.739006,-285.266052,0.143117,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.421564,-173.089600,0.052360,1.0,1.0,135,10],
[25,0,658,2,266,80,-24.054214,-290.981598,0.139626,1.0,1.0,133,40],
[12,0,214,2,174,170,-42.002159,-296.537811,0.139626,1.0,1.0,62,27],
[10,0,554,100,70,140,23.501425,-206.143341,0.209440,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-42.318771,-199.842407,-0.331613,1.0,1.0,40,13],
[11,0,658,84,138,126,-11.651752,-209.918793,0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,39.413944,-277.685272,0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,-15.066854,-262.959686,0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,7.580860,-209.592270,0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,37.727810,-282.497437,0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,-12.931089,-269.318817,0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,37.711754,-275.426392,0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,-17.759312,-260.561646,0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-70.505814,-262.237061,0.139626,1.0,1.0,58,34],
[14,0,390,100,162,78,-13.284383,-300.573822,0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.765987,-157.063431,0.052360,1.0,1.0,118,15],
[30,0,512,180,40,54,99.444267,-175.222626,0.226893,1.0,1.0,20,27],
[31,0,1002,84,8,10,101.767090,-182.943024,0.226893,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.943108,-177.621262,0.226893,1.0,1.0,3,1],
[24,0,390,2,266,96,-26.002638,-304.845337,0.139626,1.0,1.0,133,48],
[26,0,906,146,76,96,-77.807037,-285.446777,0.139626,1.0,1.0,48,90]
]
]
}
}
]

},{}],88:[function(require,module,exports){
module.exports=[
{
"images":["koishi.png"],
"name": "reaction_touch_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 500,
"MarginWidth": 258,
"MarginHeight": 508,
"parts": ["root","Chara","koishi0_bottom0","koishi0_thighs_l0","koishi0_calf_l0","koishi0_foot_l0","koishi0_thighs_r0","koishi0_calf_r0","koishi0_foot_r0","koishi0_body","koishi0_arm0_r0","koishi0_arm0_l0","koishi0_head0","koishi0_hear_b0","koishi0_hear_f1","koishi0_hear_f0","koishi0_mouth0","koishi0_eye0_l0","koishi0_eye0_l1","koishi0_eye0_l2","koishi0_eye1_l0","koishi0_eye0_r0","koishi0_eye0_r1","koishi0_eye0_r2","koishi0_eye1_r0","koishi0_hat0_f0","koishi0_hat0_b0","koishi0_hat0_obj0","3rdeye0_all","3rdeye0_cord_b0","3rdeye0_cord_f0","3rdeye0_body0","3rdeye0_eye0","3rdeye0_light0","3rdeye0_eye1"],
"ssa": [
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-173.0,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-10.0,-292.0,0.0,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-300.0,0.0,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-210.0,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-270.0,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-263.0,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-209.0,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-270.0,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-263.0,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-268.0,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-261.0,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-270.0,0.0,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-300.0,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-158.0,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-168.0,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.0,-171.0,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.0,-170.0,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-306.0,0.0,1.0,1.0,133,48],
[26,0,906,146,76,96,-64.0,-294.0,0.0,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,3.063961,-172.988174,-0.005818,1.0,1.0,135,10],
[25,0,658,2,266,80,-5.608215,-291.986237,-0.020362,1.0,1.0,133,40],
[12,0,214,2,174,170,-22.240585,-300.473022,-0.024725,1.0,1.0,62,27],
[10,0,554,100,70,140,26.823803,-204.599594,0.005818,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.011636,1.0,1.0,104,104],
[9,0,926,2,74,142,-33.750641,-198.553986,0.193441,1.0,1.0,40,13],
[11,0,658,84,138,126,-7.115720,-209.994858,-0.029089,1.0,1.0,60,120],
[16,0,336,202,20,26,54.603981,-268.224396,-0.029089,1.0,1.0,10,13],
[20,0,278,202,34,28,-1.575922,-262.856110,-0.029089,1.0,1.0,17,14],
[15,0,414,202,22,6,17.080395,-207.790192,-0.029089,1.0,1.0,11,3],
[17,0,1014,92,4,6,58.823097,-267.101196,-0.029089,1.0,1.0,2,3],
[21,0,1012,84,6,6,4.906786,-262.167267,-0.029089,1.0,1.0,3,3],
[18,0,650,100,4,4,52.546658,-266.283417,-0.029089,1.0,1.0,2,2],
[22,0,1002,96,10,4,-4.632822,-260.944214,-0.029089,1.0,1.0,5,2],
[13,0,798,84,106,150,-56.598953,-271.460083,-0.037815,1.0,1.0,58,34],
[14,0,390,100,162,78,6.497252,-299.636841,-0.029089,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.022966,-158.104782,-0.005818,1.0,1.0,118,15],
[30,0,512,180,40,54,101.033211,-167.418121,-0.017453,1.0,1.0,20,27],
[31,0,1002,84,8,10,107.325890,-169.808670,-0.017453,1.0,1.0,4,5],
[32,0,1014,100,6,2,103.067810,-169.382919,-0.017453,1.0,1.0,3,1],
[24,0,390,2,266,96,-5.323164,-305.983337,-0.020362,1.0,1.0,133,48],
[26,0,906,146,76,96,-59.556297,-295.085297,-0.006400,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,4.127852,-172.975983,-0.011636,1.0,1.0,135,10],
[25,0,658,2,266,80,-1.218218,-291.863464,-0.040724,1.0,1.0,133,40],
[12,0,214,2,174,170,-17.469189,-300.821411,-0.049451,1.0,1.0,62,27],
[10,0,554,100,70,140,27.642891,-204.189636,0.011636,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.023271,1.0,1.0,104,104],
[9,0,926,2,74,142,-27.563272,-195.972000,0.491601,1.0,1.0,40,13],
[11,0,658,84,138,126,-5.231830,-209.956146,-0.058178,1.0,1.0,60,120],
[16,0,336,202,20,26,58.155350,-266.365936,-0.058178,1.0,1.0,10,13],
[20,0,278,202,34,28,1.843079,-262.633911,-0.058178,1.0,1.0,17,14],
[15,0,414,202,22,6,17.113815,-206.651276,-0.058178,1.0,1.0,11,3],
[17,0,1014,92,4,6,62.531448,-264.107666,-0.058178,1.0,1.0,2,3],
[21,0,1012,84,6,6,8.773091,-261.228577,-0.058178,1.0,1.0,3,3],
[18,0,650,100,4,4,56.042442,-264.485596,-0.058178,1.0,1.0,2,2],
[22,0,1002,96,10,4,-1.268135,-260.811737,-0.058178,1.0,1.0,5,2],
[13,0,798,84,106,150,-53.156010,-272.849091,-0.075631,1.0,1.0,58,34],
[14,0,390,100,162,78,10.982594,-299.164276,-0.058178,1.0,1.0,81,39],
[29,0,2,180,236,30,-16.045322,-158.209702,-0.011636,1.0,1.0,118,15],
[30,0,512,180,40,54,102.063042,-166.836060,-0.034907,1.0,1.0,20,27],
[31,0,1002,84,8,10,108.628883,-168.608002,-0.034907,1.0,1.0,4,5],
[32,0,1014,100,6,2,104.131622,-168.765045,-0.034907,1.0,1.0,3,1],
[24,0,390,2,266,96,-0.648234,-305.851868,-0.040724,1.0,1.0,133,48],
[26,0,906,146,76,96,-55.092018,-296.060333,-0.012799,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,5.191672,-172.963425,-0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,3.167220,-291.631897,-0.061087,1.0,1.0,133,40],
[12,0,214,2,174,170,-12.689198,-301.044861,-0.074176,1.0,1.0,62,27],
[10,0,554,100,70,140,28.457153,-203.770172,0.017453,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.034907,1.0,1.0,104,104],
[9,0,926,2,74,142,-21.440212,-193.255157,0.789761,1.0,1.0,40,13],
[11,0,658,84,138,126,-3.348856,-209.883911,-0.087266,1.0,1.0,60,120],
[16,0,336,202,20,26,61.652172,-264.426239,-0.087266,1.0,1.0,10,13],
[20,0,278,202,34,28,5.255177,-262.333618,-0.087266,1.0,1.0,17,14],
[15,0,414,202,22,6,17.104294,-205.584946,-0.087266,1.0,1.0,11,3],
[17,0,1014,92,4,6,66.122627,-261.023651,-0.087266,1.0,1.0,2,3],
[21,0,1012,84,6,6,12.595903,-260.185669,-0.087266,1.0,1.0,3,3],
[18,0,650,100,4,4,59.485470,-262.608154,-0.087266,1.0,1.0,2,2],
[22,0,1002,96,10,4,2.092281,-260.602692,-0.087266,1.0,1.0,5,2],
[13,0,798,84,106,150,-49.672588,-274.165894,-0.113446,1.0,1.0,58,34],
[14,0,390,100,162,78,15.453302,-298.582703,-0.087266,1.0,1.0,81,39],
[29,0,2,180,236,30,-15.067068,-158.314758,-0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,103.089485,-166.253845,-0.052360,1.0,1.0,20,27],
[31,0,1002,84,8,10,109.908737,-167.398529,-0.052360,1.0,1.0,4,5],
[32,0,1014,100,6,2,105.191414,-168.146439,-0.052360,1.0,1.0,3,1],
[24,0,390,2,266,96,4.021900,-305.605774,-0.061087,1.0,1.0,133,48],
[26,0,906,146,76,96,-50.609962,-296.924774,-0.019199,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,6.255417,-172.950485,-0.023271,1.0,1.0,135,10],
[25,0,658,2,266,80,7.545335,-291.291504,-0.081449,1.0,1.0,133,40],
[12,0,214,2,174,170,-7.904015,-301.143158,-0.098902,1.0,1.0,62,27],
[10,0,554,100,70,140,29.266479,-203.341248,0.023271,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.046542,1.0,1.0,104,104],
[9,0,926,2,74,142,-15.383753,-190.404602,1.087922,1.0,1.0,40,13],
[11,0,658,84,138,126,-1.467325,-209.778122,-0.116355,1.0,1.0,60,120],
[16,0,336,202,20,26,65.092552,-262.406860,-0.116355,1.0,1.0,10,13],
[20,0,278,202,34,28,8.658554,-261.955383,-0.116355,1.0,1.0,17,14],
[15,0,414,202,22,6,17.055925,-204.592636,-0.116355,1.0,1.0,11,3],
[17,0,1014,92,4,6,69.594376,-257.853455,-0.116355,1.0,1.0,2,3],
[21,0,1012,84,6,6,16.372274,-259.040161,-0.116355,1.0,1.0,3,3],
[18,0,650,100,4,4,62.873890,-260.652557,-0.116355,1.0,1.0,2,2],
[22,0,1002,96,10,4,5.446653,-260.317200,-0.116355,1.0,1.0,5,2],
[13,0,798,84,106,150,-46.150143,-275.409241,-0.151262,1.0,1.0,58,34],
[14,0,390,100,162,78,19.906660,-297.892548,-0.116355,1.0,1.0,81,39],
[29,0,2,180,236,30,-14.088202,-158.419922,-0.023271,1.0,1.0,118,15],
[30,0,512,180,40,54,104.112541,-165.671478,-0.069813,1.0,1.0,20,27],
[31,0,1002,84,8,10,111.165245,-166.180740,-0.069813,1.0,1.0,4,5],
[32,0,1014,100,6,2,106.247185,-167.527100,-0.069813,1.0,1.0,3,1],
[24,0,390,2,266,96,8.684357,-305.245087,-0.081449,1.0,1.0,133,48],
[26,0,906,146,76,96,-46.112930,-297.678223,-0.025598,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,7.319086,-172.937180,-0.029089,1.0,1.0,135,10],
[25,0,658,2,266,80,9.325761,-291.104614,-0.096575,1.0,1.0,133,40],
[12,0,214,2,174,170,-6.124569,-301.152008,-0.113446,1.0,1.0,62,27],
[10,0,554,100,70,140,30.070759,-202.902954,0.029089,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.058178,1.0,1.0,104,104],
[9,0,926,2,74,142,-14.726971,-190.486710,1.053015,1.0,1.0,40,13],
[11,0,658,84,138,126,-0.586069,-209.696991,-0.127991,1.0,1.0,60,120],
[16,0,336,202,20,26,66.581650,-261.547729,-0.127991,1.0,1.0,10,13],
[20,0,278,202,34,28,10.146219,-261.752899,-0.127991,1.0,1.0,17,14],
[15,0,414,202,22,6,17.875593,-204.296341,-0.127991,1.0,1.0,11,3],
[17,0,1014,92,4,6,71.030182,-256.942230,-0.127991,1.0,1.0,2,3],
[21,0,1012,84,6,6,17.825499,-258.748138,-0.127991,1.0,1.0,3,3],
[18,0,650,100,4,4,64.342728,-259.819366,-0.127991,1.0,1.0,2,2],
[22,0,1002,96,10,4,6.915475,-260.152191,-0.127991,1.0,1.0,5,2],
[13,0,798,84,106,150,-44.336922,-275.822296,-0.157080,1.0,1.0,58,34],
[14,0,390,100,162,78,21.811703,-297.556763,-0.127991,1.0,1.0,81,39],
[29,0,2,180,236,30,-13.108725,-158.525223,-0.029089,1.0,1.0,118,15],
[30,0,512,180,40,54,105.132202,-165.088989,-0.087266,1.0,1.0,20,27],
[31,0,1002,84,8,10,112.192719,-165.475098,-0.087266,1.0,1.0,4,5],
[32,0,1014,100,6,2,107.298904,-166.907074,-0.087266,1.0,1.0,3,1],
[24,0,390,2,266,96,10.675709,-305.039368,-0.096575,1.0,1.0,133,48],
[26,0,906,146,76,96,-44.229763,-298.302216,-0.026762,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,11.103969,-290.897736,-0.111701,1.0,1.0,133,40],
[12,0,214,2,174,170,-4.344884,-301.142059,-0.127991,1.0,1.0,62,27],
[10,0,554,100,70,140,30.869888,-202.455322,0.034907,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.069813,1.0,1.0,104,104],
[9,0,926,2,74,142,-14.069279,-190.561157,1.018109,1.0,1.0,40,13],
[11,0,658,84,138,126,0.294184,-209.605591,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,68.060654,-260.671295,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,11.631431,-261.533112,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,18.691757,-203.990494,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,72.455299,-256.014343,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,19.275229,-258.439178,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,65.801773,-258.969116,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,8.382280,-259.970093,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-42.519279,-276.212280,-0.162897,1.0,1.0,58,34],
[14,0,390,100,162,78,23.712711,-297.198822,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,106.148483,-164.506393,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,113.214668,-164.769211,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,108.346581,-166.286377,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,12.664534,-304.810486,-0.111701,1.0,1.0,133,48],
[26,0,906,146,76,96,-42.336563,-298.904602,-0.055851,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,11.055413,-290.903259,-0.115192,1.0,1.0,133,40],
[12,0,214,2,174,170,-4.509929,-301.165253,-0.130900,1.0,1.0,62,27],
[10,0,554,100,70,140,30.869888,-202.455322,0.052360,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.069813,1.0,1.0,104,104],
[9,0,926,2,74,142,-14.069279,-190.561157,0.994838,1.0,1.0,40,13],
[11,0,658,84,138,126,0.294184,-209.605591,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,68.060654,-260.671295,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,11.631431,-261.533112,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,18.691757,-203.990494,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,72.455299,-256.014343,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,19.275229,-258.439178,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,65.801773,-258.969116,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,8.382280,-259.970093,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-42.354233,-276.189087,-0.157080,1.0,1.0,58,34],
[14,0,390,100,162,78,23.712711,-297.198822,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,106.148483,-164.506393,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,113.214668,-164.769211,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,108.346581,-166.286377,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,12.664534,-304.810486,-0.115192,1.0,1.0,133,48],
[26,0,906,146,76,96,-42.356842,-299.096619,-0.073304,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,11.006878,-290.908966,-0.118682,1.0,1.0,133,40],
[12,0,214,2,174,170,-4.674973,-301.188446,-0.133809,1.0,1.0,62,27],
[10,0,554,100,70,140,30.869888,-202.455322,0.069813,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.069813,1.0,1.0,104,104],
[9,0,926,2,74,142,-14.069279,-190.561157,0.971567,1.0,1.0,40,13],
[11,0,658,84,138,126,0.294184,-209.605591,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,68.060654,-260.671295,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,11.631431,-261.533112,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,18.691757,-203.990494,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,72.455299,-256.014343,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,19.275229,-258.439178,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,65.801773,-258.969116,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,8.382280,-259.970093,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-42.189186,-276.165894,-0.151262,1.0,1.0,58,34],
[14,0,390,100,162,78,23.712711,-297.198822,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,106.148483,-164.506393,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,113.214668,-164.769211,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,108.346581,-166.286377,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,12.664534,-304.810486,-0.118682,1.0,1.0,133,48],
[26,0,906,146,76,96,-42.376450,-299.288727,-0.090757,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,10.958363,-290.914825,-0.122173,1.0,1.0,133,40],
[12,0,214,2,174,170,-4.840018,-301.211639,-0.136717,1.0,1.0,62,27],
[10,0,554,100,70,140,30.869888,-202.455322,0.087266,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.069813,1.0,1.0,104,104],
[9,0,926,2,74,142,-14.069279,-190.561157,0.948296,1.0,1.0,40,13],
[11,0,658,84,138,126,0.294184,-209.605591,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,68.060654,-260.671295,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,11.631431,-261.533112,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,18.691757,-203.990494,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,72.455299,-256.014343,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,19.275229,-258.439178,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,65.801773,-258.969116,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,8.382280,-259.970093,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-42.024147,-276.142700,-0.145444,1.0,1.0,58,34],
[14,0,390,100,162,78,23.712711,-297.198822,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,106.148483,-164.506393,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,113.214668,-164.769211,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,108.346581,-166.286377,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,12.664534,-304.810486,-0.122173,1.0,1.0,133,48],
[26,0,906,146,76,96,-42.395393,-299.480865,-0.108210,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,10.909868,-290.920868,-0.125664,1.0,1.0,133,40],
[12,0,214,2,174,170,-5.005063,-301.234833,-0.139626,1.0,1.0,62,27],
[10,0,554,100,70,140,30.869888,-202.455322,0.104720,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.069813,1.0,1.0,104,104],
[9,0,926,2,74,142,-14.069279,-190.561157,0.925025,1.0,1.0,40,13],
[11,0,658,84,138,126,0.294184,-209.605591,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,68.060654,-260.671295,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,11.631431,-261.533112,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,18.691757,-203.990494,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,72.455299,-256.014343,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,19.275229,-258.439178,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,65.801773,-258.969116,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,8.382280,-259.970093,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-41.859100,-276.119507,-0.139626,1.0,1.0,58,34],
[14,0,390,100,162,78,23.712711,-297.198822,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,106.148483,-164.506393,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,113.214668,-164.769211,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,108.346581,-166.286377,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,12.664534,-304.810486,-0.125664,1.0,1.0,133,48],
[26,0,906,146,76,96,-42.413658,-299.673096,-0.125664,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,10.861395,-290.927094,-0.129154,1.0,1.0,133,40],
[12,0,214,2,174,170,-5.005063,-301.234833,-0.139626,1.0,1.0,62,27],
[10,0,554,100,70,140,30.869888,-202.455322,0.104720,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.069813,1.0,1.0,104,104],
[9,0,926,2,74,142,-14.069279,-190.561157,0.925025,1.0,1.0,40,13],
[11,0,658,84,138,126,0.294184,-209.605591,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,68.060654,-260.671295,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,11.631431,-261.533112,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,18.691757,-203.990494,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,72.455299,-256.014343,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,19.275229,-258.439178,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,65.801773,-258.969116,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,8.382280,-259.970093,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-41.859100,-276.119507,-0.139626,1.0,1.0,58,34],
[14,0,390,100,162,78,23.712711,-297.198822,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,106.148483,-164.506393,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,113.214668,-164.769211,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,108.346581,-166.286377,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,12.664534,-304.810486,-0.129154,1.0,1.0,133,48],
[26,0,906,146,76,96,-42.431259,-299.865387,-0.129154,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,10.812944,-290.933472,-0.132645,1.0,1.0,133,40],
[12,0,214,2,174,170,-5.005063,-301.234833,-0.139626,1.0,1.0,62,27],
[10,0,554,100,70,140,30.869888,-202.455322,0.104720,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.069813,1.0,1.0,104,104],
[9,0,926,2,74,142,-14.069279,-190.561157,0.925025,1.0,1.0,40,13],
[11,0,658,84,138,126,0.294184,-209.605591,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,68.060654,-260.671295,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,11.631431,-261.533112,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,18.691757,-203.990494,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,72.455299,-256.014343,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,19.275229,-258.439178,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,65.801773,-258.969116,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,8.382280,-259.970093,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-41.859100,-276.119507,-0.139626,1.0,1.0,58,34],
[14,0,390,100,162,78,23.712711,-297.198822,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,106.148483,-164.506393,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,113.214668,-164.769211,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,108.346581,-166.286377,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,12.664534,-304.810486,-0.132645,1.0,1.0,133,48],
[26,0,906,146,76,96,-42.448181,-300.057739,-0.132645,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,10.764516,-290.940002,-0.136136,1.0,1.0,133,40],
[12,0,214,2,174,170,-5.005063,-301.234833,-0.139626,1.0,1.0,62,27],
[10,0,554,100,70,140,30.869888,-202.455322,0.104720,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.069813,1.0,1.0,104,104],
[9,0,926,2,74,142,-14.069279,-190.561157,0.925025,1.0,1.0,40,13],
[11,0,658,84,138,126,0.294184,-209.605591,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,68.060654,-260.671295,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,11.631431,-261.533112,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,18.691757,-203.990494,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,72.455299,-256.014343,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,19.275229,-258.439178,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,65.801773,-258.969116,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,8.382280,-259.970093,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-41.859100,-276.119507,-0.139626,1.0,1.0,58,34],
[14,0,390,100,162,78,23.712711,-297.198822,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,106.148483,-164.506393,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,113.214668,-164.769211,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,108.346581,-166.286377,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,12.664534,-304.810486,-0.136136,1.0,1.0,133,48],
[26,0,906,146,76,96,-42.464439,-300.250153,-0.136136,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,8.382676,-172.923492,-0.034907,1.0,1.0,135,10],
[25,0,658,2,266,80,10.716110,-290.946747,-0.139626,1.0,1.0,133,40],
[12,0,214,2,174,170,-5.005063,-301.234833,-0.139626,1.0,1.0,62,27],
[10,0,554,100,70,140,30.869888,-202.455322,0.104720,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,-0.069813,1.0,1.0,104,104],
[9,0,926,2,74,142,-14.069279,-190.561157,0.925025,1.0,1.0,40,13],
[11,0,658,84,138,126,0.294184,-209.605591,-0.139626,1.0,1.0,60,120],
[16,0,336,202,20,26,68.060654,-260.671295,-0.139626,1.0,1.0,10,13],
[20,0,278,202,34,28,11.631431,-261.533112,-0.139626,1.0,1.0,17,14],
[15,0,414,202,22,6,18.691757,-203.990494,-0.139626,1.0,1.0,11,3],
[17,0,1014,92,4,6,72.455299,-256.014343,-0.139626,1.0,1.0,2,3],
[21,0,1012,84,6,6,19.275229,-258.439178,-0.139626,1.0,1.0,3,3],
[18,0,650,100,4,4,65.801773,-258.969116,-0.139626,1.0,1.0,2,2],
[22,0,1002,96,10,4,8.382280,-259.970093,-0.139626,1.0,1.0,5,2],
[13,0,798,84,106,150,-41.859100,-276.119507,-0.139626,1.0,1.0,58,34],
[14,0,390,100,162,78,23.712711,-297.198822,-0.139626,1.0,1.0,81,39],
[29,0,2,180,236,30,-12.128633,-158.630630,-0.034907,1.0,1.0,118,15],
[30,0,512,180,40,54,106.148483,-164.506393,-0.104720,1.0,1.0,20,27],
[31,0,1002,84,8,10,113.214668,-164.769211,-0.104720,1.0,1.0,4,5],
[32,0,1014,100,6,2,108.346581,-166.286377,-0.104720,1.0,1.0,3,1],
[24,0,390,2,266,96,12.664534,-304.810486,-0.139626,1.0,1.0,133,48],
[26,0,906,146,76,96,-42.480019,-300.442627,-0.139626,1.0,1.0,48,90]
]
]
}
}
]

},{}],89:[function(require,module,exports){
module.exports=[
{
"images":["koishi.png"],
"name": "reaction_yes_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 500,
"MarginWidth": 258,
"MarginHeight": 508,
"parts": ["root","Chara","koishi0_bottom0","koishi0_thighs_l0","koishi0_calf_l0","koishi0_foot_l0","koishi0_thighs_r0","koishi0_calf_r0","koishi0_foot_r0","koishi0_body","koishi0_arm0_r0","koishi0_arm0_l0","koishi0_head0","koishi0_hear_b0","koishi0_hear_f1","koishi0_hear_f0","koishi0_mouth0","koishi0_eye0_l0","koishi0_eye0_l1","koishi0_eye0_l2","koishi0_eye1_l0","koishi0_eye0_r0","koishi0_eye0_r1","koishi0_eye0_r2","koishi0_eye1_r0","koishi0_hat0_f0","koishi0_hat0_b0","koishi0_hat0_obj0","3rdeye0_all","3rdeye0_cord_b0","3rdeye0_cord_f0","3rdeye0_body0","3rdeye0_eye0","3rdeye0_light0","3rdeye0_eye1"],
"ssa": [
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-173.0,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-10.0,-292.0,0.0,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-300.0,0.0,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-210.0,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-270.0,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-263.0,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-209.0,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-270.0,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-263.0,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-268.0,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-261.0,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-270.0,0.0,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-300.0,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-158.0,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-168.0,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.0,-171.0,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.0,-170.0,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-306.0,0.0,1.0,1.0,133,48],
[26,0,906,146,76,96,-64.0,-294.0,0.0,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-172.333328,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-8.568749,-291.338318,-0.017453,1.0,1.0,133,40],
[12,0,214,2,174,170,-25.426542,-299.633789,-0.017453,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-209.333344,-0.017453,1.0,1.0,60,120],
[16,0,336,202,20,26,52.038006,-268.277069,-0.017453,1.0,1.0,10,13],
[20,0,278,202,34,28,-4.075632,-262.255463,-0.017453,1.0,1.0,17,14],
[15,0,414,202,22,6,16.978588,-207.879730,-0.017453,1.0,1.0,11,3],
[17,0,1014,92,4,6,56.037395,-268.207245,-0.017453,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.923455,-262.150757,-0.017453,1.0,1.0,3,3],
[18,0,650,100,4,4,50.003407,-266.312286,-0.017453,1.0,1.0,2,2],
[22,0,1002,96,10,4,-7.110080,-260.308136,-0.017453,1.0,1.0,5,2],
[19,0,314,202,20,26,54.002796,-266.242462,-0.017453,1.0,1.0,10,13],
[23,0,240,202,36,28,-1.110993,-260.203400,-0.017453,1.0,1.0,18,14],
[13,0,798,84,106,150,-58.945087,-270.214294,-0.017453,1.0,1.0,58,34],
[14,0,390,100,162,78,3.569041,-299.127655,-0.017453,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-157.333328,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-167.0,-0.023271,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.068184,-169.859573,-0.023271,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.045998,-168.952927,-0.023271,1.0,1.0,3,1],
[24,0,390,2,266,96,-8.324416,-305.336182,-0.017453,1.0,1.0,133,48],
[26,0,906,146,76,96,-62.525623,-294.280426,-0.017453,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-171.666672,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-7.137632,-290.651581,-0.034907,1.0,1.0,133,40],
[12,0,214,2,174,170,-23.848080,-299.240021,-0.034907,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-208.666656,-0.034907,1.0,1.0,60,120],
[16,0,336,202,20,26,53.057419,-266.536133,-0.034907,1.0,1.0,10,13],
[20,0,278,202,34,28,-3.152763,-261.494781,-0.034907,1.0,1.0,17,14],
[15,0,414,202,22,6,16.949263,-206.759872,-0.034907,1.0,1.0,11,3],
[17,0,1014,92,4,6,57.054981,-266.396545,-0.034907,1.0,1.0,2,3],
[21,0,1012,84,6,6,2.843582,-261.285370,-0.034907,1.0,1.0,3,3],
[18,0,650,100,4,4,50.988838,-264.607147,-0.034907,1.0,1.0,2,2],
[22,0,1002,96,10,4,-6.220735,-259.600708,-0.034907,1.0,1.0,5,2],
[19,0,314,202,20,26,54.986401,-264.467560,-0.034907,1.0,1.0,10,13],
[23,0,240,202,36,28,-0.224390,-259.391296,-0.034907,1.0,1.0,18,14],
[13,0,798,84,106,150,-57.874962,-270.409973,-0.034907,1.0,1.0,58,34],
[14,0,390,100,162,78,5.134254,-298.227936,-0.034907,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-156.666672,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-166.0,-0.046542,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.133080,-168.717606,-0.046542,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.090881,-167.904785,-0.046542,1.0,1.0,3,1],
[24,0,390,2,266,96,-6.649039,-304.643066,-0.034907,1.0,1.0,133,48],
[26,0,906,146,76,96,-61.034939,-294.534943,-0.034907,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-171.0,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-5.707081,-289.939972,-0.052360,1.0,1.0,133,40],
[12,0,214,2,174,170,-22.265095,-298.818695,-0.052360,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-208.0,-0.052360,1.0,1.0,60,120],
[16,0,336,202,20,26,54.057930,-264.777618,-0.052360,1.0,1.0,10,13],
[20,0,278,202,34,28,-2.231676,-260.718018,-0.052360,1.0,1.0,17,14],
[15,0,414,202,22,6,16.912031,-205.640640,-0.052360,1.0,1.0,11,3],
[17,0,1014,92,4,6,58.052448,-264.568268,-0.052360,1.0,1.0,2,3],
[21,0,1012,84,6,6,3.760101,-260.403992,-0.052360,1.0,1.0,3,3],
[18,0,650,100,4,4,51.955997,-262.885040,-0.052360,1.0,1.0,2,2],
[22,0,1002,96,10,4,-5.332236,-258.877777,-0.052360,1.0,1.0,5,2],
[19,0,314,202,20,26,55.950516,-262.675690,-0.052360,1.0,1.0,10,13],
[23,0,240,202,36,28,0.659541,-258.563751,-0.052360,1.0,1.0,18,14],
[13,0,798,84,106,150,-56.789948,-270.586914,-0.052360,1.0,1.0,58,34],
[14,0,390,100,162,78,6.695161,-297.300964,-0.052360,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-156.0,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-165.0,-0.069813,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.194656,-167.574158,-0.069813,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.134644,-166.855621,-0.069813,1.0,1.0,3,1],
[24,0,390,2,266,96,-4.974378,-303.920776,-0.052360,1.0,1.0,133,48],
[26,0,906,146,76,96,-59.528404,-294.763367,-0.052360,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-171.666672,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-7.137632,-290.651581,-0.034907,1.0,1.0,133,40],
[12,0,214,2,174,170,-23.848080,-299.240021,-0.034907,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-208.666656,-0.034907,1.0,1.0,60,120],
[16,0,336,202,20,26,53.057419,-266.536133,-0.034907,1.0,1.0,10,13],
[20,0,278,202,34,28,-3.152763,-261.494781,-0.034907,1.0,1.0,17,14],
[15,0,414,202,22,6,16.949263,-206.759872,-0.034907,1.0,1.0,11,3],
[17,0,1014,92,4,6,57.054981,-266.396545,-0.034907,1.0,1.0,2,3],
[21,0,1012,84,6,6,2.843582,-261.285370,-0.034907,1.0,1.0,3,3],
[18,0,650,100,4,4,50.988838,-264.607147,-0.034907,1.0,1.0,2,2],
[22,0,1002,96,10,4,-6.220735,-259.600708,-0.034907,1.0,1.0,5,2],
[19,0,314,202,20,26,54.986401,-264.467560,-0.034907,1.0,1.0,10,13],
[23,0,240,202,36,28,-0.224390,-259.391296,-0.034907,1.0,1.0,18,14],
[13,0,798,84,106,150,-57.874962,-270.409973,-0.034907,1.0,1.0,58,34],
[14,0,390,100,162,78,5.134254,-298.227936,-0.034907,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-156.666672,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-166.0,-0.046542,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.133080,-168.717606,-0.046542,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.090881,-167.904785,-0.046542,1.0,1.0,3,1],
[24,0,390,2,266,96,-6.649039,-304.643066,-0.034907,1.0,1.0,133,48],
[26,0,906,146,76,96,-61.034939,-294.534943,-0.034907,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-172.333328,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-8.568750,-291.338318,-0.017453,1.0,1.0,133,40],
[12,0,214,2,174,170,-25.426542,-299.633789,-0.017453,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-209.333344,-0.017453,1.0,1.0,60,120],
[16,0,336,202,20,26,52.038006,-268.277069,-0.017453,1.0,1.0,10,13],
[20,0,278,202,34,28,-4.075632,-262.255463,-0.017453,1.0,1.0,17,14],
[15,0,414,202,22,6,16.978588,-207.879730,-0.017453,1.0,1.0,11,3],
[17,0,1014,92,4,6,56.037395,-268.207245,-0.017453,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.923455,-262.150757,-0.017453,1.0,1.0,3,3],
[18,0,650,100,4,4,50.003407,-266.312286,-0.017453,1.0,1.0,2,2],
[22,0,1002,96,10,4,-7.110080,-260.308136,-0.017453,1.0,1.0,5,2],
[19,0,314,202,20,26,54.002796,-266.242462,-0.017453,1.0,1.0,10,13],
[23,0,240,202,36,28,-1.110993,-260.203400,-0.017453,1.0,1.0,18,14],
[13,0,798,84,106,150,-58.945087,-270.214294,-0.017453,1.0,1.0,58,34],
[14,0,390,100,162,78,3.569041,-299.127655,-0.017453,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-157.333328,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-167.0,-0.023271,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.068184,-169.859573,-0.023271,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.045998,-168.952927,-0.023271,1.0,1.0,3,1],
[24,0,390,2,266,96,-8.324417,-305.336182,-0.017453,1.0,1.0,133,48],
[26,0,906,146,76,96,-62.525623,-294.280426,-0.017453,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-173.0,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-10.0,-292.0,0.0,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-300.0,0.0,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-210.0,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-270.0,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-263.0,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-209.0,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-270.0,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-263.0,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-268.0,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-261.0,0.0,1.0,1.0,5,2],
[19,0,314,202,20,26,53.0,-268.0,0.0,1.0,1.0,10,13],
[23,0,240,202,36,28,-2.0,-261.0,0.0,1.0,1.0,18,14],
[13,0,798,84,106,150,-60.0,-270.0,0.0,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-300.0,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-158.0,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-168.0,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.0,-171.0,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.0,-170.0,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-306.0,0.0,1.0,1.0,133,48],
[26,0,906,146,76,96,-64.0,-294.0,0.0,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-172.333328,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-8.568749,-291.338318,-0.017453,1.0,1.0,133,40],
[12,0,214,2,174,170,-25.426542,-299.633789,-0.017453,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-209.333344,-0.017453,1.0,1.0,60,120],
[16,0,336,202,20,26,52.038006,-268.277069,-0.017453,1.0,1.0,10,13],
[20,0,278,202,34,28,-4.075632,-262.255463,-0.017453,1.0,1.0,17,14],
[15,0,414,202,22,6,16.978588,-207.879730,-0.017453,1.0,1.0,11,3],
[17,0,1014,92,4,6,56.037395,-268.207245,-0.017453,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.923455,-262.150757,-0.017453,1.0,1.0,3,3],
[18,0,650,100,4,4,50.003407,-266.312286,-0.017453,1.0,1.0,2,2],
[22,0,1002,96,10,4,-7.110080,-260.308136,-0.017453,1.0,1.0,5,2],
[19,0,314,202,20,26,54.002796,-266.242462,-0.017453,1.0,1.0,10,13],
[23,0,240,202,36,28,-1.110993,-260.203400,-0.017453,1.0,1.0,18,14],
[13,0,798,84,106,150,-58.945087,-270.214294,-0.017453,1.0,1.0,58,34],
[14,0,390,100,162,78,3.569041,-299.127655,-0.017453,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-157.333328,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-167.0,-0.023271,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.068184,-169.859573,-0.023271,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.045998,-168.952927,-0.023271,1.0,1.0,3,1],
[24,0,390,2,266,96,-8.324416,-305.336182,-0.017453,1.0,1.0,133,48],
[26,0,906,146,76,96,-62.525623,-294.280426,-0.017453,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-171.666672,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-7.137632,-290.651581,-0.034907,1.0,1.0,133,40],
[12,0,214,2,174,170,-23.848080,-299.240021,-0.034907,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-208.666656,-0.034907,1.0,1.0,60,120],
[16,0,336,202,20,26,53.057419,-266.536133,-0.034907,1.0,1.0,10,13],
[20,0,278,202,34,28,-3.152763,-261.494781,-0.034907,1.0,1.0,17,14],
[15,0,414,202,22,6,16.949263,-206.759872,-0.034907,1.0,1.0,11,3],
[17,0,1014,92,4,6,57.054981,-266.396545,-0.034907,1.0,1.0,2,3],
[21,0,1012,84,6,6,2.843582,-261.285370,-0.034907,1.0,1.0,3,3],
[18,0,650,100,4,4,50.988838,-264.607147,-0.034907,1.0,1.0,2,2],
[22,0,1002,96,10,4,-6.220735,-259.600708,-0.034907,1.0,1.0,5,2],
[19,0,314,202,20,26,54.986401,-264.467560,-0.034907,1.0,1.0,10,13],
[23,0,240,202,36,28,-0.224390,-259.391296,-0.034907,1.0,1.0,18,14],
[13,0,798,84,106,150,-57.874962,-270.409973,-0.034907,1.0,1.0,58,34],
[14,0,390,100,162,78,5.134254,-298.227936,-0.034907,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-156.666672,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-166.0,-0.046542,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.133080,-168.717606,-0.046542,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.090881,-167.904785,-0.046542,1.0,1.0,3,1],
[24,0,390,2,266,96,-6.649039,-304.643066,-0.034907,1.0,1.0,133,48],
[26,0,906,146,76,96,-61.034939,-294.534943,-0.034907,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-171.0,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-5.707081,-289.939972,-0.052360,1.0,1.0,133,40],
[12,0,214,2,174,170,-22.265095,-298.818695,-0.052360,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-208.0,-0.052360,1.0,1.0,60,120],
[16,0,336,202,20,26,54.057930,-264.777618,-0.052360,1.0,1.0,10,13],
[20,0,278,202,34,28,-2.231676,-260.718018,-0.052360,1.0,1.0,17,14],
[15,0,414,202,22,6,16.912031,-205.640640,-0.052360,1.0,1.0,11,3],
[17,0,1014,92,4,6,58.052448,-264.568268,-0.052360,1.0,1.0,2,3],
[21,0,1012,84,6,6,3.760101,-260.403992,-0.052360,1.0,1.0,3,3],
[18,0,650,100,4,4,51.955997,-262.885040,-0.052360,1.0,1.0,2,2],
[22,0,1002,96,10,4,-5.332236,-258.877777,-0.052360,1.0,1.0,5,2],
[13,0,798,84,106,150,-56.789948,-270.586914,-0.052360,1.0,1.0,58,34],
[14,0,390,100,162,78,6.695161,-297.300964,-0.052360,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-156.0,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-165.0,-0.069813,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.194656,-167.574158,-0.069813,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.134644,-166.855621,-0.069813,1.0,1.0,3,1],
[24,0,390,2,266,96,-4.974378,-303.920776,-0.052360,1.0,1.0,133,48],
[26,0,906,146,76,96,-59.528404,-294.763367,-0.052360,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-171.399994,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-6.565319,-290.369934,-0.041888,1.0,1.0,133,40],
[12,0,214,2,174,170,-23.215403,-299.074829,-0.041888,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-208.399994,-0.041888,1.0,1.0,60,120],
[16,0,336,202,20,26,53.459908,-265.834839,-0.041888,1.0,1.0,10,13],
[20,0,278,202,34,28,-2.784099,-261.186005,-0.041888,1.0,1.0,17,14],
[15,0,414,202,22,6,16.935318,-206.312103,-0.041888,1.0,1.0,11,3],
[17,0,1014,92,4,6,57.456398,-265.667328,-0.041888,1.0,1.0,2,3],
[21,0,1012,84,6,6,3.210638,-260.934753,-0.041888,1.0,1.0,3,3],
[18,0,650,100,4,4,51.377911,-263.920349,-0.041888,1.0,1.0,2,2],
[22,0,1002,96,10,4,-5.865219,-259.313385,-0.041888,1.0,1.0,5,2],
[13,0,798,84,106,150,-57.442726,-270.483032,-0.041888,1.0,1.0,58,34],
[14,0,390,100,162,78,5.759160,-297.860413,-0.041888,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-156.399994,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-165.599991,-0.055851,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.158112,-168.260391,-0.055851,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.108528,-167.485229,-0.055851,1.0,1.0,3,1],
[24,0,390,2,266,96,-5.979060,-304.357666,-0.041888,1.0,1.0,133,48],
[26,0,906,146,76,96,-60.434200,-294.629486,-0.041888,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-171.800003,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-7.423824,-290.790955,-0.031416,1.0,1.0,133,40],
[12,0,214,2,174,170,-24.164150,-299.320984,-0.031416,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-208.800003,-0.031416,1.0,1.0,60,120],
[16,0,336,202,20,26,52.855038,-266.885742,-0.031416,1.0,1.0,10,13],
[20,0,278,202,34,28,-3.337204,-261.648193,-0.031416,1.0,1.0,17,14],
[15,0,414,202,22,6,16.955759,-206.983810,-0.031416,1.0,1.0,11,3],
[17,0,1014,92,4,6,56.853065,-266.760101,-0.031416,1.0,1.0,2,3],
[21,0,1012,84,6,6,2.659836,-261.459717,-0.031416,1.0,1.0,3,3],
[18,0,650,100,4,4,50.793201,-264.949554,-0.031416,1.0,1.0,2,2],
[22,0,1002,96,10,4,-6.398545,-259.743408,-0.031416,1.0,1.0,5,2],
[13,0,798,84,106,150,-58.090187,-270.372345,-0.031416,1.0,1.0,58,34],
[14,0,390,100,162,78,4.821541,-298.410065,-0.031416,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-156.800003,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-166.199997,-0.041888,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.120361,-168.946106,-0.041888,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.082001,-168.114487,-0.041888,1.0,1.0,3,1],
[24,0,390,2,266,96,-6.984074,-304.784058,-0.031416,1.0,1.0,133,48],
[26,0,906,146,76,96,-61.334358,-294.486145,-0.031416,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-172.199997,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-8.282502,-291.202972,-0.020944,1.0,1.0,133,40],
[12,0,214,2,174,170,-25.111235,-299.557220,-0.020944,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-209.199997,-0.020944,1.0,1.0,60,120],
[16,0,336,202,20,26,52.243385,-267.930298,-0.020944,1.0,1.0,10,13],
[20,0,278,202,34,28,-3.890929,-262.104614,-0.020944,1.0,1.0,17,14],
[15,0,414,202,22,6,16.973356,-207.655716,-0.020944,1.0,1.0,11,3],
[17,0,1014,92,4,6,56.242508,-267.846527,-0.020944,1.0,1.0,2,3],
[21,0,1012,84,6,6,2.107755,-261.978973,-0.020944,1.0,1.0,3,3],
[18,0,650,100,4,4,50.201939,-265.972626,-0.020944,1.0,1.0,2,2],
[22,0,1002,96,10,4,-6.932156,-260.167877,-0.020944,1.0,1.0,5,2],
[13,0,798,84,106,150,-58.732269,-270.254913,-0.020944,1.0,1.0,58,34],
[14,0,390,100,162,78,3.882405,-298.949890,-0.020944,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-157.199997,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-166.800003,-0.027925,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.081429,-169.631302,-0.027925,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.055061,-168.743378,-0.027925,1.0,1.0,3,1],
[24,0,390,2,266,96,-7.989308,-305.199890,-0.020944,1.0,1.0,133,48],
[26,0,906,146,76,96,-62.228775,-294.333405,-0.020944,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-172.600006,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.141258,-291.605988,-0.010472,1.0,1.0,133,40],
[12,0,214,2,174,170,-26.056553,-299.783569,-0.010472,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-209.600006,-0.010472,1.0,1.0,60,120],
[16,0,336,202,20,26,51.625019,-268.968414,-0.010472,1.0,1.0,10,13],
[20,0,278,202,34,28,-4.445215,-262.555206,-0.010472,1.0,1.0,17,14],
[15,0,414,202,22,6,16.988102,-208.327789,-0.010472,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.624802,-268.926514,-0.010472,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.554456,-262.492371,-0.010472,1.0,1.0,3,3],
[18,0,650,100,4,4,49.604187,-266.989471,-0.010472,1.0,1.0,2,2],
[22,0,1002,96,10,4,-7.465994,-260.586731,-0.010472,1.0,1.0,5,2],
[13,0,798,84,106,150,-59.368896,-270.130768,-0.010472,1.0,1.0,58,34],
[14,0,390,100,162,78,2.941857,-299.479889,-0.010472,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-157.600006,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-167.400009,-0.013963,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.041306,-170.315948,-0.013963,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.027733,-169.371887,-0.013963,1.0,1.0,3,1],
[24,0,390,2,266,96,-8.994654,-305.605225,-0.010472,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.117355,-294.171356,-0.010472,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-173.0,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-10.0,-292.0,0.0,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-300.0,0.0,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-210.0,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-270.0,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-263.0,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-209.0,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-270.0,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-263.0,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-268.0,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-261.0,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-270.0,0.0,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-300.0,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-158.0,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-168.0,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.0,-171.0,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.0,-170.0,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-306.0,0.0,1.0,1.0,133,48],
[26,0,906,146,76,96,-64.0,-294.0,0.0,1.0,1.0,48,90]
]
]
}
}
]

},{}],90:[function(require,module,exports){
module.exports=[
{
"images":["koishi.png"],
"name": "wait_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 500,
"MarginWidth": 258,
"MarginHeight": 508,
"parts": ["root","Chara","koishi0_bottom0","koishi0_thighs_l0","koishi0_calf_l0","koishi0_foot_l0","koishi0_thighs_r0","koishi0_calf_r0","koishi0_foot_r0","koishi0_body","koishi0_arm0_r0","koishi0_arm0_l0","koishi0_head0","koishi0_hear_b0","koishi0_hear_f1","koishi0_hear_f0","koishi0_mouth0","koishi0_eye0_l0","koishi0_eye0_l1","koishi0_eye0_l2","koishi0_eye1_l0","koishi0_eye0_r0","koishi0_eye0_r1","koishi0_eye0_r2","koishi0_eye1_r0","koishi0_hat0_f0","koishi0_hat0_b0","koishi0_hat0_obj0","3rdeye0_all","3rdeye0_cord_b0","3rdeye0_cord_f0","3rdeye0_body0","3rdeye0_eye0","3rdeye0_light0","3rdeye0_eye1"],
"ssa": [
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-173.0,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-10.0,-292.0,0.0,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-300.0,0.0,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-210.0,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-270.0,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-263.0,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-209.0,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-270.0,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-263.0,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-268.0,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-261.0,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-270.0,0.0,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-300.0,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-158.0,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-168.0,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.0,-171.0,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.0,-170.0,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-306.0,0.0,1.0,1.0,133,48],
[26,0,906,146,76,96,-64.0,-294.0,0.0,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.909091,-172.909088,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.988364,-291.817810,0.000831,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-299.817810,0.000831,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.904755,0.001662,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.904755,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.904755,-0.106382,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-209.817795,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-269.817810,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-262.817810,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-208.817795,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-269.817810,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-262.817810,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-267.817810,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-260.817810,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-269.817810,-0.001662,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-299.817810,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.090910,-157.909088,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.909088,-167.909088,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.909088,-170.909088,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.909088,-169.909088,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-305.817810,0.000831,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.990009,-293.772949,0.002926,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.818182,-172.818176,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.976729,-291.635651,0.001662,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-299.635620,0.001662,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.809525,0.003324,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.809525,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.809525,-0.108044,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-209.635620,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-269.635620,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-262.635620,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-208.635620,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-269.635620,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-262.635620,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-267.635620,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-260.635620,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-269.635620,-0.003324,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-299.635620,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.181818,-157.818176,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.818184,-167.818176,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.818184,-170.818176,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.818184,-169.818176,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-305.635620,0.001662,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.979980,-293.545868,0.005851,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.727273,-172.727280,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.965094,-291.453430,0.002493,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-299.453400,0.002493,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.714279,0.004987,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.714279,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.714279,-0.109706,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-209.453400,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-269.453400,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-262.453400,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-208.453400,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-269.453400,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-262.453400,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-267.453400,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-260.453400,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-269.453400,-0.004987,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-299.453400,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.272728,-157.727280,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.727272,-167.727280,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.727272,-170.727280,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.727272,-169.727280,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-305.453400,0.002493,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.969913,-293.318787,0.008777,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.636364,-172.636368,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.953458,-291.271332,0.003324,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-299.271240,0.003324,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.619049,0.006649,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.619049,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.619049,-0.111369,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-209.271225,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-269.271240,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-262.271240,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-208.271225,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-269.271240,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-262.271240,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-267.271240,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-260.271240,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-269.271240,-0.006649,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-299.271240,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.363636,-157.636368,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.636360,-167.636368,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.636360,-170.636368,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.636360,-169.636368,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-305.271240,0.003324,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.959808,-293.091797,0.011702,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.545455,-172.545456,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.941822,-291.089142,0.004156,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-299.089020,0.004156,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.523804,0.008311,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.523804,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.523804,-0.113031,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-209.089020,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-269.089020,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-262.089020,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-208.089020,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-269.089020,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-262.089020,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-267.089020,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-260.089020,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-269.089020,-0.008311,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-299.089020,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.454546,-157.545456,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.545456,-167.545456,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.545456,-170.545456,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.545456,-169.545456,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-305.089020,0.004156,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.949669,-292.864716,0.014628,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.454545,-172.454544,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.930187,-290.907013,0.004987,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-298.906830,0.004987,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.428574,0.009973,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.428574,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.428574,-0.114693,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-208.906830,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-268.906830,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-261.906830,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-207.906830,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-268.906830,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-261.906830,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-266.906830,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-259.906830,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-268.906830,-0.009973,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-298.906830,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.545454,-157.454544,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.454544,-167.454544,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.454544,-170.454544,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.454544,-169.454544,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-304.906830,0.004987,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.939487,-292.637695,0.017553,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.363636,-172.363632,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.918551,-290.724884,0.005818,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-298.724640,0.005818,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.333328,0.011636,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.333328,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.333328,-0.116355,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-208.724640,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-268.724640,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-261.724640,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-207.724640,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-268.724640,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-261.724640,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-266.724640,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-259.724640,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-268.724640,-0.011636,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-298.724640,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.636364,-157.363632,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.363640,-167.363632,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.363640,-170.363632,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.363640,-169.363632,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-304.724640,0.005818,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.929272,-292.410675,0.020479,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.272727,-172.272720,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.906917,-290.542755,0.006649,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-298.542450,0.006649,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.238098,0.013298,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.238098,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.238098,-0.118018,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-208.542450,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-268.542450,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-261.542450,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-207.542450,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-268.542450,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-261.542450,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-266.542450,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-259.542450,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-268.542450,-0.013298,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-298.542450,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.727272,-157.272720,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.272728,-167.272720,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.272728,-170.272720,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.272728,-169.272720,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-304.542450,0.006649,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.919022,-292.183685,0.023404,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.181818,-172.181824,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.895281,-290.360626,0.007480,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-298.360229,0.007480,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.142853,0.014960,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.142853,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.142853,-0.119680,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-208.360245,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-268.360229,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-261.360229,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-207.360245,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-268.360229,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-261.360229,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-266.360229,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-259.360229,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-268.360229,-0.014960,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-298.360229,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.818182,-157.181824,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.181816,-167.181824,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.181816,-170.181824,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.181816,-169.181824,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-304.360229,0.007480,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.908730,-291.956665,0.026330,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.090909,-172.090912,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.883646,-290.178528,0.008311,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-298.178040,0.008311,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.047623,0.016622,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.047623,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.047623,-0.121342,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-208.178055,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-268.178040,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-261.178040,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-207.178055,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-268.178040,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-261.178040,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-266.178040,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-259.178040,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-268.178040,-0.016622,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-298.178040,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.909090,-157.090912,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.090912,-167.090912,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.090912,-170.090912,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.090912,-169.090912,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-304.178040,0.008311,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.898403,-291.729675,0.029255,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.0,-172.0,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.872011,-289.996429,0.009142,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-297.995850,0.009142,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.952377,0.018284,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.952377,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.952377,-0.123004,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-207.995850,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-267.995850,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-260.995850,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-206.995850,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-267.995850,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-260.995850,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-265.995850,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-258.995850,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-267.995850,-0.018284,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-297.995850,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.0,-157.0,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.0,-167.0,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.0,-170.0,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.0,-169.0,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-303.995850,0.009142,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.888039,-291.502686,0.032181,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.909091,-171.909088,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.860376,-289.814362,0.009973,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-297.813660,0.009973,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.857147,0.019947,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.857147,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.857147,-0.124666,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-207.813660,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-267.813660,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-260.813660,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-206.813660,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-267.813660,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-260.813660,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-265.813660,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-258.813660,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-267.813660,-0.019947,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-297.813660,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.090910,-156.909088,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.909088,-166.909088,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.909088,-169.909088,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.909088,-168.909088,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-303.813660,0.009973,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.877636,-291.275696,0.035106,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.818182,-171.818176,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.848742,-289.632294,0.010804,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-297.631470,0.010804,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.761902,0.021609,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.761902,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.761902,-0.126329,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-207.631470,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-267.631470,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-260.631470,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-206.631470,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-267.631470,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-260.631470,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-265.631470,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-258.631470,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-267.631470,-0.021609,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-297.631470,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.181818,-156.818176,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.818184,-166.818176,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.818184,-169.818176,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.818184,-168.818176,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-303.631470,0.010804,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.867199,-291.048737,0.038032,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.727273,-171.727280,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.837107,-289.450226,0.011636,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-297.449280,0.011636,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.666672,0.023271,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.666672,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.666672,-0.127991,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-207.449280,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-267.449280,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-260.449280,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-206.449280,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-267.449280,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-260.449280,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-265.449280,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-258.449280,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-267.449280,-0.023271,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-297.449280,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.272728,-156.727280,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.727272,-166.727280,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.727272,-169.727280,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.727272,-168.727280,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-303.449280,0.011636,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.856720,-290.821777,0.040957,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.636364,-171.636368,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.825472,-289.268188,0.012467,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-297.267090,0.012467,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.571426,0.024933,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.571426,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.571426,-0.129653,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-207.267090,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-267.267090,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-260.267090,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-206.267090,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-267.267090,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-260.267090,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-265.267090,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-258.267090,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-267.267090,-0.024933,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-297.267090,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.363636,-156.636368,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.636360,-166.636368,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.636360,-169.636368,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.636360,-168.636368,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-303.267090,0.012467,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.846207,-290.594849,0.043883,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.545455,-171.545456,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.813837,-289.086151,0.013298,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-297.084900,0.013298,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.476196,0.026595,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.476196,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.476196,-0.131315,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-207.084900,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-267.084900,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-260.084900,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-206.084900,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-267.084900,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-260.084900,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-265.084900,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-258.084900,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-267.084900,-0.026595,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-297.084900,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.454546,-156.545456,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.545456,-166.545456,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.545456,-169.545456,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.545456,-168.545456,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-303.084900,0.013298,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.835659,-290.367889,0.046808,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.454545,-171.454544,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.802202,-288.904083,0.014129,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-296.902679,0.014129,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.380951,0.028258,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.380951,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.380951,-0.132977,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-206.902679,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-266.902679,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-259.902679,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-205.902679,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-266.902679,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-259.902679,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-264.902679,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-257.902679,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-266.902679,-0.028258,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-296.902679,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.545454,-156.454544,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.454544,-166.454544,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.454544,-169.454544,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.454544,-168.454544,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-302.902679,0.014129,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.825069,-290.140930,0.049734,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.363636,-171.363632,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.790568,-288.722076,0.014960,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-296.720520,0.014960,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.285721,0.029920,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.285721,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.285721,-0.134640,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-206.720505,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-266.720520,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-259.720520,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-205.720505,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-266.720520,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-259.720520,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-264.720520,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-257.720520,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-266.720520,-0.029920,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-296.720520,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.636364,-156.363632,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.363640,-166.363632,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.363640,-169.363632,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.363640,-168.363632,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-302.720520,0.014960,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.814445,-289.914063,0.052659,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.272727,-171.272720,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.778934,-288.540039,0.015791,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-296.538300,0.015791,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.190475,0.031582,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.190475,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.190475,-0.136302,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-206.538300,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-266.538300,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-259.538300,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-205.538300,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-266.538300,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-259.538300,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-264.538300,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-257.538300,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-266.538300,-0.031582,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-296.538300,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.727272,-156.272720,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.272728,-166.272720,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.272728,-169.272720,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.272728,-168.272720,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-302.538300,0.015791,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.803783,-289.687103,0.055585,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.181818,-171.181824,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.767301,-288.358032,0.016622,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-296.356110,0.016622,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.095245,0.033244,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.095245,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.095245,-0.137964,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-206.356110,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-266.356110,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-259.356110,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-205.356110,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-266.356110,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-259.356110,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-264.356110,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-257.356110,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-266.356110,-0.033244,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-296.356110,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.818182,-156.181824,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.181816,-166.181824,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.181816,-169.181824,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.181816,-168.181824,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-302.356110,0.016622,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.793083,-289.460205,0.058510,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.090909,-171.090912,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.755667,-288.176056,0.017453,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-296.173920,0.017453,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.0,0.034907,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.0,-0.139626,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-206.173920,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-266.173920,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-259.173920,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-205.173920,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-266.173920,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-259.173920,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-264.173920,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-257.173920,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-266.173920,-0.034907,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-296.173920,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.909090,-156.090912,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.090912,-166.090912,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.090912,-169.090912,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.090912,-168.090912,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-302.173920,0.017453,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.782345,-289.233307,0.061436,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.0,-171.0,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.766289,-288.175873,0.016694,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-296.173920,0.016694,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.086960,0.033389,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.086960,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.086960,-0.138109,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-206.173920,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-266.173920,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-259.173920,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-205.173920,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-266.173920,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-259.173920,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-264.173920,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-257.173920,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-266.173920,-0.033389,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-296.173920,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-20.0,-156.0,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.0,-166.0,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.0,-169.0,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.0,-168.0,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-302.173920,0.016694,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.792152,-289.274139,0.062771,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.090909,-171.090912,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.776911,-288.175690,0.015936,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-296.173920,0.015936,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.173920,0.031871,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.173920,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.173920,-0.136591,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-206.173920,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-266.173920,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-259.173920,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-205.173920,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-266.173920,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-259.173920,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-264.173920,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-257.173920,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-266.173920,-0.031871,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-296.173920,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.909090,-156.090912,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.090912,-166.090912,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.090912,-169.090912,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.090912,-168.090912,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-302.173920,0.015936,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.801926,-289.314941,0.064107,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.181818,-171.181824,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.787534,-288.357727,0.015177,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-296.356110,0.015177,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.260864,0.030354,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.260864,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.260864,-0.135073,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-206.356110,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-266.356110,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-259.356110,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-205.356110,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-266.356110,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-259.356110,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-264.356110,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-257.356110,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-266.356110,-0.030354,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-296.356110,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.818182,-156.181824,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.181816,-166.181824,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.181816,-169.181824,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.181816,-168.181824,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-302.356110,0.015177,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.811668,-289.537964,0.065442,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.272727,-171.272720,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.798156,-288.539764,0.014418,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-296.538300,0.014418,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.347824,0.028836,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.347824,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.347824,-0.133556,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-206.538300,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-266.538300,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-259.538300,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-205.538300,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-266.538300,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-259.538300,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-264.538300,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-257.538300,0.0,1.0,1.0,5,2],
[19,0,314,202,20,26,53.0,-264.538300,0.0,1.0,1.0,10,13],
[23,0,240,202,36,28,-2.0,-257.538300,0.0,1.0,1.0,18,14],
[13,0,798,84,106,150,-60.0,-266.538300,-0.028836,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-296.538300,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.727272,-156.272720,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.272728,-166.272720,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.272728,-169.272720,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.272728,-168.272720,0.0,1.0,1.0,3,1],
[33,0,1002,64,18,18,102.272728,-169.272720,0.0,1.0,1.0,9,9],
[24,0,390,2,266,96,-10.0,-302.538300,0.014418,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.821377,-289.761017,0.066778,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.363636,-171.363632,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.808779,-288.721802,0.013659,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-296.720490,0.013659,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.434784,0.027318,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.434784,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.434784,-0.132038,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-206.720490,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-266.720490,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-259.720490,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-205.720490,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-266.720490,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-259.720490,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-264.720490,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-257.720490,0.0,1.0,1.0,5,2],
[19,0,314,202,20,26,53.0,-264.720490,0.0,1.0,1.0,10,13],
[23,0,240,202,36,28,-2.0,-257.720490,0.0,1.0,1.0,18,14],
[13,0,798,84,106,150,-60.0,-266.720490,-0.027318,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-296.720490,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.636364,-156.363632,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.363640,-166.363632,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.363640,-169.363632,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.363640,-168.363632,0.0,1.0,1.0,3,1],
[33,0,1002,64,18,18,102.363640,-169.363632,0.0,1.0,1.0,9,9],
[24,0,390,2,266,96,-10.0,-302.720490,0.013659,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.831059,-289.984039,0.063263,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.454545,-171.454544,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.819402,-288.903870,0.012900,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-296.902710,0.012900,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.521744,0.025801,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.521744,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.521744,-0.130520,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-206.902695,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-266.902710,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-259.902710,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-205.902695,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-266.902710,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-259.902710,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-264.902710,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-257.902710,0.0,1.0,1.0,5,2],
[19,0,314,202,20,26,53.0,-264.902710,0.0,1.0,1.0,10,13],
[23,0,240,202,36,28,-2.0,-257.902710,0.0,1.0,1.0,18,14],
[13,0,798,84,106,150,-60.0,-266.902710,-0.025801,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-296.902710,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.545454,-156.454544,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.454544,-166.454544,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.454544,-169.454544,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.454544,-168.454544,0.0,1.0,1.0,3,1],
[33,0,1002,64,18,18,102.454544,-169.454544,0.0,1.0,1.0,9,9],
[24,0,390,2,266,96,-10.0,-302.902710,0.012900,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.840710,-290.207123,0.059749,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.545455,-171.545456,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.830025,-289.085907,0.012141,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-297.084869,0.012141,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.608688,0.024283,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.608688,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.608688,-0.129003,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-207.084869,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-267.084869,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-260.084869,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-206.084869,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-267.084869,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-260.084869,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-265.084869,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-258.084869,0.0,1.0,1.0,5,2],
[19,0,314,202,20,26,53.0,-265.084869,0.0,1.0,1.0,10,13],
[23,0,240,202,36,28,-2.0,-258.084869,0.0,1.0,1.0,18,14],
[13,0,798,84,106,150,-60.0,-267.084869,-0.024283,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-297.084869,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.454546,-156.545456,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.545456,-166.545456,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.545456,-169.545456,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.545456,-168.545456,0.0,1.0,1.0,3,1],
[33,0,1002,64,18,18,102.545456,-169.545456,0.0,1.0,1.0,9,9],
[24,0,390,2,266,96,-10.0,-303.084869,0.012141,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.850327,-290.430145,0.056234,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.636364,-171.636368,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.840648,-289.268005,0.011383,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-297.267090,0.011383,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.695648,0.022765,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.695648,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.695648,-0.127485,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-207.267075,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-267.267090,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-260.267090,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-206.267075,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-267.267090,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-260.267090,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-265.267090,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-258.267090,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-267.267090,-0.022765,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-297.267090,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.363636,-156.636368,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.636360,-166.636368,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.636360,-169.636368,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.636360,-168.636368,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-303.267090,0.011383,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.859913,-290.653229,0.052719,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.727273,-171.727280,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.851271,-289.450073,0.010624,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-297.449280,0.010624,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.782608,0.021247,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.782608,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.782608,-0.125967,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-207.449280,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-267.449280,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-260.449280,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-206.449280,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-267.449280,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-260.449280,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-265.449280,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-258.449280,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-267.449280,-0.021247,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-297.449280,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.272728,-156.727280,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.727272,-166.727280,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.727272,-169.727280,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.727272,-168.727280,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-303.449280,0.010624,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.869469,-290.876282,0.049205,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.818182,-171.818176,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.861894,-289.632141,0.009865,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-297.631470,0.009865,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.869568,0.019730,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.869568,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.869568,-0.124450,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-207.631470,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-267.631470,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-260.631470,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-206.631470,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-267.631470,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-260.631470,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-265.631470,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-258.631470,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-267.631470,-0.019730,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-297.631470,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.181818,-156.818176,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.818184,-166.818176,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.818184,-169.818176,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.818184,-168.818176,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-303.631470,0.009865,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.878994,-291.099365,0.045690,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,0.909091,-171.909088,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.872517,-289.814240,0.009106,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-297.813660,0.009106,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-203.956528,0.018212,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-132.956528,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-199.956528,-0.122932,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-207.813660,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-267.813660,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-260.813660,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-206.813660,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-267.813660,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-260.813660,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-265.813660,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-258.813660,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-267.813660,-0.018212,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-297.813660,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.090908,-156.909088,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,98.909088,-166.909088,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,104.909088,-169.909088,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,100.909088,-168.909088,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-303.813660,0.009106,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.888489,-291.322449,0.042175,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.0,-172.0,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.883141,-289.996338,0.008347,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-297.995850,0.008347,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.043472,0.016694,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.043472,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.043472,-0.121414,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-207.995850,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-267.995850,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-260.995850,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-206.995850,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-267.995850,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-260.995850,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-265.995850,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-258.995850,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-267.995850,-0.016694,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-297.995850,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-19.0,-157.0,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.0,-167.0,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.0,-170.0,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.0,-169.0,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-303.995850,0.008347,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.897953,-291.545532,0.038661,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.090909,-172.090912,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.893764,-290.178436,0.007588,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-298.178040,0.007588,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.130432,0.015177,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.130432,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.130432,-0.119897,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-208.178055,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-268.178040,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-261.178040,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-207.178055,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-268.178040,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-261.178040,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-266.178040,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-259.178040,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-268.178040,-0.015177,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-298.178040,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.909090,-157.090912,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.090912,-167.090912,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.090912,-170.090912,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.090912,-169.090912,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-304.178040,0.007588,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.907387,-291.768616,0.035146,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.181818,-172.181824,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.904387,-290.360596,0.006830,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-298.360260,0.006830,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.217392,0.013659,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.217392,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.217392,-0.118379,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-208.360260,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-268.360260,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-261.360260,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-207.360260,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-268.360260,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-261.360260,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-266.360260,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-259.360260,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-268.360260,-0.013659,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-298.360260,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.818182,-157.181824,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.181816,-167.181824,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.181816,-170.181824,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.181816,-169.181824,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-304.360260,0.006830,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.916786,-291.991760,0.031632,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.272727,-172.272720,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.915010,-290.542694,0.006071,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-298.542450,0.006071,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.304352,0.012141,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.304352,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.304352,-0.116861,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-208.542450,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-268.542450,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-261.542450,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-207.542450,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-268.542450,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-261.542450,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-266.542450,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-259.542450,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-268.542450,-0.012141,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-298.542450,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.727272,-157.272720,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.272728,-167.272720,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.272728,-170.272720,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.272728,-169.272720,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-304.542450,0.006071,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.926155,-292.214844,0.028117,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.363636,-172.363632,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.925634,-290.724823,0.005312,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-298.724640,0.005312,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.391312,0.010624,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.391312,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.391312,-0.115343,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-208.724640,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-268.724640,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-261.724640,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-207.724640,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-268.724640,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-261.724640,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-266.724640,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-259.724640,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-268.724640,-0.010624,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-298.724640,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.636364,-157.363632,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.363640,-167.363632,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.363640,-170.363632,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.363640,-169.363632,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-304.724640,0.005312,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.935497,-292.437958,0.024602,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.454545,-172.454544,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.936257,-290.906982,0.004553,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-298.906830,0.004553,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.478256,0.009106,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.478256,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.478256,-0.113826,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-208.906830,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-268.906830,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-261.906830,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-207.906830,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-268.906830,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-261.906830,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-266.906830,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-259.906830,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-268.906830,-0.009106,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-298.906830,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.545454,-157.454544,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.454544,-167.454544,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.454544,-170.454544,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.454544,-169.454544,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-304.906830,0.004553,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.944805,-292.661102,0.021088,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.545455,-172.545456,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.946881,-291.089111,0.003794,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-299.089020,0.003794,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.565216,0.007588,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.565216,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.565216,-0.112308,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-209.089020,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-269.089020,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-262.089020,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-208.089020,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-269.089020,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-262.089020,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-267.089020,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-260.089020,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-269.089020,-0.007588,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-299.089020,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.454546,-157.545456,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.545456,-167.545456,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.545456,-170.545456,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.545456,-169.545456,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-305.089020,0.003794,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.954082,-292.884216,0.017573,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.636364,-172.636368,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.957505,-291.271301,0.003035,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-299.271240,0.003035,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.652176,0.006071,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.652176,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.652176,-0.110790,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-209.271225,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-269.271240,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-262.271240,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-208.271225,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-269.271240,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-262.271240,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-267.271240,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-260.271240,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-269.271240,-0.006071,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-299.271240,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.363636,-157.636368,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.636360,-167.636368,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.636360,-170.636368,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.636360,-169.636368,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-305.271240,0.003035,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.963326,-293.107391,0.014058,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.727273,-172.727280,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.968129,-291.453461,0.002277,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-299.453430,0.002277,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.739136,0.004553,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.739136,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.739136,-0.109273,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-209.453430,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-269.453430,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-262.453430,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-208.453430,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-269.453430,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-262.453430,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-267.453430,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-260.453430,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-269.453430,-0.004553,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-299.453430,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.272728,-157.727280,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.727272,-167.727280,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.727272,-170.727280,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.727272,-169.727280,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-305.453430,0.002277,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.972542,-293.330536,0.010544,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.818182,-172.818176,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.978752,-291.635651,0.001518,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-299.635620,0.001518,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.826080,0.003035,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.826080,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.826080,-0.107755,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-209.635605,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-269.635620,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-262.635620,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-208.635605,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-269.635620,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-262.635620,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-267.635620,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-260.635620,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-269.635620,-0.003035,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-299.635620,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.181818,-157.818176,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.818184,-167.818176,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.818184,-170.818176,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.818184,-169.818176,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-305.635620,0.001518,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.981724,-293.553680,0.007029,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,1.909091,-172.909088,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.989376,-291.817810,0.000759,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-299.817810,0.000759,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-204.913040,0.001518,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-133.913040,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-200.913040,-0.106237,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-209.817810,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-269.817810,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-262.817810,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-208.817810,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-269.817810,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-262.817810,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-267.817810,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-260.817810,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-269.817810,-0.001518,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-299.817810,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.090910,-157.909088,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,99.909088,-167.909088,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.909088,-170.909088,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.909088,-169.909088,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-305.817810,0.000759,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.990879,-293.776825,0.003515,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,22.0,-54.0,0.0,1.0,1.0,11,7],
[2,0,984,146,24,62,25.0,-86.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,17.0,-11.0,0.0,1.0,1.0,4,5],
[6,0,1002,2,18,60,-28.0,-53.0,0.0,1.0,1.0,8,9],
[5,0,626,100,22,68,-31.0,-85.0,0.0,1.0,1.0,8,11],
[7,0,358,202,26,14,-22.0,-10.0,0.0,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-173.0,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-10.0,-292.0,0.0,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.0,-300.0,0.0,1.0,1.0,62,27],
[10,0,554,100,70,140,26.0,-205.0,0.0,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-134.0,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-40.0,-201.0,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-210.0,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-270.0,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-263.0,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-209.0,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-270.0,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-263.0,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-268.0,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-261.0,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.0,-270.0,0.0,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-300.0,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-158.0,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-168.0,0.0,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.0,-171.0,0.0,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.0,-170.0,0.0,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-306.0,0.0,1.0,1.0,133,48],
[26,0,906,146,76,96,-64.0,-294.0,0.0,1.0,1.0,48,90]
]
]
}
}
]

},{}],91:[function(require,module,exports){
module.exports=[
{
"images":["koishi.png"],
"name": "walk_anime_1",
"animation": {
"fps": 30,
"CanvasWidth": 500,
"CanvasHeight": 500,
"MarginWidth": 258,
"MarginHeight": 508,
"parts": ["root","Chara","koishi0_bottom0","koishi0_thighs_l0","koishi0_calf_l0","koishi0_foot_l0","koishi0_thighs_r0","koishi0_calf_r0","koishi0_foot_r0","koishi0_body","koishi0_arm0_r0","koishi0_arm0_l0","koishi0_head0","koishi0_hear_b0","koishi0_hear_f1","koishi0_hear_f0","koishi0_mouth0","koishi0_eye0_l0","koishi0_eye0_l1","koishi0_eye0_l2","koishi0_eye1_l0","koishi0_eye0_r0","koishi0_eye0_r1","koishi0_eye0_r2","koishi0_eye1_r0","koishi0_hat0_f0","koishi0_hat0_b0","koishi0_hat0_obj0","3rdeye0_all","3rdeye0_cord_b0","3rdeye0_cord_f0","3rdeye0_body0","3rdeye0_eye0","3rdeye0_light0","3rdeye0_eye1"],
"ssa": [
[
[3,0,626,170,20,56,38.854675,-51.125820,0.368003,1.0,1.0,11,7],
[2,0,984,146,24,62,27.0,-81.0,0.471239,1.0,1.0,14,8],
[4,0,386,202,26,14,49.658798,-9.206005,0.408756,1.0,1.0,4,5],
[6,0,1002,2,18,60,-35.700405,-55.440186,-0.498728,1.0,1.0,8,9],
[5,0,626,100,22,68,-26.0,-86.0,-0.369783,1.0,1.0,8,11],
[7,0,358,202,26,14,-51.876724,-15.286396,-0.228202,1.0,1.0,4,5],
[28,0,240,180,270,20,1.807719,-171.033234,0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,-12.233901,-280.958405,0.052360,1.0,1.0,133,40],
[12,0,214,2,174,170,-29.859303,-288.643433,0.017453,1.0,1.0,62,27],
[10,0,554,100,70,140,22.756006,-196.547668,-0.017453,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-125.0,0.017453,1.0,1.0,104,104],
[9,0,926,2,74,142,-35.165352,-191.536041,0.069813,1.0,1.0,40,13],
[11,0,658,84,138,126,-10.291326,-198.971283,0.017453,1.0,1.0,60,120],
[16,0,336,202,20,26,48.652393,-260.009277,0.017453,1.0,1.0,10,13],
[20,0,278,202,34,28,-7.216912,-252.033020,0.017453,1.0,1.0,17,14],
[15,0,414,202,22,6,15.722167,-198.425201,0.017453,1.0,1.0,11,3],
[17,0,1014,92,4,6,52.651783,-260.079102,0.017453,1.0,1.0,2,3],
[21,0,1012,84,6,6,-1.217826,-252.137741,0.017453,1.0,1.0,3,3],
[18,0,650,100,4,4,46.687603,-257.974670,0.017453,1.0,1.0,2,2],
[22,0,1002,96,10,4,-10.181551,-249.980972,0.017453,1.0,1.0,5,2],
[13,0,798,84,106,150,-62.330700,-258.072083,0.017453,1.0,1.0,58,34],
[14,0,390,100,162,78,-0.863717,-289.149536,0.017453,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.927448,-155.686462,0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,99.880058,-167.744324,0.017453,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.826790,-170.848587,0.017453,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.844849,-169.778931,0.017453,1.0,1.0,3,1],
[24,0,390,2,266,96,-12.966604,-294.939209,0.052360,1.0,1.0,133,48],
[26,0,906,146,76,96,-66.264565,-280.129517,0.087266,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,34.315849,-51.530025,0.329745,1.0,1.0,11,7],
[2,0,984,146,24,62,24.0,-82.599998,0.412334,1.0,1.0,14,8],
[4,0,386,202,26,14,43.508705,-9.227646,0.334423,1.0,1.0,4,5],
[6,0,1002,2,18,60,-29.114056,-55.914192,-0.517108,1.0,1.0,8,9],
[5,0,626,100,22,68,-22.0,-87.599998,-0.288653,1.0,1.0,8,11],
[7,0,358,202,26,14,-46.025642,-16.064499,-0.284761,1.0,1.0,4,5],
[28,0,240,180,270,20,1.835223,-171.171539,0.014960,1.0,1.0,135,10],
[25,0,658,2,266,80,-11.882391,-281.933411,0.047373,1.0,1.0,133,40],
[12,0,214,2,174,170,-29.525129,-289.662994,0.013713,1.0,1.0,62,27],
[10,0,554,100,70,140,22.721109,-197.196136,-0.002493,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-125.800003,0.014960,1.0,1.0,104,104],
[9,0,926,2,74,142,-35.142212,-192.401428,0.051113,1.0,1.0,40,13],
[11,0,658,84,138,126,-10.109377,-199.943405,0.014960,1.0,1.0,60,120],
[16,0,336,202,20,26,48.986343,-260.834259,0.014960,1.0,1.0,10,13],
[20,0,278,202,34,28,-6.902673,-252.997314,0.014960,1.0,1.0,17,14],
[15,0,414,202,22,6,15.902674,-199.332458,0.014960,1.0,1.0,11,3],
[17,0,1014,92,4,6,52.985897,-260.894104,0.014960,1.0,1.0,2,3],
[21,0,1012,84,6,6,-0.903344,-253.087067,0.014960,1.0,1.0,3,3],
[18,0,650,100,4,4,47.016487,-258.804565,0.014960,1.0,1.0,2,2],
[22,0,1002,96,10,4,-9.872418,-250.952667,0.014960,1.0,1.0,5,2],
[13,0,798,84,106,150,-62.144073,-259.171631,0.012467,1.0,1.0,58,34],
[14,0,390,100,162,78,-0.456954,-290.097900,0.014960,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.938148,-155.874023,0.014960,1.0,1.0,118,15],
[30,0,512,180,40,54,99.899055,-167.638123,0.012467,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.861191,-170.712692,0.012467,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.873970,-169.662903,0.012467,1.0,1.0,3,1],
[24,0,390,2,266,96,-12.545368,-295.917694,0.047373,1.0,1.0,133,48],
[26,0,906,146,76,96,-65.916519,-281.373962,0.075735,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,29.676514,-52.013695,0.291487,1.0,1.0,11,7],
[2,0,984,146,24,62,21.0,-84.199997,0.353429,1.0,1.0,14,8],
[4,0,386,202,26,14,37.244648,-9.390656,0.260089,1.0,1.0,4,5],
[6,0,1002,2,18,60,-22.409531,-56.609261,-0.535489,1.0,1.0,8,9],
[5,0,626,100,22,68,-18.0,-89.199997,-0.207524,1.0,1.0,8,11],
[7,0,358,202,26,14,-40.050682,-17.077122,-0.341321,1.0,1.0,4,5],
[28,0,240,180,270,20,1.862715,-171.309799,0.012467,1.0,1.0,135,10],
[25,0,658,2,266,80,-11.530040,-282.907745,0.042387,1.0,1.0,133,40],
[12,0,214,2,174,170,-29.189999,-290.681946,0.009973,1.0,1.0,62,27],
[10,0,554,100,70,140,22.685648,-197.845215,0.012467,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-126.599998,0.012467,1.0,1.0,104,104],
[9,0,926,2,74,142,-35.118916,-193.267105,0.032413,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.926585,-200.915100,0.012467,1.0,1.0,60,120],
[16,0,336,202,20,26,49.320774,-261.658417,0.012467,1.0,1.0,10,13],
[20,0,278,202,34,28,-6.587611,-253.960846,0.012467,1.0,1.0,17,14],
[15,0,414,202,22,6,16.083862,-200.239304,0.012467,1.0,1.0,11,3],
[17,0,1014,92,4,6,53.320465,-261.708282,0.012467,1.0,1.0,2,3],
[21,0,1012,84,6,6,-0.588077,-254.035645,0.012467,1.0,1.0,3,3],
[18,0,650,100,4,4,47.345863,-259.633636,0.012467,1.0,1.0,2,2],
[22,0,1002,96,10,4,-9.562445,-251.923599,0.012467,1.0,1.0,5,2],
[13,0,798,84,106,150,-61.956291,-260.271088,0.007480,1.0,1.0,58,34],
[14,0,390,100,162,78,-0.049408,-291.045227,0.012467,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.948736,-156.061646,0.012467,1.0,1.0,118,15],
[30,0,512,180,40,54,99.917435,-167.531891,0.007480,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.894829,-170.576691,0.007480,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.902420,-169.546799,0.007480,1.0,1.0,3,1],
[24,0,390,2,266,96,-12.123274,-296.895172,0.042387,1.0,1.0,133,48],
[26,0,906,146,76,96,-65.566284,-282.617767,0.064203,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,24.940800,-52.584568,0.253230,1.0,1.0,11,7],
[2,0,984,146,24,62,18.0,-85.800003,0.294524,1.0,1.0,14,8],
[4,0,386,202,26,14,30.873138,-9.703251,0.185755,1.0,1.0,4,5],
[6,0,1002,2,18,60,-15.605877,-57.537094,-0.553869,1.0,1.0,8,9],
[5,0,626,100,22,68,-14.0,-90.800003,-0.126395,1.0,1.0,8,11],
[7,0,358,202,26,14,-33.970627,-18.335869,-0.397881,1.0,1.0,4,5],
[28,0,240,180,270,20,1.890196,-171.447968,0.009973,1.0,1.0,135,10],
[25,0,658,2,266,80,-11.176845,-283.881378,0.037400,1.0,1.0,133,40],
[12,0,214,2,174,170,-28.853912,-291.700195,0.006233,1.0,1.0,62,27],
[10,0,554,100,70,140,22.649628,-198.494934,0.027427,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-127.400002,0.009973,1.0,1.0,104,104],
[9,0,926,2,74,142,-35.095459,-194.133087,0.013713,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.742949,-201.886322,0.009973,1.0,1.0,60,120],
[16,0,336,202,20,26,49.655678,-262.481720,0.009973,1.0,1.0,10,13],
[20,0,278,202,34,28,-6.271725,-254.923584,0.009973,1.0,1.0,17,14],
[15,0,414,202,22,6,16.265732,-201.145676,0.009973,1.0,1.0,11,3],
[17,0,1014,92,4,6,53.655479,-262.521606,0.009973,1.0,1.0,2,3],
[21,0,1012,84,6,6,-0.272024,-254.983429,0.009973,1.0,1.0,3,3],
[18,0,650,100,4,4,47.675724,-260.461884,0.009973,1.0,1.0,2,2],
[22,0,1002,96,10,4,-9.251630,-252.893768,0.009973,1.0,1.0,5,2],
[13,0,798,84,106,150,-61.767353,-261.370422,0.002493,1.0,1.0,58,34],
[14,0,390,100,162,78,0.358920,-291.991547,0.009973,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.959211,-156.249252,0.009973,1.0,1.0,118,15],
[30,0,512,180,40,54,99.935188,-167.425583,0.002493,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.927689,-170.440536,0.002493,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.930199,-169.430557,0.002493,1.0,1.0,3,1],
[24,0,390,2,266,96,-11.700321,-297.871582,0.037400,1.0,1.0,133,48],
[26,0,906,146,76,96,-65.213867,-283.860840,0.052672,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,20.113411,-53.250137,0.214972,1.0,1.0,11,7],
[2,0,984,146,24,62,15.0,-87.400002,0.235619,1.0,1.0,14,8],
[4,0,386,202,26,14,24.401272,-10.173298,0.111422,1.0,1.0,4,5],
[6,0,1002,2,18,60,-8.723257,-58.707722,-0.572250,1.0,1.0,8,9],
[5,0,626,100,22,68,-10.0,-92.400002,-0.045265,1.0,1.0,8,11],
[7,0,358,202,26,14,-27.805401,-19.850655,-0.454440,1.0,1.0,4,5],
[28,0,240,180,270,20,1.917665,-171.586075,0.007480,1.0,1.0,135,10],
[25,0,658,2,266,80,-10.822809,-284.854279,0.032413,1.0,1.0,133,40],
[12,0,214,2,174,170,-28.516867,-292.717804,0.002493,1.0,1.0,62,27],
[10,0,554,100,70,140,22.613049,-199.145248,0.042387,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-128.199997,0.007480,1.0,1.0,104,104],
[9,0,926,2,74,142,-35.071838,-194.999374,-0.004987,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.558472,-202.857086,0.007480,1.0,1.0,60,120],
[16,0,336,202,20,26,49.991055,-263.304199,0.007480,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.955019,-255.885529,0.007480,1.0,1.0,17,14],
[15,0,414,202,22,6,16.448280,-202.051590,0.007480,1.0,1.0,11,3],
[17,0,1014,92,4,6,53.990944,-263.334106,0.007480,1.0,1.0,2,3],
[21,0,1012,84,6,6,0.044813,-255.930405,0.007480,1.0,1.0,3,3],
[18,0,650,100,4,4,48.006069,-261.289307,0.007480,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.939976,-253.863144,0.007480,1.0,1.0,5,2],
[13,0,798,84,106,150,-61.577255,-262.469666,-0.002493,1.0,1.0,58,34],
[14,0,390,100,162,78,0.768028,-292.936829,0.007480,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.969576,-156.436905,0.007480,1.0,1.0,118,15],
[30,0,512,180,40,54,99.952324,-167.319244,-0.002493,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.959785,-170.304276,-0.002493,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.957306,-169.314255,-0.002493,1.0,1.0,3,1],
[24,0,390,2,266,96,-11.276515,-298.846924,0.032413,1.0,1.0,133,48],
[26,0,906,146,76,96,-64.859261,-285.103210,0.041140,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,15.199591,-54.017681,0.176715,1.0,1.0,11,7],
[2,0,984,146,24,62,12.0,-89.0,0.176715,1.0,1.0,14,8],
[4,0,386,202,26,14,17.836699,-10.808357,0.037088,1.0,1.0,4,5],
[6,0,1002,2,18,60,-1.782804,-60.129433,-0.590630,1.0,1.0,8,9],
[5,0,626,100,22,68,-6.0,-94.0,0.035864,1.0,1.0,8,11],
[7,0,358,202,26,14,-21.575893,-21.629646,-0.511000,1.0,1.0,4,5],
[28,0,240,180,270,20,1.945122,-171.724121,0.004987,1.0,1.0,135,10],
[25,0,658,2,266,80,-10.467934,-285.826508,0.027427,1.0,1.0,133,40],
[12,0,214,2,174,170,-28.178865,-293.734772,-0.001247,1.0,1.0,62,27],
[10,0,554,100,70,140,22.575916,-199.796204,0.057347,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-129.0,0.004987,1.0,1.0,104,104],
[9,0,926,2,74,142,-35.048058,-195.865952,-0.023687,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.373154,-203.827423,0.004987,1.0,1.0,60,120],
[16,0,336,202,20,26,50.326900,-264.125885,0.004987,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.637495,-256.846710,0.004987,1.0,1.0,17,14],
[15,0,414,202,22,6,16.631510,-202.957092,0.004987,1.0,1.0,11,3],
[17,0,1014,92,4,6,54.326851,-264.145844,0.004987,1.0,1.0,2,3],
[21,0,1012,84,6,6,0.362431,-256.876617,0.004987,1.0,1.0,3,3],
[18,0,650,100,4,4,48.336899,-262.115936,0.004987,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.627484,-254.831772,0.004987,1.0,1.0,5,2],
[13,0,798,84,106,150,-61.385994,-263.568787,-0.007480,1.0,1.0,58,34],
[14,0,390,100,162,78,1.177913,-293.881165,0.004987,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.979830,-156.624573,0.004987,1.0,1.0,118,15],
[30,0,512,180,40,54,99.968834,-167.212860,-0.007480,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.991104,-170.167892,-0.007480,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.983734,-169.197845,-0.007480,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.851858,-299.821228,0.027427,1.0,1.0,133,48],
[26,0,906,146,76,96,-64.502472,-286.344879,0.029608,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,10.134604,-53.889992,0.091647,1.0,1.0,11,7],
[2,0,984,146,24,62,9.0,-89.0,0.117810,1.0,1.0,14,8],
[4,0,386,202,26,14,9.090904,-10.612854,0.018297,1.0,1.0,4,5],
[6,0,1002,2,18,60,5.318176,-61.623795,-0.609011,1.0,1.0,8,9],
[5,0,626,100,22,68,-2.0,-95.333336,0.116994,1.0,1.0,8,11],
[7,0,358,202,26,14,-15.452581,-23.684982,-0.567559,1.0,1.0,4,5],
[28,0,240,180,270,20,1.972567,-171.862106,0.002493,1.0,1.0,135,10],
[25,0,658,2,266,80,-10.112220,-285.553589,0.022440,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.839911,-293.506592,-0.004987,1.0,1.0,62,27],
[10,0,554,100,70,140,22.538233,-199.203339,0.072307,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-128.555557,0.002493,1.0,1.0,104,104],
[9,0,926,2,74,142,-35.024113,-195.488388,-0.042387,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.186996,-203.552826,0.002493,1.0,1.0,60,120],
[16,0,336,202,20,26,50.663219,-263.702240,0.002493,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.319155,-256.562622,0.002493,1.0,1.0,17,14],
[15,0,414,202,22,6,16.815416,-202.617661,0.002493,1.0,1.0,11,3],
[17,0,1014,92,4,6,54.663208,-263.712219,0.002493,1.0,1.0,2,3],
[21,0,1012,84,6,6,0.680826,-256.577576,0.002493,1.0,1.0,3,3],
[18,0,650,100,4,4,48.668213,-261.697266,0.002493,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.314159,-254.555145,0.002493,1.0,1.0,5,2],
[13,0,798,84,106,150,-61.193577,-263.423340,-0.012467,1.0,1.0,58,34],
[14,0,390,100,162,78,1.588571,-293.579956,0.002493,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.989971,-156.812286,0.002493,1.0,1.0,118,15],
[30,0,512,180,40,54,99.984726,-167.106461,-0.012467,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.021660,-170.031433,-0.012467,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.009506,-169.081375,-0.012467,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.426353,-299.550049,0.022440,1.0,1.0,133,48],
[26,0,906,146,76,96,-64.143501,-286.341400,0.018077,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,5.065681,-53.884090,0.006580,1.0,1.0,11,7],
[2,0,984,146,24,62,6.0,-89.0,0.058905,1.0,1.0,14,8],
[4,0,386,202,26,14,0.348723,-10.852123,-0.000495,1.0,1.0,4,5],
[6,0,1002,2,18,60,12.418365,-63.399864,-0.627391,1.0,1.0,8,9],
[5,0,626,100,22,68,2.0,-96.666664,0.198123,1.0,1.0,8,11],
[7,0,358,202,26,14,-9.316034,-26.044895,-0.624119,1.0,1.0,4,5],
[28,0,240,180,270,20,2.0,-172.0,0.0,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.755667,-284.988251,0.017453,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.500000,-292.986115,-0.008727,1.0,1.0,62,27],
[10,0,554,100,70,140,22.500000,-198.611115,0.087266,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-128.111115,0.0,1.0,1.0,104,104],
[9,0,926,2,74,142,-35.0,-195.111115,-0.061087,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.0,-202.986115,0.0,1.0,1.0,60,120],
[16,0,336,202,20,26,51.0,-262.986115,0.0,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.0,-255.986115,0.0,1.0,1.0,17,14],
[15,0,414,202,22,6,17.0,-201.986115,0.0,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.0,-262.986115,0.0,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.0,-255.986115,0.0,1.0,1.0,3,3],
[18,0,650,100,4,4,49.0,-260.986115,0.0,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.0,-253.986115,0.0,1.0,1.0,5,2],
[13,0,798,84,106,150,-61.0,-262.986115,-0.017453,1.0,1.0,58,34],
[14,0,390,100,162,78,2.0,-292.986115,0.0,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.0,-157.0,0.0,1.0,1.0,118,15],
[30,0,512,180,40,54,100.0,-167.0,-0.017453,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.051445,-169.894821,-0.017453,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.034599,-168.964798,-0.017453,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.0,-298.986115,0.017453,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.782345,-286.045502,0.006545,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,0.0,-54.0,-0.078487,1.0,1.0,11,7],
[2,0,984,146,24,62,3.0,-89.0,0.0,1.0,1.0,14,8],
[4,0,386,202,26,14,-8.356104,-11.524414,-0.019286,1.0,1.0,4,5],
[6,0,1002,2,18,60,19.492355,-65.458389,-0.645772,1.0,1.0,8,9],
[5,0,626,100,22,68,6.0,-98.0,0.279253,1.0,1.0,8,11],
[7,0,358,202,26,14,-3.191151,-28.709805,-0.680678,1.0,1.0,4,5],
[28,0,240,180,270,20,2.027420,-172.137833,-0.002493,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.399730,-284.422211,0.012467,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.160591,-292.464935,-0.012467,1.0,1.0,62,27],
[10,0,554,100,70,140,22.461222,-198.019501,0.102226,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-127.666664,-0.002493,1.0,1.0,104,104],
[9,0,926,2,74,142,-34.975719,-194.734131,-0.079786,1.0,1.0,40,13],
[11,0,658,84,138,126,-8.813621,-202.418915,-0.002493,1.0,1.0,60,120],
[16,0,336,202,20,26,51.335793,-262.269135,-0.002493,1.0,1.0,10,13],
[20,0,278,202,34,28,-4.681487,-255.408783,-0.002493,1.0,1.0,17,14],
[15,0,414,202,22,6,17.183804,-201.354095,-0.002493,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.335781,-262.259155,-0.002493,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.318495,-255.393829,-0.002493,1.0,1.0,3,3],
[18,0,650,100,4,4,49.330811,-260.274139,-0.002493,1.0,1.0,2,2],
[22,0,1002,96,10,4,-7.686464,-253.416275,-0.002493,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.806717,-262.548737,-0.022440,1.0,1.0,58,34],
[14,0,390,100,162,78,2.410745,-292.391205,-0.002493,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.009918,-157.187744,-0.002493,1.0,1.0,118,15],
[30,0,512,180,40,54,100.014648,-166.893509,-0.022440,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.080452,-169.758118,-0.022440,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.059021,-168.848129,-0.022440,1.0,1.0,3,1],
[24,0,390,2,266,96,-9.574258,-298.421112,0.012467,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.420464,-285.748871,-0.004987,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,-4.697772,-53.580746,-0.142492,1.0,1.0,11,7],
[2,0,984,146,24,62,-1.000000,-88.500000,-0.024726,1.0,1.0,14,8],
[4,0,386,202,26,14,-15.753523,-11.726589,-0.072795,1.0,1.0,4,5],
[6,0,1002,2,18,60,22.288475,-63.174644,-0.509054,1.0,1.0,8,9],
[5,0,626,100,22,68,8.833333,-95.333336,0.290888,1.0,1.0,8,11],
[7,0,358,202,26,14,4.970711,-23.596165,-0.498873,1.0,1.0,4,5],
[28,0,240,180,270,20,2.054828,-172.275604,-0.004987,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.044412,-283.855469,0.007480,1.0,1.0,133,40],
[12,0,214,2,174,170,-26.821690,-291.943115,-0.016207,1.0,1.0,62,27],
[10,0,554,100,70,140,22.421900,-197.428528,0.117186,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-127.222221,-0.004987,1.0,1.0,104,104],
[9,0,926,2,74,142,-34.951271,-194.357452,-0.098486,1.0,1.0,40,13],
[11,0,658,84,138,126,-8.627860,-201.851288,-0.004987,1.0,1.0,60,120],
[16,0,336,202,20,26,51.670589,-261.551331,-0.004987,1.0,1.0,10,13],
[20,0,278,202,34,28,-4.363618,-254.830688,-0.004987,1.0,1.0,17,14],
[15,0,414,202,22,6,17.366829,-200.721649,-0.004987,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.670540,-261.531372,-0.004987,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.636307,-254.800766,-0.004987,1.0,1.0,3,3],
[18,0,650,100,4,4,49.660641,-259.561340,-0.004987,1.0,1.0,2,2],
[22,0,1002,96,10,4,-7.373554,-252.845673,-0.004987,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.613728,-262.111267,-0.027427,1.0,1.0,58,34],
[14,0,390,100,162,78,2.820800,-291.795319,-0.004987,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.019722,-157.375534,-0.004987,1.0,1.0,118,15],
[30,0,512,180,40,54,100.028679,-166.786987,-0.027427,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.108688,-169.621323,-0.027427,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.082771,-168.731384,-0.027427,1.0,1.0,3,1],
[24,0,390,2,266,96,-9.149131,-297.855072,0.007480,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.057861,-285.451477,-0.016518,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,-9.393486,-53.174603,-0.206496,1.0,1.0,11,7],
[2,0,984,146,24,62,-5.0,-88.0,-0.049451,1.0,1.0,14,8],
[4,0,386,202,26,14,-23.103611,-12.113277,-0.126304,1.0,1.0,4,5],
[6,0,1002,2,18,60,25.077564,-60.885590,-0.372337,1.0,1.0,8,9],
[5,0,626,100,22,68,11.666667,-92.666664,0.302524,1.0,1.0,8,11],
[7,0,358,202,26,14,13.470868,-19.255524,-0.317068,1.0,1.0,4,5],
[28,0,240,180,270,20,2.082223,-172.413300,-0.007480,1.0,1.0,135,10],
[25,0,658,2,266,80,-8.689713,-283.287994,0.002493,1.0,1.0,133,40],
[12,0,214,2,174,170,-26.483288,-291.420654,-0.019947,1.0,1.0,62,27],
[10,0,554,100,70,140,22.382040,-196.838196,0.132146,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-126.777779,-0.007480,1.0,1.0,104,104],
[9,0,926,2,74,142,-34.926651,-193.981064,-0.117186,1.0,1.0,40,13],
[11,0,658,84,138,126,-8.442719,-201.283173,-0.007480,1.0,1.0,60,120],
[16,0,336,202,20,26,52.004398,-260.832703,-0.007480,1.0,1.0,10,13],
[20,0,278,202,34,28,-4.046395,-254.251770,-0.007480,1.0,1.0,17,14],
[15,0,414,202,22,6,17.549074,-200.088730,-0.007480,1.0,1.0,11,3],
[17,0,1014,92,4,6,56.004288,-260.802795,-0.007480,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.953437,-254.206894,-0.007480,1.0,1.0,3,3],
[18,0,650,100,4,4,49.989494,-258.847717,-0.007480,1.0,1.0,2,2],
[22,0,1002,96,10,4,-7.061271,-252.274261,-0.007480,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.421028,-261.673645,-0.032413,1.0,1.0,58,34],
[14,0,390,100,162,78,3.230165,-291.198364,-0.007480,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.029417,-157.563324,-0.007480,1.0,1.0,118,15],
[30,0,512,180,40,54,100.042084,-166.680420,-0.032413,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.136154,-169.484406,-0.032413,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.105850,-168.614548,-0.032413,1.0,1.0,3,1],
[24,0,390,2,266,96,-8.724619,-297.287964,0.002493,1.0,1.0,133,48],
[26,0,906,146,76,96,-62.694534,-285.153351,-0.028050,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,-14.086923,-52.781513,-0.270500,1.0,1.0,11,7],
[2,0,984,146,24,62,-9.0,-87.500000,-0.074176,1.0,1.0,14,8],
[4,0,386,202,26,14,-30.395275,-12.681168,-0.179813,1.0,1.0,4,5],
[6,0,1002,2,18,60,27.859749,-58.591129,-0.235619,1.0,1.0,8,9],
[5,0,626,100,22,68,14.500000,-90.0,0.314159,1.0,1.0,8,11],
[7,0,358,202,26,14,22.197264,-15.728718,-0.135263,1.0,1.0,4,5],
[28,0,240,180,270,20,2.109605,-172.550934,-0.009973,1.0,1.0,135,10],
[25,0,658,2,266,80,-8.335632,-282.719818,-0.002493,1.0,1.0,133,40],
[12,0,214,2,174,170,-26.145395,-290.897461,-0.023687,1.0,1.0,62,27],
[10,0,554,100,70,140,22.341640,-196.248505,0.147106,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-126.333336,-0.009973,1.0,1.0,104,104],
[9,0,926,2,74,142,-34.901855,-193.604980,-0.135886,1.0,1.0,40,13],
[11,0,658,84,138,126,-8.258198,-200.714600,-0.009973,1.0,1.0,60,120],
[16,0,336,202,20,26,52.337208,-260.113220,-0.009973,1.0,1.0,10,13],
[20,0,278,202,34,28,-3.729820,-253.672073,-0.009973,1.0,1.0,17,14],
[15,0,414,202,22,6,17.730536,-199.455353,-0.009973,1.0,1.0,11,3],
[17,0,1014,92,4,6,56.337009,-260.073334,-0.009973,1.0,1.0,2,3],
[21,0,1012,84,6,6,2.269881,-253.612228,-0.009973,1.0,1.0,3,3],
[18,0,650,100,4,4,50.317360,-258.133270,-0.009973,1.0,1.0,2,2],
[22,0,1002,96,10,4,-6.749618,-251.702087,-0.009973,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.228626,-261.235931,-0.037400,1.0,1.0,58,34],
[14,0,390,100,162,78,3.638838,-290.600403,-0.009973,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.038998,-157.751144,-0.009973,1.0,1.0,118,15],
[30,0,512,180,40,54,100.054863,-166.573807,-0.037400,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.162842,-169.347366,-0.037400,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.128250,-168.497620,-0.037400,1.0,1.0,3,1],
[24,0,390,2,266,96,-8.300726,-296.719788,-0.002493,1.0,1.0,133,48],
[26,0,906,146,76,96,-62.330475,-284.854462,-0.039582,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,-18.777861,-52.401432,-0.334504,1.0,1.0,11,7],
[2,0,984,146,24,62,-13.0,-87.0,-0.098902,1.0,1.0,14,8],
[4,0,386,202,26,14,-37.617657,-13.426285,-0.233321,1.0,1.0,4,5],
[6,0,1002,2,18,60,30.635143,-56.291145,-0.098902,1.0,1.0,8,9],
[5,0,626,100,22,68,17.333334,-87.333336,0.325795,1.0,1.0,8,11],
[7,0,358,202,26,14,31.033150,-13.040489,0.046542,1.0,1.0,4,5],
[28,0,240,180,270,20,2.136974,-172.688492,-0.012467,1.0,1.0,135,10],
[25,0,658,2,266,80,-7.982173,-282.150970,-0.007480,1.0,1.0,133,40],
[12,0,214,2,174,170,-25.808008,-290.373657,-0.027427,1.0,1.0,62,27],
[10,0,554,100,70,140,22.300709,-195.659424,0.162066,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-125.888885,-0.012467,1.0,1.0,104,104],
[9,0,926,2,74,142,-34.876888,-193.229172,-0.154586,1.0,1.0,40,13],
[11,0,658,84,138,126,-8.074299,-200.145584,-0.012467,1.0,1.0,60,120],
[16,0,336,202,20,26,52.669018,-259.392944,-0.012467,1.0,1.0,10,13],
[20,0,278,202,34,28,-3.413895,-253.091599,-0.012467,1.0,1.0,17,14],
[15,0,414,202,22,6,17.911215,-198.821533,-0.012467,1.0,1.0,11,3],
[17,0,1014,92,4,6,56.668709,-259.343079,-0.012467,1.0,1.0,2,3],
[21,0,1012,84,6,6,2.585639,-253.016800,-0.012467,1.0,1.0,3,3],
[18,0,650,100,4,4,50.644241,-257.418030,-0.012467,1.0,1.0,2,2],
[22,0,1002,96,10,4,-6.438595,-251.129150,-0.012467,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.036510,-260.798065,-0.042387,1.0,1.0,58,34],
[14,0,390,100,162,78,4.046815,-290.001465,-0.012467,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.048466,-157.938980,-0.012467,1.0,1.0,118,15],
[30,0,512,180,40,54,100.067024,-166.467178,-0.042387,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.188759,-169.210236,-0.042387,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.149979,-168.380630,-0.042387,1.0,1.0,3,1],
[24,0,390,2,266,96,-7.877455,-296.150574,-0.007480,1.0,1.0,133,48],
[26,0,906,146,76,96,-61.965706,-284.554810,-0.051113,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,-23.466080,-52.034302,-0.398508,1.0,1.0,11,7],
[2,0,984,146,24,62,-17.0,-86.500000,-0.123627,1.0,1.0,14,8],
[4,0,386,202,26,14,-44.760170,-14.343960,-0.286830,1.0,1.0,4,5],
[6,0,1002,2,18,60,33.403866,-53.985527,0.037815,1.0,1.0,8,9],
[5,0,626,100,22,68,20.166666,-84.666664,0.337430,1.0,1.0,8,11],
[7,0,358,202,26,14,39.859421,-11.199001,0.228347,1.0,1.0,4,5],
[28,0,240,180,270,20,2.164330,-172.826004,-0.014960,1.0,1.0,135,10],
[25,0,658,2,266,80,-7.629336,-281.581421,-0.012467,1.0,1.0,133,40],
[12,0,214,2,174,170,-25.471128,-289.849182,-0.031167,1.0,1.0,62,27],
[10,0,554,100,70,140,22.259243,-195.070999,0.177026,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-125.444443,-0.014960,1.0,1.0,104,104],
[9,0,926,2,74,142,-34.851746,-192.853668,-0.173286,1.0,1.0,40,13],
[11,0,658,84,138,126,-7.891022,-199.576111,-0.014960,1.0,1.0,60,120],
[16,0,336,202,20,26,52.999828,-258.671844,-0.014960,1.0,1.0,10,13],
[20,0,278,202,34,28,-3.098621,-252.510345,-0.014960,1.0,1.0,17,14],
[15,0,414,202,22,6,18.091110,-198.187271,-0.014960,1.0,1.0,11,3],
[17,0,1014,92,4,6,56.999382,-258.612000,-0.014960,1.0,1.0,2,3],
[21,0,1012,84,6,6,2.900707,-252.420593,-0.014960,1.0,1.0,3,3],
[18,0,650,100,4,4,50.970135,-256.701996,-0.014960,1.0,1.0,2,2],
[22,0,1002,96,10,4,-6.128204,-250.555450,-0.014960,1.0,1.0,5,2],
[13,0,798,84,106,150,-59.844685,-260.360107,-0.047373,1.0,1.0,58,34],
[14,0,390,100,162,78,4.454093,-289.401489,-0.014960,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.057823,-158.126862,-0.014960,1.0,1.0,118,15],
[30,0,512,180,40,54,100.078568,-166.360535,-0.047373,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.213905,-169.073029,-0.047373,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.171036,-168.263580,-0.047373,1.0,1.0,3,1],
[24,0,390,2,266,96,-7.454807,-295.580322,-0.012467,1.0,1.0,133,48],
[26,0,906,146,76,96,-61.600208,-284.254425,-0.062645,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,-28.151361,-51.680065,-0.462512,1.0,1.0,11,7],
[2,0,984,146,24,62,-21.0,-86.0,-0.148353,1.0,1.0,14,8],
[4,0,386,202,26,14,-51.812538,-15.428875,-0.340339,1.0,1.0,4,5],
[6,0,1002,2,18,60,36.166050,-51.674187,0.174533,1.0,1.0,8,9],
[5,0,626,100,22,68,23.0,-82.0,0.349066,1.0,1.0,8,11],
[7,0,358,202,26,14,48.556961,-10.195694,0.410152,1.0,1.0,4,5],
[28,0,240,180,270,20,2.191672,-172.963425,-0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,-7.277120,-281.011139,-0.017453,1.0,1.0,133,40],
[12,0,214,2,174,170,-25.134760,-289.324066,-0.034907,1.0,1.0,62,27],
[10,0,554,100,70,140,22.217251,-194.483215,0.191986,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-125.0,-0.017453,1.0,1.0,104,104],
[9,0,926,2,74,142,-34.826424,-192.478455,-0.191986,1.0,1.0,40,13],
[11,0,658,84,138,126,-7.708370,-199.006180,-0.017453,1.0,1.0,60,120],
[16,0,336,202,20,26,53.329636,-257.949890,-0.017453,1.0,1.0,10,13],
[20,0,278,202,34,28,-2.784001,-251.928299,-0.017453,1.0,1.0,17,14],
[15,0,414,202,22,6,18.270218,-197.552567,-0.017453,1.0,1.0,11,3],
[17,0,1014,92,4,6,57.329025,-257.880066,-0.017453,1.0,1.0,2,3],
[21,0,1012,84,6,6,3.215085,-251.823578,-0.017453,1.0,1.0,3,3],
[18,0,650,100,4,4,51.295036,-255.985092,-0.017453,1.0,1.0,2,2],
[22,0,1002,96,10,4,-5.818449,-249.980957,-0.017453,1.0,1.0,5,2],
[13,0,798,84,106,150,-59.653152,-259.922028,-0.052360,1.0,1.0,58,34],
[14,0,390,100,162,78,4.860672,-288.800507,-0.017453,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.067068,-158.314758,-0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,100.089485,-166.253845,-0.052360,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.238274,-168.935715,-0.052360,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.191414,-168.146439,-0.052360,1.0,1.0,3,1],
[24,0,390,2,266,96,-7.032786,-295.009003,-0.017453,1.0,1.0,133,48],
[26,0,906,146,76,96,-61.233994,-283.953247,-0.074176,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,-23.254990,-52.620304,-0.436332,1.0,1.0,11,7],
[2,0,984,146,24,62,-17.222221,-87.333336,-0.110538,1.0,1.0,14,8],
[4,0,386,202,26,14,-45.959114,-15.762161,-0.356230,1.0,1.0,4,5],
[6,0,1002,2,18,60,32.311523,-51.750977,0.149886,1.0,1.0,8,9],
[5,0,626,100,22,68,20.166666,-82.500000,0.315628,1.0,1.0,8,11],
[7,0,358,202,26,14,43.486771,-10.119625,0.341535,1.0,1.0,4,5],
[28,0,240,180,270,20,2.166153,-172.835159,-0.015126,1.0,1.0,135,10],
[25,0,658,2,266,80,-7.605439,-281.821472,-0.012799,1.0,1.0,133,40],
[12,0,214,2,174,170,-25.448292,-290.092255,-0.031416,1.0,1.0,62,27],
[10,0,554,100,70,140,22.256462,-195.283646,0.178024,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-125.666664,-0.015126,1.0,1.0,104,104],
[9,0,926,2,74,142,-34.850063,-193.080505,-0.174533,1.0,1.0,40,13],
[11,0,658,84,138,126,-7.878429,-199.816162,-0.015126,1.0,1.0,60,120],
[16,0,336,202,20,26,53.022243,-258.901764,-0.015126,1.0,1.0,10,13],
[20,0,278,202,34,28,-3.077229,-252.749603,-0.015126,1.0,1.0,17,14],
[15,0,414,202,22,6,18.103470,-198.423004,-0.015126,1.0,1.0,11,3],
[17,0,1014,92,4,6,57.021786,-258.841248,-0.015126,1.0,1.0,2,3],
[21,0,1012,84,6,6,2.922084,-252.658844,-0.015126,1.0,1.0,3,3],
[18,0,650,100,4,4,50.992222,-256.932251,-0.015126,1.0,1.0,2,2],
[22,0,1002,96,10,4,-6.107138,-250.795212,-0.015126,1.0,1.0,5,2],
[13,0,798,84,106,150,-59.831509,-260.608948,-0.047706,1.0,1.0,58,34],
[14,0,390,100,162,78,4.481617,-289.639496,-0.015126,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.058443,-158.139389,-0.015126,1.0,1.0,118,15],
[30,0,512,180,40,54,100.079315,-166.353424,-0.047706,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.215553,-169.063889,-0.047706,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.172417,-168.255768,-0.047706,1.0,1.0,3,1],
[24,0,390,2,266,96,-7.426257,-295.820313,-0.012799,1.0,1.0,133,48],
[26,0,906,146,76,96,-61.575420,-284.512421,-0.076067,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,-18.338860,-53.596256,-0.410152,1.0,1.0,11,7],
[2,0,984,146,24,62,-13.444445,-88.666664,-0.072722,1.0,1.0,14,8],
[4,0,386,202,26,14,-40.070370,-16.156418,-0.372122,1.0,1.0,4,5],
[6,0,1002,2,18,60,28.443420,-51.862144,0.125239,1.0,1.0,8,9],
[5,0,626,100,22,68,17.333334,-83.0,0.282191,1.0,1.0,8,11],
[7,0,358,202,26,14,38.403111,-10.112572,0.272917,1.0,1.0,4,5],
[28,0,240,180,270,20,2.140622,-172.706833,-0.012799,1.0,1.0,135,10],
[25,0,658,2,266,80,-7.934422,-282.631165,-0.008145,1.0,1.0,133,40],
[12,0,214,2,174,170,-25.762390,-290.859863,-0.027925,1.0,1.0,62,27],
[10,0,554,100,70,140,22.295210,-196.084641,0.164061,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-126.333336,-0.012799,1.0,1.0,104,104],
[9,0,926,2,74,142,-34.873547,-193.682800,-0.157080,1.0,1.0,40,13],
[11,0,658,84,138,126,-8.049155,-200.625763,-0.012799,1.0,1.0,60,120],
[16,0,336,202,20,26,52.713852,-259.852936,-0.012799,1.0,1.0,10,13],
[20,0,278,202,34,28,-3.371150,-253.570221,-0.012799,1.0,1.0,17,14],
[15,0,414,202,22,6,17.935917,-199.293076,-0.012799,1.0,1.0,11,3],
[17,0,1014,92,4,6,56.713524,-259.801727,-0.012799,1.0,1.0,2,3],
[21,0,1012,84,6,6,2.628358,-253.493423,-0.012799,1.0,1.0,3,3],
[18,0,650,100,4,4,50.688419,-257.878693,-0.012799,1.0,1.0,2,2],
[22,0,1002,96,10,4,-6.396502,-251.608780,-0.012799,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.010246,-261.295776,-0.043051,1.0,1.0,58,34],
[14,0,390,100,162,78,4.101830,-290.477600,-0.012799,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.049721,-157.964035,-0.012799,1.0,1.0,118,15],
[30,0,512,180,40,54,100.068604,-166.452972,-0.043051,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.192162,-169.191971,-0.043051,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.152824,-168.365036,-0.043051,1.0,1.0,3,1],
[24,0,390,2,266,96,-7.820395,-296.630707,-0.008145,1.0,1.0,133,48],
[26,0,906,146,76,96,-61.916344,-285.070923,-0.077958,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,-13.404076,-54.608875,-0.383972,1.0,1.0,11,7],
[2,0,984,146,24,62,-9.666666,-90.0,-0.034907,1.0,1.0,14,8],
[4,0,386,202,26,14,-34.148079,-16.613003,-0.388013,1.0,1.0,4,5],
[6,0,1002,2,18,60,24.562895,-52.008125,0.100592,1.0,1.0,8,9],
[5,0,626,100,22,68,14.500000,-83.500000,0.248753,1.0,1.0,8,11],
[7,0,358,202,26,14,33.308105,-10.174870,0.204300,1.0,1.0,4,5],
[28,0,240,180,270,20,2.115080,-172.578461,-0.010472,1.0,1.0,135,10],
[25,0,658,2,266,80,-8.264068,-283.440277,-0.003491,1.0,1.0,133,40],
[12,0,214,2,174,170,-26.077053,-291.626892,-0.024435,1.0,1.0,62,27],
[10,0,554,100,70,140,22.333496,-196.886185,0.150098,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-127.0,-0.010472,1.0,1.0,104,104],
[9,0,926,2,74,142,-34.896877,-194.285339,-0.139626,1.0,1.0,40,13],
[11,0,658,84,138,126,-8.220545,-201.434967,-0.010472,1.0,1.0,60,120],
[16,0,336,202,20,26,52.404472,-260.803375,-0.010472,1.0,1.0,10,13],
[20,0,278,202,34,28,-3.665760,-254.390167,-0.010472,1.0,1.0,17,14],
[15,0,414,202,22,6,17.767557,-200.162750,-0.010472,1.0,1.0,11,3],
[17,0,1014,92,4,6,56.404251,-260.761475,-0.010472,1.0,1.0,2,3],
[21,0,1012,84,6,6,2.333911,-254.327332,-0.010472,1.0,1.0,3,3],
[18,0,650,100,4,4,50.383636,-258.824432,-0.010472,1.0,1.0,2,2],
[22,0,1002,96,10,4,-6.686539,-252.421692,-0.010472,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.189354,-261.982483,-0.038397,1.0,1.0,58,34],
[14,0,390,100,162,78,3.721313,-291.314850,-0.010472,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.040899,-157.788712,-0.010472,1.0,1.0,118,15],
[30,0,512,180,40,54,100.057350,-166.552505,-0.038397,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.168091,-169.319962,-0.038397,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.132652,-168.474258,-0.038397,1.0,1.0,3,1],
[24,0,390,2,266,96,-8.215199,-297.440186,-0.003491,1.0,1.0,133,48],
[26,0,906,146,76,96,-62.256756,-285.628754,-0.065248,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,-8.451795,-55.659061,-0.357792,1.0,1.0,11,7],
[2,0,984,146,24,62,-5.888889,-91.333336,0.002909,1.0,1.0,14,8],
[4,0,386,202,26,14,-28.194073,-17.133194,-0.403904,1.0,1.0,4,5],
[6,0,1002,2,18,60,20.671120,-52.189312,0.075945,1.0,1.0,8,9],
[5,0,626,100,22,68,11.666666,-84.0,0.215315,1.0,1.0,8,11],
[7,0,358,202,26,14,28.203882,-10.306782,0.135682,1.0,1.0,4,5],
[28,0,240,180,270,20,2.089526,-172.450012,-0.008145,1.0,1.0,135,10],
[25,0,658,2,266,80,-8.594378,-284.248718,0.001164,1.0,1.0,133,40],
[12,0,214,2,174,170,-26.392281,-292.393372,-0.020944,1.0,1.0,62,27],
[10,0,554,100,70,140,22.371317,-197.688293,0.136136,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-127.666664,-0.008145,1.0,1.0,104,104],
[9,0,926,2,74,142,-34.920055,-194.888153,-0.122173,1.0,1.0,40,13],
[11,0,658,84,138,126,-8.392599,-202.243759,-0.008145,1.0,1.0,60,120],
[16,0,336,202,20,26,52.094101,-261.753082,-0.008145,1.0,1.0,10,13],
[20,0,278,202,34,28,-3.961059,-255.209427,-0.008145,1.0,1.0,17,14],
[15,0,414,202,22,6,17.598394,-201.032028,-0.008145,1.0,1.0,11,3],
[17,0,1014,92,4,6,56.093967,-261.720490,-0.008145,1.0,1.0,2,3],
[21,0,1012,84,6,6,2.038743,-255.160553,-0.008145,1.0,1.0,3,3],
[18,0,650,100,4,4,50.077877,-259.769440,-0.008145,1.0,1.0,2,2],
[22,0,1002,96,10,4,-6.977249,-253.233932,-0.008145,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.368835,-262.669098,-0.033743,1.0,1.0,58,34],
[14,0,390,100,162,78,3.340066,-292.151184,-0.008145,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.031982,-157.613403,-0.008145,1.0,1.0,118,15],
[30,0,512,180,40,54,100.045555,-166.651978,-0.033743,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.143349,-169.447845,-0.033743,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.111893,-168.583359,-0.033743,1.0,1.0,3,1],
[24,0,390,2,266,96,-8.610667,-298.248718,0.001164,1.0,1.0,133,48],
[26,0,906,146,76,96,-62.596668,-286.185883,-0.052539,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,-3.483208,-56.747688,-0.331613,1.0,1.0,11,7],
[2,0,984,146,24,62,-2.111110,-92.666664,0.040724,1.0,1.0,14,8],
[4,0,386,202,26,14,-22.210230,-17.718231,-0.419795,1.0,1.0,4,5],
[6,0,1002,2,18,60,16.769279,-52.406063,0.051298,1.0,1.0,8,9],
[5,0,626,100,22,68,8.833334,-84.500000,0.181878,1.0,1.0,8,11],
[7,0,358,202,26,14,23.092588,-10.508511,0.067064,1.0,1.0,4,5],
[28,0,240,180,270,20,2.063961,-172.321503,-0.005818,1.0,1.0,135,10],
[25,0,658,2,266,80,-8.925347,-285.056610,0.005818,1.0,1.0,133,40],
[12,0,214,2,174,170,-26.708069,-293.159241,-0.017453,1.0,1.0,62,27],
[10,0,554,100,70,140,22.408672,-198.490936,0.122173,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-128.333328,-0.005818,1.0,1.0,104,104],
[9,0,926,2,74,142,-34.943085,-195.491211,-0.104720,1.0,1.0,40,13],
[11,0,658,84,138,126,-8.565315,-203.052170,-0.005818,1.0,1.0,60,120],
[16,0,336,202,20,26,51.782734,-262.702087,-0.005818,1.0,1.0,10,13],
[20,0,278,202,34,28,-4.257043,-256.028015,-0.005818,1.0,1.0,17,14],
[15,0,414,202,22,6,17.428427,-201.900925,-0.005818,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.782665,-262.678802,-0.005818,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.742855,-255.993103,-0.005818,1.0,1.0,3,3],
[18,0,650,100,4,4,49.771133,-260.713745,-0.005818,1.0,1.0,2,2],
[22,0,1002,96,10,4,-7.268628,-254.045502,-0.005818,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.548698,-263.355621,-0.029089,1.0,1.0,58,34],
[14,0,390,100,162,78,2.958095,-292.986633,-0.005818,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.022966,-157.438110,-0.005818,1.0,1.0,118,15],
[30,0,512,180,40,54,100.033211,-166.751450,-0.029089,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.117928,-169.575668,-0.029089,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.090530,-168.692429,-0.029089,1.0,1.0,3,1],
[24,0,390,2,266,96,-9.006796,-299.056366,0.005818,1.0,1.0,133,48],
[26,0,906,146,76,96,-62.936066,-286.742401,-0.039829,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,1.500443,-57.875599,-0.305433,1.0,1.0,11,7],
[2,0,984,146,24,62,1.666667,-94.0,0.078540,1.0,1.0,14,8],
[4,0,386,202,26,14,-16.198492,-18.369301,-0.435687,1.0,1.0,4,5],
[6,0,1002,2,18,60,12.858564,-52.658695,0.026651,1.0,1.0,8,9],
[5,0,626,100,22,68,6.0,-85.0,0.148440,1.0,1.0,8,11],
[7,0,358,202,26,14,17.976360,-10.780201,-0.001553,1.0,1.0,4,5],
[28,0,240,180,270,20,2.038385,-172.192947,-0.003491,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.256981,-285.863831,0.010472,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.024422,-293.924561,-0.013963,1.0,1.0,62,27],
[10,0,554,100,70,140,22.445559,-199.294159,0.108210,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-129.0,-0.003491,1.0,1.0,104,104],
[9,0,926,2,74,142,-34.965961,-196.094543,-0.087266,1.0,1.0,40,13],
[11,0,658,84,138,126,-8.738694,-203.860168,-0.003491,1.0,1.0,60,120],
[16,0,336,202,20,26,51.470379,-263.650360,-0.003491,1.0,1.0,10,13],
[20,0,278,202,34,28,-4.553714,-256.845886,-0.003491,1.0,1.0,17,14],
[15,0,414,202,22,6,17.257656,-202.769424,-0.003491,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.470356,-263.636383,-0.003491,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.446249,-256.824951,-0.003491,1.0,1.0,3,3],
[18,0,650,100,4,4,49.463409,-261.657349,-0.003491,1.0,1.0,2,2],
[22,0,1002,96,10,4,-7.560678,-254.856369,-0.003491,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.728935,-264.042023,-0.024435,1.0,1.0,58,34],
[14,0,390,100,162,78,2.575397,-293.821228,-0.003491,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.013853,-157.262848,-0.003491,1.0,1.0,118,15],
[30,0,512,180,40,54,100.020332,-166.850891,-0.024435,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.091835,-169.703400,-0.024435,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.068604,-168.801422,-0.024435,1.0,1.0,3,1],
[24,0,390,2,266,96,-9.403585,-299.863068,0.010472,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.274963,-287.298248,-0.027120,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,6.644074,-59.228477,-0.373326,1.0,1.0,11,7],
[2,0,984,146,24,62,5.444445,-95.333336,0.116355,1.0,1.0,14,8],
[4,0,386,202,26,14,-13.694238,-21.013912,-0.474491,1.0,1.0,4,5],
[6,0,1002,2,18,60,7.298999,-52.220150,-0.051918,1.0,1.0,8,9],
[5,0,626,100,22,68,3.0,-85.0,0.069871,1.0,1.0,8,11],
[7,0,358,202,26,14,9.114043,-10.069164,0.018349,1.0,1.0,4,5],
[28,0,240,180,270,20,2.012798,-172.064331,-0.001164,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.589272,-285.559357,0.015126,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.341333,-293.578186,-0.010472,1.0,1.0,62,27],
[10,0,554,100,70,140,22.481970,-198.986801,0.094248,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-128.555557,-0.001164,1.0,1.0,104,104],
[9,0,926,2,74,142,-34.988693,-195.587006,-0.069813,1.0,1.0,40,13],
[11,0,658,84,138,126,-8.912733,-203.556671,-0.001164,1.0,1.0,60,120],
[16,0,336,202,20,26,51.157036,-263.486816,-0.001164,1.0,1.0,10,13],
[20,0,278,202,34,28,-4.851068,-256.551971,-0.001164,1.0,1.0,17,14],
[15,0,414,202,22,6,17.086086,-202.526413,-0.001164,1.0,1.0,11,3],
[17,0,1014,92,4,6,55.157032,-263.482147,-0.001164,1.0,1.0,2,3],
[21,0,1012,84,6,6,1.148928,-256.544983,-0.001164,1.0,1.0,3,3],
[18,0,650,100,4,4,49.154709,-261.489136,-0.001164,1.0,1.0,2,2],
[22,0,1002,96,10,4,-7.853393,-254.555466,-0.001164,1.0,1.0,5,2],
[13,0,798,84,106,150,-60.909554,-263.617218,-0.019780,1.0,1.0,58,34],
[14,0,390,100,162,78,2.191979,-293.543823,-0.001164,1.0,1.0,81,39],
[29,0,2,180,236,30,-18.004642,-157.087616,-0.001164,1.0,1.0,118,15],
[30,0,512,180,40,54,100.006912,-166.950302,-0.019780,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.065079,-169.831039,-0.019780,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.046082,-168.910355,-0.019780,1.0,1.0,3,1],
[24,0,390,2,266,96,-9.801031,-299.557770,0.015126,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.613350,-286.742371,-0.014410,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,11.785992,-60.632969,-0.441219,1.0,1.0,11,7],
[2,0,984,146,24,62,9.222222,-96.666664,0.154171,1.0,1.0,14,8],
[4,0,386,202,26,14,-11.097982,-23.886219,-0.513295,1.0,1.0,4,5],
[6,0,1002,2,18,60,1.712908,-51.983852,-0.130487,1.0,1.0,8,9],
[5,0,626,100,22,68,-0.000000,-85.0,-0.008698,1.0,1.0,8,11],
[7,0,358,202,26,14,0.214003,-9.820442,0.038252,1.0,1.0,4,5],
[28,0,240,180,270,20,1.987200,-171.935654,0.001164,1.0,1.0,135,10],
[25,0,658,2,266,80,-9.921912,-284.986420,0.019780,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.658495,-292.963348,-0.006981,1.0,1.0,62,27],
[10,0,554,100,70,140,22.517910,-198.680008,0.080285,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-128.111115,0.001164,1.0,1.0,104,104],
[9,0,926,2,74,142,-35.011272,-195.079727,-0.052360,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.087120,-202.984894,0.001164,1.0,1.0,60,120],
[16,0,336,202,20,26,50.843025,-263.054657,0.001164,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.148791,-255.989517,0.001164,1.0,1.0,17,14],
[15,0,414,202,22,6,16.914026,-202.015152,0.001164,1.0,1.0,11,3],
[17,0,1014,92,4,6,54.843021,-263.059326,0.001164,1.0,1.0,2,3],
[21,0,1012,84,6,6,0.851204,-255.996506,0.001164,1.0,1.0,3,3],
[18,0,650,100,4,4,48.845352,-261.052338,0.001164,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.146462,-253.986023,0.001164,1.0,1.0,5,2],
[13,0,798,84,106,150,-61.090233,-262.924438,-0.015126,1.0,1.0,58,34],
[14,0,390,100,162,78,1.808153,-292.997620,0.001164,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.995333,-156.912399,0.001164,1.0,1.0,118,15],
[30,0,512,180,40,54,99.992950,-167.049683,-0.015126,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.037643,-169.958588,-0.015126,1.0,1.0,4,5],
[32,0,1014,100,6,2,102.022972,-169.019196,-0.015126,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.198820,-298.983673,0.019780,1.0,1.0,133,48],
[26,0,906,146,76,96,-63.950905,-285.917938,-0.001701,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,16.924242,-62.088993,-0.509113,1.0,1.0,11,7],
[2,0,984,146,24,62,13.0,-98.0,0.191986,1.0,1.0,14,8],
[4,0,386,202,26,14,-8.399954,-26.979378,-0.552100,1.0,1.0,4,5],
[6,0,1002,2,18,60,-3.883750,-51.951263,-0.209056,1.0,1.0,8,9],
[5,0,626,100,22,68,-3.0,-85.0,-0.087266,1.0,1.0,8,11],
[7,0,358,202,26,14,-8.687357,-10.035568,0.058154,1.0,1.0,4,5],
[28,0,240,180,270,20,1.961591,-171.806915,0.003491,1.0,1.0,135,10],
[25,0,658,2,266,80,-10.253966,-284.412811,0.024435,1.0,1.0,133,40],
[12,0,214,2,174,170,-27.974968,-292.347961,-0.003491,1.0,1.0,62,27],
[10,0,554,100,70,140,22.553371,-198.373749,0.066323,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-127.666664,0.003491,1.0,1.0,104,104],
[9,0,926,2,74,142,-35.033710,-194.572708,-0.034907,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.260921,-202.412720,0.003491,1.0,1.0,60,120],
[16,0,336,202,20,26,50.529274,-262.621796,0.003491,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.445950,-255.426361,0.003491,1.0,1.0,17,14],
[15,0,414,202,22,6,16.742413,-201.503479,0.003491,1.0,1.0,11,3],
[17,0,1014,92,4,6,54.529251,-262.635773,0.003491,1.0,1.0,2,3],
[21,0,1012,84,6,6,0.554014,-255.447311,0.003491,1.0,1.0,3,3],
[18,0,650,100,4,4,48.536266,-260.614838,0.003491,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.438950,-253.415909,0.003491,1.0,1.0,5,2],
[13,0,798,84,106,150,-61.270042,-262.231537,-0.010472,1.0,1.0,58,34],
[14,0,390,100,162,78,1.424853,-292.450562,0.003491,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.985928,-156.737198,0.003491,1.0,1.0,118,15],
[30,0,512,180,40,54,99.978447,-167.149033,-0.010472,1.0,1.0,20,27],
[31,0,1002,84,8,10,106.009537,-170.086044,-0.010472,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.999283,-169.127975,-0.010472,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.596017,-298.408630,0.024435,1.0,1.0,133,48],
[26,0,906,146,76,96,-64.286713,-285.092865,0.011009,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,20.766582,-60.124916,-0.362927,1.0,1.0,11,7],
[2,0,984,146,24,62,15.333333,-95.166664,0.238528,1.0,1.0,14,8],
[4,0,386,202,26,14,0.826769,-21.700916,-0.391957,1.0,1.0,4,5],
[6,0,1002,2,18,60,-9.249340,-52.361320,-0.257334,1.0,1.0,8,9],
[5,0,626,100,22,68,-6.833333,-85.166664,-0.134353,1.0,1.0,8,11],
[7,0,358,202,26,14,-15.951440,-10.522694,0.010428,1.0,1.0,4,5],
[28,0,240,180,270,20,1.935971,-171.678116,0.005818,1.0,1.0,135,10],
[25,0,658,2,266,80,-10.585430,-283.838623,0.029089,1.0,1.0,133,40],
[12,0,214,2,174,170,-28.290751,-291.731964,0.000000,1.0,1.0,62,27],
[10,0,554,100,70,140,22.588356,-198.068039,0.052360,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-127.222221,0.005818,1.0,1.0,104,104],
[9,0,926,2,74,142,-35.056004,-194.065948,-0.017453,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.434132,-201.840149,0.005818,1.0,1.0,60,120],
[16,0,336,202,20,26,50.215790,-262.188202,0.005818,1.0,1.0,10,13],
[20,0,278,202,34,28,-5.742539,-254.862518,0.005818,1.0,1.0,17,14],
[15,0,414,202,22,6,16.571245,-200.991425,0.005818,1.0,1.0,11,3],
[17,0,1014,92,4,6,54.215721,-262.211487,0.005818,1.0,1.0,2,3],
[21,0,1012,84,6,6,0.257359,-254.897430,0.005818,1.0,1.0,3,3],
[18,0,650,100,4,4,48.227459,-260.176605,0.005818,1.0,1.0,2,2],
[22,0,1002,96,10,4,-8.730853,-252.845093,0.005818,1.0,1.0,5,2],
[13,0,798,84,106,150,-61.448990,-261.538544,-0.005818,1.0,1.0,58,34],
[14,0,390,100,162,78,1.042087,-291.902618,0.005818,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.976425,-156.562027,0.005818,1.0,1.0,118,15],
[30,0,512,180,40,54,99.963402,-167.248337,-0.005818,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.980751,-170.213379,-0.005818,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.975006,-169.236664,-0.005818,1.0,1.0,3,1],
[24,0,390,2,266,96,-10.992617,-297.832703,0.029089,1.0,1.0,133,48],
[26,0,906,146,76,96,-64.620758,-284.267212,0.023719,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,24.536877,-58.222076,-0.216741,1.0,1.0,11,7],
[2,0,984,146,24,62,17.666666,-92.333336,0.285070,1.0,1.0,14,8],
[4,0,386,202,26,14,10.406804,-17.303364,-0.231815,1.0,1.0,4,5],
[6,0,1002,2,18,60,-14.594027,-52.841999,-0.305613,1.0,1.0,8,9],
[5,0,626,100,22,68,-10.666667,-85.333336,-0.181439,1.0,1.0,8,11],
[7,0,358,202,26,14,-23.198648,-11.166477,-0.037298,1.0,1.0,4,5],
[28,0,240,180,270,20,1.910341,-171.549271,0.008145,1.0,1.0,135,10],
[25,0,658,2,266,80,-10.916306,-283.263794,0.033743,1.0,1.0,133,40],
[12,0,214,2,174,170,-28.605843,-291.115417,0.003491,1.0,1.0,62,27],
[10,0,554,100,70,140,22.622858,-197.762878,0.038397,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-126.777779,0.008145,1.0,1.0,104,104],
[9,0,926,2,74,142,-35.078156,-193.559448,0.000000,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.606753,-201.267166,0.008145,1.0,1.0,60,120],
[16,0,336,202,20,26,49.902569,-261.753876,0.008145,1.0,1.0,10,13],
[20,0,278,202,34,28,-6.038559,-254.297989,0.008145,1.0,1.0,17,14],
[15,0,414,202,22,6,16.400528,-200.478958,0.008145,1.0,1.0,11,3],
[17,0,1014,92,4,6,53.902435,-261.786469,0.008145,1.0,1.0,2,3],
[21,0,1012,84,6,6,-0.038758,-254.346863,0.008145,1.0,1.0,3,3],
[18,0,650,100,4,4,47.918926,-259.737640,0.008145,1.0,1.0,2,2],
[22,0,1002,96,10,4,-9.022170,-252.273621,0.008145,1.0,1.0,5,2],
[13,0,798,84,106,150,-61.627064,-260.845459,-0.001164,1.0,1.0,58,34],
[14,0,390,100,162,78,0.659852,-291.353760,0.008145,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.966824,-156.386871,0.008145,1.0,1.0,118,15],
[30,0,512,180,40,54,99.947815,-167.347626,-0.001164,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.951302,-170.340637,-0.001164,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.950142,-169.345291,-0.001164,1.0,1.0,3,1],
[24,0,390,2,266,96,-11.388619,-297.255829,0.033743,1.0,1.0,133,48],
[26,0,906,146,76,96,-64.953041,-283.440887,0.036428,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,28.232761,-56.375664,-0.070555,1.0,1.0,11,7],
[2,0,984,146,24,62,20.0,-89.500000,0.331613,1.0,1.0,14,8],
[4,0,386,202,26,14,20.213856,-13.835129,-0.071672,1.0,1.0,4,5],
[6,0,1002,2,18,60,-19.914574,-53.391865,-0.353892,1.0,1.0,8,9],
[5,0,626,100,22,68,-14.500000,-85.500000,-0.228525,1.0,1.0,8,11],
[7,0,358,202,26,14,-30.421850,-11.966061,-0.085024,1.0,1.0,4,5],
[28,0,240,180,270,20,1.884701,-171.420334,0.010472,1.0,1.0,135,10],
[25,0,658,2,266,80,-11.246592,-282.688354,0.038397,1.0,1.0,133,40],
[12,0,214,2,174,170,-28.920248,-290.498260,0.006981,1.0,1.0,62,27],
[10,0,554,100,70,140,22.656876,-197.458267,0.024435,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-126.333336,0.010472,1.0,1.0,104,104],
[9,0,926,2,74,142,-35.100163,-193.053207,0.017453,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.778784,-200.693787,0.010472,1.0,1.0,60,120],
[16,0,336,202,20,26,49.589622,-261.318817,0.010472,1.0,1.0,10,13],
[20,0,278,202,34,28,-6.334008,-253.732773,0.010472,1.0,1.0,17,14],
[15,0,414,202,22,6,16.230263,-199.966110,0.010472,1.0,1.0,11,3],
[17,0,1014,92,4,6,53.589401,-261.360718,0.010472,1.0,1.0,2,3],
[21,0,1012,84,6,6,-0.334337,-253.795609,0.010472,1.0,1.0,3,3],
[18,0,650,100,4,4,47.610676,-259.297974,0.010472,1.0,1.0,2,2],
[22,0,1002,96,10,4,-9.312900,-251.701462,0.010472,1.0,1.0,5,2],
[13,0,798,84,106,150,-61.804276,-260.152252,0.003491,1.0,1.0,58,34],
[14,0,390,100,162,78,0.278152,-290.804047,0.010472,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.957127,-156.211716,0.010472,1.0,1.0,118,15],
[30,0,512,180,40,54,99.931686,-167.446838,0.003491,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.921181,-170.467758,0.003491,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.924690,-169.453812,0.003491,1.0,1.0,3,1],
[24,0,390,2,266,96,-11.784020,-296.678040,0.038397,1.0,1.0,133,48],
[26,0,906,146,76,96,-65.283562,-282.613953,0.049138,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,31.852163,-54.580795,0.075631,1.0,1.0,11,7],
[2,0,984,146,24,62,22.333334,-86.666664,0.378155,1.0,1.0,14,8],
[4,0,386,202,26,14,30.115488,-11.325924,0.088471,1.0,1.0,4,5],
[6,0,1002,2,18,60,-25.207838,-54.009350,-0.402170,1.0,1.0,8,9],
[5,0,626,100,22,68,-18.333334,-85.666664,-0.275611,1.0,1.0,8,11],
[7,0,358,202,26,14,-37.613945,-12.920292,-0.132750,1.0,1.0,4,5],
[28,0,240,180,270,20,1.859050,-171.291351,0.012799,1.0,1.0,135,10],
[25,0,658,2,266,80,-11.576286,-282.112305,0.043051,1.0,1.0,133,40],
[12,0,214,2,174,170,-29.233957,-289.880554,0.010472,1.0,1.0,62,27],
[10,0,554,100,70,140,22.690409,-197.154190,0.010472,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-125.888885,0.012799,1.0,1.0,104,104],
[9,0,926,2,74,142,-35.122032,-192.547211,0.034907,1.0,1.0,40,13],
[11,0,658,84,138,126,-9.950224,-200.119995,0.012799,1.0,1.0,60,120],
[16,0,336,202,20,26,49.276939,-260.882996,0.012799,1.0,1.0,10,13],
[20,0,278,202,34,28,-6.628884,-253.166840,0.012799,1.0,1.0,17,14],
[15,0,414,202,22,6,16.060446,-199.452850,0.012799,1.0,1.0,11,3],
[17,0,1014,92,4,6,53.276611,-260.934204,0.012799,1.0,1.0,2,3],
[21,0,1012,84,6,6,-0.629376,-253.243637,0.012799,1.0,1.0,3,3],
[18,0,650,100,4,4,47.302700,-258.857574,0.012799,1.0,1.0,2,2],
[22,0,1002,96,10,4,-9.603041,-251.128601,0.012799,1.0,1.0,5,2],
[13,0,798,84,106,150,-61.980614,-259.458923,0.008145,1.0,1.0,58,34],
[14,0,390,100,162,78,-0.103011,-290.253418,0.012799,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.947330,-156.036606,0.012799,1.0,1.0,118,15],
[30,0,512,180,40,54,99.915016,-167.546051,0.008145,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.890381,-170.594818,0.008145,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.898659,-169.562271,0.008145,1.0,1.0,3,1],
[24,0,390,2,266,96,-12.178821,-296.099335,0.043051,1.0,1.0,133,48],
[26,0,906,146,76,96,-65.612328,-281.786407,0.061847,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,35.393295,-52.832520,0.221817,1.0,1.0,11,7],
[2,0,984,146,24,62,24.666666,-83.833336,0.424697,1.0,1.0,14,8],
[4,0,386,202,26,14,39.975895,-9.786037,0.248613,1.0,1.0,4,5],
[6,0,1002,2,18,60,-30.470764,-54.692741,-0.450449,1.0,1.0,8,9],
[5,0,626,100,22,68,-22.166666,-85.833336,-0.322697,1.0,1.0,8,11],
[7,0,358,202,26,14,-44.767891,-14.027676,-0.180476,1.0,1.0,4,5],
[28,0,240,180,270,20,1.833390,-171.162323,0.015126,1.0,1.0,135,10],
[25,0,658,2,266,80,-11.905389,-281.535645,0.047706,1.0,1.0,133,40],
[12,0,214,2,174,170,-29.546976,-289.262268,0.013963,1.0,1.0,62,27],
[10,0,554,100,70,140,22.723452,-196.850647,-0.003491,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-125.444443,0.015126,1.0,1.0,104,104],
[9,0,926,2,74,142,-35.143761,-192.041504,0.052360,1.0,1.0,40,13],
[11,0,658,84,138,126,-10.121071,-199.545837,0.015126,1.0,1.0,60,120],
[16,0,336,202,20,26,48.964527,-260.446503,0.015126,1.0,1.0,10,13],
[20,0,278,202,34,28,-6.923186,-252.600281,0.015126,1.0,1.0,17,14],
[15,0,414,202,22,6,15.891081,-198.939224,0.015126,1.0,1.0,11,3],
[17,0,1014,92,4,6,52.964069,-260.507019,0.015126,1.0,1.0,2,3],
[21,0,1012,84,6,6,-0.923872,-252.691040,0.015126,1.0,1.0,3,3],
[18,0,650,100,4,4,46.995007,-258.416473,0.015126,1.0,1.0,2,2],
[22,0,1002,96,10,4,-9.892591,-250.555130,0.015126,1.0,1.0,5,2],
[13,0,798,84,106,150,-62.156094,-258.765564,0.012799,1.0,1.0,58,34],
[14,0,390,100,162,78,-0.483634,-289.701904,0.015126,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.937439,-155.861526,0.015126,1.0,1.0,118,15],
[30,0,512,180,40,54,99.897804,-167.645203,0.012799,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.858917,-170.721756,0.012799,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.872040,-169.670639,0.012799,1.0,1.0,3,1],
[24,0,390,2,266,96,-12.573015,-295.519714,0.047706,1.0,1.0,133,48],
[26,0,906,146,76,96,-65.939331,-280.958252,0.074557,1.0,1.0,48,90]
],
[
[3,0,626,170,20,56,38.854675,-51.125820,0.368003,1.0,1.0,11,7],
[2,0,984,146,24,62,27.0,-81.0,0.471239,1.0,1.0,14,8],
[4,0,386,202,26,14,49.658798,-9.206005,0.408756,1.0,1.0,4,5],
[6,0,1002,2,18,60,-35.700405,-55.440186,-0.498728,1.0,1.0,8,9],
[5,0,626,100,22,68,-26.0,-86.0,-0.369783,1.0,1.0,8,11],
[7,0,358,202,26,14,-51.876724,-15.286396,-0.228202,1.0,1.0,4,5],
[28,0,240,180,270,20,1.807719,-171.033234,0.017453,1.0,1.0,135,10],
[25,0,658,2,266,80,-12.233901,-280.958405,0.052360,1.0,1.0,133,40],
[12,0,214,2,174,170,-29.859303,-288.643433,0.017453,1.0,1.0,62,27],
[10,0,554,100,70,140,22.756006,-196.547668,-0.017453,1.0,1.0,20,13],
[8,0,2,2,210,176,-8.0,-125.0,0.017453,1.0,1.0,104,104],
[9,0,926,2,74,142,-35.165352,-191.536041,0.069813,1.0,1.0,40,13],
[11,0,658,84,138,126,-10.291326,-198.971283,0.017453,1.0,1.0,60,120],
[16,0,336,202,20,26,48.652393,-260.009277,0.017453,1.0,1.0,10,13],
[20,0,278,202,34,28,-7.216912,-252.033020,0.017453,1.0,1.0,17,14],
[15,0,414,202,22,6,15.722167,-198.425201,0.017453,1.0,1.0,11,3],
[17,0,1014,92,4,6,52.651783,-260.079102,0.017453,1.0,1.0,2,3],
[21,0,1012,84,6,6,-1.217826,-252.137741,0.017453,1.0,1.0,3,3],
[18,0,650,100,4,4,46.687603,-257.974670,0.017453,1.0,1.0,2,2],
[22,0,1002,96,10,4,-10.181551,-249.980972,0.017453,1.0,1.0,5,2],
[13,0,798,84,106,150,-62.330700,-258.072083,0.017453,1.0,1.0,58,34],
[14,0,390,100,162,78,-0.863717,-289.149536,0.017453,1.0,1.0,81,39],
[29,0,2,180,236,30,-17.927448,-155.686462,0.017453,1.0,1.0,118,15],
[30,0,512,180,40,54,99.880058,-167.744324,0.017453,1.0,1.0,20,27],
[31,0,1002,84,8,10,105.826790,-170.848587,0.017453,1.0,1.0,4,5],
[32,0,1014,100,6,2,101.844849,-169.778931,0.017453,1.0,1.0,3,1],
[24,0,390,2,266,96,-12.966604,-294.939209,0.052360,1.0,1.0,133,48],
[26,0,906,146,76,96,-66.264565,-280.129517,0.087266,1.0,1.0,48,90]
]
]
}
}
]

},{}],92:[function(require,module,exports){
// 病院の廊下1(コンクリ、廃れてる感じ) 車椅子とかあったほうがいいかも
var CONSTANT = require("../../../constant");
var I = 0;
module.exports = {
	key: "chapter0_hospital_corridor1",
	chapter: 0,
	name: "病院の廊下1",
	bgm: "field1",
	right_start_position: {x: 690, y: 540},
	left_start_position:  {x: 180, y: 540},
	right_field: "chapter0_hospital_corridor2",
	left_field: "chapter0_myroom",
	background: "chapter0-hospital_corridor1-bg-001",
	walk_sound: "walking_bare_default",
	objects: [
		{
			no: ++I,
			image: "chapter0-hospital_corridor1-obj-01-01",
			type: CONSTANT.STATIC_IMAGE_TYPE,
			name: "ストレッチャー",
			serif: [
				{"chara": "koishi","serif": "へんなベッド"},
			],
			x: 814,
			y: 608,
			scale: 0.7,
			action: "touch",
			sound: "chapter0-hospital_corridor1-sound_strecher",
			position_type: "front",
			target_x: 650,
			target_y: 616,
		},
		{
			no: ++I,
			image: "chapter0-hospital_corridor1-obj-02-01",
			type: CONSTANT.STATIC_IMAGE_TYPE,
			name: "キャビネット",
			serif: [
				{"chara": "koishi","serif":"くすりはいらない……"},
			],
			x: 279,
			y: 378,
			scale: 0.7
		},
		{
			no: ++I,
			image: "chapter0-hospital_corridor1-obj-03-01",
			type: CONSTANT.STATIC_IMAGE_TYPE,
			name: "救急箱",
			serif: [
				{"chara": "koishi","serif": "くーくーばこ！"},
				{"chara": "koishi","serif": "けがしてないよ！"},
			],
			x: 281,
			y: 280,
			scale: 0.7,
			sound: "chapter0-hospital_corridor1-sound_aidkit",
			target_x: 278,
			target_y: 465
		},
		{
			no: ++I,
			image: "chapter0-hospital_corridor1-obj-04-01",
			type: CONSTANT.STATIC_IMAGE_TYPE,
			name: "メス",
			serif: [
				{"chara": "koishi","serif":"ナイフ"},
			],
			x: 853,
			y: 534,
			scale: 0.7,
			action: "look_front",
			position_type: "front",
		},
		{
			no: ++I,
			image: "paper", type: CONSTANT.JOURNAL_TYPE, x: 643, y:425, scale: 2/3, picture: "journal002"},
	],
};



},{"../../../constant":5}],93:[function(require,module,exports){
// 病院の廊下2(こころ)
var CONSTANT = require("../../../constant");
var I = 0;
module.exports = {
	key: "chapter0_hospital_corridor2",
	chapter: 0,
	name: "病院の廊下2",
	bgm: "field1",
	right_start_position: {x: 690, y: 540},
	left_start_position:  {x: 180, y: 540},
	right_field: "chapter0_mansion_corridor1",
	left_field: "chapter0_hospital_corridor1",
	background: "chapter0-hospital2-bg-001",
	walk_sound: "walking_bare_default",
	objects: [
		{
			no: ++I,
			image: "chapter0-hospital2-obj-02-01",
			type: CONSTANT.STATIC_IMAGE_TYPE,
			name: "くつした",
			serif: [
				{"chara": "koishi","serif":"やだやだ。"},
			],
			x: 302,
			y: 443,
			scale: 0.7,
			action: "look_bottom",
			position_type: "lying",
		},
		{
			no: ++I,
			type: CONSTANT.ANIME_IMAGE_TYPE,
			name: "車イス",
			serif: [
				{"chara": "koishi","serif":"あしおれたらのってもいい？"},
			],
			x: 130,
			y: 360,
			scale: 0.7,
			anime1: "chapter0-hospital_corridor2-obj-01-01-obj01",
			anime2: "chapter0-hospital_corridor2-obj-01-01-obj02",
			anime3:"chapter0-hospital_corridor2-obj-01-01-obj03",
			action: "touch",
			sound: "chapter0-hospital_corridor2-move_wheelchair",
			width: 258,
			height: 280
		},
		{
			no: ++I,
			image: "paper", type: CONSTANT.JOURNAL_TYPE, x: 627, y: 689, scale: 2/3, picture: "journal003"},
	],

};


},{"../../../constant":5}],94:[function(require,module,exports){
// 屋敷の廊下1
var CONSTANT = require("../../../constant");
var I = 0;
module.exports = {
	key: "chapter0_mansion_corridor1",
	chapter: 0,
	name: "屋敷の廊下1",
	bgm: "field2",
	sub_bgms: ["chapter0-mansion_corridor1-wind"],
	right_start_position: {x: 690, y: 540},
	left_start_position:  {x: 180, y: 540},
	right_field: "chapter0_mansion_corridor2",
	left_field: "chapter0_hospital_corridor2",
	background: "chapter0-mansionpas-001",
	walk_sound: "walking_bare_wood",
	objects: [
		{
			no: ++I,
			type: CONSTANT.ANIME_IMAGE_TYPE,
			name: "ランプ",
			serif: [
				{"chara": "koishi","serif":"まぶしい"},
			],
			x: 805,
			y: 65,
			scale: 0.7,
			anime1: "chapter0-mansion_corridor1-obj-01-01-obj01",
			anime2: "chapter0-mansion_corridor1-obj-01-01-obj02",
			anime3: "chapter0-mansion_corridor1-obj-01-01-obj03",
			anime4: "chapter0-mansion_corridor1-obj-01-01-obj04",
			anime5: "chapter0-mansion_corridor1-obj-01-01-obj05",
			anime6: "chapter0-mansion_corridor1-obj-01-01-obj06",
			action: "look_top",
			sound:      "chapter0-mansion_corridor1-lamp_front",
			sound_back: "chapter0-mansion_corridor1-lamp_back"
		},
		{
			no: ++I,
			type: CONSTANT.ANIME_IMAGE_TYPE,
			name: "三輪車",
			serif: [
				{"chara": "koishi","serif":"あとでのろっと"},
			],
			x: 815,
			y: 515,
			width: 250,
			height: 250,
			scale: 0.7,
			anime1: "chapter0-mansion_corridor1-obj-02-01-obj01",
			anime2: "chapter0-mansion_corridor1-obj-02-01-obj02",
			anime3: "chapter0-mansion_corridor1-obj-02-01-obj03",
			anime4: "chapter0-mansion_corridor1-obj-02-01-obj04",
			anime5: "chapter0-mansion_corridor1-obj-02-01-obj05",
			anime6: "chapter0-mansion_corridor1-obj-02-01-obj06",
			action: "touch",
			sound: "chapter0-mansion_corridor1-move_tricycle",
			bgm_back: "chapter0-mansion_corridor1-tricycle",
			position_type: "front",
		},
		{
			no: ++I,
			type: CONSTANT.ANIME_IMAGE_TYPE,
			name: "カーテン",
			serif: [
				{"chara": "koishi","serif":"いまはかくれんぼしてないから\nあとでね！"},
			],
			x: 190,
			y: 135,
			width: 300,
			height: 250,
			scale: 0.7,
			anime1: "chapter0-mansion_corridor1-obj-03-01-obj01",
			anime2: "chapter0-mansion_corridor1-obj-03-01-obj02",
			anime3: "chapter0-mansion_corridor1-obj-03-01-obj03",
			anime4: "chapter0-mansion_corridor1-obj-03-01-obj04",
			anime5: "chapter0-mansion_corridor1-obj-03-01-obj05",
			anime6: "chapter0-mansion_corridor1-obj-03-01-obj06",
			action: "look_top",
			sound_back: "chapter0-mansion_corridor1-open_curtain"
		},


		{
			no: ++I,
			image: "paper", type: CONSTANT.JOURNAL_TYPE, x: 600, y: 530, scale: 2/3, picture: "journal004"},
	],

};

},{"../../../constant":5}],95:[function(require,module,exports){
// 屋敷の廊下2(ドアがある) 最初のフラッシュバックが入る
var CONSTANT = require("../../../constant");
var I = 0;
module.exports = {
	key: "chapter0_mansion_corridor2",
	chapter: 0,
	name: "屋敷の廊下2",
	bgm: "field2",
	right_start_position: {x: 690, y: 540},
	left_start_position:  {x: 180, y: 540},
	right_field: "chapter0_mansion_corridor3",
	left_field: "chapter0_mansion_corridor1",
	background: "chapter0-mansionpas-002",
	walk_sound: "walking_bare_wood",
	objects: [
		{
			no: ++I,
			type: CONSTANT.ANIME_IMAGE_TYPE,
			name: "ほこりの積もった観葉植物",
			serif: [
				{"chara": "koishi","serif":"このはっぱ、えがかけるよ"},
			],
			x: 840,
			y: 305,
			width: 150,
			height: 300,
			scale: 0.7,
			anime1: "chapter0-mansion_corridor2-obj-04-01-obj01",
			anime2: "chapter0-mansion_corridor2-obj-04-01-obj02",
			anime3: "chapter0-mansion_corridor2-obj-04-01-obj03",
			anime4: "chapter0-mansion_corridor2-obj-04-01-obj04",
			anime5: "chapter0-mansion_corridor2-obj-04-01-obj05",
			anime6: "chapter0-mansion_corridor2-obj-04-01-obj06",
			action: "touch",
			sound:      "chapter0-mansion_corridor2-flower_front",
			sound_back: "chapter0-mansion_corridor2-flower_back"

		},
		{
			no: ++I,
			type: CONSTANT.ANIME_IMAGE_TYPE,
			name: "壁かけの斧",
			serif: [
				{"chara": "koishi","serif":"だれかとって！"},
			],
			x: 310,
			y: 102,
			width: 250,
			height: 100,
			scale: 0.7,
			anime1: "chapter0-mansion_corridor2-obj-05-01-obj01",
			anime2: "chapter0-mansion_corridor2-obj-05-01-obj02",
			anime3: "chapter0-mansion_corridor2-obj-05-01-obj03",
			anime4: "chapter0-mansion_corridor2-obj-05-01-obj04",
			anime5: "chapter0-mansion_corridor2-obj-05-01-obj05",
			anime6: "chapter0-mansion_corridor2-obj-05-01-obj06",
			action: "look_top"
		},
		{
			no: ++I,
			type: CONSTANT.ANIME_IMAGE_TYPE,
			name: "ドア",
			serif: [
				{"chara": "koishi","serif":"だれかじゅんびちゅう？"},
			],
			x: 610,
			y: 245,
			width: 210,
			height: 400,
			scale: 0.7,
			anime1: "chapter0-mansion_corridor2-obj-06-01-obj01",
			anime2: "chapter0-mansion_corridor2-obj-06-01-obj02",
			anime3: "chapter0-mansion_corridor2-obj-06-01-obj03",
			action: null,
			sound:      "chapter0-mansion_corridor2-open_door",
		},

		{
			no: ++I,
			image: "paper", type: CONSTANT.JOURNAL_TYPE, x: 177, y: 400, scale: 2/3, picture: "journal005"},
	],


};


},{"../../../constant":5}],96:[function(require,module,exports){
// 屋敷の廊下3(家具) 行き止まり (サードアイを使用すると、家具が豹変／床に扉が出現)
var CONSTANT = require("../../../constant");
var I = 0;
module.exports = {
	key: "chapter0_mansion_corridor3",
	chapter: 0,
	name: "屋敷の廊下3",
	bgm: "field2",
	sub_bgms: ["chapter0-mansion_corridor3-clock"],
	right_start_position: {x: 690, y: 540},
	left_start_position:  {x: 180, y: 540},
	right_field: null,
	left_field: "chapter0_mansion_corridor2",
	background: "chapter0-mansionpas-003",
	walk_sound: "walking_bare_wood",
	objects: [
		{
			no: ++I,
			type: CONSTANT.ANIME_IMAGE_TYPE,
			name: "花瓶",
			serif: [
				{"chara": "koishi","serif":"かびん！"},
			],
			x: 650,
			y: 285,
			width: 200,
			height: 330,
			target_x: 526, target_y: 417,
			scale: 2/3,
			anime1: "chapter0-mansion_corridor3-obj-08-01-obj01",
			anime2: "chapter0-mansion_corridor3-obj-08-01-obj02",
			anime3: "chapter0-mansion_corridor3-obj-08-01-obj03",
			anime4: "chapter0-mansion_corridor3-obj-08-01-obj04",
			anime5: "chapter0-mansion_corridor3-obj-08-01-obj05",
			anime6: "chapter0-mansion_corridor3-obj-08-01-obj06",
			action: "touch",
			sound: "touch",
		},
		{
			no: ++I,
			type: CONSTANT.ANIME_IMAGE_TYPE,
			name: "みずさし",
			serif: [
				{"chara": "koishi","serif":"これはかびん……"},
				{"chara": "koishi","serif": "おおきいから"},
			],

			x: 715,
			y: 270,
			target_x: 526, target_y: 417,
			scale: 2/3,
			anime1: "chapter0-mansion_corridor3-obj-07-01-obj01",
			anime2: "chapter0-mansion_corridor3-obj-07-01-obj02",
			anime3: "chapter0-mansion_corridor3-obj-07-01-obj03",
			anime4: "chapter0-mansion_corridor3-obj-07-01-obj04",
			anime5: "chapter0-mansion_corridor3-obj-07-01-obj05",
			anime6: "chapter0-mansion_corridor3-obj-07-01-obj06",
			action: "touch",
			sound_back: "chapter0-mansion_corridor3-sound_vase_back",
		},
		{
			no: ++I,
			type: CONSTANT.ANIME_IMAGE_TYPE,
			name: "窓",
			serif: [
				{"chara": "koishi","serif":"さっきのこいないなー"},
			],
			x: 900,
			y: 190,
			width: 150,
			height: 800,
			scale: 2/3,
			anime1: "chapter0-mansion_corridor3-obj-09-01-obj01",
			anime2: "chapter0-mansion_corridor3-obj-09-01-obj02",
			anime3: "chapter0-mansion_corridor3-obj-09-01-obj03",
			anime4: "chapter0-mansion_corridor3-obj-09-01-obj04",
			anime5: "chapter0-mansion_corridor3-obj-09-01-obj05",
			anime6: "chapter0-mansion_corridor3-obj-09-01-obj06",
			action: "look_front",
			sound_back: "chapter0-mansion_corridor3-smile_kokoro_back",
		},
		{
			no: ++I,
			type: CONSTANT.ANIME_IMAGE_TYPE,
			name: "振子時計",
			serif: [
				{"chara": "koishi","serif":"これうるさいからきらい"},
			],
			x: 145,
			y: 230,
			width: 200,
			height: 450,
			scale: 2/3,
			anime1: "chapter0-mansion_corridor3-obj-10-01-obj01",
			anime2: "chapter0-mansion_corridor3-obj-10-01-obj02",
			anime3: "chapter0-mansion_corridor3-obj-10-01-obj03",
			anime4: "chapter0-mansion_corridor3-obj-10-01-obj04",
			anime5: "chapter0-mansion_corridor3-obj-10-01-obj05",
			anime6: "chapter0-mansion_corridor3-obj-10-01-obj06",
			action: "look_top",
			sound:      "chapter0-mansion_corridor3-ring_clock_front",
			sound_back: "chapter0-mansion_corridor3-ring_clock_back"
		},
		{
			no: ++I,
			type: CONSTANT.ANIME_EVENT_IMAGE_TYPE,
			name: "カーペット",
			serif: null,
			x: 490,
			y: 570,
			scale: 2/3,
			anime1: "chapter0-mansion_corridor3-obj-11-01-obj01",
			anime2: "chapter0-mansion_corridor3-obj-11-01-obj02",
			anime3: "chapter0-mansion_corridor3-obj-11-01-obj03",
			anime4: "chapter0-mansion_corridor3-obj-11-01-obj04",
			anime5: "chapter0-mansion_corridor3-obj-11-01-obj05",
			anime6: "chapter0-mansion_corridor3-obj-11-01-obj06",
			action: null,
			action_back_event: "event_for_trial_last", // 体験版最終
		},
		{
			no: ++I,
			type: CONSTANT.ITEM_TYPE,
			name: "目薬",
			image: "eyedrops",
			x: 590,
			y: 290,
			scale: 2/3,
			item_id: CONSTANT.ITEM.EYEDROPS
		},

	],
};


},{"../../../constant":5}],97:[function(require,module,exports){
// こいしの自室(ベッド／帽子／ドア) 帽子はベッドのふちにかけてある
var CONSTANT = require("../../../constant");
var I = 0;
module.exports = {
	key: "chapter0_myroom",
	chapter: 0,
	name: "こいしの部屋",
	bgm: "field1",
	right_start_position: {x: 690, y: 540},
	left_start_position:  {x: 180, y: 540},
	right_field: "chapter0_hospital_corridor1",
	left_field: null,
	background: "chapter0-myroom-bg-001",
	walk_sound: "walking_bare_default",
	objects: [
		{
			no: ++I,
			image: "chapter0-myroom-obj-01-01",
			type: CONSTANT.STATIC_IMAGE_TYPE,
			name: "ベッド",
			serif: [
				{"chara": "koishi","serif":"まだねむたくないもん"},
			],
			x: 258, y: 389,
			scale: 0.7,
			action: "touch",
			sound: "touch"
		},
		{
			no: ++I,
			image: "chapter0-myroom-obj-05-01",
			type: CONSTANT.STATIC_IMAGE_TYPE,
			name: "キャビネット",
			serif: [
				{"chara": "koishi","serif":"あけない"},
			],
			x: 59, y: 496,
			scale: 0.7,
			action: "touch",
			sound: "touch",
			target_x: 167, target_y: 531
		},
		{
			no: ++I,
			type: CONSTANT.ANIME_IMAGE_TYPE,
			name: "本",
			serif: [
				{"chara": "koishi","serif":"にっきさんひさしぶり！"},
				{"chara": "koishi","serif": "またね！"},
			],
			x: 340, y: 530,
			scale: 0.7,
			anime1: "chapter0-myroom-obj-02-01-obj01",
			anime2: "chapter0-myroom-obj-02-01-obj02",
			anime3: "chapter0-myroom-obj-02-01-obj03",
			width: 80, height: 80,
			action: "look_bottom",
			sound: "chapter0-myroom-open_book",
			position_type: "lying",
		},
		{
			no: ++I,
			type: CONSTANT.ANIME_IMAGE_TYPE,
			name: "クレヨン",
			serif: [
				{"chara": "koishi","serif":"くれおん！"},
				{"chara": "koishi","serif": "ピンクなくなっちゃったなー"},
			],
			x: 600, y: 530,
			scale: 0.7,
			anime1: "chapter0-myroom-obj-03-01-obj01",
			anime2: "chapter0-myroom-obj-03-01-obj02",
			anime3: "chapter0-myroom-obj-03-01-obj03",
			width: 80, height: 80,
			action: "look_bottom",
			sound: "chapter0-myroom-move_crayon",
			position_type: "lying",
		},
		{
			no: ++I,
			type: CONSTANT.ANIME_IMAGE_TYPE,
			name: "まど",
			serif: [
				{"chara": "koishi","serif":"なにかいる！"},
			],
			x: 5, y: 180,
			scale: 0.7,
			anime1: "chapter0-myroom-obj-04-01-obj01",
			anime2: "chapter0-myroom-obj-04-01-obj02",
			anime3: "chapter0-myroom-obj-04-01-obj03",
			action: "look_top",
			sound: "chapter0-myroom-sound_window_for_kokoro",
			target_x: 177, target_y: 531
		},

		{
			no: ++I,
			image: "paper", type: CONSTANT.JOURNAL_TYPE, x: 258, y: 689, scale: 2/3, picture: "journal001"},
	],
};


},{"../../../constant":5}],98:[function(require,module,exports){
'use strict';
var DEBUG = {
	ON: true,
	SOUND_OFF: false,
	// 第一引数: scene name, 第二引数以降: 引数
	//START_SCENE: ["stage", "chapter0_mansion_corridor3"],
};

module.exports = DEBUG;

},{}],99:[function(require,module,exports){
'use strict';

var core = require('./hakurei').core;
var util = require('./hakurei').util;
var CONSTANT = require('./constant');

var SaveManager = require('./save_manager');

var SceneTitle = require('./scene/title');
var SceneHowto = require('./scene/howto');
var SceneStage = require('./scene/stage');
var SceneLoading = require('./scene/loading');
var SceneEventForChapter0EncounterSatori = require('./scene/event/chapter0/encounter_satori');
var SceneEventForChapter0Last            = require('./scene/event/chapter0/last');
var SceneEventForChapter0GetHat          = require('./scene/event/chapter0/get_hat');
var SceneEventForTrialLast               = require('./scene/event/trial_last');



var Game = function(canvas) {
	core.apply(this, arguments);

};
util.inherit(Game, core);


Game.prototype.init = function () {
	core.prototype.init.apply(this, arguments);

	// カーソル設定
	this.enableCursorImage("ui_icon_pointer_01");

	// セーブデータ
	this.save_manager = SaveManager.load();

	// シーン一覧
	this.addScene("loading", new SceneLoading(this));
	this.addScene("title", new SceneTitle(this));
	this.addScene("howto", new SceneHowto(this));
	this.addScene("stage", new SceneStage(this));
	this.addScene("event_for_chapter0_encounter_satori", new SceneEventForChapter0EncounterSatori(this));
	this.addScene("event_for_chapter0_last",             new SceneEventForChapter0Last(this));
	this.addScene("event_for_chapter0_get_hat",          new SceneEventForChapter0GetHat(this));
	this.addScene("event_for_trial_last",       new SceneEventForTrialLast(this));

	// シーン遷移
	this.changeScene("loading");
};



Game.prototype.setupDebug = function (dom) {
	if (!CONSTANT.DEBUG.ON) return;

	this.debug_manager.setOn(dom);

	// テキスト追加
	this.debug_manager.addMenuText("マウスクリックで移動／調べる");

	this.debug_manager.addGitLatestCommitInfo("sairoutine", "Koishibow", "gh-pages");

	// ゲームスタート ボタン
	this.debug_manager.addMenuButton("Run", function (game) {
		game.startRun();
	});

	// ゲームストップ ボタン
	this.debug_manager.addMenuButton("Stop", function (game) {
		game.stopRun();
	});

	// フルスクリーン ボタン
	this.debug_manager.addMenuButton("最大化", function (game) {
		game.fullscreen();
	});

	// ゲームデータ消去ボタン
	this.debug_manager.addMenuButton("セーブクリア", function (game) {
		game.save_manager.del();
	});

	this.debug_manager.addMenuButton("当たり判定表示", function (game) {
		game.debug_manager.setShowingCollisionAreaOn();
	});
	this.debug_manager.addMenuButton("当たり判定非表示", function (game) {
		game.debug_manager.setShowingCollisionAreaOff();
	});

	this.debug_manager.addMenuButton("移動制限範囲表示", function (game) {
		game.debug_manager.set("is_show_immovable_area", true);
	});
	this.debug_manager.addMenuButton("移動制限範囲非表示", function (game) {
		game.debug_manager.set("is_show_immovable_area", false);
	});
	/*
	this.debug_manager.addMenuSelect("ライトの合成方法", [
		{value: "source-over"},
		{value: "destination-over"},
		{value: "source-in"},
		{value: "destination-in"},
		{value: "source-out"},
		{value: "destination-out"},
		{value: "source-atop"},
		{value: "destination-atop"},
		{value: "lighter"},
		{value: "xor"},
		{value: "copy"},
		{value: "normal"},
		{value: "multiply"},
		{value: "screen"},
		{value: "overlay"},
		{value: "darken"},
		{value: "lighten"},
		{value: "color-dodge"},
		{value: "color-burn"},
		{value: "hard-light"},
		{value: "soft-light"},
		{value: "difference"},
		{value: "exclusion"},
		{value: "hue"},
		{value: "saturation"},
		{value: "color"},
		{value: "luminosity"}
	], function (game, value) {
		game.debug_manager.set("light_global_composite", value);
	});
	*/
	this.debug_manager.addMenuSelect("こいし暗度", [
		{value: "0.0"},
		{value: "0.1"},
		{value: "0.2"},
		{value: "0.3"},
		{value: "0.4"},
		{value: "0.5"},
		{value: "0.6"},
		{value: "0.7"},
		{value: "0.8"},
		{value: "0.9"},
		{value: "1.0"},
	], function (game, value) {
		game.debug_manager.set("koishi_alpha", value);
	});




};

module.exports = Game;

},{"./constant":5,"./hakurei":100,"./save_manager":160,"./scene/event/chapter0/encounter_satori":162,"./scene/event/chapter0/get_hat":163,"./scene/event/chapter0/last":164,"./scene/event/trial_last":165,"./scene/howto":166,"./scene/loading":167,"./scene/stage":168,"./scene/title":177}],100:[function(require,module,exports){
'use strict';

module.exports = require("./hakureijs/index");

},{"./hakureijs/index":108}],101:[function(require,module,exports){
'use strict';

var AudioLoader = function() {
	this.sounds = {};
	this.bgms = {};

	this.loading_audio_num = 0;
	this.loaded_audio_num = 0;

	// key: sound_name, value: only true
	// which determine what sound is played.
	this._reserved_play_sound_name_map = {};

	this.audio_context = null;
	if (window && window.AudioContext) {
		this.audio_context = new window.AudioContext();

		// for legacy browser
		this.audio_context.createGain = this.audio_context.createGain || this.audio_context.createGainNode;
	}

	// key: bgm name, value: playing AudioBufferSourceNode instance
	this._audio_source_map = {};
};
AudioLoader.prototype.init = function() {
	// TODO: cancel already loading bgms and sounds

	this.sounds = {};
	this.bgms = {};

	this.loading_audio_num = 0;
	this.loaded_audio_num = 0;

	this._reserved_play_sound_name_map = {};

	this._audio_source_map = {};
};

AudioLoader.prototype.loadSound = function(name, path, volume) {
	if(!window || !window.Audio) return;

	var self = this;
	self.loading_audio_num++;

	if(typeof volume === 'undefined') volume = 1.0;


	// it's done to load sound
	var onload_function = function() {
		self.loaded_audio_num++;
	};

	var audio = new window.Audio(path);
	audio.volume = volume;
	audio.addEventListener('canplay', onload_function);
	audio.load();
	self.sounds[name] = {
		audio: audio,
	};
};

AudioLoader.prototype.loadBGM = function(name, path, volume, loopStart, loopEnd) {
	if (!this.audio_context) return;

	var self = this;
	self.loading_audio_num++;

	if(typeof volume === 'undefined') volume = 1.0;

	// it's done to load audio
	var successCallback = function(audioBuffer) {
		self.loaded_audio_num++;
		self.bgms[name] = {
			audio:     audioBuffer,
			volume:    volume,
			loopStart: loopStart,
			loopEnd:   loopEnd,
		};
	};

	var errorCallback = function(error) {
		if (error instanceof Error) {
			throw new Error(error.message);
		} else {
			throw error;
		}
	};

	var xhr = new XMLHttpRequest();
	xhr.onload = function() {
		if(xhr.status !== 200) {
			return;
		}

		var arrayBuffer = xhr.response;

		// decode
		self.audio_context.decodeAudioData(arrayBuffer, successCallback, errorCallback);
	};

	xhr.open('GET', path, true);
	xhr.responseType = 'arraybuffer';
	xhr.send(null);
};

AudioLoader.prototype.isAllLoaded = function() {
	return this.loaded_audio_num === this.loading_audio_num;
};

AudioLoader.prototype.playSound = function(name) {
	if (!(name in this.sounds)) throw new Error("Can't find sound '" + name + "'.");

	this._reserved_play_sound_name_map[name] = true;
};

AudioLoader.prototype.executePlaySound = function() {
	for(var name in this._reserved_play_sound_name_map) {
		// play
		this.sounds[name].audio.pause();
		this.sounds[name].audio.currentTime = 0;
		this.sounds[name].audio.play();

		// delete flag
		delete this._reserved_play_sound_name_map[name];
	}
};
AudioLoader.prototype.playBGM = function(name) {
	// stop playing bgm
	this.stopAllBGM();

	this.addBGM(name);
};
AudioLoader.prototype.addBGM = function(name) {
	if (this.isPlayingBGM(name)) {
		this.stopBGM(name);
	}

	this._audio_source_map[name] = this._createSourceNodeAndGainNode(name);
	this._audio_source_map[name].source_node.start(0);
};


// play if the bgm is not playing now
AudioLoader.prototype.changeBGM = function(name) {
	if (!this.isPlayingBGM(name)) {
		this.playBGM(name);
	}
};
AudioLoader.prototype.stopAllBGM = function() {
	for (var bgm_name in this._audio_source_map) {
		this.stopBGM(bgm_name);
	}
};
AudioLoader.prototype.stopBGMWithout = function(exclude_bgm_name) {
	for (var bgm_name in this._audio_source_map) {
		if (bgm_name !== exclude_bgm_name) {
			this.stopBGM(bgm_name);
		}
	}
};



AudioLoader.prototype.stopBGM = function(name) {
	if(typeof name === "undefined") {
		return this.stopAllBGM();
	}

	if (name in this._audio_source_map) {
		var audio_source = this._audio_source_map[name].source_node;
		audio_source.stop(0);
		delete this._audio_source_map[name];
	}
};
AudioLoader.prototype.isPlayingBGM = function(name) {
	if(typeof name === "undefined") {
		return Object.keys(this._audio_source_map).length ? true : false;
	}
	else {
		return name in this._audio_source_map ? true : false;
	}
};
AudioLoader.prototype.fadeOutAllBGM = function (fadeout_time) {
	for (var bgm_name in this._audio_source_map) {
		this.fadeOutBGM(fadeout_time, bgm_name);
	}
};

AudioLoader.prototype.fadeOutBGM = function (fadeout_time, bgm_name) {
	if(typeof bgm_name === "undefined") {
		return this.fadeOutAllBGM(fadeout_time);
	}

	var map = this._audio_source_map[bgm_name];

	if (!map) return;

	var audio_gain = map.gain_node;

	var gain = audio_gain.gain;
	var startTime = this.audio_context.currentTime;
	gain.setValueAtTime(gain.value, startTime); // for old browser
	var endTime = startTime + fadeout_time;
	gain.linearRampToValueAtTime(0, endTime);
};

AudioLoader.prototype.muteAllBGM = function () {
	for (var bgm_name in this._audio_source_map) {
		this.muteBGM(bgm_name);
	}
};

AudioLoader.prototype.muteBGM = function (bgm_name) {
	if(typeof bgm_name === "undefined") {
		return this.muteAllBGM();
	}

	var map = this._audio_source_map[bgm_name];

	if (!map) return;

	var audio_gain = map.gain_node;

	audio_gain.gain.value = 0;
};
AudioLoader.prototype.unMuteAllBGM = function () {
	for (var bgm_name in this._audio_source_map) {
		this.unMuteBGM(bgm_name);
	}
};

AudioLoader.prototype.unMuteBGM = function (bgm_name) {
	if(typeof bgm_name === "undefined") {
		return this.unMuteAllBGM();
	}

	var map = this._audio_source_map[bgm_name];

	if (!map) return;

	var audio_gain = map.gain_node;

	var data = this.bgms[bgm_name];
	audio_gain.gain.value = data.volume;
};

AudioLoader.prototype.unMuteWithFadeInAllBGM = function (fadein_time) {
	for (var bgm_name in this._audio_source_map) {
		this.unMuteWithFadeInBGM(fadein_time, bgm_name);
	}
};

AudioLoader.prototype.unMuteWithFadeInBGM = function (fadein_time, bgm_name) {
	if(typeof bgm_name === "undefined") {
		return this.unMuteWithFadeInAllBGM(fadein_time);
	}

	var map = this._audio_source_map[bgm_name];

	if (!map) return;

	var data = this.bgms[bgm_name];

	var audio_gain = map.gain_node;

	var gain = audio_gain.gain;
	var startTime = this.audio_context.currentTime;
	gain.setValueAtTime(gain.value, startTime); // for old browser
	var endTime = startTime + fadein_time;
	gain.linearRampToValueAtTime(data.volume, endTime);
};









// create AudioBufferSourceNode and GainNode instance
AudioLoader.prototype._createSourceNodeAndGainNode = function(name) {
	var self = this;
	var data = self.bgms[name];

	var source = self.audio_context.createBufferSource();
	source.buffer = data.audio;

	if("loopStart" in data || "loopEnd" in data) { source.loop = true; }
	if(data.loopStart) { source.loopStart = data.loopStart; }
	if(data.loopEnd)   { source.loopEnd = data.loopEnd; }

	var audio_gain = self.audio_context.createGain();
	audio_gain.gain.value = data.volume;

	source.connect(audio_gain);

	audio_gain.connect(self.audio_context.destination);
	source.start = source.start || source.noteOn;
	source.stop  = source.stop  || source.noteOff;

	return {
		source_node: source,
		gain_node: audio_gain,
	};
};

AudioLoader.prototype.progress = function() {
	return this.loaded_audio_num / this.loading_audio_num;
};


module.exports = AudioLoader;

},{}],102:[function(require,module,exports){
'use strict';

var FontLoader = function() {
	this.is_done = false;
};
FontLoader.prototype.init = function() {
	this.is_done = false;
};
FontLoader.prototype.isAllLoaded = function() {
	return this.is_done;
};

FontLoader.prototype.notifyLoadingDone = function() {
	this.is_done = true;
};

FontLoader.prototype.progress = function() {
	return this.is_done ? 1 : 0;
};




module.exports = FontLoader;

},{}],103:[function(require,module,exports){
'use strict';

var ImageLoader = function() {
	this.images = {};

	this.loading_image_num = 0;
	this.loaded_image_num = 0;
};
ImageLoader.prototype.init = function() {
	// cancel already loading images
	for(var name in this.images){
		this.images[name].image.src = "";
	}

	this.images = {};

	this.loading_image_num = 0;
	this.loaded_image_num = 0;
};

ImageLoader.prototype.loadImage = function(name, path, scale_width, scale_height) {
	var self = this;

	self.loading_image_num++;

	// it's done to load image
	var onload_function = function() {
		self.loaded_image_num++;
	};

	var image = new Image();
	image.src = path;
	image.onload = onload_function;
	this.images[name] = {
		scale_width: scale_width,
		scale_height: scale_height,
		image: image,
	};
};

ImageLoader.prototype.isAllLoaded = function() {
	return this.loaded_image_num === this.loading_image_num;
};
ImageLoader.prototype.isLoaded = function(name) {
	return((name in this.images) ? true : false);
};


ImageLoader.prototype.getImage = function(name) {
	if (!this.isLoaded(name)) throw new Error("Can't find image '" + name + "'.");

	return this.images[name].image;
};
ImageLoader.prototype.getScaleWidth = function(name) {
	if (!this.isLoaded(name)) throw new Error("Can't find image '" + name + "'.");

	return this.images[name].scale_width;
};
ImageLoader.prototype.getScaleHeight = function(name) {
	if (!this.isLoaded(name)) throw new Error("Can't find image '" + name + "'.");

	return this.images[name].scale_height;
};



ImageLoader.prototype.progress = function() {
	return this.loaded_image_num / this.loading_image_num;
};




module.exports = ImageLoader;

},{}],104:[function(require,module,exports){
'use strict';

// only keyboard (because core class uses key board map)
var Constant = {
	BUTTON_LEFT:  0x01,
	BUTTON_UP:    0x02,
	BUTTON_RIGHT: 0x04,
	BUTTON_DOWN:  0x08,
	BUTTON_Z:     0x10,
	BUTTON_X:     0x20,
	BUTTON_SHIFT: 0x40,
	BUTTON_SPACE: 0x80,
};

module.exports = Constant;

},{}],105:[function(require,module,exports){
'use strict';

var CONSTANT = {
	SPRITE3D: {},
};

// vertices
CONSTANT.SPRITE3D.V_ITEM_SIZE = 3;
CONSTANT.SPRITE3D.V_ITEM_NUM = 4;
CONSTANT.SPRITE3D.V_SIZE =
	CONSTANT.SPRITE3D.V_ITEM_SIZE * CONSTANT.SPRITE3D.V_ITEM_NUM;
// texture coordinates
CONSTANT.SPRITE3D.C_ITEM_SIZE = 2;
CONSTANT.SPRITE3D.C_ITEM_NUM = 4;
CONSTANT.SPRITE3D.C_SIZE =
	CONSTANT.SPRITE3D.C_ITEM_SIZE * CONSTANT.SPRITE3D.C_ITEM_NUM;

// indices
CONSTANT.SPRITE3D.I_ITEM_SIZE = 1;
CONSTANT.SPRITE3D.I_ITEM_NUM = 6;
CONSTANT.SPRITE3D.I_SIZE =
	CONSTANT.SPRITE3D.I_ITEM_SIZE * CONSTANT.SPRITE3D.I_ITEM_NUM;

// color
CONSTANT.SPRITE3D.A_ITEM_SIZE = 4;
CONSTANT.SPRITE3D.A_ITEM_NUM = 4;
CONSTANT.SPRITE3D.A_SIZE =
	CONSTANT.SPRITE3D.A_ITEM_SIZE * CONSTANT.SPRITE3D.A_ITEM_NUM;

module.exports = CONSTANT;

},{}],106:[function(require,module,exports){
'use strict';

/* TODO: create input_manager class */

var WebGLDebugUtils = require("webgl-debug");
var CONSTANT = require("./constant/button");
var Util = require("./util");
var DebugManager = require("./debug_manager");
var InputManager = require("./input_manager");
var ImageLoader = require("./asset_loader/image");
var AudioLoader = require("./asset_loader/audio");
var FontLoader = require("./asset_loader/font");
var SceneLoading = require('./scene/loading');

var ShaderProgram = require('./shader_program');
var VS = require("./shader/main.vs");
var FS = require("./shader/main.fs");


var Core = function(canvas, options) {
	if(!options) {
		options = {};
	}

	this.canvas_dom = canvas;
	this.ctx = null; // 2D context
	this.gl  = null; // 3D context

	// WebGL 3D mode
	if(options.webgl) {
		this.gl = this.createWebGLContext(this.canvas_dom);

		// shader program
		this.sprite_3d_shader = new ShaderProgram(
			this.gl,
			// verticle shader, fragment shader
			VS, FS,
			// attributes
			[
				"aTextureCoordinates",
				"aVertexPosition",
				"aColor"
			],
			// uniforms
			[
				"uMVMatrix",
				"uPMatrix",
				"uSampler", // texture data
			]
		);
	}
	// Canvas 2D mode
	else {
		this.ctx = this.canvas_dom.getContext('2d');
	}

	this.debug_manager = new DebugManager(this);

	this.input_manager = new InputManager();

	this.width = Number(canvas.getAttribute('width'));
	this.height = Number(canvas.getAttribute('height'));

	this.current_scene = null;
	this._reserved_next_scene = null; // next scene which changes next frame run
	this.scenes = {};

	this._cursor_image_name = null;
	this._default_cursor_image_name = null;

	this.frame_count = 0;

	this.request_id = null;

	this.image_loader = new ImageLoader();
	this.audio_loader = new AudioLoader();
	this.font_loader = new FontLoader();
};
Core.prototype.init = function () {
	this.current_scene = null;
	this._reserved_next_scene = null; // next scene which changes next frame run

	this.frame_count = 0;

	this.request_id = null;

	// TODO:
	//this.debug_manager.init();
	this.input_manager.init();

	this.image_loader.init();
	this.audio_loader.init();
	this.font_loader.init();

	this.addScene("loading", new SceneLoading(this));
};
Core.prototype.isRunning = function () {
	return this.request_id ? true : false;
};
Core.prototype.startRun = function () {
	if(this.isRunning()) return;

	this.run();
};
Core.prototype.stopRun = function () {
	if(!this.isRunning()) return;

	cancelAnimationFrame(this.request_id);

	this.request_id = null;
};
Core.prototype.run = function(){
	// get gamepad input
	// get pressed key time
	this.input_manager.beforeRun();

	// go to next scene if next scene is set
	this.changeNextSceneIfReserved();

	// play sound which already set to play
	this.audio_loader.executePlaySound();

	// change default cursor image
	this.changeDefaultCursorImage();

	var current_scene = this.currentScene();
	if(current_scene) {
		current_scene.beforeDraw();

		// clear already rendered canvas
		this.clearCanvas();

		current_scene.draw();

		// overwrite cursor image on scene
		this._renderCursorImage();

		current_scene.afterDraw();
	}

	/*

	if(Config.DEBUG) {
		this._renderFPS();
	}

	// play sound effects
	this.runPlaySound();
	*/

	this.frame_count++;

	this.input_manager.afterRun();

	// tick
	this.request_id = requestAnimationFrame(Util.bind(this.run, this));
};
Core.prototype.currentScene = function() {
	if(this.current_scene === null) {
		return;
	}

	return this.scenes[this.current_scene];
};

Core.prototype.addScene = function(name, scene) {
	this.scenes[name] = scene;
};
Core.prototype.changeScene = function() {
	var args = Array.prototype.slice.call(arguments); // to convert array object
	this._reserved_next_scene = args;
};
Core.prototype.changeNextSceneIfReserved = function() {
	if(this._reserved_next_scene) {
		if (this.currentScene() && this.currentScene().isSetFadeOut() && !this.currentScene().isInFadeOut()) {
			this.currentScene().startFadeOut();
		}
		else if (this.currentScene() && this.currentScene().isSetFadeOut() && this.currentScene().isInFadeOut()) {
			// waiting for quiting fade out
		}
		else {
			// change next scene
			this.current_scene = this._reserved_next_scene.shift();
			var current_scene = this.currentScene();
			current_scene.init.apply(current_scene, this._reserved_next_scene);

			this._reserved_next_scene = null;
		}
	}
};
Core.prototype.changeSceneWithLoading = function(scene, assets) {
	if(!assets) assets = {};
	this.changeScene("loading", assets, scene);
};

Core.prototype.clearCanvas = function() {
	if (this.is2D()) {
		// 2D
		this.ctx.clearRect(0, 0, this.width, this.height);
	}
	else if (this.is3D()) {
		// 3D
		this.gl.clearColor(0.0, 0.0, 0.0, 0.0);
		this.gl.clearDepth(1.0);
		this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT);
	}
};
Core.prototype.is2D = function() {
	return this.ctx ? true : false;
};
Core.prototype.is3D = function() {
	return this.gl ? true : false;
};
// this method is deprecated.
Core.prototype.isKeyDown = function(flag) {
	return this.input_manager.isKeyDown(flag);
};
// this method is deprecated.
Core.prototype.isKeyPush = function(flag) {
	return this.input_manager.isKeyPush(flag);
};
// this method is deprecated.
Core.prototype.getKeyDownTime = function(bit_code) {
	return this.input_manager.getKeyDownTime(bit_code);
};
// this method is deprecated.
Core.prototype.isLeftClickDown = function() {
	return this.input_manager.isLeftClickDown();
};
// this method is deprecated.
Core.prototype.isLeftClickPush = function() {
	return this.input_manager.isLeftClickPush();
};
// this method is deprecated.
Core.prototype.isRightClickDown = function() {
	return this.input_manager.isRightClickDown();
};
// this method is deprecated.
Core.prototype.isRightClickPush = function() {
	return this.input_manager.isRightClickPush();
};

// this method is deprecated.
Core.prototype.mousePositionX = function () {
	return this.input_manager.mousePositionX();
};
// this method is deprecated.
Core.prototype.mousePositionY = function () {
	return this.input_manager.mousePositionX();
};
// this method is deprecated.
Core.prototype.mouseMoveX = function () {
	return this.input_manager.mouseMoveX();
};
// this method is deprecated.
Core.prototype.mouseMoveY = function () {
	return this.input_manager.mouseMoveY();
};
// this method is deprecated.
Core.prototype.mouseScroll = function () {
	return this.input_manager.mouseScroll();
};

Core.prototype.fullscreen = function() {
	var mainCanvas = this.canvas_dom;
	if (mainCanvas.requestFullscreen) {
		mainCanvas.requestFullscreen();
	}
	else if (mainCanvas.msRequestuestFullscreen) {
		mainCanvas.msRequestuestFullscreen();
	}
	else if (mainCanvas.mozRequestFullScreen) {
		mainCanvas.mozRequestFullScreen();
	}
	else if (mainCanvas.webkitRequestFullscreen) {
		mainCanvas.webkitRequestFullscreen();
	}
};

// it is done to load fonts
Core.prototype.fontLoadingDone = function() {
	this.font_loader.notifyLoadingDone();
};

Core.prototype.isAllLoaded = function() {
	if (this.image_loader.isAllLoaded() && this.audio_loader.isAllLoaded() && this.font_loader.isAllLoaded()) {
		return true;
	}
	return false;
};




Core.prototype.setupEvents = function() {
	if(!window) return;

	var self = this;

	// setup WebAudio
	window.AudioContext = (function(){
		return window.AudioContext || window.webkitAudioContext;
	})();

	// setup requestAnimationFrame
	window.requestAnimationFrame = (function(){
		return window.requestAnimationFrame	||
			window.webkitRequestAnimationFrame ||
			window.mozRequestAnimationFrame	||
			function(callback) { window.setTimeout(callback, 1000 / 60); };
	})();


	// If the browser has `document.fonts`, wait font loading.
	// Note: safari 10.0 has document.fonts but not occur loadingdone event
	if(window.document && window.document.fonts && !navigator.userAgent.toLowerCase().indexOf("safari")) {
		window.document.fonts.addEventListener('loadingdone', function() { self.fontLoadingDone(); });
	}
	else {
		self.fontLoadingDone();
	}

	this.input_manager.setupEvents(this.canvas_dom);
};

Core.prototype.createWebGLContext = function(canvas) {
	var gl;
	try {
		gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');
		gl = WebGLDebugUtils.makeDebugContext(gl);
	} catch (e) {
		throw e;
	}
	if (!gl) {
		throw new Error ("Could not initialize WebGL");
	}

	return gl;
};

Core.prototype.enableCursorImage = function(default_image_name) {
	// disable to show browser default cursor
	this.canvas_dom.style.cursor = "none";

	this._default_cursor_image_name = default_image_name;
};

// use your own cursor image
Core.prototype.isUsingCursorImage = function() {
	return this._default_cursor_image_name ? true : false;
};

Core.prototype.changeCursorImage = function(image_name) {
	this._cursor_image_name = image_name;
};
// change browser default cursor
Core.prototype.disableCursorImage = function(image_name) {
	if (!this.isUsingCursorImage()) return;

	this.canvas_dom.style.cursor = "auto";
	this._cursor_image_name = null;
	this._default_cursor_image_name = null;
};
Core.prototype.changeDefaultCursorImage = function() {
	if (!this.isUsingCursorImage()) return;
	this._cursor_image_name = this._default_cursor_image_name;
};
Core.prototype._renderCursorImage = function () {
	if (!this.isUsingCursorImage()) return;

	// if it is in loading scene, not show cursor
	if (!this.image_loader.isLoaded(this._cursor_image_name)) return;

	var ctx = this.ctx;

	if (!ctx) return;

	ctx.save();

	var cursor = this.image_loader.getImage(this._cursor_image_name);

	var x = this.input_manager.mousePositionX();
	var y = this.input_manager.mousePositionY();

	var scale_width  = this.image_loader.getScaleWidth(this._cursor_image_name);
	var scale_height = this.image_loader.getScaleHeight(this._cursor_image_name);
	ctx.translate(x, y);
	ctx.drawImage(cursor,
		0,
		0,
		cursor.width*scale_width,
		cursor.height*scale_height
	);
	ctx.restore();
};



module.exports = Core;

},{"./asset_loader/audio":101,"./asset_loader/font":102,"./asset_loader/image":103,"./constant/button":104,"./debug_manager":107,"./input_manager":109,"./scene/loading":131,"./shader/main.fs":134,"./shader/main.vs":135,"./shader_program":136,"./util":139,"webgl-debug":120}],107:[function(require,module,exports){
'use strict';

var DebugManager = function (core) {
	this.core = core;
	this.dom = null; // debug menu area

	this.is_debug_mode = false; // default: false


	this._is_showing_collision_area = false; // default: false

	this._variables = {};
};

DebugManager.prototype.setOn = function (dom) {
	this.is_debug_mode = true;
	this.dom = dom;
};
DebugManager.prototype.setOff = function () {
	this.is_debug_mode = false;
	this.dom = null;
};

DebugManager.prototype.set = function (name, value) {
	if(!this.is_debug_mode) return;

	this._variables[name] = value;
};
DebugManager.prototype.get = function (name) {
	if(!this.is_debug_mode) return null;

	return this._variables[name];
};



// add text menu
DebugManager.prototype.addMenuText = function (text) {
	if(!this.is_debug_mode) return;

	// create element
	var dom = window.document.createElement('pre');
	dom.textContent = text;

	// add element
	this.dom.appendChild(dom);
};

// add button menu
DebugManager.prototype.addMenuButton = function (button_value, func) {
	if(!this.is_debug_mode) return;

	var core = this.core;

	// create element
	var input = window.document.createElement('input');

	// set attributes
	input.setAttribute('type', 'button');
	input.setAttribute('value', button_value);
	input.onclick = function () {
		func(core);
	};

	// add element
	this.dom.appendChild(input);
};

// add select pull down menu
DebugManager.prototype.addMenuSelect = function (button_value, pulldown_list, func) {
	if(!this.is_debug_mode) return;

	var core = this.core;

	// create element
	var input = window.document.createElement('input');

	// select tag
	var select = window.document.createElement("select");

	// label
	var option_label = document.createElement("option");
	option_label.setAttribute("value", "");
	option_label.appendChild(document.createTextNode(button_value));
	select.appendChild(option_label);

	// add event
	select.onchange = function () {
		if(select.value === "") return;
		func(core, select.value);
	};

	// set attributes
	for (var i = 0, len = pulldown_list.length; i < len; i++) {
		var opt = pulldown_list[i];
		var value = opt.value;
		var name = name in opt ? opt.name : value;

		var option = document.createElement("option");
		option.setAttribute("value", value);
		option.appendChild( document.createTextNode(name) );
		select.appendChild(option);
	}

	// add element
	this.dom.appendChild(select);
};

DebugManager.prototype.addGitLatestCommitInfo = function (user_name, repo_name, branch) {
	if(!this.is_debug_mode) return;

	branch = branch || "master";

	var core = this.core;

	// create element
	var dom = window.document.createElement('pre');

	// add element
	this.dom.appendChild(dom);

	var git_api_url = "https://api.github.com/repos/" + user_name + "/" + repo_name + "/branches/" + branch;

	// fetch git info
	var xhr = new XMLHttpRequest();
	xhr.onload = function() {
		if(xhr.status !== 200) {
			return;
		}

		var json_text = xhr.response;

		var json;
		if (json_text) {
			json = JSON.parse(json_text);
		}
		else {
			throw new Error("Can't parse git lastest commit info");
		}

		dom.textContent =
			//"sha: " + json.commit.sha + "\n" +
			//"author: " + json.commit.commit.author.name + "\n" +
			"last update date: " + (new Date(json.commit.commit.author.date)) + "\n" +
			//"message: " + json.commit.commit.message + "\n" +
			""
		;
	};

	xhr.open('GET', git_api_url, true);
	xhr.send(null);
};










// show collision area of object instance
DebugManager.prototype.setShowingCollisionAreaOn = function () {
	if(!this.is_debug_mode) return null;
	this._is_showing_collision_area = true;
};
DebugManager.prototype.setShowingCollisionAreaOff = function () {
	if(!this.is_debug_mode) return null;
	this._is_showing_collision_area = false;
};
DebugManager.prototype.isShowingCollisionArea = function () {
	if(!this.is_debug_mode) return false;
	return this._is_showing_collision_area;
};

module.exports = DebugManager;

},{}],108:[function(require,module,exports){
'use strict';
module.exports = {
	util: require("./util"),
	core: require("./core"),
	// constant.BUTTON_NAME is deprecated.
	constant: require("./util").assign(require("./constant/button"), {
		button: require("./constant/button"),
	}),
	serif_manager: require("./serif_manager"),
	shader_program: require("./shader_program"),
	scene: {
		base:    require("./scene/base"),
		loading: require("./scene/loading"),
		movie:   require("./scene/movie"),
	},
	object: {
		base: require("./object/base"),
		point: require("./object/point"),
		sprite: require("./object/sprite"),
		window: require("./object/window"),
		sprite3d: require("./object/sprite3d"),
		pool_manager: require("./object/pool_manager"),
		pool_manager3d: require("./object/pool_manager3d"),
		ui_parts: require("./object/ui_parts"),
	},
	asset_loader: {
		image: require("./asset_loader/image"),
		audio: require("./asset_loader/audio"),
		font:  require("./asset_loader/font"),
	},
	storage: {
		base: require("./storage/base"),
		save: require("./storage/save"),
	},

};

},{"./asset_loader/audio":101,"./asset_loader/font":102,"./asset_loader/image":103,"./constant/button":104,"./core":106,"./object/base":122,"./object/point":123,"./object/pool_manager":124,"./object/pool_manager3d":125,"./object/sprite":126,"./object/sprite3d":127,"./object/ui_parts":128,"./object/window":129,"./scene/base":130,"./scene/loading":131,"./scene/movie":132,"./serif_manager":133,"./shader_program":136,"./storage/base":137,"./storage/save":138,"./util":139}],109:[function(require,module,exports){
'use strict';

var CONSTANT = require("./constant/button");
var Util = require("./util");
var ObjectPoint = require("./object/point");

// const
var DEFAULT_BUTTON_ID_TO_BIT_CODE = {
	0: CONSTANT.BUTTON_Z,
	1: CONSTANT.BUTTON_X,
	2: CONSTANT.BUTTON_SPACE,
	3: CONSTANT.BUTTON_SHIFT,
};

var InputManager = function () {
	this.current_keyflag = 0x0;
	this.before_keyflag = 0x0;
	this._key_bit_code_to_down_time = {};

	// gamepad button_id to bit code of key input
	this._button_id_to_key_bit_code = Util.shallowCopyHash(DEFAULT_BUTTON_ID_TO_BIT_CODE);

	this.is_left_clicked  = false;
	this.is_right_clicked = false;
	this.before_is_left_clicked  = false;
	this.before_is_right_clicked = false;
	this.mouse_change_x = 0;
	this.mouse_change_y = 0;
	this.mouse_x = 0;
	this.mouse_y = 0;
	this.mouse_scroll = 0;

	this.is_connect_gamepad = false;
};

InputManager.prototype.init = function () {
	this.current_keyflag = 0x0;
	this.before_keyflag = 0x0;
	this.initPressedKeyTime();

	// gamepad button_id to bit code of key input
	this._button_id_to_key_bit_code = Util.shallowCopyHash(DEFAULT_BUTTON_ID_TO_BIT_CODE);

	this.is_left_clicked  = false;
	this.is_right_clicked = false;
	this.before_is_left_clicked  = false;
	this.before_is_right_clicked = false;
	this.mouse_change_x = 0;
	this.mouse_change_y = 0;
	this.mouse_x = 0;
	this.mouse_y = 0;
	this.mouse_scroll = 0;

	this.is_connect_gamepad = false;
};
InputManager.prototype.enableGamePad = function () {
	this.is_connect_gamepad = true;
};
InputManager.prototype.beforeRun = function(){
	// get gamepad input
	this.handleGamePad();

	// get pressed key time
	this.handlePressedKeyTime();
};

InputManager.prototype.afterRun = function(){
	// save key current pressed keys
	this.before_keyflag = this.current_keyflag;
	this.before_is_left_clicked = this.is_left_clicked;
	this.before_is_right_clicked = this.is_right_clicked;

	// reset mouse wheel and mouse move
	this.mouse_scroll = 0;
	this.mouse_change_x = 0;
	this.mouse_change_y = 0;
};


InputManager.prototype.handleKeyDown = function(e) {
	this.current_keyflag |= this._keyCodeToBitCode(e.keyCode);
	e.preventDefault();
};
InputManager.prototype.handleKeyUp = function(e) {
	this.current_keyflag &= ~this._keyCodeToBitCode(e.keyCode);
	e.preventDefault();
};
InputManager.prototype.isKeyDown = function(flag) {
	return((this.current_keyflag & flag) ? true : false);
};
InputManager.prototype.isKeyPush = function(flag) {
	return !(this.before_keyflag & flag) && this.current_keyflag & flag;
};


InputManager.prototype.getKeyDownTime = function(bit_code) {
	return this._key_bit_code_to_down_time[bit_code];
};

InputManager.prototype.handleMouseDown = function(event) {
	if ("which" in event) { // Gecko (Firefox), WebKit (Safari/Chrome) & Opera
		this.is_left_clicked  = event.which === 1;
		this.is_right_clicked = event.which === 3;
	}
	else if ("button" in event) {  // IE, Opera
		this.is_left_clicked  = event.button === 1;
		this.is_right_clicked = event.button === 2;
	}
	event.preventDefault();
};
InputManager.prototype.handleMouseUp = function(event) {
	if ("which" in event) { // Gecko (Firefox), WebKit (Safari/Chrome) & Opera
		this.is_left_clicked  = event.which === 1 ? false : this.is_left_clicked;
		this.is_right_clicked = event.which === 3 ? false : this.is_right_clicked;
	}
	else if ("button" in event) {  // IE, Opera
		this.is_left_clicked  = event.button === 1 ? false : this.is_left_clicked;
		this.is_right_clicked = event.button === 2 ? false : this.is_right_clicked;
	}
	event.preventDefault();
};
InputManager.prototype.isLeftClickDown = function() {
	return this.is_left_clicked;
};
InputManager.prototype.isLeftClickPush = function() {
	// not true if is pressed in previous frame
	return this.is_left_clicked && !this.before_is_left_clicked;
};
InputManager.prototype.isRightClickDown = function() {
	return this.is_right_clicked;
};
InputManager.prototype.isRightClickPush = function() {
	// not true if is pressed in previous frame
	return this.is_right_clicked && !this.before_is_right_clicked;
};
InputManager.prototype.handleMouseMove = function (d) {
	d = d ? d : window.event;
	d.preventDefault();

	// get absolute coordinate position of canvas and adjust click position
	// because clientX and clientY return the position from the document.
	var rect = d.target.getBoundingClientRect();

	var x = d.clientX - rect.left;
	var y = d.clientY - rect.top;

	this.mouse_change_x = this.mouse_x - x;
	this.mouse_change_y = this.mouse_y - y;
	this.mouse_x = x;
	this.mouse_y = y;
};

InputManager.prototype.mousePositionPoint = function (scene) {
	var x = this.mousePositionX();
	var y = this.mousePositionY();

	var point = new ObjectPoint(scene);
	point.init();
	point.setPosition(x, y);


	return point;
};


InputManager.prototype.mousePositionX = function () {
	return this.mouse_x;
};
InputManager.prototype.mousePositionY = function () {
	return this.mouse_y;
};
InputManager.prototype.mouseMoveX = function () {
	return this.mouse_change_x;
};
InputManager.prototype.mouseMoveY = function () {
	return this.mouse_change_y;
};
InputManager.prototype.handleMouseWheel = function (event) {
	this.mouse_scroll = event.detail ? event.detail : -event.wheelDelta/120;
};
InputManager.prototype.mouseScroll = function () {
	return this.mouse_scroll;
};
InputManager.prototype._keyCodeToBitCode = function(keyCode) {
	var flag;
	switch(keyCode) {
		case 16: // shift
			flag = CONSTANT.BUTTON_SHIFT;
			break;
		case 32: // space
			flag = CONSTANT.BUTTON_SPACE;
			break;
		case 37: // left
			flag = CONSTANT.BUTTON_LEFT;
			break;
		case 38: // up
			flag = CONSTANT.BUTTON_UP;
			break;
		case 39: // right
			flag = CONSTANT.BUTTON_RIGHT;
			break;
		case 40: // down
			flag = CONSTANT.BUTTON_DOWN;
			break;
		case 88: // x
			flag = CONSTANT.BUTTON_X;
			break;
		case 90: // z
			flag = CONSTANT.BUTTON_Z;
			break;
	}
	return flag;
};
InputManager.prototype.handleGamePad = function() {
	if(!this.is_connect_gamepad) return;
	var pads = window.navigator.getGamepads();
	var pad = pads[0]; // 1Pコン

	if(!pad) return;

	// button
	for (var i = 0, len = pad.buttons.length; i < len; i++) {
		if(!(i in this._button_id_to_key_bit_code)) continue; // ignore if I don't know its button
		if(pad.buttons[i].pressed) { // pressed
			this.current_keyflag |= this.getKeyByButtonId(i);
		}
		else { // not pressed
			this.current_keyflag &= ~this.getKeyByButtonId(i);
		}
	}

	// arrow keys
	if (pad.axes[1] < -0.5) {
			this.current_keyflag |= CONSTANT.BUTTON_UP;
	}
	else {
			this.current_keyflag &= ~CONSTANT.BUTTON_UP;
	}
	if (pad.axes[1] > 0.5) {
			this.current_keyflag |= CONSTANT.BUTTON_DOWN;
	}
	else {
			this.current_keyflag &= ~CONSTANT.BUTTON_DOWN;
	}
	if (pad.axes[0] < -0.5) {
			this.current_keyflag |= CONSTANT.BUTTON_LEFT;
	}
	else {
			this.current_keyflag &= ~CONSTANT.BUTTON_LEFT;
	}
	if (pad.axes[0] > 0.5) {
			this.current_keyflag |= CONSTANT.BUTTON_RIGHT;
	}
	else {
			this.current_keyflag &= ~CONSTANT.BUTTON_RIGHT;
	}
};
InputManager.prototype.initPressedKeyTime = function() {
	this._key_bit_code_to_down_time = {};

	for (var button_id in CONSTANT) {
		var bit_code = CONSTANT[button_id];
		this._key_bit_code_to_down_time[bit_code] = 0;
	}
};

InputManager.prototype.handlePressedKeyTime = function() {
	for (var button_id in CONSTANT) {
		var bit_code = CONSTANT[button_id];
		if (this.isKeyDown(bit_code)) {
			this._key_bit_code_to_down_time[bit_code]++;
		}
		else {
			this._key_bit_code_to_down_time[bit_code] = 0;
		}
	}
};
InputManager.prototype.setupEvents = function(canvas_dom) {
	var self = this;

	// bind keyboard
	window.onkeydown = function(e) { self.handleKeyDown(e); };
	window.onkeyup   = function(e) { self.handleKeyUp(e); };

	// bind mouse click
	canvas_dom.onmousedown = function(e) { self.handleMouseDown(e); };
	canvas_dom.onmouseup   = function(e) { self.handleMouseUp(e); };

	// bind mouse move
	canvas_dom.onmousemove = function(d) { self.handleMouseMove(d); };

	// bind mouse wheel
	var mousewheelevent = (window.navi && /Firefox/i.test(window.navigator.userAgent)) ? "DOMMouseScroll" : "mousewheel";
	if (canvas_dom.addEventListener) { //WC3 browsers
		canvas_dom.addEventListener(mousewheelevent, function(e) {
			var event = window.event || e;
			self.handleMouseWheel(event);
		}, false);
	}

	// unable to use right click menu.
	// NOTE: not used
	// this.canvas_dom.oncontextmenu = function() { return false; };

	// bind gamepad
	if(window.Gamepad && window.navigator && window.navigator.getGamepads) {
		self.enableGamePad();
	}
};

InputManager.prototype.getKeyByButtonId = function(button_id) {
	var keys = this._button_id_to_key_bit_code[button_id];
	if(!keys) keys = 0x00;

	return keys;
};

// get one of the pressed button id
InputManager.prototype.getAnyButtonId = function(){
	if(!this.is_connect_gamepad) return;

	var pads = window.navigator.getGamepads();
	var pad = pads[0]; // 1Pコン

	if(!pad) return;

	for (var i = 0; i < pad.buttons.length; i++) {
		if(pad.buttons[i].pressed) {
			return i;
		}
	}
};
/*
InputManager.prototype.setButtonIdMapping = function(button_id, key) {
	var defined_key = this._button_id_to_key_bit_code[button_id];

	for (var target_button_id in this._button_id_to_key_bit_code) {
		var target_key = this._button_id_to_key_bit_code[target_button_id];
		// If there are already set keys in other keys, replace it.
		if (target_key === key) {
			if (defined_key) {
				// replace other key's button_id mapping to current button_id's key.
				this._button_id_to_key_bit_code[target_button_id] = defined_key;
			}
			else {
				// the player presses target_button_id, no event has occured.
				delete this._button_id_to_key_bit_code[target_button_id];
			}
		}
	}

	// set
	this._button_id_to_key_bit_code[button_id] = key;
};

InputManager.prototype.setAllButtonIdMapping = function(map) {
	this._button_id_to_key_bit_code = Util.shallowCopyHash(map);
};

InputManager.prototype.getButtonIdToKeyMap = function() {
	return Util.shallowCopyHash(this._button_id_to_key_bit_code);
};
// convert { value => key } hash
InputManager.prototype.getKeyToButtonIdMap = function() {
	var map = {};
	for (var button_id in this._button_id_to_key_bit_code) {
		var key = this._button_id_to_key_bit_code[button_id];
		map[key] = button_id; // NOTE: cannot duplicate, if it, overwrite it
	}

	return map;
};


InputManager.prototype.dumpGamePadKey = function() {
	var dump = {};

	for (var button_id in this._button_id_to_key_bit_code) {
		var key = this._button_id_to_key_bit_code[ button_id ];
		switch(key) {
			case CONSTANT.BUTTON_LEFT:
				dump[button_id] = "LEFT";
				break;
			case CONSTANT.BUTTON_UP:
				dump[button_id] = "UP";
				break;
			case CONSTANT.BUTTON_RIGHT:
				dump[button_id] = "RIGHT";
				break;
			case CONSTANT.BUTTON_DOWN:
				dump[button_id] = "DOWN";
				break;
			case CONSTANT.BUTTON_Z:
				dump[button_id] = "Z";
				break;
			case CONSTANT.BUTTON_X:
				dump[button_id] = "X";
				break;
			case CONSTANT.BUTTON_SHIFT:
				dump[button_id] = "SHIFT";
				break;
			case CONSTANT.BUTTON_SPACE:
				dump[button_id] = "SPACE";
				break;
			default:
				dump[button_id] = "UNKNOWN";
		}
	}

	console.log(dump);
};
*/





module.exports = InputManager;

},{"./constant/button":104,"./object/point":123,"./util":139}],110:[function(require,module,exports){
/**
 * @fileoverview gl-matrix - High performance matrix and vector operations
 * @author Brandon Jones
 * @author Colin MacKenzie IV
 * @version 2.3.2
 */

/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE. */
// END HEADER

exports.glMatrix = require("./gl-matrix/common.js");
exports.mat2 = require("./gl-matrix/mat2.js");
exports.mat2d = require("./gl-matrix/mat2d.js");
exports.mat3 = require("./gl-matrix/mat3.js");
exports.mat4 = require("./gl-matrix/mat4.js");
exports.quat = require("./gl-matrix/quat.js");
exports.vec2 = require("./gl-matrix/vec2.js");
exports.vec3 = require("./gl-matrix/vec3.js");
exports.vec4 = require("./gl-matrix/vec4.js");
},{"./gl-matrix/common.js":111,"./gl-matrix/mat2.js":112,"./gl-matrix/mat2d.js":113,"./gl-matrix/mat3.js":114,"./gl-matrix/mat4.js":115,"./gl-matrix/quat.js":116,"./gl-matrix/vec2.js":117,"./gl-matrix/vec3.js":118,"./gl-matrix/vec4.js":119}],111:[function(require,module,exports){
/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE. */

/**
 * @class Common utilities
 * @name glMatrix
 */
var glMatrix = {};

// Configuration Constants
glMatrix.EPSILON = 0.000001;
glMatrix.ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;
glMatrix.RANDOM = Math.random;
glMatrix.ENABLE_SIMD = false;

// Capability detection
glMatrix.SIMD_AVAILABLE = (glMatrix.ARRAY_TYPE === Float32Array) && ('SIMD' in this);
glMatrix.USE_SIMD = glMatrix.ENABLE_SIMD && glMatrix.SIMD_AVAILABLE;

/**
 * Sets the type of array used when creating new vectors and matrices
 *
 * @param {Type} type Array type, such as Float32Array or Array
 */
glMatrix.setMatrixArrayType = function(type) {
    glMatrix.ARRAY_TYPE = type;
}

var degree = Math.PI / 180;

/**
* Convert Degree To Radian
*
* @param {Number} Angle in Degrees
*/
glMatrix.toRadian = function(a){
     return a * degree;
}

/**
 * Tests whether or not the arguments have approximately the same value, within an absolute
 * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less 
 * than or equal to 1.0, and a relative tolerance is used for larger values)
 * 
 * @param {Number} a The first number to test.
 * @param {Number} b The second number to test.
 * @returns {Boolean} True if the numbers are approximately equal, false otherwise.
 */
glMatrix.equals = function(a, b) {
	return Math.abs(a - b) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a), Math.abs(b));
}

module.exports = glMatrix;

},{}],112:[function(require,module,exports){
/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE. */

var glMatrix = require("./common.js");

/**
 * @class 2x2 Matrix
 * @name mat2
 */
var mat2 = {};

/**
 * Creates a new identity mat2
 *
 * @returns {mat2} a new 2x2 matrix
 */
mat2.create = function() {
    var out = new glMatrix.ARRAY_TYPE(4);
    out[0] = 1;
    out[1] = 0;
    out[2] = 0;
    out[3] = 1;
    return out;
};

/**
 * Creates a new mat2 initialized with values from an existing matrix
 *
 * @param {mat2} a matrix to clone
 * @returns {mat2} a new 2x2 matrix
 */
mat2.clone = function(a) {
    var out = new glMatrix.ARRAY_TYPE(4);
    out[0] = a[0];
    out[1] = a[1];
    out[2] = a[2];
    out[3] = a[3];
    return out;
};

/**
 * Copy the values from one mat2 to another
 *
 * @param {mat2} out the receiving matrix
 * @param {mat2} a the source matrix
 * @returns {mat2} out
 */
mat2.copy = function(out, a) {
    out[0] = a[0];
    out[1] = a[1];
    out[2] = a[2];
    out[3] = a[3];
    return out;
};

/**
 * Set a mat2 to the identity matrix
 *
 * @param {mat2} out the receiving matrix
 * @returns {mat2} out
 */
mat2.identity = function(out) {
    out[0] = 1;
    out[1] = 0;
    out[2] = 0;
    out[3] = 1;
    return out;
};

/**
 * Create a new mat2 with the given values
 *
 * @param {Number} m00 Component in column 0, row 0 position (index 0)
 * @param {Number} m01 Component in column 0, row 1 position (index 1)
 * @param {Number} m10 Component in column 1, row 0 position (index 2)
 * @param {Number} m11 Component in column 1, row 1 position (index 3)
 * @returns {mat2} out A new 2x2 matrix
 */
mat2.fromValues = function(m00, m01, m10, m11) {
    var out = new glMatrix.ARRAY_TYPE(4);
    out[0] = m00;
    out[1] = m01;
    out[2] = m10;
    out[3] = m11;
    return out;
};

/**
 * Set the components of a mat2 to the given values
 *
 * @param {mat2} out the receiving matrix
 * @param {Number} m00 Component in column 0, row 0 position (index 0)
 * @param {Number} m01 Component in column 0, row 1 position (index 1)
 * @param {Number} m10 Component in column 1, row 0 position (index 2)
 * @param {Number} m11 Component in column 1, row 1 position (index 3)
 * @returns {mat2} out
 */
mat2.set = function(out, m00, m01, m10, m11) {
    out[0] = m00;
    out[1] = m01;
    out[2] = m10;
    out[3] = m11;
    return out;
};


/**
 * Transpose the values of a mat2
 *
 * @param {mat2} out the receiving matrix
 * @param {mat2} a the source matrix
 * @returns {mat2} out
 */
mat2.transpose = function(out, a) {
    // If we are transposing ourselves we can skip a few steps but have to cache some values
    if (out === a) {
        var a1 = a[1];
        out[1] = a[2];
        out[2] = a1;
    } else {
        out[0] = a[0];
        out[1] = a[2];
        out[2] = a[1];
        out[3] = a[3];
    }
    
    return out;
};

/**
 * Inverts a mat2
 *
 * @param {mat2} out the receiving matrix
 * @param {mat2} a the source matrix
 * @returns {mat2} out
 */
mat2.invert = function(out, a) {
    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],

        // Calculate the determinant
        det = a0 * a3 - a2 * a1;

    if (!det) {
        return null;
    }
    det = 1.0 / det;
    
    out[0] =  a3 * det;
    out[1] = -a1 * det;
    out[2] = -a2 * det;
    out[3] =  a0 * det;

    return out;
};

/**
 * Calculates the adjugate of a mat2
 *
 * @param {mat2} out the receiving matrix
 * @param {mat2} a the source matrix
 * @returns {mat2} out
 */
mat2.adjoint = function(out, a) {
    // Caching this value is nessecary if out == a
    var a0 = a[0];
    out[0] =  a[3];
    out[1] = -a[1];
    out[2] = -a[2];
    out[3] =  a0;

    return out;
};

/**
 * Calculates the determinant of a mat2
 *
 * @param {mat2} a the source matrix
 * @returns {Number} determinant of a
 */
mat2.determinant = function (a) {
    return a[0] * a[3] - a[2] * a[1];
};

/**
 * Multiplies two mat2's
 *
 * @param {mat2} out the receiving matrix
 * @param {mat2} a the first operand
 * @param {mat2} b the second operand
 * @returns {mat2} out
 */
mat2.multiply = function (out, a, b) {
    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];
    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];
    out[0] = a0 * b0 + a2 * b1;
    out[1] = a1 * b0 + a3 * b1;
    out[2] = a0 * b2 + a2 * b3;
    out[3] = a1 * b2 + a3 * b3;
    return out;
};

/**
 * Alias for {@link mat2.multiply}
 * @function
 */
mat2.mul = mat2.multiply;

/**
 * Rotates a mat2 by the given angle
 *
 * @param {mat2} out the receiving matrix
 * @param {mat2} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat2} out
 */
mat2.rotate = function (out, a, rad) {
    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],
        s = Math.sin(rad),
        c = Math.cos(rad);
    out[0] = a0 *  c + a2 * s;
    out[1] = a1 *  c + a3 * s;
    out[2] = a0 * -s + a2 * c;
    out[3] = a1 * -s + a3 * c;
    return out;
};

/**
 * Scales the mat2 by the dimensions in the given vec2
 *
 * @param {mat2} out the receiving matrix
 * @param {mat2} a the matrix to rotate
 * @param {vec2} v the vec2 to scale the matrix by
 * @returns {mat2} out
 **/
mat2.scale = function(out, a, v) {
    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],
        v0 = v[0], v1 = v[1];
    out[0] = a0 * v0;
    out[1] = a1 * v0;
    out[2] = a2 * v1;
    out[3] = a3 * v1;
    return out;
};

/**
 * Creates a matrix from a given angle
 * This is equivalent to (but much faster than):
 *
 *     mat2.identity(dest);
 *     mat2.rotate(dest, dest, rad);
 *
 * @param {mat2} out mat2 receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat2} out
 */
mat2.fromRotation = function(out, rad) {
    var s = Math.sin(rad),
        c = Math.cos(rad);
    out[0] = c;
    out[1] = s;
    out[2] = -s;
    out[3] = c;
    return out;
}

/**
 * Creates a matrix from a vector scaling
 * This is equivalent to (but much faster than):
 *
 *     mat2.identity(dest);
 *     mat2.scale(dest, dest, vec);
 *
 * @param {mat2} out mat2 receiving operation result
 * @param {vec2} v Scaling vector
 * @returns {mat2} out
 */
mat2.fromScaling = function(out, v) {
    out[0] = v[0];
    out[1] = 0;
    out[2] = 0;
    out[3] = v[1];
    return out;
}

/**
 * Returns a string representation of a mat2
 *
 * @param {mat2} mat matrix to represent as a string
 * @returns {String} string representation of the matrix
 */
mat2.str = function (a) {
    return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';
};

/**
 * Returns Frobenius norm of a mat2
 *
 * @param {mat2} a the matrix to calculate Frobenius norm of
 * @returns {Number} Frobenius norm
 */
mat2.frob = function (a) {
    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2)))
};

/**
 * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix
 * @param {mat2} L the lower triangular matrix 
 * @param {mat2} D the diagonal matrix 
 * @param {mat2} U the upper triangular matrix 
 * @param {mat2} a the input matrix to factorize
 */

mat2.LDU = function (L, D, U, a) { 
    L[2] = a[2]/a[0]; 
    U[0] = a[0]; 
    U[1] = a[1]; 
    U[3] = a[3] - L[2] * U[1]; 
    return [L, D, U];       
}; 

/**
 * Adds two mat2's
 *
 * @param {mat2} out the receiving matrix
 * @param {mat2} a the first operand
 * @param {mat2} b the second operand
 * @returns {mat2} out
 */
mat2.add = function(out, a, b) {
    out[0] = a[0] + b[0];
    out[1] = a[1] + b[1];
    out[2] = a[2] + b[2];
    out[3] = a[3] + b[3];
    return out;
};

/**
 * Subtracts matrix b from matrix a
 *
 * @param {mat2} out the receiving matrix
 * @param {mat2} a the first operand
 * @param {mat2} b the second operand
 * @returns {mat2} out
 */
mat2.subtract = function(out, a, b) {
    out[0] = a[0] - b[0];
    out[1] = a[1] - b[1];
    out[2] = a[2] - b[2];
    out[3] = a[3] - b[3];
    return out;
};

/**
 * Alias for {@link mat2.subtract}
 * @function
 */
mat2.sub = mat2.subtract;

/**
 * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)
 *
 * @param {mat2} a The first matrix.
 * @param {mat2} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */
mat2.exactEquals = function (a, b) {
    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];
};

/**
 * Returns whether or not the matrices have approximately the same elements in the same position.
 *
 * @param {mat2} a The first matrix.
 * @param {mat2} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */
mat2.equals = function (a, b) {
    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];
    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];
    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&
            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&
            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&
            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));
};

/**
 * Multiply each element of the matrix by a scalar.
 *
 * @param {mat2} out the receiving matrix
 * @param {mat2} a the matrix to scale
 * @param {Number} b amount to scale the matrix's elements by
 * @returns {mat2} out
 */
mat2.multiplyScalar = function(out, a, b) {
    out[0] = a[0] * b;
    out[1] = a[1] * b;
    out[2] = a[2] * b;
    out[3] = a[3] * b;
    return out;
};

/**
 * Adds two mat2's after multiplying each element of the second operand by a scalar value.
 *
 * @param {mat2} out the receiving vector
 * @param {mat2} a the first operand
 * @param {mat2} b the second operand
 * @param {Number} scale the amount to scale b's elements by before adding
 * @returns {mat2} out
 */
mat2.multiplyScalarAndAdd = function(out, a, b, scale) {
    out[0] = a[0] + (b[0] * scale);
    out[1] = a[1] + (b[1] * scale);
    out[2] = a[2] + (b[2] * scale);
    out[3] = a[3] + (b[3] * scale);
    return out;
};

module.exports = mat2;

},{"./common.js":111}],113:[function(require,module,exports){
/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE. */

var glMatrix = require("./common.js");

/**
 * @class 2x3 Matrix
 * @name mat2d
 * 
 * @description 
 * A mat2d contains six elements defined as:
 * <pre>
 * [a, c, tx,
 *  b, d, ty]
 * </pre>
 * This is a short form for the 3x3 matrix:
 * <pre>
 * [a, c, tx,
 *  b, d, ty,
 *  0, 0, 1]
 * </pre>
 * The last row is ignored so the array is shorter and operations are faster.
 */
var mat2d = {};

/**
 * Creates a new identity mat2d
 *
 * @returns {mat2d} a new 2x3 matrix
 */
mat2d.create = function() {
    var out = new glMatrix.ARRAY_TYPE(6);
    out[0] = 1;
    out[1] = 0;
    out[2] = 0;
    out[3] = 1;
    out[4] = 0;
    out[5] = 0;
    return out;
};

/**
 * Creates a new mat2d initialized with values from an existing matrix
 *
 * @param {mat2d} a matrix to clone
 * @returns {mat2d} a new 2x3 matrix
 */
mat2d.clone = function(a) {
    var out = new glMatrix.ARRAY_TYPE(6);
    out[0] = a[0];
    out[1] = a[1];
    out[2] = a[2];
    out[3] = a[3];
    out[4] = a[4];
    out[5] = a[5];
    return out;
};

/**
 * Copy the values from one mat2d to another
 *
 * @param {mat2d} out the receiving matrix
 * @param {mat2d} a the source matrix
 * @returns {mat2d} out
 */
mat2d.copy = function(out, a) {
    out[0] = a[0];
    out[1] = a[1];
    out[2] = a[2];
    out[3] = a[3];
    out[4] = a[4];
    out[5] = a[5];
    return out;
};

/**
 * Set a mat2d to the identity matrix
 *
 * @param {mat2d} out the receiving matrix
 * @returns {mat2d} out
 */
mat2d.identity = function(out) {
    out[0] = 1;
    out[1] = 0;
    out[2] = 0;
    out[3] = 1;
    out[4] = 0;
    out[5] = 0;
    return out;
};

/**
 * Create a new mat2d with the given values
 *
 * @param {Number} a Component A (index 0)
 * @param {Number} b Component B (index 1)
 * @param {Number} c Component C (index 2)
 * @param {Number} d Component D (index 3)
 * @param {Number} tx Component TX (index 4)
 * @param {Number} ty Component TY (index 5)
 * @returns {mat2d} A new mat2d
 */
mat2d.fromValues = function(a, b, c, d, tx, ty) {
    var out = new glMatrix.ARRAY_TYPE(6);
    out[0] = a;
    out[1] = b;
    out[2] = c;
    out[3] = d;
    out[4] = tx;
    out[5] = ty;
    return out;
};

/**
 * Set the components of a mat2d to the given values
 *
 * @param {mat2d} out the receiving matrix
 * @param {Number} a Component A (index 0)
 * @param {Number} b Component B (index 1)
 * @param {Number} c Component C (index 2)
 * @param {Number} d Component D (index 3)
 * @param {Number} tx Component TX (index 4)
 * @param {Number} ty Component TY (index 5)
 * @returns {mat2d} out
 */
mat2d.set = function(out, a, b, c, d, tx, ty) {
    out[0] = a;
    out[1] = b;
    out[2] = c;
    out[3] = d;
    out[4] = tx;
    out[5] = ty;
    return out;
};

/**
 * Inverts a mat2d
 *
 * @param {mat2d} out the receiving matrix
 * @param {mat2d} a the source matrix
 * @returns {mat2d} out
 */
mat2d.invert = function(out, a) {
    var aa = a[0], ab = a[1], ac = a[2], ad = a[3],
        atx = a[4], aty = a[5];

    var det = aa * ad - ab * ac;
    if(!det){
        return null;
    }
    det = 1.0 / det;

    out[0] = ad * det;
    out[1] = -ab * det;
    out[2] = -ac * det;
    out[3] = aa * det;
    out[4] = (ac * aty - ad * atx) * det;
    out[5] = (ab * atx - aa * aty) * det;
    return out;
};

/**
 * Calculates the determinant of a mat2d
 *
 * @param {mat2d} a the source matrix
 * @returns {Number} determinant of a
 */
mat2d.determinant = function (a) {
    return a[0] * a[3] - a[1] * a[2];
};

/**
 * Multiplies two mat2d's
 *
 * @param {mat2d} out the receiving matrix
 * @param {mat2d} a the first operand
 * @param {mat2d} b the second operand
 * @returns {mat2d} out
 */
mat2d.multiply = function (out, a, b) {
    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],
        b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];
    out[0] = a0 * b0 + a2 * b1;
    out[1] = a1 * b0 + a3 * b1;
    out[2] = a0 * b2 + a2 * b3;
    out[3] = a1 * b2 + a3 * b3;
    out[4] = a0 * b4 + a2 * b5 + a4;
    out[5] = a1 * b4 + a3 * b5 + a5;
    return out;
};

/**
 * Alias for {@link mat2d.multiply}
 * @function
 */
mat2d.mul = mat2d.multiply;

/**
 * Rotates a mat2d by the given angle
 *
 * @param {mat2d} out the receiving matrix
 * @param {mat2d} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat2d} out
 */
mat2d.rotate = function (out, a, rad) {
    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],
        s = Math.sin(rad),
        c = Math.cos(rad);
    out[0] = a0 *  c + a2 * s;
    out[1] = a1 *  c + a3 * s;
    out[2] = a0 * -s + a2 * c;
    out[3] = a1 * -s + a3 * c;
    out[4] = a4;
    out[5] = a5;
    return out;
};

/**
 * Scales the mat2d by the dimensions in the given vec2
 *
 * @param {mat2d} out the receiving matrix
 * @param {mat2d} a the matrix to translate
 * @param {vec2} v the vec2 to scale the matrix by
 * @returns {mat2d} out
 **/
mat2d.scale = function(out, a, v) {
    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],
        v0 = v[0], v1 = v[1];
    out[0] = a0 * v0;
    out[1] = a1 * v0;
    out[2] = a2 * v1;
    out[3] = a3 * v1;
    out[4] = a4;
    out[5] = a5;
    return out;
};

/**
 * Translates the mat2d by the dimensions in the given vec2
 *
 * @param {mat2d} out the receiving matrix
 * @param {mat2d} a the matrix to translate
 * @param {vec2} v the vec2 to translate the matrix by
 * @returns {mat2d} out
 **/
mat2d.translate = function(out, a, v) {
    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],
        v0 = v[0], v1 = v[1];
    out[0] = a0;
    out[1] = a1;
    out[2] = a2;
    out[3] = a3;
    out[4] = a0 * v0 + a2 * v1 + a4;
    out[5] = a1 * v0 + a3 * v1 + a5;
    return out;
};

/**
 * Creates a matrix from a given angle
 * This is equivalent to (but much faster than):
 *
 *     mat2d.identity(dest);
 *     mat2d.rotate(dest, dest, rad);
 *
 * @param {mat2d} out mat2d receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat2d} out
 */
mat2d.fromRotation = function(out, rad) {
    var s = Math.sin(rad), c = Math.cos(rad);
    out[0] = c;
    out[1] = s;
    out[2] = -s;
    out[3] = c;
    out[4] = 0;
    out[5] = 0;
    return out;
}

/**
 * Creates a matrix from a vector scaling
 * This is equivalent to (but much faster than):
 *
 *     mat2d.identity(dest);
 *     mat2d.scale(dest, dest, vec);
 *
 * @param {mat2d} out mat2d receiving operation result
 * @param {vec2} v Scaling vector
 * @returns {mat2d} out
 */
mat2d.fromScaling = function(out, v) {
    out[0] = v[0];
    out[1] = 0;
    out[2] = 0;
    out[3] = v[1];
    out[4] = 0;
    out[5] = 0;
    return out;
}

/**
 * Creates a matrix from a vector translation
 * This is equivalent to (but much faster than):
 *
 *     mat2d.identity(dest);
 *     mat2d.translate(dest, dest, vec);
 *
 * @param {mat2d} out mat2d receiving operation result
 * @param {vec2} v Translation vector
 * @returns {mat2d} out
 */
mat2d.fromTranslation = function(out, v) {
    out[0] = 1;
    out[1] = 0;
    out[2] = 0;
    out[3] = 1;
    out[4] = v[0];
    out[5] = v[1];
    return out;
}

/**
 * Returns a string representation of a mat2d
 *
 * @param {mat2d} a matrix to represent as a string
 * @returns {String} string representation of the matrix
 */
mat2d.str = function (a) {
    return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + 
                    a[3] + ', ' + a[4] + ', ' + a[5] + ')';
};

/**
 * Returns Frobenius norm of a mat2d
 *
 * @param {mat2d} a the matrix to calculate Frobenius norm of
 * @returns {Number} Frobenius norm
 */
mat2d.frob = function (a) { 
    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1))
}; 

/**
 * Adds two mat2d's
 *
 * @param {mat2d} out the receiving matrix
 * @param {mat2d} a the first operand
 * @param {mat2d} b the second operand
 * @returns {mat2d} out
 */
mat2d.add = function(out, a, b) {
    out[0] = a[0] + b[0];
    out[1] = a[1] + b[1];
    out[2] = a[2] + b[2];
    out[3] = a[3] + b[3];
    out[4] = a[4] + b[4];
    out[5] = a[5] + b[5];
    return out;
};

/**
 * Subtracts matrix b from matrix a
 *
 * @param {mat2d} out the receiving matrix
 * @param {mat2d} a the first operand
 * @param {mat2d} b the second operand
 * @returns {mat2d} out
 */
mat2d.subtract = function(out, a, b) {
    out[0] = a[0] - b[0];
    out[1] = a[1] - b[1];
    out[2] = a[2] - b[2];
    out[3] = a[3] - b[3];
    out[4] = a[4] - b[4];
    out[5] = a[5] - b[5];
    return out;
};

/**
 * Alias for {@link mat2d.subtract}
 * @function
 */
mat2d.sub = mat2d.subtract;

/**
 * Multiply each element of the matrix by a scalar.
 *
 * @param {mat2d} out the receiving matrix
 * @param {mat2d} a the matrix to scale
 * @param {Number} b amount to scale the matrix's elements by
 * @returns {mat2d} out
 */
mat2d.multiplyScalar = function(out, a, b) {
    out[0] = a[0] * b;
    out[1] = a[1] * b;
    out[2] = a[2] * b;
    out[3] = a[3] * b;
    out[4] = a[4] * b;
    out[5] = a[5] * b;
    return out;
};

/**
 * Adds two mat2d's after multiplying each element of the second operand by a scalar value.
 *
 * @param {mat2d} out the receiving vector
 * @param {mat2d} a the first operand
 * @param {mat2d} b the second operand
 * @param {Number} scale the amount to scale b's elements by before adding
 * @returns {mat2d} out
 */
mat2d.multiplyScalarAndAdd = function(out, a, b, scale) {
    out[0] = a[0] + (b[0] * scale);
    out[1] = a[1] + (b[1] * scale);
    out[2] = a[2] + (b[2] * scale);
    out[3] = a[3] + (b[3] * scale);
    out[4] = a[4] + (b[4] * scale);
    out[5] = a[5] + (b[5] * scale);
    return out;
};

/**
 * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)
 *
 * @param {mat2d} a The first matrix.
 * @param {mat2d} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */
mat2d.exactEquals = function (a, b) {
    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];
};

/**
 * Returns whether or not the matrices have approximately the same elements in the same position.
 *
 * @param {mat2d} a The first matrix.
 * @param {mat2d} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */
mat2d.equals = function (a, b) {
    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];
    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];
    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&
            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&
            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&
            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&
            Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&
            Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)));
};

module.exports = mat2d;

},{"./common.js":111}],114:[function(require,module,exports){
/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE. */

var glMatrix = require("./common.js");

/**
 * @class 3x3 Matrix
 * @name mat3
 */
var mat3 = {};

/**
 * Creates a new identity mat3
 *
 * @returns {mat3} a new 3x3 matrix
 */
mat3.create = function() {
    var out = new glMatrix.ARRAY_TYPE(9);
    out[0] = 1;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 1;
    out[5] = 0;
    out[6] = 0;
    out[7] = 0;
    out[8] = 1;
    return out;
};

/**
 * Copies the upper-left 3x3 values into the given mat3.
 *
 * @param {mat3} out the receiving 3x3 matrix
 * @param {mat4} a   the source 4x4 matrix
 * @returns {mat3} out
 */
mat3.fromMat4 = function(out, a) {
    out[0] = a[0];
    out[1] = a[1];
    out[2] = a[2];
    out[3] = a[4];
    out[4] = a[5];
    out[5] = a[6];
    out[6] = a[8];
    out[7] = a[9];
    out[8] = a[10];
    return out;
};

/**
 * Creates a new mat3 initialized with values from an existing matrix
 *
 * @param {mat3} a matrix to clone
 * @returns {mat3} a new 3x3 matrix
 */
mat3.clone = function(a) {
    var out = new glMatrix.ARRAY_TYPE(9);
    out[0] = a[0];
    out[1] = a[1];
    out[2] = a[2];
    out[3] = a[3];
    out[4] = a[4];
    out[5] = a[5];
    out[6] = a[6];
    out[7] = a[7];
    out[8] = a[8];
    return out;
};

/**
 * Copy the values from one mat3 to another
 *
 * @param {mat3} out the receiving matrix
 * @param {mat3} a the source matrix
 * @returns {mat3} out
 */
mat3.copy = function(out, a) {
    out[0] = a[0];
    out[1] = a[1];
    out[2] = a[2];
    out[3] = a[3];
    out[4] = a[4];
    out[5] = a[5];
    out[6] = a[6];
    out[7] = a[7];
    out[8] = a[8];
    return out;
};

/**
 * Create a new mat3 with the given values
 *
 * @param {Number} m00 Component in column 0, row 0 position (index 0)
 * @param {Number} m01 Component in column 0, row 1 position (index 1)
 * @param {Number} m02 Component in column 0, row 2 position (index 2)
 * @param {Number} m10 Component in column 1, row 0 position (index 3)
 * @param {Number} m11 Component in column 1, row 1 position (index 4)
 * @param {Number} m12 Component in column 1, row 2 position (index 5)
 * @param {Number} m20 Component in column 2, row 0 position (index 6)
 * @param {Number} m21 Component in column 2, row 1 position (index 7)
 * @param {Number} m22 Component in column 2, row 2 position (index 8)
 * @returns {mat3} A new mat3
 */
mat3.fromValues = function(m00, m01, m02, m10, m11, m12, m20, m21, m22) {
    var out = new glMatrix.ARRAY_TYPE(9);
    out[0] = m00;
    out[1] = m01;
    out[2] = m02;
    out[3] = m10;
    out[4] = m11;
    out[5] = m12;
    out[6] = m20;
    out[7] = m21;
    out[8] = m22;
    return out;
};

/**
 * Set the components of a mat3 to the given values
 *
 * @param {mat3} out the receiving matrix
 * @param {Number} m00 Component in column 0, row 0 position (index 0)
 * @param {Number} m01 Component in column 0, row 1 position (index 1)
 * @param {Number} m02 Component in column 0, row 2 position (index 2)
 * @param {Number} m10 Component in column 1, row 0 position (index 3)
 * @param {Number} m11 Component in column 1, row 1 position (index 4)
 * @param {Number} m12 Component in column 1, row 2 position (index 5)
 * @param {Number} m20 Component in column 2, row 0 position (index 6)
 * @param {Number} m21 Component in column 2, row 1 position (index 7)
 * @param {Number} m22 Component in column 2, row 2 position (index 8)
 * @returns {mat3} out
 */
mat3.set = function(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {
    out[0] = m00;
    out[1] = m01;
    out[2] = m02;
    out[3] = m10;
    out[4] = m11;
    out[5] = m12;
    out[6] = m20;
    out[7] = m21;
    out[8] = m22;
    return out;
};

/**
 * Set a mat3 to the identity matrix
 *
 * @param {mat3} out the receiving matrix
 * @returns {mat3} out
 */
mat3.identity = function(out) {
    out[0] = 1;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 1;
    out[5] = 0;
    out[6] = 0;
    out[7] = 0;
    out[8] = 1;
    return out;
};

/**
 * Transpose the values of a mat3
 *
 * @param {mat3} out the receiving matrix
 * @param {mat3} a the source matrix
 * @returns {mat3} out
 */
mat3.transpose = function(out, a) {
    // If we are transposing ourselves we can skip a few steps but have to cache some values
    if (out === a) {
        var a01 = a[1], a02 = a[2], a12 = a[5];
        out[1] = a[3];
        out[2] = a[6];
        out[3] = a01;
        out[5] = a[7];
        out[6] = a02;
        out[7] = a12;
    } else {
        out[0] = a[0];
        out[1] = a[3];
        out[2] = a[6];
        out[3] = a[1];
        out[4] = a[4];
        out[5] = a[7];
        out[6] = a[2];
        out[7] = a[5];
        out[8] = a[8];
    }
    
    return out;
};

/**
 * Inverts a mat3
 *
 * @param {mat3} out the receiving matrix
 * @param {mat3} a the source matrix
 * @returns {mat3} out
 */
mat3.invert = function(out, a) {
    var a00 = a[0], a01 = a[1], a02 = a[2],
        a10 = a[3], a11 = a[4], a12 = a[5],
        a20 = a[6], a21 = a[7], a22 = a[8],

        b01 = a22 * a11 - a12 * a21,
        b11 = -a22 * a10 + a12 * a20,
        b21 = a21 * a10 - a11 * a20,

        // Calculate the determinant
        det = a00 * b01 + a01 * b11 + a02 * b21;

    if (!det) { 
        return null; 
    }
    det = 1.0 / det;

    out[0] = b01 * det;
    out[1] = (-a22 * a01 + a02 * a21) * det;
    out[2] = (a12 * a01 - a02 * a11) * det;
    out[3] = b11 * det;
    out[4] = (a22 * a00 - a02 * a20) * det;
    out[5] = (-a12 * a00 + a02 * a10) * det;
    out[6] = b21 * det;
    out[7] = (-a21 * a00 + a01 * a20) * det;
    out[8] = (a11 * a00 - a01 * a10) * det;
    return out;
};

/**
 * Calculates the adjugate of a mat3
 *
 * @param {mat3} out the receiving matrix
 * @param {mat3} a the source matrix
 * @returns {mat3} out
 */
mat3.adjoint = function(out, a) {
    var a00 = a[0], a01 = a[1], a02 = a[2],
        a10 = a[3], a11 = a[4], a12 = a[5],
        a20 = a[6], a21 = a[7], a22 = a[8];

    out[0] = (a11 * a22 - a12 * a21);
    out[1] = (a02 * a21 - a01 * a22);
    out[2] = (a01 * a12 - a02 * a11);
    out[3] = (a12 * a20 - a10 * a22);
    out[4] = (a00 * a22 - a02 * a20);
    out[5] = (a02 * a10 - a00 * a12);
    out[6] = (a10 * a21 - a11 * a20);
    out[7] = (a01 * a20 - a00 * a21);
    out[8] = (a00 * a11 - a01 * a10);
    return out;
};

/**
 * Calculates the determinant of a mat3
 *
 * @param {mat3} a the source matrix
 * @returns {Number} determinant of a
 */
mat3.determinant = function (a) {
    var a00 = a[0], a01 = a[1], a02 = a[2],
        a10 = a[3], a11 = a[4], a12 = a[5],
        a20 = a[6], a21 = a[7], a22 = a[8];

    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);
};

/**
 * Multiplies two mat3's
 *
 * @param {mat3} out the receiving matrix
 * @param {mat3} a the first operand
 * @param {mat3} b the second operand
 * @returns {mat3} out
 */
mat3.multiply = function (out, a, b) {
    var a00 = a[0], a01 = a[1], a02 = a[2],
        a10 = a[3], a11 = a[4], a12 = a[5],
        a20 = a[6], a21 = a[7], a22 = a[8],

        b00 = b[0], b01 = b[1], b02 = b[2],
        b10 = b[3], b11 = b[4], b12 = b[5],
        b20 = b[6], b21 = b[7], b22 = b[8];

    out[0] = b00 * a00 + b01 * a10 + b02 * a20;
    out[1] = b00 * a01 + b01 * a11 + b02 * a21;
    out[2] = b00 * a02 + b01 * a12 + b02 * a22;

    out[3] = b10 * a00 + b11 * a10 + b12 * a20;
    out[4] = b10 * a01 + b11 * a11 + b12 * a21;
    out[5] = b10 * a02 + b11 * a12 + b12 * a22;

    out[6] = b20 * a00 + b21 * a10 + b22 * a20;
    out[7] = b20 * a01 + b21 * a11 + b22 * a21;
    out[8] = b20 * a02 + b21 * a12 + b22 * a22;
    return out;
};

/**
 * Alias for {@link mat3.multiply}
 * @function
 */
mat3.mul = mat3.multiply;

/**
 * Translate a mat3 by the given vector
 *
 * @param {mat3} out the receiving matrix
 * @param {mat3} a the matrix to translate
 * @param {vec2} v vector to translate by
 * @returns {mat3} out
 */
mat3.translate = function(out, a, v) {
    var a00 = a[0], a01 = a[1], a02 = a[2],
        a10 = a[3], a11 = a[4], a12 = a[5],
        a20 = a[6], a21 = a[7], a22 = a[8],
        x = v[0], y = v[1];

    out[0] = a00;
    out[1] = a01;
    out[2] = a02;

    out[3] = a10;
    out[4] = a11;
    out[5] = a12;

    out[6] = x * a00 + y * a10 + a20;
    out[7] = x * a01 + y * a11 + a21;
    out[8] = x * a02 + y * a12 + a22;
    return out;
};

/**
 * Rotates a mat3 by the given angle
 *
 * @param {mat3} out the receiving matrix
 * @param {mat3} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat3} out
 */
mat3.rotate = function (out, a, rad) {
    var a00 = a[0], a01 = a[1], a02 = a[2],
        a10 = a[3], a11 = a[4], a12 = a[5],
        a20 = a[6], a21 = a[7], a22 = a[8],

        s = Math.sin(rad),
        c = Math.cos(rad);

    out[0] = c * a00 + s * a10;
    out[1] = c * a01 + s * a11;
    out[2] = c * a02 + s * a12;

    out[3] = c * a10 - s * a00;
    out[4] = c * a11 - s * a01;
    out[5] = c * a12 - s * a02;

    out[6] = a20;
    out[7] = a21;
    out[8] = a22;
    return out;
};

/**
 * Scales the mat3 by the dimensions in the given vec2
 *
 * @param {mat3} out the receiving matrix
 * @param {mat3} a the matrix to rotate
 * @param {vec2} v the vec2 to scale the matrix by
 * @returns {mat3} out
 **/
mat3.scale = function(out, a, v) {
    var x = v[0], y = v[1];

    out[0] = x * a[0];
    out[1] = x * a[1];
    out[2] = x * a[2];

    out[3] = y * a[3];
    out[4] = y * a[4];
    out[5] = y * a[5];

    out[6] = a[6];
    out[7] = a[7];
    out[8] = a[8];
    return out;
};

/**
 * Creates a matrix from a vector translation
 * This is equivalent to (but much faster than):
 *
 *     mat3.identity(dest);
 *     mat3.translate(dest, dest, vec);
 *
 * @param {mat3} out mat3 receiving operation result
 * @param {vec2} v Translation vector
 * @returns {mat3} out
 */
mat3.fromTranslation = function(out, v) {
    out[0] = 1;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 1;
    out[5] = 0;
    out[6] = v[0];
    out[7] = v[1];
    out[8] = 1;
    return out;
}

/**
 * Creates a matrix from a given angle
 * This is equivalent to (but much faster than):
 *
 *     mat3.identity(dest);
 *     mat3.rotate(dest, dest, rad);
 *
 * @param {mat3} out mat3 receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat3} out
 */
mat3.fromRotation = function(out, rad) {
    var s = Math.sin(rad), c = Math.cos(rad);

    out[0] = c;
    out[1] = s;
    out[2] = 0;

    out[3] = -s;
    out[4] = c;
    out[5] = 0;

    out[6] = 0;
    out[7] = 0;
    out[8] = 1;
    return out;
}

/**
 * Creates a matrix from a vector scaling
 * This is equivalent to (but much faster than):
 *
 *     mat3.identity(dest);
 *     mat3.scale(dest, dest, vec);
 *
 * @param {mat3} out mat3 receiving operation result
 * @param {vec2} v Scaling vector
 * @returns {mat3} out
 */
mat3.fromScaling = function(out, v) {
    out[0] = v[0];
    out[1] = 0;
    out[2] = 0;

    out[3] = 0;
    out[4] = v[1];
    out[5] = 0;

    out[6] = 0;
    out[7] = 0;
    out[8] = 1;
    return out;
}

/**
 * Copies the values from a mat2d into a mat3
 *
 * @param {mat3} out the receiving matrix
 * @param {mat2d} a the matrix to copy
 * @returns {mat3} out
 **/
mat3.fromMat2d = function(out, a) {
    out[0] = a[0];
    out[1] = a[1];
    out[2] = 0;

    out[3] = a[2];
    out[4] = a[3];
    out[5] = 0;

    out[6] = a[4];
    out[7] = a[5];
    out[8] = 1;
    return out;
};

/**
* Calculates a 3x3 matrix from the given quaternion
*
* @param {mat3} out mat3 receiving operation result
* @param {quat} q Quaternion to create matrix from
*
* @returns {mat3} out
*/
mat3.fromQuat = function (out, q) {
    var x = q[0], y = q[1], z = q[2], w = q[3],
        x2 = x + x,
        y2 = y + y,
        z2 = z + z,

        xx = x * x2,
        yx = y * x2,
        yy = y * y2,
        zx = z * x2,
        zy = z * y2,
        zz = z * z2,
        wx = w * x2,
        wy = w * y2,
        wz = w * z2;

    out[0] = 1 - yy - zz;
    out[3] = yx - wz;
    out[6] = zx + wy;

    out[1] = yx + wz;
    out[4] = 1 - xx - zz;
    out[7] = zy - wx;

    out[2] = zx - wy;
    out[5] = zy + wx;
    out[8] = 1 - xx - yy;

    return out;
};

/**
* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix
*
* @param {mat3} out mat3 receiving operation result
* @param {mat4} a Mat4 to derive the normal matrix from
*
* @returns {mat3} out
*/
mat3.normalFromMat4 = function (out, a) {
    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],
        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],
        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],
        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],

        b00 = a00 * a11 - a01 * a10,
        b01 = a00 * a12 - a02 * a10,
        b02 = a00 * a13 - a03 * a10,
        b03 = a01 * a12 - a02 * a11,
        b04 = a01 * a13 - a03 * a11,
        b05 = a02 * a13 - a03 * a12,
        b06 = a20 * a31 - a21 * a30,
        b07 = a20 * a32 - a22 * a30,
        b08 = a20 * a33 - a23 * a30,
        b09 = a21 * a32 - a22 * a31,
        b10 = a21 * a33 - a23 * a31,
        b11 = a22 * a33 - a23 * a32,

        // Calculate the determinant
        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;

    if (!det) { 
        return null; 
    }
    det = 1.0 / det;

    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;
    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;
    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;

    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;
    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;
    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;

    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;
    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;
    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;

    return out;
};

/**
 * Returns a string representation of a mat3
 *
 * @param {mat3} mat matrix to represent as a string
 * @returns {String} string representation of the matrix
 */
mat3.str = function (a) {
    return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + 
                    a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + 
                    a[6] + ', ' + a[7] + ', ' + a[8] + ')';
};

/**
 * Returns Frobenius norm of a mat3
 *
 * @param {mat3} a the matrix to calculate Frobenius norm of
 * @returns {Number} Frobenius norm
 */
mat3.frob = function (a) {
    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2)))
};

/**
 * Adds two mat3's
 *
 * @param {mat3} out the receiving matrix
 * @param {mat3} a the first operand
 * @param {mat3} b the second operand
 * @returns {mat3} out
 */
mat3.add = function(out, a, b) {
    out[0] = a[0] + b[0];
    out[1] = a[1] + b[1];
    out[2] = a[2] + b[2];
    out[3] = a[3] + b[3];
    out[4] = a[4] + b[4];
    out[5] = a[5] + b[5];
    out[6] = a[6] + b[6];
    out[7] = a[7] + b[7];
    out[8] = a[8] + b[8];
    return out;
};

/**
 * Subtracts matrix b from matrix a
 *
 * @param {mat3} out the receiving matrix
 * @param {mat3} a the first operand
 * @param {mat3} b the second operand
 * @returns {mat3} out
 */
mat3.subtract = function(out, a, b) {
    out[0] = a[0] - b[0];
    out[1] = a[1] - b[1];
    out[2] = a[2] - b[2];
    out[3] = a[3] - b[3];
    out[4] = a[4] - b[4];
    out[5] = a[5] - b[5];
    out[6] = a[6] - b[6];
    out[7] = a[7] - b[7];
    out[8] = a[8] - b[8];
    return out;
};

/**
 * Alias for {@link mat3.subtract}
 * @function
 */
mat3.sub = mat3.subtract;

/**
 * Multiply each element of the matrix by a scalar.
 *
 * @param {mat3} out the receiving matrix
 * @param {mat3} a the matrix to scale
 * @param {Number} b amount to scale the matrix's elements by
 * @returns {mat3} out
 */
mat3.multiplyScalar = function(out, a, b) {
    out[0] = a[0] * b;
    out[1] = a[1] * b;
    out[2] = a[2] * b;
    out[3] = a[3] * b;
    out[4] = a[4] * b;
    out[5] = a[5] * b;
    out[6] = a[6] * b;
    out[7] = a[7] * b;
    out[8] = a[8] * b;
    return out;
};

/**
 * Adds two mat3's after multiplying each element of the second operand by a scalar value.
 *
 * @param {mat3} out the receiving vector
 * @param {mat3} a the first operand
 * @param {mat3} b the second operand
 * @param {Number} scale the amount to scale b's elements by before adding
 * @returns {mat3} out
 */
mat3.multiplyScalarAndAdd = function(out, a, b, scale) {
    out[0] = a[0] + (b[0] * scale);
    out[1] = a[1] + (b[1] * scale);
    out[2] = a[2] + (b[2] * scale);
    out[3] = a[3] + (b[3] * scale);
    out[4] = a[4] + (b[4] * scale);
    out[5] = a[5] + (b[5] * scale);
    out[6] = a[6] + (b[6] * scale);
    out[7] = a[7] + (b[7] * scale);
    out[8] = a[8] + (b[8] * scale);
    return out;
};

/*
 * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)
 *
 * @param {mat3} a The first matrix.
 * @param {mat3} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */
mat3.exactEquals = function (a, b) {
    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && 
           a[3] === b[3] && a[4] === b[4] && a[5] === b[5] &&
           a[6] === b[6] && a[7] === b[7] && a[8] === b[8];
};

/**
 * Returns whether or not the matrices have approximately the same elements in the same position.
 *
 * @param {mat3} a The first matrix.
 * @param {mat3} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */
mat3.equals = function (a, b) {
    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5], a6 = a[6], a7 = a[7], a8 = a[8];
    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = a[6], b7 = b[7], b8 = b[8];
    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&
            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&
            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&
            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&
            Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&
            Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&
            Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&
            Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&
            Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)));
};


module.exports = mat3;

},{"./common.js":111}],115:[function(require,module,exports){
/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE. */

var glMatrix = require("./common.js");

/**
 * @class 4x4 Matrix
 * @name mat4
 */
var mat4 = {
  scalar: {},
  SIMD: {},
};

/**
 * Creates a new identity mat4
 *
 * @returns {mat4} a new 4x4 matrix
 */
mat4.create = function() {
    var out = new glMatrix.ARRAY_TYPE(16);
    out[0] = 1;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 0;
    out[5] = 1;
    out[6] = 0;
    out[7] = 0;
    out[8] = 0;
    out[9] = 0;
    out[10] = 1;
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 1;
    return out;
};

/**
 * Creates a new mat4 initialized with values from an existing matrix
 *
 * @param {mat4} a matrix to clone
 * @returns {mat4} a new 4x4 matrix
 */
mat4.clone = function(a) {
    var out = new glMatrix.ARRAY_TYPE(16);
    out[0] = a[0];
    out[1] = a[1];
    out[2] = a[2];
    out[3] = a[3];
    out[4] = a[4];
    out[5] = a[5];
    out[6] = a[6];
    out[7] = a[7];
    out[8] = a[8];
    out[9] = a[9];
    out[10] = a[10];
    out[11] = a[11];
    out[12] = a[12];
    out[13] = a[13];
    out[14] = a[14];
    out[15] = a[15];
    return out;
};

/**
 * Copy the values from one mat4 to another
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the source matrix
 * @returns {mat4} out
 */
mat4.copy = function(out, a) {
    out[0] = a[0];
    out[1] = a[1];
    out[2] = a[2];
    out[3] = a[3];
    out[4] = a[4];
    out[5] = a[5];
    out[6] = a[6];
    out[7] = a[7];
    out[8] = a[8];
    out[9] = a[9];
    out[10] = a[10];
    out[11] = a[11];
    out[12] = a[12];
    out[13] = a[13];
    out[14] = a[14];
    out[15] = a[15];
    return out;
};

/**
 * Create a new mat4 with the given values
 *
 * @param {Number} m00 Component in column 0, row 0 position (index 0)
 * @param {Number} m01 Component in column 0, row 1 position (index 1)
 * @param {Number} m02 Component in column 0, row 2 position (index 2)
 * @param {Number} m03 Component in column 0, row 3 position (index 3)
 * @param {Number} m10 Component in column 1, row 0 position (index 4)
 * @param {Number} m11 Component in column 1, row 1 position (index 5)
 * @param {Number} m12 Component in column 1, row 2 position (index 6)
 * @param {Number} m13 Component in column 1, row 3 position (index 7)
 * @param {Number} m20 Component in column 2, row 0 position (index 8)
 * @param {Number} m21 Component in column 2, row 1 position (index 9)
 * @param {Number} m22 Component in column 2, row 2 position (index 10)
 * @param {Number} m23 Component in column 2, row 3 position (index 11)
 * @param {Number} m30 Component in column 3, row 0 position (index 12)
 * @param {Number} m31 Component in column 3, row 1 position (index 13)
 * @param {Number} m32 Component in column 3, row 2 position (index 14)
 * @param {Number} m33 Component in column 3, row 3 position (index 15)
 * @returns {mat4} A new mat4
 */
mat4.fromValues = function(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {
    var out = new glMatrix.ARRAY_TYPE(16);
    out[0] = m00;
    out[1] = m01;
    out[2] = m02;
    out[3] = m03;
    out[4] = m10;
    out[5] = m11;
    out[6] = m12;
    out[7] = m13;
    out[8] = m20;
    out[9] = m21;
    out[10] = m22;
    out[11] = m23;
    out[12] = m30;
    out[13] = m31;
    out[14] = m32;
    out[15] = m33;
    return out;
};

/**
 * Set the components of a mat4 to the given values
 *
 * @param {mat4} out the receiving matrix
 * @param {Number} m00 Component in column 0, row 0 position (index 0)
 * @param {Number} m01 Component in column 0, row 1 position (index 1)
 * @param {Number} m02 Component in column 0, row 2 position (index 2)
 * @param {Number} m03 Component in column 0, row 3 position (index 3)
 * @param {Number} m10 Component in column 1, row 0 position (index 4)
 * @param {Number} m11 Component in column 1, row 1 position (index 5)
 * @param {Number} m12 Component in column 1, row 2 position (index 6)
 * @param {Number} m13 Component in column 1, row 3 position (index 7)
 * @param {Number} m20 Component in column 2, row 0 position (index 8)
 * @param {Number} m21 Component in column 2, row 1 position (index 9)
 * @param {Number} m22 Component in column 2, row 2 position (index 10)
 * @param {Number} m23 Component in column 2, row 3 position (index 11)
 * @param {Number} m30 Component in column 3, row 0 position (index 12)
 * @param {Number} m31 Component in column 3, row 1 position (index 13)
 * @param {Number} m32 Component in column 3, row 2 position (index 14)
 * @param {Number} m33 Component in column 3, row 3 position (index 15)
 * @returns {mat4} out
 */
mat4.set = function(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {
    out[0] = m00;
    out[1] = m01;
    out[2] = m02;
    out[3] = m03;
    out[4] = m10;
    out[5] = m11;
    out[6] = m12;
    out[7] = m13;
    out[8] = m20;
    out[9] = m21;
    out[10] = m22;
    out[11] = m23;
    out[12] = m30;
    out[13] = m31;
    out[14] = m32;
    out[15] = m33;
    return out;
};


/**
 * Set a mat4 to the identity matrix
 *
 * @param {mat4} out the receiving matrix
 * @returns {mat4} out
 */
mat4.identity = function(out) {
    out[0] = 1;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 0;
    out[5] = 1;
    out[6] = 0;
    out[7] = 0;
    out[8] = 0;
    out[9] = 0;
    out[10] = 1;
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 1;
    return out;
};

/**
 * Transpose the values of a mat4 not using SIMD
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the source matrix
 * @returns {mat4} out
 */
mat4.scalar.transpose = function(out, a) {
    // If we are transposing ourselves we can skip a few steps but have to cache some values
    if (out === a) {
        var a01 = a[1], a02 = a[2], a03 = a[3],
            a12 = a[6], a13 = a[7],
            a23 = a[11];

        out[1] = a[4];
        out[2] = a[8];
        out[3] = a[12];
        out[4] = a01;
        out[6] = a[9];
        out[7] = a[13];
        out[8] = a02;
        out[9] = a12;
        out[11] = a[14];
        out[12] = a03;
        out[13] = a13;
        out[14] = a23;
    } else {
        out[0] = a[0];
        out[1] = a[4];
        out[2] = a[8];
        out[3] = a[12];
        out[4] = a[1];
        out[5] = a[5];
        out[6] = a[9];
        out[7] = a[13];
        out[8] = a[2];
        out[9] = a[6];
        out[10] = a[10];
        out[11] = a[14];
        out[12] = a[3];
        out[13] = a[7];
        out[14] = a[11];
        out[15] = a[15];
    }

    return out;
};

/**
 * Transpose the values of a mat4 using SIMD
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the source matrix
 * @returns {mat4} out
 */
mat4.SIMD.transpose = function(out, a) {
    var a0, a1, a2, a3,
        tmp01, tmp23,
        out0, out1, out2, out3;

    a0 = SIMD.Float32x4.load(a, 0);
    a1 = SIMD.Float32x4.load(a, 4);
    a2 = SIMD.Float32x4.load(a, 8);
    a3 = SIMD.Float32x4.load(a, 12);

    tmp01 = SIMD.Float32x4.shuffle(a0, a1, 0, 1, 4, 5);
    tmp23 = SIMD.Float32x4.shuffle(a2, a3, 0, 1, 4, 5);
    out0  = SIMD.Float32x4.shuffle(tmp01, tmp23, 0, 2, 4, 6);
    out1  = SIMD.Float32x4.shuffle(tmp01, tmp23, 1, 3, 5, 7);
    SIMD.Float32x4.store(out, 0,  out0);
    SIMD.Float32x4.store(out, 4,  out1);

    tmp01 = SIMD.Float32x4.shuffle(a0, a1, 2, 3, 6, 7);
    tmp23 = SIMD.Float32x4.shuffle(a2, a3, 2, 3, 6, 7);
    out2  = SIMD.Float32x4.shuffle(tmp01, tmp23, 0, 2, 4, 6);
    out3  = SIMD.Float32x4.shuffle(tmp01, tmp23, 1, 3, 5, 7);
    SIMD.Float32x4.store(out, 8,  out2);
    SIMD.Float32x4.store(out, 12, out3);

    return out;
};

/**
 * Transpse a mat4 using SIMD if available and enabled
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the source matrix
 * @returns {mat4} out
 */
mat4.transpose = glMatrix.USE_SIMD ? mat4.SIMD.transpose : mat4.scalar.transpose;

/**
 * Inverts a mat4 not using SIMD
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the source matrix
 * @returns {mat4} out
 */
mat4.scalar.invert = function(out, a) {
    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],
        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],
        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],
        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],

        b00 = a00 * a11 - a01 * a10,
        b01 = a00 * a12 - a02 * a10,
        b02 = a00 * a13 - a03 * a10,
        b03 = a01 * a12 - a02 * a11,
        b04 = a01 * a13 - a03 * a11,
        b05 = a02 * a13 - a03 * a12,
        b06 = a20 * a31 - a21 * a30,
        b07 = a20 * a32 - a22 * a30,
        b08 = a20 * a33 - a23 * a30,
        b09 = a21 * a32 - a22 * a31,
        b10 = a21 * a33 - a23 * a31,
        b11 = a22 * a33 - a23 * a32,

        // Calculate the determinant
        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;

    if (!det) {
        return null;
    }
    det = 1.0 / det;

    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;
    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;
    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;
    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;
    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;
    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;
    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;
    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;
    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;
    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;
    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;
    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;
    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;
    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;
    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;
    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;

    return out;
};

/**
 * Inverts a mat4 using SIMD
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the source matrix
 * @returns {mat4} out
 */
mat4.SIMD.invert = function(out, a) {
  var row0, row1, row2, row3,
      tmp1,
      minor0, minor1, minor2, minor3,
      det,
      a0 = SIMD.Float32x4.load(a, 0),
      a1 = SIMD.Float32x4.load(a, 4),
      a2 = SIMD.Float32x4.load(a, 8),
      a3 = SIMD.Float32x4.load(a, 12);

  // Compute matrix adjugate
  tmp1 = SIMD.Float32x4.shuffle(a0, a1, 0, 1, 4, 5);
  row1 = SIMD.Float32x4.shuffle(a2, a3, 0, 1, 4, 5);
  row0 = SIMD.Float32x4.shuffle(tmp1, row1, 0, 2, 4, 6);
  row1 = SIMD.Float32x4.shuffle(row1, tmp1, 1, 3, 5, 7);
  tmp1 = SIMD.Float32x4.shuffle(a0, a1, 2, 3, 6, 7);
  row3 = SIMD.Float32x4.shuffle(a2, a3, 2, 3, 6, 7);
  row2 = SIMD.Float32x4.shuffle(tmp1, row3, 0, 2, 4, 6);
  row3 = SIMD.Float32x4.shuffle(row3, tmp1, 1, 3, 5, 7);

  tmp1   = SIMD.Float32x4.mul(row2, row3);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
  minor0 = SIMD.Float32x4.mul(row1, tmp1);
  minor1 = SIMD.Float32x4.mul(row0, tmp1);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
  minor0 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row1, tmp1), minor0);
  minor1 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor1);
  minor1 = SIMD.Float32x4.swizzle(minor1, 2, 3, 0, 1);

  tmp1   = SIMD.Float32x4.mul(row1, row2);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
  minor0 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor0);
  minor3 = SIMD.Float32x4.mul(row0, tmp1);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
  minor0 = SIMD.Float32x4.sub(minor0, SIMD.Float32x4.mul(row3, tmp1));
  minor3 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor3);
  minor3 = SIMD.Float32x4.swizzle(minor3, 2, 3, 0, 1);

  tmp1   = SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(row1, 2, 3, 0, 1), row3);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
  row2   = SIMD.Float32x4.swizzle(row2, 2, 3, 0, 1);
  minor0 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row2, tmp1), minor0);
  minor2 = SIMD.Float32x4.mul(row0, tmp1);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
  minor0 = SIMD.Float32x4.sub(minor0, SIMD.Float32x4.mul(row2, tmp1));
  minor2 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor2);
  minor2 = SIMD.Float32x4.swizzle(minor2, 2, 3, 0, 1);

  tmp1   = SIMD.Float32x4.mul(row0, row1);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
  minor2 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor2);
  minor3 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row2, tmp1), minor3);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
  minor2 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row3, tmp1), minor2);
  minor3 = SIMD.Float32x4.sub(minor3, SIMD.Float32x4.mul(row2, tmp1));

  tmp1   = SIMD.Float32x4.mul(row0, row3);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
  minor1 = SIMD.Float32x4.sub(minor1, SIMD.Float32x4.mul(row2, tmp1));
  minor2 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row1, tmp1), minor2);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
  minor1 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row2, tmp1), minor1);
  minor2 = SIMD.Float32x4.sub(minor2, SIMD.Float32x4.mul(row1, tmp1));

  tmp1   = SIMD.Float32x4.mul(row0, row2);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
  minor1 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor1);
  minor3 = SIMD.Float32x4.sub(minor3, SIMD.Float32x4.mul(row1, tmp1));
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
  minor1 = SIMD.Float32x4.sub(minor1, SIMD.Float32x4.mul(row3, tmp1));
  minor3 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row1, tmp1), minor3);

  // Compute matrix determinant
  det   = SIMD.Float32x4.mul(row0, minor0);
  det   = SIMD.Float32x4.add(SIMD.Float32x4.swizzle(det, 2, 3, 0, 1), det);
  det   = SIMD.Float32x4.add(SIMD.Float32x4.swizzle(det, 1, 0, 3, 2), det);
  tmp1  = SIMD.Float32x4.reciprocalApproximation(det);
  det   = SIMD.Float32x4.sub(
               SIMD.Float32x4.add(tmp1, tmp1),
               SIMD.Float32x4.mul(det, SIMD.Float32x4.mul(tmp1, tmp1)));
  det   = SIMD.Float32x4.swizzle(det, 0, 0, 0, 0);
  if (!det) {
      return null;
  }

  // Compute matrix inverse
  SIMD.Float32x4.store(out, 0,  SIMD.Float32x4.mul(det, minor0));
  SIMD.Float32x4.store(out, 4,  SIMD.Float32x4.mul(det, minor1));
  SIMD.Float32x4.store(out, 8,  SIMD.Float32x4.mul(det, minor2));
  SIMD.Float32x4.store(out, 12, SIMD.Float32x4.mul(det, minor3));
  return out;
}

/**
 * Inverts a mat4 using SIMD if available and enabled
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the source matrix
 * @returns {mat4} out
 */
mat4.invert = glMatrix.USE_SIMD ? mat4.SIMD.invert : mat4.scalar.invert;

/**
 * Calculates the adjugate of a mat4 not using SIMD
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the source matrix
 * @returns {mat4} out
 */
mat4.scalar.adjoint = function(out, a) {
    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],
        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],
        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],
        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];

    out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));
    out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));
    out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));
    out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));
    out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));
    out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));
    out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));
    out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));
    out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));
    out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));
    out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));
    out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));
    out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));
    out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));
    out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));
    out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));
    return out;
};

/**
 * Calculates the adjugate of a mat4 using SIMD
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the source matrix
 * @returns {mat4} out
 */
mat4.SIMD.adjoint = function(out, a) {
  var a0, a1, a2, a3;
  var row0, row1, row2, row3;
  var tmp1;
  var minor0, minor1, minor2, minor3;

  var a0 = SIMD.Float32x4.load(a, 0);
  var a1 = SIMD.Float32x4.load(a, 4);
  var a2 = SIMD.Float32x4.load(a, 8);
  var a3 = SIMD.Float32x4.load(a, 12);

  // Transpose the source matrix.  Sort of.  Not a true transpose operation
  tmp1 = SIMD.Float32x4.shuffle(a0, a1, 0, 1, 4, 5);
  row1 = SIMD.Float32x4.shuffle(a2, a3, 0, 1, 4, 5);
  row0 = SIMD.Float32x4.shuffle(tmp1, row1, 0, 2, 4, 6);
  row1 = SIMD.Float32x4.shuffle(row1, tmp1, 1, 3, 5, 7);

  tmp1 = SIMD.Float32x4.shuffle(a0, a1, 2, 3, 6, 7);
  row3 = SIMD.Float32x4.shuffle(a2, a3, 2, 3, 6, 7);
  row2 = SIMD.Float32x4.shuffle(tmp1, row3, 0, 2, 4, 6);
  row3 = SIMD.Float32x4.shuffle(row3, tmp1, 1, 3, 5, 7);

  tmp1   = SIMD.Float32x4.mul(row2, row3);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
  minor0 = SIMD.Float32x4.mul(row1, tmp1);
  minor1 = SIMD.Float32x4.mul(row0, tmp1);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
  minor0 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row1, tmp1), minor0);
  minor1 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor1);
  minor1 = SIMD.Float32x4.swizzle(minor1, 2, 3, 0, 1);

  tmp1   = SIMD.Float32x4.mul(row1, row2);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
  minor0 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor0);
  minor3 = SIMD.Float32x4.mul(row0, tmp1);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
  minor0 = SIMD.Float32x4.sub(minor0, SIMD.Float32x4.mul(row3, tmp1));
  minor3 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor3);
  minor3 = SIMD.Float32x4.swizzle(minor3, 2, 3, 0, 1);

  tmp1   = SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(row1, 2, 3, 0, 1), row3);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
  row2   = SIMD.Float32x4.swizzle(row2, 2, 3, 0, 1);
  minor0 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row2, tmp1), minor0);
  minor2 = SIMD.Float32x4.mul(row0, tmp1);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
  minor0 = SIMD.Float32x4.sub(minor0, SIMD.Float32x4.mul(row2, tmp1));
  minor2 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor2);
  minor2 = SIMD.Float32x4.swizzle(minor2, 2, 3, 0, 1);

  tmp1   = SIMD.Float32x4.mul(row0, row1);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
  minor2 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor2);
  minor3 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row2, tmp1), minor3);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
  minor2 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row3, tmp1), minor2);
  minor3 = SIMD.Float32x4.sub(minor3, SIMD.Float32x4.mul(row2, tmp1));

  tmp1   = SIMD.Float32x4.mul(row0, row3);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
  minor1 = SIMD.Float32x4.sub(minor1, SIMD.Float32x4.mul(row2, tmp1));
  minor2 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row1, tmp1), minor2);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
  minor1 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row2, tmp1), minor1);
  minor2 = SIMD.Float32x4.sub(minor2, SIMD.Float32x4.mul(row1, tmp1));

  tmp1   = SIMD.Float32x4.mul(row0, row2);
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
  minor1 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor1);
  minor3 = SIMD.Float32x4.sub(minor3, SIMD.Float32x4.mul(row1, tmp1));
  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
  minor1 = SIMD.Float32x4.sub(minor1, SIMD.Float32x4.mul(row3, tmp1));
  minor3 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row1, tmp1), minor3);

  SIMD.Float32x4.store(out, 0,  minor0);
  SIMD.Float32x4.store(out, 4,  minor1);
  SIMD.Float32x4.store(out, 8,  minor2);
  SIMD.Float32x4.store(out, 12, minor3);
  return out;
};

/**
 * Calculates the adjugate of a mat4 using SIMD if available and enabled
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the source matrix
 * @returns {mat4} out
 */
 mat4.adjoint = glMatrix.USE_SIMD ? mat4.SIMD.adjoint : mat4.scalar.adjoint;

/**
 * Calculates the determinant of a mat4
 *
 * @param {mat4} a the source matrix
 * @returns {Number} determinant of a
 */
mat4.determinant = function (a) {
    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],
        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],
        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],
        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],

        b00 = a00 * a11 - a01 * a10,
        b01 = a00 * a12 - a02 * a10,
        b02 = a00 * a13 - a03 * a10,
        b03 = a01 * a12 - a02 * a11,
        b04 = a01 * a13 - a03 * a11,
        b05 = a02 * a13 - a03 * a12,
        b06 = a20 * a31 - a21 * a30,
        b07 = a20 * a32 - a22 * a30,
        b08 = a20 * a33 - a23 * a30,
        b09 = a21 * a32 - a22 * a31,
        b10 = a21 * a33 - a23 * a31,
        b11 = a22 * a33 - a23 * a32;

    // Calculate the determinant
    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
};

/**
 * Multiplies two mat4's explicitly using SIMD
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the first operand, must be a Float32Array
 * @param {mat4} b the second operand, must be a Float32Array
 * @returns {mat4} out
 */
mat4.SIMD.multiply = function (out, a, b) {
    var a0 = SIMD.Float32x4.load(a, 0);
    var a1 = SIMD.Float32x4.load(a, 4);
    var a2 = SIMD.Float32x4.load(a, 8);
    var a3 = SIMD.Float32x4.load(a, 12);

    var b0 = SIMD.Float32x4.load(b, 0);
    var out0 = SIMD.Float32x4.add(
                   SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b0, 0, 0, 0, 0), a0),
                   SIMD.Float32x4.add(
                       SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b0, 1, 1, 1, 1), a1),
                       SIMD.Float32x4.add(
                           SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b0, 2, 2, 2, 2), a2),
                           SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b0, 3, 3, 3, 3), a3))));
    SIMD.Float32x4.store(out, 0, out0);

    var b1 = SIMD.Float32x4.load(b, 4);
    var out1 = SIMD.Float32x4.add(
                   SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b1, 0, 0, 0, 0), a0),
                   SIMD.Float32x4.add(
                       SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b1, 1, 1, 1, 1), a1),
                       SIMD.Float32x4.add(
                           SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b1, 2, 2, 2, 2), a2),
                           SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b1, 3, 3, 3, 3), a3))));
    SIMD.Float32x4.store(out, 4, out1);

    var b2 = SIMD.Float32x4.load(b, 8);
    var out2 = SIMD.Float32x4.add(
                   SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b2, 0, 0, 0, 0), a0),
                   SIMD.Float32x4.add(
                       SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b2, 1, 1, 1, 1), a1),
                       SIMD.Float32x4.add(
                               SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b2, 2, 2, 2, 2), a2),
                               SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b2, 3, 3, 3, 3), a3))));
    SIMD.Float32x4.store(out, 8, out2);

    var b3 = SIMD.Float32x4.load(b, 12);
    var out3 = SIMD.Float32x4.add(
                   SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b3, 0, 0, 0, 0), a0),
                   SIMD.Float32x4.add(
                        SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b3, 1, 1, 1, 1), a1),
                        SIMD.Float32x4.add(
                            SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b3, 2, 2, 2, 2), a2),
                            SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b3, 3, 3, 3, 3), a3))));
    SIMD.Float32x4.store(out, 12, out3);

    return out;
};

/**
 * Multiplies two mat4's explicitly not using SIMD
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the first operand
 * @param {mat4} b the second operand
 * @returns {mat4} out
 */
mat4.scalar.multiply = function (out, a, b) {
    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],
        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],
        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],
        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];

    // Cache only the current line of the second matrix
    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];
    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;
    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;
    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;
    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;

    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];
    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;
    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;
    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;
    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;

    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];
    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;
    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;
    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;
    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;

    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];
    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;
    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;
    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;
    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;
    return out;
};

/**
 * Multiplies two mat4's using SIMD if available and enabled
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the first operand
 * @param {mat4} b the second operand
 * @returns {mat4} out
 */
mat4.multiply = glMatrix.USE_SIMD ? mat4.SIMD.multiply : mat4.scalar.multiply;

/**
 * Alias for {@link mat4.multiply}
 * @function
 */
mat4.mul = mat4.multiply;

/**
 * Translate a mat4 by the given vector not using SIMD
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to translate
 * @param {vec3} v vector to translate by
 * @returns {mat4} out
 */
mat4.scalar.translate = function (out, a, v) {
    var x = v[0], y = v[1], z = v[2],
        a00, a01, a02, a03,
        a10, a11, a12, a13,
        a20, a21, a22, a23;

    if (a === out) {
        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];
        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];
        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];
        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];
    } else {
        a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];
        a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];
        a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];

        out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;
        out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;
        out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;

        out[12] = a00 * x + a10 * y + a20 * z + a[12];
        out[13] = a01 * x + a11 * y + a21 * z + a[13];
        out[14] = a02 * x + a12 * y + a22 * z + a[14];
        out[15] = a03 * x + a13 * y + a23 * z + a[15];
    }

    return out;
};

/**
 * Translates a mat4 by the given vector using SIMD
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to translate
 * @param {vec3} v vector to translate by
 * @returns {mat4} out
 */
mat4.SIMD.translate = function (out, a, v) {
    var a0 = SIMD.Float32x4.load(a, 0),
        a1 = SIMD.Float32x4.load(a, 4),
        a2 = SIMD.Float32x4.load(a, 8),
        a3 = SIMD.Float32x4.load(a, 12),
        vec = SIMD.Float32x4(v[0], v[1], v[2] , 0);

    if (a !== out) {
        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];
        out[4] = a[4]; out[5] = a[5]; out[6] = a[6]; out[7] = a[7];
        out[8] = a[8]; out[9] = a[9]; out[10] = a[10]; out[11] = a[11];
    }

    a0 = SIMD.Float32x4.mul(a0, SIMD.Float32x4.swizzle(vec, 0, 0, 0, 0));
    a1 = SIMD.Float32x4.mul(a1, SIMD.Float32x4.swizzle(vec, 1, 1, 1, 1));
    a2 = SIMD.Float32x4.mul(a2, SIMD.Float32x4.swizzle(vec, 2, 2, 2, 2));

    var t0 = SIMD.Float32x4.add(a0, SIMD.Float32x4.add(a1, SIMD.Float32x4.add(a2, a3)));
    SIMD.Float32x4.store(out, 12, t0);

    return out;
};

/**
 * Translates a mat4 by the given vector using SIMD if available and enabled
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to translate
 * @param {vec3} v vector to translate by
 * @returns {mat4} out
 */
mat4.translate = glMatrix.USE_SIMD ? mat4.SIMD.translate : mat4.scalar.translate;

/**
 * Scales the mat4 by the dimensions in the given vec3 not using vectorization
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to scale
 * @param {vec3} v the vec3 to scale the matrix by
 * @returns {mat4} out
 **/
mat4.scalar.scale = function(out, a, v) {
    var x = v[0], y = v[1], z = v[2];

    out[0] = a[0] * x;
    out[1] = a[1] * x;
    out[2] = a[2] * x;
    out[3] = a[3] * x;
    out[4] = a[4] * y;
    out[5] = a[5] * y;
    out[6] = a[6] * y;
    out[7] = a[7] * y;
    out[8] = a[8] * z;
    out[9] = a[9] * z;
    out[10] = a[10] * z;
    out[11] = a[11] * z;
    out[12] = a[12];
    out[13] = a[13];
    out[14] = a[14];
    out[15] = a[15];
    return out;
};

/**
 * Scales the mat4 by the dimensions in the given vec3 using vectorization
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to scale
 * @param {vec3} v the vec3 to scale the matrix by
 * @returns {mat4} out
 **/
mat4.SIMD.scale = function(out, a, v) {
    var a0, a1, a2;
    var vec = SIMD.Float32x4(v[0], v[1], v[2], 0);

    a0 = SIMD.Float32x4.load(a, 0);
    SIMD.Float32x4.store(
        out, 0, SIMD.Float32x4.mul(a0, SIMD.Float32x4.swizzle(vec, 0, 0, 0, 0)));

    a1 = SIMD.Float32x4.load(a, 4);
    SIMD.Float32x4.store(
        out, 4, SIMD.Float32x4.mul(a1, SIMD.Float32x4.swizzle(vec, 1, 1, 1, 1)));

    a2 = SIMD.Float32x4.load(a, 8);
    SIMD.Float32x4.store(
        out, 8, SIMD.Float32x4.mul(a2, SIMD.Float32x4.swizzle(vec, 2, 2, 2, 2)));

    out[12] = a[12];
    out[13] = a[13];
    out[14] = a[14];
    out[15] = a[15];
    return out;
};

/**
 * Scales the mat4 by the dimensions in the given vec3 using SIMD if available and enabled
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to scale
 * @param {vec3} v the vec3 to scale the matrix by
 * @returns {mat4} out
 */
mat4.scale = glMatrix.USE_SIMD ? mat4.SIMD.scale : mat4.scalar.scale;

/**
 * Rotates a mat4 by the given angle around the given axis
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @param {vec3} axis the axis to rotate around
 * @returns {mat4} out
 */
mat4.rotate = function (out, a, rad, axis) {
    var x = axis[0], y = axis[1], z = axis[2],
        len = Math.sqrt(x * x + y * y + z * z),
        s, c, t,
        a00, a01, a02, a03,
        a10, a11, a12, a13,
        a20, a21, a22, a23,
        b00, b01, b02,
        b10, b11, b12,
        b20, b21, b22;

    if (Math.abs(len) < glMatrix.EPSILON) { return null; }

    len = 1 / len;
    x *= len;
    y *= len;
    z *= len;

    s = Math.sin(rad);
    c = Math.cos(rad);
    t = 1 - c;

    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];
    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];
    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];

    // Construct the elements of the rotation matrix
    b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;
    b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;
    b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;

    // Perform rotation-specific matrix multiplication
    out[0] = a00 * b00 + a10 * b01 + a20 * b02;
    out[1] = a01 * b00 + a11 * b01 + a21 * b02;
    out[2] = a02 * b00 + a12 * b01 + a22 * b02;
    out[3] = a03 * b00 + a13 * b01 + a23 * b02;
    out[4] = a00 * b10 + a10 * b11 + a20 * b12;
    out[5] = a01 * b10 + a11 * b11 + a21 * b12;
    out[6] = a02 * b10 + a12 * b11 + a22 * b12;
    out[7] = a03 * b10 + a13 * b11 + a23 * b12;
    out[8] = a00 * b20 + a10 * b21 + a20 * b22;
    out[9] = a01 * b20 + a11 * b21 + a21 * b22;
    out[10] = a02 * b20 + a12 * b21 + a22 * b22;
    out[11] = a03 * b20 + a13 * b21 + a23 * b22;

    if (a !== out) { // If the source and destination differ, copy the unchanged last row
        out[12] = a[12];
        out[13] = a[13];
        out[14] = a[14];
        out[15] = a[15];
    }
    return out;
};

/**
 * Rotates a matrix by the given angle around the X axis not using SIMD
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */
mat4.scalar.rotateX = function (out, a, rad) {
    var s = Math.sin(rad),
        c = Math.cos(rad),
        a10 = a[4],
        a11 = a[5],
        a12 = a[6],
        a13 = a[7],
        a20 = a[8],
        a21 = a[9],
        a22 = a[10],
        a23 = a[11];

    if (a !== out) { // If the source and destination differ, copy the unchanged rows
        out[0]  = a[0];
        out[1]  = a[1];
        out[2]  = a[2];
        out[3]  = a[3];
        out[12] = a[12];
        out[13] = a[13];
        out[14] = a[14];
        out[15] = a[15];
    }

    // Perform axis-specific matrix multiplication
    out[4] = a10 * c + a20 * s;
    out[5] = a11 * c + a21 * s;
    out[6] = a12 * c + a22 * s;
    out[7] = a13 * c + a23 * s;
    out[8] = a20 * c - a10 * s;
    out[9] = a21 * c - a11 * s;
    out[10] = a22 * c - a12 * s;
    out[11] = a23 * c - a13 * s;
    return out;
};

/**
 * Rotates a matrix by the given angle around the X axis using SIMD
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */
mat4.SIMD.rotateX = function (out, a, rad) {
    var s = SIMD.Float32x4.splat(Math.sin(rad)),
        c = SIMD.Float32x4.splat(Math.cos(rad));

    if (a !== out) { // If the source and destination differ, copy the unchanged rows
      out[0]  = a[0];
      out[1]  = a[1];
      out[2]  = a[2];
      out[3]  = a[3];
      out[12] = a[12];
      out[13] = a[13];
      out[14] = a[14];
      out[15] = a[15];
    }

    // Perform axis-specific matrix multiplication
    var a_1 = SIMD.Float32x4.load(a, 4);
    var a_2 = SIMD.Float32x4.load(a, 8);
    SIMD.Float32x4.store(out, 4,
                         SIMD.Float32x4.add(SIMD.Float32x4.mul(a_1, c), SIMD.Float32x4.mul(a_2, s)));
    SIMD.Float32x4.store(out, 8,
                         SIMD.Float32x4.sub(SIMD.Float32x4.mul(a_2, c), SIMD.Float32x4.mul(a_1, s)));
    return out;
};

/**
 * Rotates a matrix by the given angle around the X axis using SIMD if availabe and enabled
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */
mat4.rotateX = glMatrix.USE_SIMD ? mat4.SIMD.rotateX : mat4.scalar.rotateX;

/**
 * Rotates a matrix by the given angle around the Y axis not using SIMD
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */
mat4.scalar.rotateY = function (out, a, rad) {
    var s = Math.sin(rad),
        c = Math.cos(rad),
        a00 = a[0],
        a01 = a[1],
        a02 = a[2],
        a03 = a[3],
        a20 = a[8],
        a21 = a[9],
        a22 = a[10],
        a23 = a[11];

    if (a !== out) { // If the source and destination differ, copy the unchanged rows
        out[4]  = a[4];
        out[5]  = a[5];
        out[6]  = a[6];
        out[7]  = a[7];
        out[12] = a[12];
        out[13] = a[13];
        out[14] = a[14];
        out[15] = a[15];
    }

    // Perform axis-specific matrix multiplication
    out[0] = a00 * c - a20 * s;
    out[1] = a01 * c - a21 * s;
    out[2] = a02 * c - a22 * s;
    out[3] = a03 * c - a23 * s;
    out[8] = a00 * s + a20 * c;
    out[9] = a01 * s + a21 * c;
    out[10] = a02 * s + a22 * c;
    out[11] = a03 * s + a23 * c;
    return out;
};

/**
 * Rotates a matrix by the given angle around the Y axis using SIMD
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */
mat4.SIMD.rotateY = function (out, a, rad) {
    var s = SIMD.Float32x4.splat(Math.sin(rad)),
        c = SIMD.Float32x4.splat(Math.cos(rad));

    if (a !== out) { // If the source and destination differ, copy the unchanged rows
        out[4]  = a[4];
        out[5]  = a[5];
        out[6]  = a[6];
        out[7]  = a[7];
        out[12] = a[12];
        out[13] = a[13];
        out[14] = a[14];
        out[15] = a[15];
    }

    // Perform axis-specific matrix multiplication
    var a_0 = SIMD.Float32x4.load(a, 0);
    var a_2 = SIMD.Float32x4.load(a, 8);
    SIMD.Float32x4.store(out, 0,
                         SIMD.Float32x4.sub(SIMD.Float32x4.mul(a_0, c), SIMD.Float32x4.mul(a_2, s)));
    SIMD.Float32x4.store(out, 8,
                         SIMD.Float32x4.add(SIMD.Float32x4.mul(a_0, s), SIMD.Float32x4.mul(a_2, c)));
    return out;
};

/**
 * Rotates a matrix by the given angle around the Y axis if SIMD available and enabled
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */
 mat4.rotateY = glMatrix.USE_SIMD ? mat4.SIMD.rotateY : mat4.scalar.rotateY;

/**
 * Rotates a matrix by the given angle around the Z axis not using SIMD
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */
mat4.scalar.rotateZ = function (out, a, rad) {
    var s = Math.sin(rad),
        c = Math.cos(rad),
        a00 = a[0],
        a01 = a[1],
        a02 = a[2],
        a03 = a[3],
        a10 = a[4],
        a11 = a[5],
        a12 = a[6],
        a13 = a[7];

    if (a !== out) { // If the source and destination differ, copy the unchanged last row
        out[8]  = a[8];
        out[9]  = a[9];
        out[10] = a[10];
        out[11] = a[11];
        out[12] = a[12];
        out[13] = a[13];
        out[14] = a[14];
        out[15] = a[15];
    }

    // Perform axis-specific matrix multiplication
    out[0] = a00 * c + a10 * s;
    out[1] = a01 * c + a11 * s;
    out[2] = a02 * c + a12 * s;
    out[3] = a03 * c + a13 * s;
    out[4] = a10 * c - a00 * s;
    out[5] = a11 * c - a01 * s;
    out[6] = a12 * c - a02 * s;
    out[7] = a13 * c - a03 * s;
    return out;
};

/**
 * Rotates a matrix by the given angle around the Z axis using SIMD
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */
mat4.SIMD.rotateZ = function (out, a, rad) {
    var s = SIMD.Float32x4.splat(Math.sin(rad)),
        c = SIMD.Float32x4.splat(Math.cos(rad));

    if (a !== out) { // If the source and destination differ, copy the unchanged last row
        out[8]  = a[8];
        out[9]  = a[9];
        out[10] = a[10];
        out[11] = a[11];
        out[12] = a[12];
        out[13] = a[13];
        out[14] = a[14];
        out[15] = a[15];
    }

    // Perform axis-specific matrix multiplication
    var a_0 = SIMD.Float32x4.load(a, 0);
    var a_1 = SIMD.Float32x4.load(a, 4);
    SIMD.Float32x4.store(out, 0,
                         SIMD.Float32x4.add(SIMD.Float32x4.mul(a_0, c), SIMD.Float32x4.mul(a_1, s)));
    SIMD.Float32x4.store(out, 4,
                         SIMD.Float32x4.sub(SIMD.Float32x4.mul(a_1, c), SIMD.Float32x4.mul(a_0, s)));
    return out;
};

/**
 * Rotates a matrix by the given angle around the Z axis if SIMD available and enabled
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */
 mat4.rotateZ = glMatrix.USE_SIMD ? mat4.SIMD.rotateZ : mat4.scalar.rotateZ;

/**
 * Creates a matrix from a vector translation
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.translate(dest, dest, vec);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {vec3} v Translation vector
 * @returns {mat4} out
 */
mat4.fromTranslation = function(out, v) {
    out[0] = 1;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 0;
    out[5] = 1;
    out[6] = 0;
    out[7] = 0;
    out[8] = 0;
    out[9] = 0;
    out[10] = 1;
    out[11] = 0;
    out[12] = v[0];
    out[13] = v[1];
    out[14] = v[2];
    out[15] = 1;
    return out;
}

/**
 * Creates a matrix from a vector scaling
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.scale(dest, dest, vec);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {vec3} v Scaling vector
 * @returns {mat4} out
 */
mat4.fromScaling = function(out, v) {
    out[0] = v[0];
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 0;
    out[5] = v[1];
    out[6] = 0;
    out[7] = 0;
    out[8] = 0;
    out[9] = 0;
    out[10] = v[2];
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 1;
    return out;
}

/**
 * Creates a matrix from a given angle around a given axis
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.rotate(dest, dest, rad, axis);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @param {vec3} axis the axis to rotate around
 * @returns {mat4} out
 */
mat4.fromRotation = function(out, rad, axis) {
    var x = axis[0], y = axis[1], z = axis[2],
        len = Math.sqrt(x * x + y * y + z * z),
        s, c, t;

    if (Math.abs(len) < glMatrix.EPSILON) { return null; }

    len = 1 / len;
    x *= len;
    y *= len;
    z *= len;

    s = Math.sin(rad);
    c = Math.cos(rad);
    t = 1 - c;

    // Perform rotation-specific matrix multiplication
    out[0] = x * x * t + c;
    out[1] = y * x * t + z * s;
    out[2] = z * x * t - y * s;
    out[3] = 0;
    out[4] = x * y * t - z * s;
    out[5] = y * y * t + c;
    out[6] = z * y * t + x * s;
    out[7] = 0;
    out[8] = x * z * t + y * s;
    out[9] = y * z * t - x * s;
    out[10] = z * z * t + c;
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 1;
    return out;
}

/**
 * Creates a matrix from the given angle around the X axis
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.rotateX(dest, dest, rad);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */
mat4.fromXRotation = function(out, rad) {
    var s = Math.sin(rad),
        c = Math.cos(rad);

    // Perform axis-specific matrix multiplication
    out[0]  = 1;
    out[1]  = 0;
    out[2]  = 0;
    out[3]  = 0;
    out[4] = 0;
    out[5] = c;
    out[6] = s;
    out[7] = 0;
    out[8] = 0;
    out[9] = -s;
    out[10] = c;
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 1;
    return out;
}

/**
 * Creates a matrix from the given angle around the Y axis
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.rotateY(dest, dest, rad);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */
mat4.fromYRotation = function(out, rad) {
    var s = Math.sin(rad),
        c = Math.cos(rad);

    // Perform axis-specific matrix multiplication
    out[0]  = c;
    out[1]  = 0;
    out[2]  = -s;
    out[3]  = 0;
    out[4] = 0;
    out[5] = 1;
    out[6] = 0;
    out[7] = 0;
    out[8] = s;
    out[9] = 0;
    out[10] = c;
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 1;
    return out;
}

/**
 * Creates a matrix from the given angle around the Z axis
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.rotateZ(dest, dest, rad);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */
mat4.fromZRotation = function(out, rad) {
    var s = Math.sin(rad),
        c = Math.cos(rad);

    // Perform axis-specific matrix multiplication
    out[0]  = c;
    out[1]  = s;
    out[2]  = 0;
    out[3]  = 0;
    out[4] = -s;
    out[5] = c;
    out[6] = 0;
    out[7] = 0;
    out[8] = 0;
    out[9] = 0;
    out[10] = 1;
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 1;
    return out;
}

/**
 * Creates a matrix from a quaternion rotation and vector translation
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.translate(dest, vec);
 *     var quatMat = mat4.create();
 *     quat4.toMat4(quat, quatMat);
 *     mat4.multiply(dest, quatMat);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {quat4} q Rotation quaternion
 * @param {vec3} v Translation vector
 * @returns {mat4} out
 */
mat4.fromRotationTranslation = function (out, q, v) {
    // Quaternion math
    var x = q[0], y = q[1], z = q[2], w = q[3],
        x2 = x + x,
        y2 = y + y,
        z2 = z + z,

        xx = x * x2,
        xy = x * y2,
        xz = x * z2,
        yy = y * y2,
        yz = y * z2,
        zz = z * z2,
        wx = w * x2,
        wy = w * y2,
        wz = w * z2;

    out[0] = 1 - (yy + zz);
    out[1] = xy + wz;
    out[2] = xz - wy;
    out[3] = 0;
    out[4] = xy - wz;
    out[5] = 1 - (xx + zz);
    out[6] = yz + wx;
    out[7] = 0;
    out[8] = xz + wy;
    out[9] = yz - wx;
    out[10] = 1 - (xx + yy);
    out[11] = 0;
    out[12] = v[0];
    out[13] = v[1];
    out[14] = v[2];
    out[15] = 1;

    return out;
};

/**
 * Returns the translation vector component of a transformation
 *  matrix. If a matrix is built with fromRotationTranslation,
 *  the returned vector will be the same as the translation vector
 *  originally supplied.
 * @param  {vec3} out Vector to receive translation component
 * @param  {mat4} mat Matrix to be decomposed (input)
 * @return {vec3} out
 */
mat4.getTranslation = function (out, mat) {
  out[0] = mat[12];
  out[1] = mat[13];
  out[2] = mat[14];

  return out;
};

/**
 * Returns a quaternion representing the rotational component
 *  of a transformation matrix. If a matrix is built with
 *  fromRotationTranslation, the returned quaternion will be the
 *  same as the quaternion originally supplied.
 * @param {quat} out Quaternion to receive the rotation component
 * @param {mat4} mat Matrix to be decomposed (input)
 * @return {quat} out
 */
mat4.getRotation = function (out, mat) {
  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm
  var trace = mat[0] + mat[5] + mat[10];
  var S = 0;

  if (trace > 0) { 
    S = Math.sqrt(trace + 1.0) * 2;
    out[3] = 0.25 * S;
    out[0] = (mat[6] - mat[9]) / S;
    out[1] = (mat[8] - mat[2]) / S; 
    out[2] = (mat[1] - mat[4]) / S; 
  } else if ((mat[0] > mat[5])&(mat[0] > mat[10])) { 
    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;
    out[3] = (mat[6] - mat[9]) / S;
    out[0] = 0.25 * S;
    out[1] = (mat[1] + mat[4]) / S; 
    out[2] = (mat[8] + mat[2]) / S; 
  } else if (mat[5] > mat[10]) { 
    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;
    out[3] = (mat[8] - mat[2]) / S;
    out[0] = (mat[1] + mat[4]) / S; 
    out[1] = 0.25 * S;
    out[2] = (mat[6] + mat[9]) / S; 
  } else { 
    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;
    out[3] = (mat[1] - mat[4]) / S;
    out[0] = (mat[8] + mat[2]) / S;
    out[1] = (mat[6] + mat[9]) / S;
    out[2] = 0.25 * S;
  }

  return out;
};

/**
 * Creates a matrix from a quaternion rotation, vector translation and vector scale
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.translate(dest, vec);
 *     var quatMat = mat4.create();
 *     quat4.toMat4(quat, quatMat);
 *     mat4.multiply(dest, quatMat);
 *     mat4.scale(dest, scale)
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {quat4} q Rotation quaternion
 * @param {vec3} v Translation vector
 * @param {vec3} s Scaling vector
 * @returns {mat4} out
 */
mat4.fromRotationTranslationScale = function (out, q, v, s) {
    // Quaternion math
    var x = q[0], y = q[1], z = q[2], w = q[3],
        x2 = x + x,
        y2 = y + y,
        z2 = z + z,

        xx = x * x2,
        xy = x * y2,
        xz = x * z2,
        yy = y * y2,
        yz = y * z2,
        zz = z * z2,
        wx = w * x2,
        wy = w * y2,
        wz = w * z2,
        sx = s[0],
        sy = s[1],
        sz = s[2];

    out[0] = (1 - (yy + zz)) * sx;
    out[1] = (xy + wz) * sx;
    out[2] = (xz - wy) * sx;
    out[3] = 0;
    out[4] = (xy - wz) * sy;
    out[5] = (1 - (xx + zz)) * sy;
    out[6] = (yz + wx) * sy;
    out[7] = 0;
    out[8] = (xz + wy) * sz;
    out[9] = (yz - wx) * sz;
    out[10] = (1 - (xx + yy)) * sz;
    out[11] = 0;
    out[12] = v[0];
    out[13] = v[1];
    out[14] = v[2];
    out[15] = 1;

    return out;
};

/**
 * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.translate(dest, vec);
 *     mat4.translate(dest, origin);
 *     var quatMat = mat4.create();
 *     quat4.toMat4(quat, quatMat);
 *     mat4.multiply(dest, quatMat);
 *     mat4.scale(dest, scale)
 *     mat4.translate(dest, negativeOrigin);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {quat4} q Rotation quaternion
 * @param {vec3} v Translation vector
 * @param {vec3} s Scaling vector
 * @param {vec3} o The origin vector around which to scale and rotate
 * @returns {mat4} out
 */
mat4.fromRotationTranslationScaleOrigin = function (out, q, v, s, o) {
  // Quaternion math
  var x = q[0], y = q[1], z = q[2], w = q[3],
      x2 = x + x,
      y2 = y + y,
      z2 = z + z,

      xx = x * x2,
      xy = x * y2,
      xz = x * z2,
      yy = y * y2,
      yz = y * z2,
      zz = z * z2,
      wx = w * x2,
      wy = w * y2,
      wz = w * z2,

      sx = s[0],
      sy = s[1],
      sz = s[2],

      ox = o[0],
      oy = o[1],
      oz = o[2];

  out[0] = (1 - (yy + zz)) * sx;
  out[1] = (xy + wz) * sx;
  out[2] = (xz - wy) * sx;
  out[3] = 0;
  out[4] = (xy - wz) * sy;
  out[5] = (1 - (xx + zz)) * sy;
  out[6] = (yz + wx) * sy;
  out[7] = 0;
  out[8] = (xz + wy) * sz;
  out[9] = (yz - wx) * sz;
  out[10] = (1 - (xx + yy)) * sz;
  out[11] = 0;
  out[12] = v[0] + ox - (out[0] * ox + out[4] * oy + out[8] * oz);
  out[13] = v[1] + oy - (out[1] * ox + out[5] * oy + out[9] * oz);
  out[14] = v[2] + oz - (out[2] * ox + out[6] * oy + out[10] * oz);
  out[15] = 1;

  return out;
};

/**
 * Calculates a 4x4 matrix from the given quaternion
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {quat} q Quaternion to create matrix from
 *
 * @returns {mat4} out
 */
mat4.fromQuat = function (out, q) {
    var x = q[0], y = q[1], z = q[2], w = q[3],
        x2 = x + x,
        y2 = y + y,
        z2 = z + z,

        xx = x * x2,
        yx = y * x2,
        yy = y * y2,
        zx = z * x2,
        zy = z * y2,
        zz = z * z2,
        wx = w * x2,
        wy = w * y2,
        wz = w * z2;

    out[0] = 1 - yy - zz;
    out[1] = yx + wz;
    out[2] = zx - wy;
    out[3] = 0;

    out[4] = yx - wz;
    out[5] = 1 - xx - zz;
    out[6] = zy + wx;
    out[7] = 0;

    out[8] = zx + wy;
    out[9] = zy - wx;
    out[10] = 1 - xx - yy;
    out[11] = 0;

    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 1;

    return out;
};

/**
 * Generates a frustum matrix with the given bounds
 *
 * @param {mat4} out mat4 frustum matrix will be written into
 * @param {Number} left Left bound of the frustum
 * @param {Number} right Right bound of the frustum
 * @param {Number} bottom Bottom bound of the frustum
 * @param {Number} top Top bound of the frustum
 * @param {Number} near Near bound of the frustum
 * @param {Number} far Far bound of the frustum
 * @returns {mat4} out
 */
mat4.frustum = function (out, left, right, bottom, top, near, far) {
    var rl = 1 / (right - left),
        tb = 1 / (top - bottom),
        nf = 1 / (near - far);
    out[0] = (near * 2) * rl;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 0;
    out[5] = (near * 2) * tb;
    out[6] = 0;
    out[7] = 0;
    out[8] = (right + left) * rl;
    out[9] = (top + bottom) * tb;
    out[10] = (far + near) * nf;
    out[11] = -1;
    out[12] = 0;
    out[13] = 0;
    out[14] = (far * near * 2) * nf;
    out[15] = 0;
    return out;
};

/**
 * Generates a perspective projection matrix with the given bounds
 *
 * @param {mat4} out mat4 frustum matrix will be written into
 * @param {number} fovy Vertical field of view in radians
 * @param {number} aspect Aspect ratio. typically viewport width/height
 * @param {number} near Near bound of the frustum
 * @param {number} far Far bound of the frustum
 * @returns {mat4} out
 */
mat4.perspective = function (out, fovy, aspect, near, far) {
    var f = 1.0 / Math.tan(fovy / 2),
        nf = 1 / (near - far);
    out[0] = f / aspect;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 0;
    out[5] = f;
    out[6] = 0;
    out[7] = 0;
    out[8] = 0;
    out[9] = 0;
    out[10] = (far + near) * nf;
    out[11] = -1;
    out[12] = 0;
    out[13] = 0;
    out[14] = (2 * far * near) * nf;
    out[15] = 0;
    return out;
};

/**
 * Generates a perspective projection matrix with the given field of view.
 * This is primarily useful for generating projection matrices to be used
 * with the still experiemental WebVR API.
 *
 * @param {mat4} out mat4 frustum matrix will be written into
 * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees
 * @param {number} near Near bound of the frustum
 * @param {number} far Far bound of the frustum
 * @returns {mat4} out
 */
mat4.perspectiveFromFieldOfView = function (out, fov, near, far) {
    var upTan = Math.tan(fov.upDegrees * Math.PI/180.0),
        downTan = Math.tan(fov.downDegrees * Math.PI/180.0),
        leftTan = Math.tan(fov.leftDegrees * Math.PI/180.0),
        rightTan = Math.tan(fov.rightDegrees * Math.PI/180.0),
        xScale = 2.0 / (leftTan + rightTan),
        yScale = 2.0 / (upTan + downTan);

    out[0] = xScale;
    out[1] = 0.0;
    out[2] = 0.0;
    out[3] = 0.0;
    out[4] = 0.0;
    out[5] = yScale;
    out[6] = 0.0;
    out[7] = 0.0;
    out[8] = -((leftTan - rightTan) * xScale * 0.5);
    out[9] = ((upTan - downTan) * yScale * 0.5);
    out[10] = far / (near - far);
    out[11] = -1.0;
    out[12] = 0.0;
    out[13] = 0.0;
    out[14] = (far * near) / (near - far);
    out[15] = 0.0;
    return out;
}

/**
 * Generates a orthogonal projection matrix with the given bounds
 *
 * @param {mat4} out mat4 frustum matrix will be written into
 * @param {number} left Left bound of the frustum
 * @param {number} right Right bound of the frustum
 * @param {number} bottom Bottom bound of the frustum
 * @param {number} top Top bound of the frustum
 * @param {number} near Near bound of the frustum
 * @param {number} far Far bound of the frustum
 * @returns {mat4} out
 */
mat4.ortho = function (out, left, right, bottom, top, near, far) {
    var lr = 1 / (left - right),
        bt = 1 / (bottom - top),
        nf = 1 / (near - far);
    out[0] = -2 * lr;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 0;
    out[5] = -2 * bt;
    out[6] = 0;
    out[7] = 0;
    out[8] = 0;
    out[9] = 0;
    out[10] = 2 * nf;
    out[11] = 0;
    out[12] = (left + right) * lr;
    out[13] = (top + bottom) * bt;
    out[14] = (far + near) * nf;
    out[15] = 1;
    return out;
};

/**
 * Generates a look-at matrix with the given eye position, focal point, and up axis
 *
 * @param {mat4} out mat4 frustum matrix will be written into
 * @param {vec3} eye Position of the viewer
 * @param {vec3} center Point the viewer is looking at
 * @param {vec3} up vec3 pointing up
 * @returns {mat4} out
 */
mat4.lookAt = function (out, eye, center, up) {
    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len,
        eyex = eye[0],
        eyey = eye[1],
        eyez = eye[2],
        upx = up[0],
        upy = up[1],
        upz = up[2],
        centerx = center[0],
        centery = center[1],
        centerz = center[2];

    if (Math.abs(eyex - centerx) < glMatrix.EPSILON &&
        Math.abs(eyey - centery) < glMatrix.EPSILON &&
        Math.abs(eyez - centerz) < glMatrix.EPSILON) {
        return mat4.identity(out);
    }

    z0 = eyex - centerx;
    z1 = eyey - centery;
    z2 = eyez - centerz;

    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);
    z0 *= len;
    z1 *= len;
    z2 *= len;

    x0 = upy * z2 - upz * z1;
    x1 = upz * z0 - upx * z2;
    x2 = upx * z1 - upy * z0;
    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);
    if (!len) {
        x0 = 0;
        x1 = 0;
        x2 = 0;
    } else {
        len = 1 / len;
        x0 *= len;
        x1 *= len;
        x2 *= len;
    }

    y0 = z1 * x2 - z2 * x1;
    y1 = z2 * x0 - z0 * x2;
    y2 = z0 * x1 - z1 * x0;

    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);
    if (!len) {
        y0 = 0;
        y1 = 0;
        y2 = 0;
    } else {
        len = 1 / len;
        y0 *= len;
        y1 *= len;
        y2 *= len;
    }

    out[0] = x0;
    out[1] = y0;
    out[2] = z0;
    out[3] = 0;
    out[4] = x1;
    out[5] = y1;
    out[6] = z1;
    out[7] = 0;
    out[8] = x2;
    out[9] = y2;
    out[10] = z2;
    out[11] = 0;
    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);
    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);
    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);
    out[15] = 1;

    return out;
};

/**
 * Returns a string representation of a mat4
 *
 * @param {mat4} mat matrix to represent as a string
 * @returns {String} string representation of the matrix
 */
mat4.str = function (a) {
    return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +
                    a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' +
                    a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' +
                    a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';
};

/**
 * Returns Frobenius norm of a mat4
 *
 * @param {mat4} a the matrix to calculate Frobenius norm of
 * @returns {Number} Frobenius norm
 */
mat4.frob = function (a) {
    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2) ))
};

/**
 * Adds two mat4's
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the first operand
 * @param {mat4} b the second operand
 * @returns {mat4} out
 */
mat4.add = function(out, a, b) {
    out[0] = a[0] + b[0];
    out[1] = a[1] + b[1];
    out[2] = a[2] + b[2];
    out[3] = a[3] + b[3];
    out[4] = a[4] + b[4];
    out[5] = a[5] + b[5];
    out[6] = a[6] + b[6];
    out[7] = a[7] + b[7];
    out[8] = a[8] + b[8];
    out[9] = a[9] + b[9];
    out[10] = a[10] + b[10];
    out[11] = a[11] + b[11];
    out[12] = a[12] + b[12];
    out[13] = a[13] + b[13];
    out[14] = a[14] + b[14];
    out[15] = a[15] + b[15];
    return out;
};

/**
 * Subtracts matrix b from matrix a
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the first operand
 * @param {mat4} b the second operand
 * @returns {mat4} out
 */
mat4.subtract = function(out, a, b) {
    out[0] = a[0] - b[0];
    out[1] = a[1] - b[1];
    out[2] = a[2] - b[2];
    out[3] = a[3] - b[3];
    out[4] = a[4] - b[4];
    out[5] = a[5] - b[5];
    out[6] = a[6] - b[6];
    out[7] = a[7] - b[7];
    out[8] = a[8] - b[8];
    out[9] = a[9] - b[9];
    out[10] = a[10] - b[10];
    out[11] = a[11] - b[11];
    out[12] = a[12] - b[12];
    out[13] = a[13] - b[13];
    out[14] = a[14] - b[14];
    out[15] = a[15] - b[15];
    return out;
};

/**
 * Alias for {@link mat4.subtract}
 * @function
 */
mat4.sub = mat4.subtract;

/**
 * Multiply each element of the matrix by a scalar.
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to scale
 * @param {Number} b amount to scale the matrix's elements by
 * @returns {mat4} out
 */
mat4.multiplyScalar = function(out, a, b) {
    out[0] = a[0] * b;
    out[1] = a[1] * b;
    out[2] = a[2] * b;
    out[3] = a[3] * b;
    out[4] = a[4] * b;
    out[5] = a[5] * b;
    out[6] = a[6] * b;
    out[7] = a[7] * b;
    out[8] = a[8] * b;
    out[9] = a[9] * b;
    out[10] = a[10] * b;
    out[11] = a[11] * b;
    out[12] = a[12] * b;
    out[13] = a[13] * b;
    out[14] = a[14] * b;
    out[15] = a[15] * b;
    return out;
};

/**
 * Adds two mat4's after multiplying each element of the second operand by a scalar value.
 *
 * @param {mat4} out the receiving vector
 * @param {mat4} a the first operand
 * @param {mat4} b the second operand
 * @param {Number} scale the amount to scale b's elements by before adding
 * @returns {mat4} out
 */
mat4.multiplyScalarAndAdd = function(out, a, b, scale) {
    out[0] = a[0] + (b[0] * scale);
    out[1] = a[1] + (b[1] * scale);
    out[2] = a[2] + (b[2] * scale);
    out[3] = a[3] + (b[3] * scale);
    out[4] = a[4] + (b[4] * scale);
    out[5] = a[5] + (b[5] * scale);
    out[6] = a[6] + (b[6] * scale);
    out[7] = a[7] + (b[7] * scale);
    out[8] = a[8] + (b[8] * scale);
    out[9] = a[9] + (b[9] * scale);
    out[10] = a[10] + (b[10] * scale);
    out[11] = a[11] + (b[11] * scale);
    out[12] = a[12] + (b[12] * scale);
    out[13] = a[13] + (b[13] * scale);
    out[14] = a[14] + (b[14] * scale);
    out[15] = a[15] + (b[15] * scale);
    return out;
};

/**
 * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)
 *
 * @param {mat4} a The first matrix.
 * @param {mat4} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */
mat4.exactEquals = function (a, b) {
    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && 
           a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && 
           a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] &&
           a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];
};

/**
 * Returns whether or not the matrices have approximately the same elements in the same position.
 *
 * @param {mat4} a The first matrix.
 * @param {mat4} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */
mat4.equals = function (a, b) {
    var a0  = a[0],  a1  = a[1],  a2  = a[2],  a3  = a[3],
        a4  = a[4],  a5  = a[5],  a6  = a[6],  a7  = a[7], 
        a8  = a[8],  a9  = a[9],  a10 = a[10], a11 = a[11], 
        a12 = a[12], a13 = a[13], a14 = a[14], a15 = a[15];

    var b0  = b[0],  b1  = b[1],  b2  = b[2],  b3  = b[3],
        b4  = b[4],  b5  = b[5],  b6  = b[6],  b7  = b[7], 
        b8  = b[8],  b9  = b[9],  b10 = b[10], b11 = b[11], 
        b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];

    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&
            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&
            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&
            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&
            Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&
            Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&
            Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&
            Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&
            Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)) &&
            Math.abs(a9 - b9) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a9), Math.abs(b9)) &&
            Math.abs(a10 - b10) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a10), Math.abs(b10)) &&
            Math.abs(a11 - b11) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a11), Math.abs(b11)) &&
            Math.abs(a12 - b12) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a12), Math.abs(b12)) &&
            Math.abs(a13 - b13) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a13), Math.abs(b13)) &&
            Math.abs(a14 - b14) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a14), Math.abs(b14)) &&
            Math.abs(a15 - b15) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a15), Math.abs(b15)));
};



module.exports = mat4;

},{"./common.js":111}],116:[function(require,module,exports){
/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE. */

var glMatrix = require("./common.js");
var mat3 = require("./mat3.js");
var vec3 = require("./vec3.js");
var vec4 = require("./vec4.js");

/**
 * @class Quaternion
 * @name quat
 */
var quat = {};

/**
 * Creates a new identity quat
 *
 * @returns {quat} a new quaternion
 */
quat.create = function() {
    var out = new glMatrix.ARRAY_TYPE(4);
    out[0] = 0;
    out[1] = 0;
    out[2] = 0;
    out[3] = 1;
    return out;
};

/**
 * Sets a quaternion to represent the shortest rotation from one
 * vector to another.
 *
 * Both vectors are assumed to be unit length.
 *
 * @param {quat} out the receiving quaternion.
 * @param {vec3} a the initial vector
 * @param {vec3} b the destination vector
 * @returns {quat} out
 */
quat.rotationTo = (function() {
    var tmpvec3 = vec3.create();
    var xUnitVec3 = vec3.fromValues(1,0,0);
    var yUnitVec3 = vec3.fromValues(0,1,0);

    return function(out, a, b) {
        var dot = vec3.dot(a, b);
        if (dot < -0.999999) {
            vec3.cross(tmpvec3, xUnitVec3, a);
            if (vec3.length(tmpvec3) < 0.000001)
                vec3.cross(tmpvec3, yUnitVec3, a);
            vec3.normalize(tmpvec3, tmpvec3);
            quat.setAxisAngle(out, tmpvec3, Math.PI);
            return out;
        } else if (dot > 0.999999) {
            out[0] = 0;
            out[1] = 0;
            out[2] = 0;
            out[3] = 1;
            return out;
        } else {
            vec3.cross(tmpvec3, a, b);
            out[0] = tmpvec3[0];
            out[1] = tmpvec3[1];
            out[2] = tmpvec3[2];
            out[3] = 1 + dot;
            return quat.normalize(out, out);
        }
    };
})();

/**
 * Sets the specified quaternion with values corresponding to the given
 * axes. Each axis is a vec3 and is expected to be unit length and
 * perpendicular to all other specified axes.
 *
 * @param {vec3} view  the vector representing the viewing direction
 * @param {vec3} right the vector representing the local "right" direction
 * @param {vec3} up    the vector representing the local "up" direction
 * @returns {quat} out
 */
quat.setAxes = (function() {
    var matr = mat3.create();

    return function(out, view, right, up) {
        matr[0] = right[0];
        matr[3] = right[1];
        matr[6] = right[2];

        matr[1] = up[0];
        matr[4] = up[1];
        matr[7] = up[2];

        matr[2] = -view[0];
        matr[5] = -view[1];
        matr[8] = -view[2];

        return quat.normalize(out, quat.fromMat3(out, matr));
    };
})();

/**
 * Creates a new quat initialized with values from an existing quaternion
 *
 * @param {quat} a quaternion to clone
 * @returns {quat} a new quaternion
 * @function
 */
quat.clone = vec4.clone;

/**
 * Creates a new quat initialized with the given values
 *
 * @param {Number} x X component
 * @param {Number} y Y component
 * @param {Number} z Z component
 * @param {Number} w W component
 * @returns {quat} a new quaternion
 * @function
 */
quat.fromValues = vec4.fromValues;

/**
 * Copy the values from one quat to another
 *
 * @param {quat} out the receiving quaternion
 * @param {quat} a the source quaternion
 * @returns {quat} out
 * @function
 */
quat.copy = vec4.copy;

/**
 * Set the components of a quat to the given values
 *
 * @param {quat} out the receiving quaternion
 * @param {Number} x X component
 * @param {Number} y Y component
 * @param {Number} z Z component
 * @param {Number} w W component
 * @returns {quat} out
 * @function
 */
quat.set = vec4.set;

/**
 * Set a quat to the identity quaternion
 *
 * @param {quat} out the receiving quaternion
 * @returns {quat} out
 */
quat.identity = function(out) {
    out[0] = 0;
    out[1] = 0;
    out[2] = 0;
    out[3] = 1;
    return out;
};

/**
 * Sets a quat from the given angle and rotation axis,
 * then returns it.
 *
 * @param {quat} out the receiving quaternion
 * @param {vec3} axis the axis around which to rotate
 * @param {Number} rad the angle in radians
 * @returns {quat} out
 **/
quat.setAxisAngle = function(out, axis, rad) {
    rad = rad * 0.5;
    var s = Math.sin(rad);
    out[0] = s * axis[0];
    out[1] = s * axis[1];
    out[2] = s * axis[2];
    out[3] = Math.cos(rad);
    return out;
};

/**
 * Gets the rotation axis and angle for a given
 *  quaternion. If a quaternion is created with
 *  setAxisAngle, this method will return the same
 *  values as providied in the original parameter list
 *  OR functionally equivalent values.
 * Example: The quaternion formed by axis [0, 0, 1] and
 *  angle -90 is the same as the quaternion formed by
 *  [0, 0, 1] and 270. This method favors the latter.
 * @param  {vec3} out_axis  Vector receiving the axis of rotation
 * @param  {quat} q     Quaternion to be decomposed
 * @return {Number}     Angle, in radians, of the rotation
 */
quat.getAxisAngle = function(out_axis, q) {
    var rad = Math.acos(q[3]) * 2.0;
    var s = Math.sin(rad / 2.0);
    if (s != 0.0) {
        out_axis[0] = q[0] / s;
        out_axis[1] = q[1] / s;
        out_axis[2] = q[2] / s;
    } else {
        // If s is zero, return any axis (no rotation - axis does not matter)
        out_axis[0] = 1;
        out_axis[1] = 0;
        out_axis[2] = 0;
    }
    return rad;
};

/**
 * Adds two quat's
 *
 * @param {quat} out the receiving quaternion
 * @param {quat} a the first operand
 * @param {quat} b the second operand
 * @returns {quat} out
 * @function
 */
quat.add = vec4.add;

/**
 * Multiplies two quat's
 *
 * @param {quat} out the receiving quaternion
 * @param {quat} a the first operand
 * @param {quat} b the second operand
 * @returns {quat} out
 */
quat.multiply = function(out, a, b) {
    var ax = a[0], ay = a[1], az = a[2], aw = a[3],
        bx = b[0], by = b[1], bz = b[2], bw = b[3];

    out[0] = ax * bw + aw * bx + ay * bz - az * by;
    out[1] = ay * bw + aw * by + az * bx - ax * bz;
    out[2] = az * bw + aw * bz + ax * by - ay * bx;
    out[3] = aw * bw - ax * bx - ay * by - az * bz;
    return out;
};

/**
 * Alias for {@link quat.multiply}
 * @function
 */
quat.mul = quat.multiply;

/**
 * Scales a quat by a scalar number
 *
 * @param {quat} out the receiving vector
 * @param {quat} a the vector to scale
 * @param {Number} b amount to scale the vector by
 * @returns {quat} out
 * @function
 */
quat.scale = vec4.scale;

/**
 * Rotates a quaternion by the given angle about the X axis
 *
 * @param {quat} out quat receiving operation result
 * @param {quat} a quat to rotate
 * @param {number} rad angle (in radians) to rotate
 * @returns {quat} out
 */
quat.rotateX = function (out, a, rad) {
    rad *= 0.5; 

    var ax = a[0], ay = a[1], az = a[2], aw = a[3],
        bx = Math.sin(rad), bw = Math.cos(rad);

    out[0] = ax * bw + aw * bx;
    out[1] = ay * bw + az * bx;
    out[2] = az * bw - ay * bx;
    out[3] = aw * bw - ax * bx;
    return out;
};

/**
 * Rotates a quaternion by the given angle about the Y axis
 *
 * @param {quat} out quat receiving operation result
 * @param {quat} a quat to rotate
 * @param {number} rad angle (in radians) to rotate
 * @returns {quat} out
 */
quat.rotateY = function (out, a, rad) {
    rad *= 0.5; 

    var ax = a[0], ay = a[1], az = a[2], aw = a[3],
        by = Math.sin(rad), bw = Math.cos(rad);

    out[0] = ax * bw - az * by;
    out[1] = ay * bw + aw * by;
    out[2] = az * bw + ax * by;
    out[3] = aw * bw - ay * by;
    return out;
};

/**
 * Rotates a quaternion by the given angle about the Z axis
 *
 * @param {quat} out quat receiving operation result
 * @param {quat} a quat to rotate
 * @param {number} rad angle (in radians) to rotate
 * @returns {quat} out
 */
quat.rotateZ = function (out, a, rad) {
    rad *= 0.5; 

    var ax = a[0], ay = a[1], az = a[2], aw = a[3],
        bz = Math.sin(rad), bw = Math.cos(rad);

    out[0] = ax * bw + ay * bz;
    out[1] = ay * bw - ax * bz;
    out[2] = az * bw + aw * bz;
    out[3] = aw * bw - az * bz;
    return out;
};

/**
 * Calculates the W component of a quat from the X, Y, and Z components.
 * Assumes that quaternion is 1 unit in length.
 * Any existing W component will be ignored.
 *
 * @param {quat} out the receiving quaternion
 * @param {quat} a quat to calculate W component of
 * @returns {quat} out
 */
quat.calculateW = function (out, a) {
    var x = a[0], y = a[1], z = a[2];

    out[0] = x;
    out[1] = y;
    out[2] = z;
    out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));
    return out;
};

/**
 * Calculates the dot product of two quat's
 *
 * @param {quat} a the first operand
 * @param {quat} b the second operand
 * @returns {Number} dot product of a and b
 * @function
 */
quat.dot = vec4.dot;

/**
 * Performs a linear interpolation between two quat's
 *
 * @param {quat} out the receiving quaternion
 * @param {quat} a the first operand
 * @param {quat} b the second operand
 * @param {Number} t interpolation amount between the two inputs
 * @returns {quat} out
 * @function
 */
quat.lerp = vec4.lerp;

/**
 * Performs a spherical linear interpolation between two quat
 *
 * @param {quat} out the receiving quaternion
 * @param {quat} a the first operand
 * @param {quat} b the second operand
 * @param {Number} t interpolation amount between the two inputs
 * @returns {quat} out
 */
quat.slerp = function (out, a, b, t) {
    // benchmarks:
    //    http://jsperf.com/quaternion-slerp-implementations

    var ax = a[0], ay = a[1], az = a[2], aw = a[3],
        bx = b[0], by = b[1], bz = b[2], bw = b[3];

    var        omega, cosom, sinom, scale0, scale1;

    // calc cosine
    cosom = ax * bx + ay * by + az * bz + aw * bw;
    // adjust signs (if necessary)
    if ( cosom < 0.0 ) {
        cosom = -cosom;
        bx = - bx;
        by = - by;
        bz = - bz;
        bw = - bw;
    }
    // calculate coefficients
    if ( (1.0 - cosom) > 0.000001 ) {
        // standard case (slerp)
        omega  = Math.acos(cosom);
        sinom  = Math.sin(omega);
        scale0 = Math.sin((1.0 - t) * omega) / sinom;
        scale1 = Math.sin(t * omega) / sinom;
    } else {        
        // "from" and "to" quaternions are very close 
        //  ... so we can do a linear interpolation
        scale0 = 1.0 - t;
        scale1 = t;
    }
    // calculate final values
    out[0] = scale0 * ax + scale1 * bx;
    out[1] = scale0 * ay + scale1 * by;
    out[2] = scale0 * az + scale1 * bz;
    out[3] = scale0 * aw + scale1 * bw;
    
    return out;
};

/**
 * Performs a spherical linear interpolation with two control points
 *
 * @param {quat} out the receiving quaternion
 * @param {quat} a the first operand
 * @param {quat} b the second operand
 * @param {quat} c the third operand
 * @param {quat} d the fourth operand
 * @param {Number} t interpolation amount
 * @returns {quat} out
 */
quat.sqlerp = (function () {
  var temp1 = quat.create();
  var temp2 = quat.create();
  
  return function (out, a, b, c, d, t) {
    quat.slerp(temp1, a, d, t);
    quat.slerp(temp2, b, c, t);
    quat.slerp(out, temp1, temp2, 2 * t * (1 - t));
    
    return out;
  };
}());

/**
 * Calculates the inverse of a quat
 *
 * @param {quat} out the receiving quaternion
 * @param {quat} a quat to calculate inverse of
 * @returns {quat} out
 */
quat.invert = function(out, a) {
    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],
        dot = a0*a0 + a1*a1 + a2*a2 + a3*a3,
        invDot = dot ? 1.0/dot : 0;
    
    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0

    out[0] = -a0*invDot;
    out[1] = -a1*invDot;
    out[2] = -a2*invDot;
    out[3] = a3*invDot;
    return out;
};

/**
 * Calculates the conjugate of a quat
 * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.
 *
 * @param {quat} out the receiving quaternion
 * @param {quat} a quat to calculate conjugate of
 * @returns {quat} out
 */
quat.conjugate = function (out, a) {
    out[0] = -a[0];
    out[1] = -a[1];
    out[2] = -a[2];
    out[3] = a[3];
    return out;
};

/**
 * Calculates the length of a quat
 *
 * @param {quat} a vector to calculate length of
 * @returns {Number} length of a
 * @function
 */
quat.length = vec4.length;

/**
 * Alias for {@link quat.length}
 * @function
 */
quat.len = quat.length;

/**
 * Calculates the squared length of a quat
 *
 * @param {quat} a vector to calculate squared length of
 * @returns {Number} squared length of a
 * @function
 */
quat.squaredLength = vec4.squaredLength;

/**
 * Alias for {@link quat.squaredLength}
 * @function
 */
quat.sqrLen = quat.squaredLength;

/**
 * Normalize a quat
 *
 * @param {quat} out the receiving quaternion
 * @param {quat} a quaternion to normalize
 * @returns {quat} out
 * @function
 */
quat.normalize = vec4.normalize;

/**
 * Creates a quaternion from the given 3x3 rotation matrix.
 *
 * NOTE: The resultant quaternion is not normalized, so you should be sure
 * to renormalize the quaternion yourself where necessary.
 *
 * @param {quat} out the receiving quaternion
 * @param {mat3} m rotation matrix
 * @returns {quat} out
 * @function
 */
quat.fromMat3 = function(out, m) {
    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes
    // article "Quaternion Calculus and Fast Animation".
    var fTrace = m[0] + m[4] + m[8];
    var fRoot;

    if ( fTrace > 0.0 ) {
        // |w| > 1/2, may as well choose w > 1/2
        fRoot = Math.sqrt(fTrace + 1.0);  // 2w
        out[3] = 0.5 * fRoot;
        fRoot = 0.5/fRoot;  // 1/(4w)
        out[0] = (m[5]-m[7])*fRoot;
        out[1] = (m[6]-m[2])*fRoot;
        out[2] = (m[1]-m[3])*fRoot;
    } else {
        // |w| <= 1/2
        var i = 0;
        if ( m[4] > m[0] )
          i = 1;
        if ( m[8] > m[i*3+i] )
          i = 2;
        var j = (i+1)%3;
        var k = (i+2)%3;
        
        fRoot = Math.sqrt(m[i*3+i]-m[j*3+j]-m[k*3+k] + 1.0);
        out[i] = 0.5 * fRoot;
        fRoot = 0.5 / fRoot;
        out[3] = (m[j*3+k] - m[k*3+j]) * fRoot;
        out[j] = (m[j*3+i] + m[i*3+j]) * fRoot;
        out[k] = (m[k*3+i] + m[i*3+k]) * fRoot;
    }
    
    return out;
};

/**
 * Returns a string representation of a quatenion
 *
 * @param {quat} vec vector to represent as a string
 * @returns {String} string representation of the vector
 */
quat.str = function (a) {
    return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';
};

/**
 * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)
 *
 * @param {quat} a The first quaternion.
 * @param {quat} b The second quaternion.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */
quat.exactEquals = vec4.exactEquals;

/**
 * Returns whether or not the quaternions have approximately the same elements in the same position.
 *
 * @param {quat} a The first vector.
 * @param {quat} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */
quat.equals = vec4.equals;

module.exports = quat;

},{"./common.js":111,"./mat3.js":114,"./vec3.js":118,"./vec4.js":119}],117:[function(require,module,exports){
/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE. */

var glMatrix = require("./common.js");

/**
 * @class 2 Dimensional Vector
 * @name vec2
 */
var vec2 = {};

/**
 * Creates a new, empty vec2
 *
 * @returns {vec2} a new 2D vector
 */
vec2.create = function() {
    var out = new glMatrix.ARRAY_TYPE(2);
    out[0] = 0;
    out[1] = 0;
    return out;
};

/**
 * Creates a new vec2 initialized with values from an existing vector
 *
 * @param {vec2} a vector to clone
 * @returns {vec2} a new 2D vector
 */
vec2.clone = function(a) {
    var out = new glMatrix.ARRAY_TYPE(2);
    out[0] = a[0];
    out[1] = a[1];
    return out;
};

/**
 * Creates a new vec2 initialized with the given values
 *
 * @param {Number} x X component
 * @param {Number} y Y component
 * @returns {vec2} a new 2D vector
 */
vec2.fromValues = function(x, y) {
    var out = new glMatrix.ARRAY_TYPE(2);
    out[0] = x;
    out[1] = y;
    return out;
};

/**
 * Copy the values from one vec2 to another
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the source vector
 * @returns {vec2} out
 */
vec2.copy = function(out, a) {
    out[0] = a[0];
    out[1] = a[1];
    return out;
};

/**
 * Set the components of a vec2 to the given values
 *
 * @param {vec2} out the receiving vector
 * @param {Number} x X component
 * @param {Number} y Y component
 * @returns {vec2} out
 */
vec2.set = function(out, x, y) {
    out[0] = x;
    out[1] = y;
    return out;
};

/**
 * Adds two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @returns {vec2} out
 */
vec2.add = function(out, a, b) {
    out[0] = a[0] + b[0];
    out[1] = a[1] + b[1];
    return out;
};

/**
 * Subtracts vector b from vector a
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @returns {vec2} out
 */
vec2.subtract = function(out, a, b) {
    out[0] = a[0] - b[0];
    out[1] = a[1] - b[1];
    return out;
};

/**
 * Alias for {@link vec2.subtract}
 * @function
 */
vec2.sub = vec2.subtract;

/**
 * Multiplies two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @returns {vec2} out
 */
vec2.multiply = function(out, a, b) {
    out[0] = a[0] * b[0];
    out[1] = a[1] * b[1];
    return out;
};

/**
 * Alias for {@link vec2.multiply}
 * @function
 */
vec2.mul = vec2.multiply;

/**
 * Divides two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @returns {vec2} out
 */
vec2.divide = function(out, a, b) {
    out[0] = a[0] / b[0];
    out[1] = a[1] / b[1];
    return out;
};

/**
 * Alias for {@link vec2.divide}
 * @function
 */
vec2.div = vec2.divide;

/**
 * Math.ceil the components of a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a vector to ceil
 * @returns {vec2} out
 */
vec2.ceil = function (out, a) {
    out[0] = Math.ceil(a[0]);
    out[1] = Math.ceil(a[1]);
    return out;
};

/**
 * Math.floor the components of a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a vector to floor
 * @returns {vec2} out
 */
vec2.floor = function (out, a) {
    out[0] = Math.floor(a[0]);
    out[1] = Math.floor(a[1]);
    return out;
};

/**
 * Returns the minimum of two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @returns {vec2} out
 */
vec2.min = function(out, a, b) {
    out[0] = Math.min(a[0], b[0]);
    out[1] = Math.min(a[1], b[1]);
    return out;
};

/**
 * Returns the maximum of two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @returns {vec2} out
 */
vec2.max = function(out, a, b) {
    out[0] = Math.max(a[0], b[0]);
    out[1] = Math.max(a[1], b[1]);
    return out;
};

/**
 * Math.round the components of a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a vector to round
 * @returns {vec2} out
 */
vec2.round = function (out, a) {
    out[0] = Math.round(a[0]);
    out[1] = Math.round(a[1]);
    return out;
};

/**
 * Scales a vec2 by a scalar number
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the vector to scale
 * @param {Number} b amount to scale the vector by
 * @returns {vec2} out
 */
vec2.scale = function(out, a, b) {
    out[0] = a[0] * b;
    out[1] = a[1] * b;
    return out;
};

/**
 * Adds two vec2's after scaling the second operand by a scalar value
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @param {Number} scale the amount to scale b by before adding
 * @returns {vec2} out
 */
vec2.scaleAndAdd = function(out, a, b, scale) {
    out[0] = a[0] + (b[0] * scale);
    out[1] = a[1] + (b[1] * scale);
    return out;
};

/**
 * Calculates the euclidian distance between two vec2's
 *
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @returns {Number} distance between a and b
 */
vec2.distance = function(a, b) {
    var x = b[0] - a[0],
        y = b[1] - a[1];
    return Math.sqrt(x*x + y*y);
};

/**
 * Alias for {@link vec2.distance}
 * @function
 */
vec2.dist = vec2.distance;

/**
 * Calculates the squared euclidian distance between two vec2's
 *
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @returns {Number} squared distance between a and b
 */
vec2.squaredDistance = function(a, b) {
    var x = b[0] - a[0],
        y = b[1] - a[1];
    return x*x + y*y;
};

/**
 * Alias for {@link vec2.squaredDistance}
 * @function
 */
vec2.sqrDist = vec2.squaredDistance;

/**
 * Calculates the length of a vec2
 *
 * @param {vec2} a vector to calculate length of
 * @returns {Number} length of a
 */
vec2.length = function (a) {
    var x = a[0],
        y = a[1];
    return Math.sqrt(x*x + y*y);
};

/**
 * Alias for {@link vec2.length}
 * @function
 */
vec2.len = vec2.length;

/**
 * Calculates the squared length of a vec2
 *
 * @param {vec2} a vector to calculate squared length of
 * @returns {Number} squared length of a
 */
vec2.squaredLength = function (a) {
    var x = a[0],
        y = a[1];
    return x*x + y*y;
};

/**
 * Alias for {@link vec2.squaredLength}
 * @function
 */
vec2.sqrLen = vec2.squaredLength;

/**
 * Negates the components of a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a vector to negate
 * @returns {vec2} out
 */
vec2.negate = function(out, a) {
    out[0] = -a[0];
    out[1] = -a[1];
    return out;
};

/**
 * Returns the inverse of the components of a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a vector to invert
 * @returns {vec2} out
 */
vec2.inverse = function(out, a) {
  out[0] = 1.0 / a[0];
  out[1] = 1.0 / a[1];
  return out;
};

/**
 * Normalize a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a vector to normalize
 * @returns {vec2} out
 */
vec2.normalize = function(out, a) {
    var x = a[0],
        y = a[1];
    var len = x*x + y*y;
    if (len > 0) {
        //TODO: evaluate use of glm_invsqrt here?
        len = 1 / Math.sqrt(len);
        out[0] = a[0] * len;
        out[1] = a[1] * len;
    }
    return out;
};

/**
 * Calculates the dot product of two vec2's
 *
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @returns {Number} dot product of a and b
 */
vec2.dot = function (a, b) {
    return a[0] * b[0] + a[1] * b[1];
};

/**
 * Computes the cross product of two vec2's
 * Note that the cross product must by definition produce a 3D vector
 *
 * @param {vec3} out the receiving vector
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @returns {vec3} out
 */
vec2.cross = function(out, a, b) {
    var z = a[0] * b[1] - a[1] * b[0];
    out[0] = out[1] = 0;
    out[2] = z;
    return out;
};

/**
 * Performs a linear interpolation between two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @param {Number} t interpolation amount between the two inputs
 * @returns {vec2} out
 */
vec2.lerp = function (out, a, b, t) {
    var ax = a[0],
        ay = a[1];
    out[0] = ax + t * (b[0] - ax);
    out[1] = ay + t * (b[1] - ay);
    return out;
};

/**
 * Generates a random vector with the given scale
 *
 * @param {vec2} out the receiving vector
 * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned
 * @returns {vec2} out
 */
vec2.random = function (out, scale) {
    scale = scale || 1.0;
    var r = glMatrix.RANDOM() * 2.0 * Math.PI;
    out[0] = Math.cos(r) * scale;
    out[1] = Math.sin(r) * scale;
    return out;
};

/**
 * Transforms the vec2 with a mat2
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the vector to transform
 * @param {mat2} m matrix to transform with
 * @returns {vec2} out
 */
vec2.transformMat2 = function(out, a, m) {
    var x = a[0],
        y = a[1];
    out[0] = m[0] * x + m[2] * y;
    out[1] = m[1] * x + m[3] * y;
    return out;
};

/**
 * Transforms the vec2 with a mat2d
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the vector to transform
 * @param {mat2d} m matrix to transform with
 * @returns {vec2} out
 */
vec2.transformMat2d = function(out, a, m) {
    var x = a[0],
        y = a[1];
    out[0] = m[0] * x + m[2] * y + m[4];
    out[1] = m[1] * x + m[3] * y + m[5];
    return out;
};

/**
 * Transforms the vec2 with a mat3
 * 3rd vector component is implicitly '1'
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the vector to transform
 * @param {mat3} m matrix to transform with
 * @returns {vec2} out
 */
vec2.transformMat3 = function(out, a, m) {
    var x = a[0],
        y = a[1];
    out[0] = m[0] * x + m[3] * y + m[6];
    out[1] = m[1] * x + m[4] * y + m[7];
    return out;
};

/**
 * Transforms the vec2 with a mat4
 * 3rd vector component is implicitly '0'
 * 4th vector component is implicitly '1'
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the vector to transform
 * @param {mat4} m matrix to transform with
 * @returns {vec2} out
 */
vec2.transformMat4 = function(out, a, m) {
    var x = a[0], 
        y = a[1];
    out[0] = m[0] * x + m[4] * y + m[12];
    out[1] = m[1] * x + m[5] * y + m[13];
    return out;
};

/**
 * Perform some operation over an array of vec2s.
 *
 * @param {Array} a the array of vectors to iterate over
 * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed
 * @param {Number} offset Number of elements to skip at the beginning of the array
 * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array
 * @param {Function} fn Function to call for each vector in the array
 * @param {Object} [arg] additional argument to pass to fn
 * @returns {Array} a
 * @function
 */
vec2.forEach = (function() {
    var vec = vec2.create();

    return function(a, stride, offset, count, fn, arg) {
        var i, l;
        if(!stride) {
            stride = 2;
        }

        if(!offset) {
            offset = 0;
        }
        
        if(count) {
            l = Math.min((count * stride) + offset, a.length);
        } else {
            l = a.length;
        }

        for(i = offset; i < l; i += stride) {
            vec[0] = a[i]; vec[1] = a[i+1];
            fn(vec, vec, arg);
            a[i] = vec[0]; a[i+1] = vec[1];
        }
        
        return a;
    };
})();

/**
 * Returns a string representation of a vector
 *
 * @param {vec2} vec vector to represent as a string
 * @returns {String} string representation of the vector
 */
vec2.str = function (a) {
    return 'vec2(' + a[0] + ', ' + a[1] + ')';
};

/**
 * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)
 *
 * @param {vec2} a The first vector.
 * @param {vec2} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */
vec2.exactEquals = function (a, b) {
    return a[0] === b[0] && a[1] === b[1];
};

/**
 * Returns whether or not the vectors have approximately the same elements in the same position.
 *
 * @param {vec2} a The first vector.
 * @param {vec2} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */
vec2.equals = function (a, b) {
    var a0 = a[0], a1 = a[1];
    var b0 = b[0], b1 = b[1];
    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&
            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)));
};

module.exports = vec2;

},{"./common.js":111}],118:[function(require,module,exports){
/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE. */

var glMatrix = require("./common.js");

/**
 * @class 3 Dimensional Vector
 * @name vec3
 */
var vec3 = {};

/**
 * Creates a new, empty vec3
 *
 * @returns {vec3} a new 3D vector
 */
vec3.create = function() {
    var out = new glMatrix.ARRAY_TYPE(3);
    out[0] = 0;
    out[1] = 0;
    out[2] = 0;
    return out;
};

/**
 * Creates a new vec3 initialized with values from an existing vector
 *
 * @param {vec3} a vector to clone
 * @returns {vec3} a new 3D vector
 */
vec3.clone = function(a) {
    var out = new glMatrix.ARRAY_TYPE(3);
    out[0] = a[0];
    out[1] = a[1];
    out[2] = a[2];
    return out;
};

/**
 * Creates a new vec3 initialized with the given values
 *
 * @param {Number} x X component
 * @param {Number} y Y component
 * @param {Number} z Z component
 * @returns {vec3} a new 3D vector
 */
vec3.fromValues = function(x, y, z) {
    var out = new glMatrix.ARRAY_TYPE(3);
    out[0] = x;
    out[1] = y;
    out[2] = z;
    return out;
};

/**
 * Copy the values from one vec3 to another
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the source vector
 * @returns {vec3} out
 */
vec3.copy = function(out, a) {
    out[0] = a[0];
    out[1] = a[1];
    out[2] = a[2];
    return out;
};

/**
 * Set the components of a vec3 to the given values
 *
 * @param {vec3} out the receiving vector
 * @param {Number} x X component
 * @param {Number} y Y component
 * @param {Number} z Z component
 * @returns {vec3} out
 */
vec3.set = function(out, x, y, z) {
    out[0] = x;
    out[1] = y;
    out[2] = z;
    return out;
};

/**
 * Adds two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @returns {vec3} out
 */
vec3.add = function(out, a, b) {
    out[0] = a[0] + b[0];
    out[1] = a[1] + b[1];
    out[2] = a[2] + b[2];
    return out;
};

/**
 * Subtracts vector b from vector a
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @returns {vec3} out
 */
vec3.subtract = function(out, a, b) {
    out[0] = a[0] - b[0];
    out[1] = a[1] - b[1];
    out[2] = a[2] - b[2];
    return out;
};

/**
 * Alias for {@link vec3.subtract}
 * @function
 */
vec3.sub = vec3.subtract;

/**
 * Multiplies two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @returns {vec3} out
 */
vec3.multiply = function(out, a, b) {
    out[0] = a[0] * b[0];
    out[1] = a[1] * b[1];
    out[2] = a[2] * b[2];
    return out;
};

/**
 * Alias for {@link vec3.multiply}
 * @function
 */
vec3.mul = vec3.multiply;

/**
 * Divides two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @returns {vec3} out
 */
vec3.divide = function(out, a, b) {
    out[0] = a[0] / b[0];
    out[1] = a[1] / b[1];
    out[2] = a[2] / b[2];
    return out;
};

/**
 * Alias for {@link vec3.divide}
 * @function
 */
vec3.div = vec3.divide;

/**
 * Math.ceil the components of a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a vector to ceil
 * @returns {vec3} out
 */
vec3.ceil = function (out, a) {
    out[0] = Math.ceil(a[0]);
    out[1] = Math.ceil(a[1]);
    out[2] = Math.ceil(a[2]);
    return out;
};

/**
 * Math.floor the components of a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a vector to floor
 * @returns {vec3} out
 */
vec3.floor = function (out, a) {
    out[0] = Math.floor(a[0]);
    out[1] = Math.floor(a[1]);
    out[2] = Math.floor(a[2]);
    return out;
};

/**
 * Returns the minimum of two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @returns {vec3} out
 */
vec3.min = function(out, a, b) {
    out[0] = Math.min(a[0], b[0]);
    out[1] = Math.min(a[1], b[1]);
    out[2] = Math.min(a[2], b[2]);
    return out;
};

/**
 * Returns the maximum of two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @returns {vec3} out
 */
vec3.max = function(out, a, b) {
    out[0] = Math.max(a[0], b[0]);
    out[1] = Math.max(a[1], b[1]);
    out[2] = Math.max(a[2], b[2]);
    return out;
};

/**
 * Math.round the components of a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a vector to round
 * @returns {vec3} out
 */
vec3.round = function (out, a) {
    out[0] = Math.round(a[0]);
    out[1] = Math.round(a[1]);
    out[2] = Math.round(a[2]);
    return out;
};

/**
 * Scales a vec3 by a scalar number
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the vector to scale
 * @param {Number} b amount to scale the vector by
 * @returns {vec3} out
 */
vec3.scale = function(out, a, b) {
    out[0] = a[0] * b;
    out[1] = a[1] * b;
    out[2] = a[2] * b;
    return out;
};

/**
 * Adds two vec3's after scaling the second operand by a scalar value
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @param {Number} scale the amount to scale b by before adding
 * @returns {vec3} out
 */
vec3.scaleAndAdd = function(out, a, b, scale) {
    out[0] = a[0] + (b[0] * scale);
    out[1] = a[1] + (b[1] * scale);
    out[2] = a[2] + (b[2] * scale);
    return out;
};

/**
 * Calculates the euclidian distance between two vec3's
 *
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @returns {Number} distance between a and b
 */
vec3.distance = function(a, b) {
    var x = b[0] - a[0],
        y = b[1] - a[1],
        z = b[2] - a[2];
    return Math.sqrt(x*x + y*y + z*z);
};

/**
 * Alias for {@link vec3.distance}
 * @function
 */
vec3.dist = vec3.distance;

/**
 * Calculates the squared euclidian distance between two vec3's
 *
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @returns {Number} squared distance between a and b
 */
vec3.squaredDistance = function(a, b) {
    var x = b[0] - a[0],
        y = b[1] - a[1],
        z = b[2] - a[2];
    return x*x + y*y + z*z;
};

/**
 * Alias for {@link vec3.squaredDistance}
 * @function
 */
vec3.sqrDist = vec3.squaredDistance;

/**
 * Calculates the length of a vec3
 *
 * @param {vec3} a vector to calculate length of
 * @returns {Number} length of a
 */
vec3.length = function (a) {
    var x = a[0],
        y = a[1],
        z = a[2];
    return Math.sqrt(x*x + y*y + z*z);
};

/**
 * Alias for {@link vec3.length}
 * @function
 */
vec3.len = vec3.length;

/**
 * Calculates the squared length of a vec3
 *
 * @param {vec3} a vector to calculate squared length of
 * @returns {Number} squared length of a
 */
vec3.squaredLength = function (a) {
    var x = a[0],
        y = a[1],
        z = a[2];
    return x*x + y*y + z*z;
};

/**
 * Alias for {@link vec3.squaredLength}
 * @function
 */
vec3.sqrLen = vec3.squaredLength;

/**
 * Negates the components of a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a vector to negate
 * @returns {vec3} out
 */
vec3.negate = function(out, a) {
    out[0] = -a[0];
    out[1] = -a[1];
    out[2] = -a[2];
    return out;
};

/**
 * Returns the inverse of the components of a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a vector to invert
 * @returns {vec3} out
 */
vec3.inverse = function(out, a) {
  out[0] = 1.0 / a[0];
  out[1] = 1.0 / a[1];
  out[2] = 1.0 / a[2];
  return out;
};

/**
 * Normalize a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a vector to normalize
 * @returns {vec3} out
 */
vec3.normalize = function(out, a) {
    var x = a[0],
        y = a[1],
        z = a[2];
    var len = x*x + y*y + z*z;
    if (len > 0) {
        //TODO: evaluate use of glm_invsqrt here?
        len = 1 / Math.sqrt(len);
        out[0] = a[0] * len;
        out[1] = a[1] * len;
        out[2] = a[2] * len;
    }
    return out;
};

/**
 * Calculates the dot product of two vec3's
 *
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @returns {Number} dot product of a and b
 */
vec3.dot = function (a, b) {
    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
};

/**
 * Computes the cross product of two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @returns {vec3} out
 */
vec3.cross = function(out, a, b) {
    var ax = a[0], ay = a[1], az = a[2],
        bx = b[0], by = b[1], bz = b[2];

    out[0] = ay * bz - az * by;
    out[1] = az * bx - ax * bz;
    out[2] = ax * by - ay * bx;
    return out;
};

/**
 * Performs a linear interpolation between two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @param {Number} t interpolation amount between the two inputs
 * @returns {vec3} out
 */
vec3.lerp = function (out, a, b, t) {
    var ax = a[0],
        ay = a[1],
        az = a[2];
    out[0] = ax + t * (b[0] - ax);
    out[1] = ay + t * (b[1] - ay);
    out[2] = az + t * (b[2] - az);
    return out;
};

/**
 * Performs a hermite interpolation with two control points
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @param {vec3} c the third operand
 * @param {vec3} d the fourth operand
 * @param {Number} t interpolation amount between the two inputs
 * @returns {vec3} out
 */
vec3.hermite = function (out, a, b, c, d, t) {
  var factorTimes2 = t * t,
      factor1 = factorTimes2 * (2 * t - 3) + 1,
      factor2 = factorTimes2 * (t - 2) + t,
      factor3 = factorTimes2 * (t - 1),
      factor4 = factorTimes2 * (3 - 2 * t);
  
  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;
  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;
  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;
  
  return out;
};

/**
 * Performs a bezier interpolation with two control points
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @param {vec3} c the third operand
 * @param {vec3} d the fourth operand
 * @param {Number} t interpolation amount between the two inputs
 * @returns {vec3} out
 */
vec3.bezier = function (out, a, b, c, d, t) {
  var inverseFactor = 1 - t,
      inverseFactorTimesTwo = inverseFactor * inverseFactor,
      factorTimes2 = t * t,
      factor1 = inverseFactorTimesTwo * inverseFactor,
      factor2 = 3 * t * inverseFactorTimesTwo,
      factor3 = 3 * factorTimes2 * inverseFactor,
      factor4 = factorTimes2 * t;
  
  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;
  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;
  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;
  
  return out;
};

/**
 * Generates a random vector with the given scale
 *
 * @param {vec3} out the receiving vector
 * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned
 * @returns {vec3} out
 */
vec3.random = function (out, scale) {
    scale = scale || 1.0;

    var r = glMatrix.RANDOM() * 2.0 * Math.PI;
    var z = (glMatrix.RANDOM() * 2.0) - 1.0;
    var zScale = Math.sqrt(1.0-z*z) * scale;

    out[0] = Math.cos(r) * zScale;
    out[1] = Math.sin(r) * zScale;
    out[2] = z * scale;
    return out;
};

/**
 * Transforms the vec3 with a mat4.
 * 4th vector component is implicitly '1'
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the vector to transform
 * @param {mat4} m matrix to transform with
 * @returns {vec3} out
 */
vec3.transformMat4 = function(out, a, m) {
    var x = a[0], y = a[1], z = a[2],
        w = m[3] * x + m[7] * y + m[11] * z + m[15];
    w = w || 1.0;
    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;
    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;
    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;
    return out;
};

/**
 * Transforms the vec3 with a mat3.
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the vector to transform
 * @param {mat4} m the 3x3 matrix to transform with
 * @returns {vec3} out
 */
vec3.transformMat3 = function(out, a, m) {
    var x = a[0], y = a[1], z = a[2];
    out[0] = x * m[0] + y * m[3] + z * m[6];
    out[1] = x * m[1] + y * m[4] + z * m[7];
    out[2] = x * m[2] + y * m[5] + z * m[8];
    return out;
};

/**
 * Transforms the vec3 with a quat
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the vector to transform
 * @param {quat} q quaternion to transform with
 * @returns {vec3} out
 */
vec3.transformQuat = function(out, a, q) {
    // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations

    var x = a[0], y = a[1], z = a[2],
        qx = q[0], qy = q[1], qz = q[2], qw = q[3],

        // calculate quat * vec
        ix = qw * x + qy * z - qz * y,
        iy = qw * y + qz * x - qx * z,
        iz = qw * z + qx * y - qy * x,
        iw = -qx * x - qy * y - qz * z;

    // calculate result * inverse quat
    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;
    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;
    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;
    return out;
};

/**
 * Rotate a 3D vector around the x-axis
 * @param {vec3} out The receiving vec3
 * @param {vec3} a The vec3 point to rotate
 * @param {vec3} b The origin of the rotation
 * @param {Number} c The angle of rotation
 * @returns {vec3} out
 */
vec3.rotateX = function(out, a, b, c){
   var p = [], r=[];
	  //Translate point to the origin
	  p[0] = a[0] - b[0];
	  p[1] = a[1] - b[1];
  	p[2] = a[2] - b[2];

	  //perform rotation
	  r[0] = p[0];
	  r[1] = p[1]*Math.cos(c) - p[2]*Math.sin(c);
	  r[2] = p[1]*Math.sin(c) + p[2]*Math.cos(c);

	  //translate to correct position
	  out[0] = r[0] + b[0];
	  out[1] = r[1] + b[1];
	  out[2] = r[2] + b[2];

  	return out;
};

/**
 * Rotate a 3D vector around the y-axis
 * @param {vec3} out The receiving vec3
 * @param {vec3} a The vec3 point to rotate
 * @param {vec3} b The origin of the rotation
 * @param {Number} c The angle of rotation
 * @returns {vec3} out
 */
vec3.rotateY = function(out, a, b, c){
  	var p = [], r=[];
  	//Translate point to the origin
  	p[0] = a[0] - b[0];
  	p[1] = a[1] - b[1];
  	p[2] = a[2] - b[2];
  
  	//perform rotation
  	r[0] = p[2]*Math.sin(c) + p[0]*Math.cos(c);
  	r[1] = p[1];
  	r[2] = p[2]*Math.cos(c) - p[0]*Math.sin(c);
  
  	//translate to correct position
  	out[0] = r[0] + b[0];
  	out[1] = r[1] + b[1];
  	out[2] = r[2] + b[2];
  
  	return out;
};

/**
 * Rotate a 3D vector around the z-axis
 * @param {vec3} out The receiving vec3
 * @param {vec3} a The vec3 point to rotate
 * @param {vec3} b The origin of the rotation
 * @param {Number} c The angle of rotation
 * @returns {vec3} out
 */
vec3.rotateZ = function(out, a, b, c){
  	var p = [], r=[];
  	//Translate point to the origin
  	p[0] = a[0] - b[0];
  	p[1] = a[1] - b[1];
  	p[2] = a[2] - b[2];
  
  	//perform rotation
  	r[0] = p[0]*Math.cos(c) - p[1]*Math.sin(c);
  	r[1] = p[0]*Math.sin(c) + p[1]*Math.cos(c);
  	r[2] = p[2];
  
  	//translate to correct position
  	out[0] = r[0] + b[0];
  	out[1] = r[1] + b[1];
  	out[2] = r[2] + b[2];
  
  	return out;
};

/**
 * Perform some operation over an array of vec3s.
 *
 * @param {Array} a the array of vectors to iterate over
 * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed
 * @param {Number} offset Number of elements to skip at the beginning of the array
 * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array
 * @param {Function} fn Function to call for each vector in the array
 * @param {Object} [arg] additional argument to pass to fn
 * @returns {Array} a
 * @function
 */
vec3.forEach = (function() {
    var vec = vec3.create();

    return function(a, stride, offset, count, fn, arg) {
        var i, l;
        if(!stride) {
            stride = 3;
        }

        if(!offset) {
            offset = 0;
        }
        
        if(count) {
            l = Math.min((count * stride) + offset, a.length);
        } else {
            l = a.length;
        }

        for(i = offset; i < l; i += stride) {
            vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2];
            fn(vec, vec, arg);
            a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2];
        }
        
        return a;
    };
})();

/**
 * Get the angle between two 3D vectors
 * @param {vec3} a The first operand
 * @param {vec3} b The second operand
 * @returns {Number} The angle in radians
 */
vec3.angle = function(a, b) {
   
    var tempA = vec3.fromValues(a[0], a[1], a[2]);
    var tempB = vec3.fromValues(b[0], b[1], b[2]);
 
    vec3.normalize(tempA, tempA);
    vec3.normalize(tempB, tempB);
 
    var cosine = vec3.dot(tempA, tempB);

    if(cosine > 1.0){
        return 0;
    } else {
        return Math.acos(cosine);
    }     
};

/**
 * Returns a string representation of a vector
 *
 * @param {vec3} vec vector to represent as a string
 * @returns {String} string representation of the vector
 */
vec3.str = function (a) {
    return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';
};

/**
 * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)
 *
 * @param {vec3} a The first vector.
 * @param {vec3} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */
vec3.exactEquals = function (a, b) {
    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];
};

/**
 * Returns whether or not the vectors have approximately the same elements in the same position.
 *
 * @param {vec3} a The first vector.
 * @param {vec3} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */
vec3.equals = function (a, b) {
    var a0 = a[0], a1 = a[1], a2 = a[2];
    var b0 = b[0], b1 = b[1], b2 = b[2];
    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&
            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&
            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)));
};

module.exports = vec3;

},{"./common.js":111}],119:[function(require,module,exports){
/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE. */

var glMatrix = require("./common.js");

/**
 * @class 4 Dimensional Vector
 * @name vec4
 */
var vec4 = {};

/**
 * Creates a new, empty vec4
 *
 * @returns {vec4} a new 4D vector
 */
vec4.create = function() {
    var out = new glMatrix.ARRAY_TYPE(4);
    out[0] = 0;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    return out;
};

/**
 * Creates a new vec4 initialized with values from an existing vector
 *
 * @param {vec4} a vector to clone
 * @returns {vec4} a new 4D vector
 */
vec4.clone = function(a) {
    var out = new glMatrix.ARRAY_TYPE(4);
    out[0] = a[0];
    out[1] = a[1];
    out[2] = a[2];
    out[3] = a[3];
    return out;
};

/**
 * Creates a new vec4 initialized with the given values
 *
 * @param {Number} x X component
 * @param {Number} y Y component
 * @param {Number} z Z component
 * @param {Number} w W component
 * @returns {vec4} a new 4D vector
 */
vec4.fromValues = function(x, y, z, w) {
    var out = new glMatrix.ARRAY_TYPE(4);
    out[0] = x;
    out[1] = y;
    out[2] = z;
    out[3] = w;
    return out;
};

/**
 * Copy the values from one vec4 to another
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the source vector
 * @returns {vec4} out
 */
vec4.copy = function(out, a) {
    out[0] = a[0];
    out[1] = a[1];
    out[2] = a[2];
    out[3] = a[3];
    return out;
};

/**
 * Set the components of a vec4 to the given values
 *
 * @param {vec4} out the receiving vector
 * @param {Number} x X component
 * @param {Number} y Y component
 * @param {Number} z Z component
 * @param {Number} w W component
 * @returns {vec4} out
 */
vec4.set = function(out, x, y, z, w) {
    out[0] = x;
    out[1] = y;
    out[2] = z;
    out[3] = w;
    return out;
};

/**
 * Adds two vec4's
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the first operand
 * @param {vec4} b the second operand
 * @returns {vec4} out
 */
vec4.add = function(out, a, b) {
    out[0] = a[0] + b[0];
    out[1] = a[1] + b[1];
    out[2] = a[2] + b[2];
    out[3] = a[3] + b[3];
    return out;
};

/**
 * Subtracts vector b from vector a
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the first operand
 * @param {vec4} b the second operand
 * @returns {vec4} out
 */
vec4.subtract = function(out, a, b) {
    out[0] = a[0] - b[0];
    out[1] = a[1] - b[1];
    out[2] = a[2] - b[2];
    out[3] = a[3] - b[3];
    return out;
};

/**
 * Alias for {@link vec4.subtract}
 * @function
 */
vec4.sub = vec4.subtract;

/**
 * Multiplies two vec4's
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the first operand
 * @param {vec4} b the second operand
 * @returns {vec4} out
 */
vec4.multiply = function(out, a, b) {
    out[0] = a[0] * b[0];
    out[1] = a[1] * b[1];
    out[2] = a[2] * b[2];
    out[3] = a[3] * b[3];
    return out;
};

/**
 * Alias for {@link vec4.multiply}
 * @function
 */
vec4.mul = vec4.multiply;

/**
 * Divides two vec4's
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the first operand
 * @param {vec4} b the second operand
 * @returns {vec4} out
 */
vec4.divide = function(out, a, b) {
    out[0] = a[0] / b[0];
    out[1] = a[1] / b[1];
    out[2] = a[2] / b[2];
    out[3] = a[3] / b[3];
    return out;
};

/**
 * Alias for {@link vec4.divide}
 * @function
 */
vec4.div = vec4.divide;

/**
 * Math.ceil the components of a vec4
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a vector to ceil
 * @returns {vec4} out
 */
vec4.ceil = function (out, a) {
    out[0] = Math.ceil(a[0]);
    out[1] = Math.ceil(a[1]);
    out[2] = Math.ceil(a[2]);
    out[3] = Math.ceil(a[3]);
    return out;
};

/**
 * Math.floor the components of a vec4
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a vector to floor
 * @returns {vec4} out
 */
vec4.floor = function (out, a) {
    out[0] = Math.floor(a[0]);
    out[1] = Math.floor(a[1]);
    out[2] = Math.floor(a[2]);
    out[3] = Math.floor(a[3]);
    return out;
};

/**
 * Returns the minimum of two vec4's
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the first operand
 * @param {vec4} b the second operand
 * @returns {vec4} out
 */
vec4.min = function(out, a, b) {
    out[0] = Math.min(a[0], b[0]);
    out[1] = Math.min(a[1], b[1]);
    out[2] = Math.min(a[2], b[2]);
    out[3] = Math.min(a[3], b[3]);
    return out;
};

/**
 * Returns the maximum of two vec4's
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the first operand
 * @param {vec4} b the second operand
 * @returns {vec4} out
 */
vec4.max = function(out, a, b) {
    out[0] = Math.max(a[0], b[0]);
    out[1] = Math.max(a[1], b[1]);
    out[2] = Math.max(a[2], b[2]);
    out[3] = Math.max(a[3], b[3]);
    return out;
};

/**
 * Math.round the components of a vec4
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a vector to round
 * @returns {vec4} out
 */
vec4.round = function (out, a) {
    out[0] = Math.round(a[0]);
    out[1] = Math.round(a[1]);
    out[2] = Math.round(a[2]);
    out[3] = Math.round(a[3]);
    return out;
};

/**
 * Scales a vec4 by a scalar number
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the vector to scale
 * @param {Number} b amount to scale the vector by
 * @returns {vec4} out
 */
vec4.scale = function(out, a, b) {
    out[0] = a[0] * b;
    out[1] = a[1] * b;
    out[2] = a[2] * b;
    out[3] = a[3] * b;
    return out;
};

/**
 * Adds two vec4's after scaling the second operand by a scalar value
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the first operand
 * @param {vec4} b the second operand
 * @param {Number} scale the amount to scale b by before adding
 * @returns {vec4} out
 */
vec4.scaleAndAdd = function(out, a, b, scale) {
    out[0] = a[0] + (b[0] * scale);
    out[1] = a[1] + (b[1] * scale);
    out[2] = a[2] + (b[2] * scale);
    out[3] = a[3] + (b[3] * scale);
    return out;
};

/**
 * Calculates the euclidian distance between two vec4's
 *
 * @param {vec4} a the first operand
 * @param {vec4} b the second operand
 * @returns {Number} distance between a and b
 */
vec4.distance = function(a, b) {
    var x = b[0] - a[0],
        y = b[1] - a[1],
        z = b[2] - a[2],
        w = b[3] - a[3];
    return Math.sqrt(x*x + y*y + z*z + w*w);
};

/**
 * Alias for {@link vec4.distance}
 * @function
 */
vec4.dist = vec4.distance;

/**
 * Calculates the squared euclidian distance between two vec4's
 *
 * @param {vec4} a the first operand
 * @param {vec4} b the second operand
 * @returns {Number} squared distance between a and b
 */
vec4.squaredDistance = function(a, b) {
    var x = b[0] - a[0],
        y = b[1] - a[1],
        z = b[2] - a[2],
        w = b[3] - a[3];
    return x*x + y*y + z*z + w*w;
};

/**
 * Alias for {@link vec4.squaredDistance}
 * @function
 */
vec4.sqrDist = vec4.squaredDistance;

/**
 * Calculates the length of a vec4
 *
 * @param {vec4} a vector to calculate length of
 * @returns {Number} length of a
 */
vec4.length = function (a) {
    var x = a[0],
        y = a[1],
        z = a[2],
        w = a[3];
    return Math.sqrt(x*x + y*y + z*z + w*w);
};

/**
 * Alias for {@link vec4.length}
 * @function
 */
vec4.len = vec4.length;

/**
 * Calculates the squared length of a vec4
 *
 * @param {vec4} a vector to calculate squared length of
 * @returns {Number} squared length of a
 */
vec4.squaredLength = function (a) {
    var x = a[0],
        y = a[1],
        z = a[2],
        w = a[3];
    return x*x + y*y + z*z + w*w;
};

/**
 * Alias for {@link vec4.squaredLength}
 * @function
 */
vec4.sqrLen = vec4.squaredLength;

/**
 * Negates the components of a vec4
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a vector to negate
 * @returns {vec4} out
 */
vec4.negate = function(out, a) {
    out[0] = -a[0];
    out[1] = -a[1];
    out[2] = -a[2];
    out[3] = -a[3];
    return out;
};

/**
 * Returns the inverse of the components of a vec4
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a vector to invert
 * @returns {vec4} out
 */
vec4.inverse = function(out, a) {
  out[0] = 1.0 / a[0];
  out[1] = 1.0 / a[1];
  out[2] = 1.0 / a[2];
  out[3] = 1.0 / a[3];
  return out;
};

/**
 * Normalize a vec4
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a vector to normalize
 * @returns {vec4} out
 */
vec4.normalize = function(out, a) {
    var x = a[0],
        y = a[1],
        z = a[2],
        w = a[3];
    var len = x*x + y*y + z*z + w*w;
    if (len > 0) {
        len = 1 / Math.sqrt(len);
        out[0] = x * len;
        out[1] = y * len;
        out[2] = z * len;
        out[3] = w * len;
    }
    return out;
};

/**
 * Calculates the dot product of two vec4's
 *
 * @param {vec4} a the first operand
 * @param {vec4} b the second operand
 * @returns {Number} dot product of a and b
 */
vec4.dot = function (a, b) {
    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];
};

/**
 * Performs a linear interpolation between two vec4's
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the first operand
 * @param {vec4} b the second operand
 * @param {Number} t interpolation amount between the two inputs
 * @returns {vec4} out
 */
vec4.lerp = function (out, a, b, t) {
    var ax = a[0],
        ay = a[1],
        az = a[2],
        aw = a[3];
    out[0] = ax + t * (b[0] - ax);
    out[1] = ay + t * (b[1] - ay);
    out[2] = az + t * (b[2] - az);
    out[3] = aw + t * (b[3] - aw);
    return out;
};

/**
 * Generates a random vector with the given scale
 *
 * @param {vec4} out the receiving vector
 * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned
 * @returns {vec4} out
 */
vec4.random = function (out, scale) {
    scale = scale || 1.0;

    //TODO: This is a pretty awful way of doing this. Find something better.
    out[0] = glMatrix.RANDOM();
    out[1] = glMatrix.RANDOM();
    out[2] = glMatrix.RANDOM();
    out[3] = glMatrix.RANDOM();
    vec4.normalize(out, out);
    vec4.scale(out, out, scale);
    return out;
};

/**
 * Transforms the vec4 with a mat4.
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the vector to transform
 * @param {mat4} m matrix to transform with
 * @returns {vec4} out
 */
vec4.transformMat4 = function(out, a, m) {
    var x = a[0], y = a[1], z = a[2], w = a[3];
    out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;
    out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;
    out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;
    out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;
    return out;
};

/**
 * Transforms the vec4 with a quat
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the vector to transform
 * @param {quat} q quaternion to transform with
 * @returns {vec4} out
 */
vec4.transformQuat = function(out, a, q) {
    var x = a[0], y = a[1], z = a[2],
        qx = q[0], qy = q[1], qz = q[2], qw = q[3],

        // calculate quat * vec
        ix = qw * x + qy * z - qz * y,
        iy = qw * y + qz * x - qx * z,
        iz = qw * z + qx * y - qy * x,
        iw = -qx * x - qy * y - qz * z;

    // calculate result * inverse quat
    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;
    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;
    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;
    out[3] = a[3];
    return out;
};

/**
 * Perform some operation over an array of vec4s.
 *
 * @param {Array} a the array of vectors to iterate over
 * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed
 * @param {Number} offset Number of elements to skip at the beginning of the array
 * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array
 * @param {Function} fn Function to call for each vector in the array
 * @param {Object} [arg] additional argument to pass to fn
 * @returns {Array} a
 * @function
 */
vec4.forEach = (function() {
    var vec = vec4.create();

    return function(a, stride, offset, count, fn, arg) {
        var i, l;
        if(!stride) {
            stride = 4;
        }

        if(!offset) {
            offset = 0;
        }
        
        if(count) {
            l = Math.min((count * stride) + offset, a.length);
        } else {
            l = a.length;
        }

        for(i = offset; i < l; i += stride) {
            vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2]; vec[3] = a[i+3];
            fn(vec, vec, arg);
            a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2]; a[i+3] = vec[3];
        }
        
        return a;
    };
})();

/**
 * Returns a string representation of a vector
 *
 * @param {vec4} vec vector to represent as a string
 * @returns {String} string representation of the vector
 */
vec4.str = function (a) {
    return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';
};

/**
 * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)
 *
 * @param {vec4} a The first vector.
 * @param {vec4} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */
vec4.exactEquals = function (a, b) {
    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];
};

/**
 * Returns whether or not the vectors have approximately the same elements in the same position.
 *
 * @param {vec4} a The first vector.
 * @param {vec4} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */
vec4.equals = function (a, b) {
    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];
    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];
    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&
            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&
            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&
            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));
};

module.exports = vec4;

},{"./common.js":111}],120:[function(require,module,exports){
(function (global){
/*
** Copyright (c) 2012 The Khronos Group Inc.
**
** Permission is hereby granted, free of charge, to any person obtaining a
** copy of this software and/or associated documentation files (the
** "Materials"), to deal in the Materials without restriction, including
** without limitation the rights to use, copy, modify, merge, publish,
** distribute, sublicense, and/or sell copies of the Materials, and to
** permit persons to whom the Materials are furnished to do so, subject to
** the following conditions:
**
** The above copyright notice and this permission notice shall be included
** in all copies or substantial portions of the Materials.
**
** THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.
*/

//Ported to node by Marcin Ignac on 2016-05-20

// Various functions for helping debug WebGL apps.

WebGLDebugUtils = function() {

//polyfill window in node
if (typeof(window) == 'undefined') {
    window = global;
}

/**
 * Wrapped logging function.
 * @param {string} msg Message to log.
 */
var log = function(msg) {
  if (window.console && window.console.log) {
    window.console.log(msg);
  }
};

/**
 * Wrapped error logging function.
 * @param {string} msg Message to log.
 */
var error = function(msg) {
  if (window.console && window.console.error) {
    window.console.error(msg);
  } else {
    log(msg);
  }
};


/**
 * Which arguments are enums based on the number of arguments to the function.
 * So
 *    'texImage2D': {
 *       9: { 0:true, 2:true, 6:true, 7:true },
 *       6: { 0:true, 2:true, 3:true, 4:true },
 *    },
 *
 * means if there are 9 arguments then 6 and 7 are enums, if there are 6
 * arguments 3 and 4 are enums
 *
 * @type {!Object.<number, !Object.<number, string>}
 */
var glValidEnumContexts = {
  // Generic setters and getters

  'enable': {1: { 0:true }},
  'disable': {1: { 0:true }},
  'getParameter': {1: { 0:true }},

  // Rendering

  'drawArrays': {3:{ 0:true }},
  'drawElements': {4:{ 0:true, 2:true }},

  // Shaders

  'createShader': {1: { 0:true }},
  'getShaderParameter': {2: { 1:true }},
  'getProgramParameter': {2: { 1:true }},
  'getShaderPrecisionFormat': {2: { 0: true, 1:true }},

  // Vertex attributes

  'getVertexAttrib': {2: { 1:true }},
  'vertexAttribPointer': {6: { 2:true }},

  // Textures

  'bindTexture': {2: { 0:true }},
  'activeTexture': {1: { 0:true }},
  'getTexParameter': {2: { 0:true, 1:true }},
  'texParameterf': {3: { 0:true, 1:true }},
  'texParameteri': {3: { 0:true, 1:true, 2:true }},
  'texImage2D': {
     9: { 0:true, 2:true, 6:true, 7:true },
     6: { 0:true, 2:true, 3:true, 4:true }
  },
  'texSubImage2D': {
    9: { 0:true, 6:true, 7:true },
    7: { 0:true, 4:true, 5:true }
  },
  'copyTexImage2D': {8: { 0:true, 2:true }},
  'copyTexSubImage2D': {8: { 0:true }},
  'generateMipmap': {1: { 0:true }},
  'compressedTexImage2D': {7: { 0: true, 2:true }},
  'compressedTexSubImage2D': {8: { 0: true, 6:true }},

  // Buffer objects

  'bindBuffer': {2: { 0:true }},
  'bufferData': {3: { 0:true, 2:true }},
  'bufferSubData': {3: { 0:true }},
  'getBufferParameter': {2: { 0:true, 1:true }},

  // Renderbuffers and framebuffers

  'pixelStorei': {2: { 0:true, 1:true }},
  'readPixels': {7: { 4:true, 5:true }},
  'bindRenderbuffer': {2: { 0:true }},
  'bindFramebuffer': {2: { 0:true }},
  'checkFramebufferStatus': {1: { 0:true }},
  'framebufferRenderbuffer': {4: { 0:true, 1:true, 2:true }},
  'framebufferTexture2D': {5: { 0:true, 1:true, 2:true }},
  'getFramebufferAttachmentParameter': {3: { 0:true, 1:true, 2:true }},
  'getRenderbufferParameter': {2: { 0:true, 1:true }},
  'renderbufferStorage': {4: { 0:true, 1:true }},

  // Frame buffer operations (clear, blend, depth test, stencil)

  'clear': {1: { 0: { 'enumBitwiseOr': ['COLOR_BUFFER_BIT', 'DEPTH_BUFFER_BIT', 'STENCIL_BUFFER_BIT'] }}},
  'depthFunc': {1: { 0:true }},
  'blendFunc': {2: { 0:true, 1:true }},
  'blendFuncSeparate': {4: { 0:true, 1:true, 2:true, 3:true }},
  'blendEquation': {1: { 0:true }},
  'blendEquationSeparate': {2: { 0:true, 1:true }},
  'stencilFunc': {3: { 0:true }},
  'stencilFuncSeparate': {4: { 0:true, 1:true }},
  'stencilMaskSeparate': {2: { 0:true }},
  'stencilOp': {3: { 0:true, 1:true, 2:true }},
  'stencilOpSeparate': {4: { 0:true, 1:true, 2:true, 3:true }},

  // Culling

  'cullFace': {1: { 0:true }},
  'frontFace': {1: { 0:true }},

  // ANGLE_instanced_arrays extension

  'drawArraysInstancedANGLE': {4: { 0:true }},
  'drawElementsInstancedANGLE': {5: { 0:true, 2:true }},

  // EXT_blend_minmax extension

  'blendEquationEXT': {1: { 0:true }}
};

/**
 * Map of numbers to names.
 * @type {Object}
 */
var glEnums = null;

/**
 * Map of names to numbers.
 * @type {Object}
 */
var enumStringToValue = null;

/**
 * Initializes this module. Safe to call more than once.
 * @param {!WebGLRenderingContext} ctx A WebGL context. If
 *    you have more than one context it doesn't matter which one
 *    you pass in, it is only used to pull out constants.
 */
function init(ctx) {
  if (glEnums == null) {
    glEnums = { };
    enumStringToValue = { };
    for (var propertyName in ctx) {
      if (typeof ctx[propertyName] == 'number') {
        glEnums[ctx[propertyName]] = propertyName;
        enumStringToValue[propertyName] = ctx[propertyName];
      }
    }
  }
}

/**
 * Checks the utils have been initialized.
 */
function checkInit() {
  if (glEnums == null) {
    throw 'WebGLDebugUtils.init(ctx) not called';
  }
}

/**
 * Returns true or false if value matches any WebGL enum
 * @param {*} value Value to check if it might be an enum.
 * @return {boolean} True if value matches one of the WebGL defined enums
 */
function mightBeEnum(value) {
  checkInit();
  return (glEnums[value] !== undefined);
}

/**
 * Gets an string version of an WebGL enum.
 *
 * Example:
 *   var str = WebGLDebugUtil.glEnumToString(ctx.getError());
 *
 * @param {number} value Value to return an enum for
 * @return {string} The string version of the enum.
 */
function glEnumToString(value) {
  checkInit();
  var name = glEnums[value];
  return (name !== undefined) ? ("gl." + name) :
      ("/*UNKNOWN WebGL ENUM*/ 0x" + value.toString(16) + "");
}

/**
 * Returns the string version of a WebGL argument.
 * Attempts to convert enum arguments to strings.
 * @param {string} functionName the name of the WebGL function.
 * @param {number} numArgs the number of arguments passed to the function.
 * @param {number} argumentIndx the index of the argument.
 * @param {*} value The value of the argument.
 * @return {string} The value as a string.
 */
function glFunctionArgToString(functionName, numArgs, argumentIndex, value) {
  var funcInfo = glValidEnumContexts[functionName];
  if (funcInfo !== undefined) {
    var funcInfo = funcInfo[numArgs];
    if (funcInfo !== undefined) {
      if (funcInfo[argumentIndex]) {
        if (typeof funcInfo[argumentIndex] === 'object' &&
            funcInfo[argumentIndex]['enumBitwiseOr'] !== undefined) {
          var enums = funcInfo[argumentIndex]['enumBitwiseOr'];
          var orResult = 0;
          var orEnums = [];
          for (var i = 0; i < enums.length; ++i) {
            var enumValue = enumStringToValue[enums[i]];
            if ((value & enumValue) !== 0) {
              orResult |= enumValue;
              orEnums.push(glEnumToString(enumValue));
            }
          }
          if (orResult === value) {
            return orEnums.join(' | ');
          } else {
            return glEnumToString(value);
          }
        } else {
          return glEnumToString(value);
        }
      }
    }
  }
  if (value === null) {
    return "null";
  } else if (value === undefined) {
    return "undefined";
  } else {
    return value.toString();
  }
}

/**
 * Converts the arguments of a WebGL function to a string.
 * Attempts to convert enum arguments to strings.
 *
 * @param {string} functionName the name of the WebGL function.
 * @param {number} args The arguments.
 * @return {string} The arguments as a string.
 */
function glFunctionArgsToString(functionName, args) {
  // apparently we can't do args.join(",");
  var argStr = "";
  var numArgs = args.length;
  for (var ii = 0; ii < numArgs; ++ii) {
    argStr += ((ii == 0) ? '' : ', ') +
        glFunctionArgToString(functionName, numArgs, ii, args[ii]);
  }
  return argStr;
};


function makePropertyWrapper(wrapper, original, propertyName) {
  //log("wrap prop: " + propertyName);
  wrapper.__defineGetter__(propertyName, function() {
    return original[propertyName];
  });
  // TODO(gmane): this needs to handle properties that take more than
  // one value?
  wrapper.__defineSetter__(propertyName, function(value) {
    //log("set: " + propertyName);
    original[propertyName] = value;
  });
}

// Makes a function that calls a function on another object.
function makeFunctionWrapper(original, functionName) {
  //log("wrap fn: " + functionName);
  var f = original[functionName];
  return function() {
    //log("call: " + functionName);
    var result = f.apply(original, arguments);
    return result;
  };
}

/**
 * Given a WebGL context returns a wrapped context that calls
 * gl.getError after every command and calls a function if the
 * result is not gl.NO_ERROR.
 *
 * @param {!WebGLRenderingContext} ctx The webgl context to
 *        wrap.
 * @param {!function(err, funcName, args): void} opt_onErrorFunc
 *        The function to call when gl.getError returns an
 *        error. If not specified the default function calls
 *        console.log with a message.
 * @param {!function(funcName, args): void} opt_onFunc The
 *        function to call when each webgl function is called.
 *        You can use this to log all calls for example.
 * @param {!WebGLRenderingContext} opt_err_ctx The webgl context
 *        to call getError on if different than ctx.
 */
function makeDebugContext(ctx, opt_onErrorFunc, opt_onFunc, opt_err_ctx) {
  opt_err_ctx = opt_err_ctx || ctx;
  init(ctx);
  opt_onErrorFunc = opt_onErrorFunc || function(err, functionName, args) {
        // apparently we can't do args.join(",");
        var argStr = "";
        var numArgs = args.length;
        for (var ii = 0; ii < numArgs; ++ii) {
          argStr += ((ii == 0) ? '' : ', ') +
              glFunctionArgToString(functionName, numArgs, ii, args[ii]);
        }
        error("WebGL error "+ glEnumToString(err) + " in "+ functionName +
              "(" + argStr + ")");
      };

  // Holds booleans for each GL error so after we get the error ourselves
  // we can still return it to the client app.
  var glErrorShadow = { };

  // Makes a function that calls a WebGL function and then calls getError.
  function makeErrorWrapper(ctx, functionName) {
    return function() {
      if (opt_onFunc) {
        opt_onFunc(functionName, arguments);
      }
      var result = ctx[functionName].apply(ctx, arguments);
      var err = opt_err_ctx.getError();
      if (err != 0) {
        glErrorShadow[err] = true;
        opt_onErrorFunc(err, functionName, arguments);
      }
      return result;
    };
  }

  // Make a an object that has a copy of every property of the WebGL context
  // but wraps all functions.
  var wrapper = {};
  for (var propertyName in ctx) {
    if (typeof ctx[propertyName] == 'function') {
      if (propertyName != 'getExtension') {
        wrapper[propertyName] = makeErrorWrapper(ctx, propertyName);
      } else {
        var wrapped = makeErrorWrapper(ctx, propertyName);
        wrapper[propertyName] = function () {
          var result = wrapped.apply(ctx, arguments);
          return makeDebugContext(result, opt_onErrorFunc, opt_onFunc, opt_err_ctx);
        };
      }
    } else {
      makePropertyWrapper(wrapper, ctx, propertyName);
    }
  }

  // Override the getError function with one that returns our saved results.
  wrapper.getError = function() {
    for (var err in glErrorShadow) {
      if (glErrorShadow.hasOwnProperty(err)) {
        if (glErrorShadow[err]) {
          glErrorShadow[err] = false;
          return err;
        }
      }
    }
    return ctx.NO_ERROR;
  };

  return wrapper;
}

function resetToInitialState(ctx) {
  var numAttribs = ctx.getParameter(ctx.MAX_VERTEX_ATTRIBS);
  var tmp = ctx.createBuffer();
  ctx.bindBuffer(ctx.ARRAY_BUFFER, tmp);
  for (var ii = 0; ii < numAttribs; ++ii) {
    ctx.disableVertexAttribArray(ii);
    ctx.vertexAttribPointer(ii, 4, ctx.FLOAT, false, 0, 0);
    ctx.vertexAttrib1f(ii, 0);
  }
  ctx.deleteBuffer(tmp);

  var numTextureUnits = ctx.getParameter(ctx.MAX_TEXTURE_IMAGE_UNITS);
  for (var ii = 0; ii < numTextureUnits; ++ii) {
    ctx.activeTexture(ctx.TEXTURE0 + ii);
    ctx.bindTexture(ctx.TEXTURE_CUBE_MAP, null);
    ctx.bindTexture(ctx.TEXTURE_2D, null);
  }

  ctx.activeTexture(ctx.TEXTURE0);
  ctx.useProgram(null);
  ctx.bindBuffer(ctx.ARRAY_BUFFER, null);
  ctx.bindBuffer(ctx.ELEMENT_ARRAY_BUFFER, null);
  ctx.bindFramebuffer(ctx.FRAMEBUFFER, null);
  ctx.bindRenderbuffer(ctx.RENDERBUFFER, null);
  ctx.disable(ctx.BLEND);
  ctx.disable(ctx.CULL_FACE);
  ctx.disable(ctx.DEPTH_TEST);
  ctx.disable(ctx.DITHER);
  ctx.disable(ctx.SCISSOR_TEST);
  ctx.blendColor(0, 0, 0, 0);
  ctx.blendEquation(ctx.FUNC_ADD);
  ctx.blendFunc(ctx.ONE, ctx.ZERO);
  ctx.clearColor(0, 0, 0, 0);
  ctx.clearDepth(1);
  ctx.clearStencil(-1);
  ctx.colorMask(true, true, true, true);
  ctx.cullFace(ctx.BACK);
  ctx.depthFunc(ctx.LESS);
  ctx.depthMask(true);
  ctx.depthRange(0, 1);
  ctx.frontFace(ctx.CCW);
  ctx.hint(ctx.GENERATE_MIPMAP_HINT, ctx.DONT_CARE);
  ctx.lineWidth(1);
  ctx.pixelStorei(ctx.PACK_ALIGNMENT, 4);
  ctx.pixelStorei(ctx.UNPACK_ALIGNMENT, 4);
  ctx.pixelStorei(ctx.UNPACK_FLIP_Y_WEBGL, false);
  ctx.pixelStorei(ctx.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);
  // TODO: Delete this IF.
  if (ctx.UNPACK_COLORSPACE_CONVERSION_WEBGL) {
    ctx.pixelStorei(ctx.UNPACK_COLORSPACE_CONVERSION_WEBGL, ctx.BROWSER_DEFAULT_WEBGL);
  }
  ctx.polygonOffset(0, 0);
  ctx.sampleCoverage(1, false);
  ctx.scissor(0, 0, ctx.canvas.width, ctx.canvas.height);
  ctx.stencilFunc(ctx.ALWAYS, 0, 0xFFFFFFFF);
  ctx.stencilMask(0xFFFFFFFF);
  ctx.stencilOp(ctx.KEEP, ctx.KEEP, ctx.KEEP);
  ctx.viewport(0, 0, ctx.canvas.width, ctx.canvas.height);
  ctx.clear(ctx.COLOR_BUFFER_BIT | ctx.DEPTH_BUFFER_BIT | ctx.STENCIL_BUFFER_BIT);

  // TODO: This should NOT be needed but Firefox fails with 'hint'
  while(ctx.getError());
}

function makeLostContextSimulatingCanvas(canvas) {
  var unwrappedContext_;
  var wrappedContext_;
  var onLost_ = [];
  var onRestored_ = [];
  var wrappedContext_ = {};
  var contextId_ = 1;
  var contextLost_ = false;
  var resourceId_ = 0;
  var resourceDb_ = [];
  var numCallsToLoseContext_ = 0;
  var numCalls_ = 0;
  var canRestore_ = false;
  var restoreTimeout_ = 0;

  // Holds booleans for each GL error so can simulate errors.
  var glErrorShadow_ = { };

  canvas.getContext = function(f) {
    return function() {
      var ctx = f.apply(canvas, arguments);
      // Did we get a context and is it a WebGL context?
      if (ctx instanceof WebGLRenderingContext) {
        if (ctx != unwrappedContext_) {
          if (unwrappedContext_) {
            throw "got different context"
          }
          unwrappedContext_ = ctx;
          wrappedContext_ = makeLostContextSimulatingContext(unwrappedContext_);
        }
        return wrappedContext_;
      }
      return ctx;
    }
  }(canvas.getContext);

  function wrapEvent(listener) {
    if (typeof(listener) == "function") {
      return listener;
    } else {
      return function(info) {
        listener.handleEvent(info);
      }
    }
  }

  var addOnContextLostListener = function(listener) {
    onLost_.push(wrapEvent(listener));
  };

  var addOnContextRestoredListener = function(listener) {
    onRestored_.push(wrapEvent(listener));
  };


  function wrapAddEventListener(canvas) {
    var f = canvas.addEventListener;
    canvas.addEventListener = function(type, listener, bubble) {
      switch (type) {
        case 'webglcontextlost':
          addOnContextLostListener(listener);
          break;
        case 'webglcontextrestored':
          addOnContextRestoredListener(listener);
          break;
        default:
          f.apply(canvas, arguments);
      }
    };
  }

  wrapAddEventListener(canvas);

  canvas.loseContext = function() {
    if (!contextLost_) {
      contextLost_ = true;
      numCallsToLoseContext_ = 0;
      ++contextId_;
      while (unwrappedContext_.getError());
      clearErrors();
      glErrorShadow_[unwrappedContext_.CONTEXT_LOST_WEBGL] = true;
      var event = makeWebGLContextEvent("context lost");
      var callbacks = onLost_.slice();
      setTimeout(function() {
          //log("numCallbacks:" + callbacks.length);
          for (var ii = 0; ii < callbacks.length; ++ii) {
            //log("calling callback:" + ii);
            callbacks[ii](event);
          }
          if (restoreTimeout_ >= 0) {
            setTimeout(function() {
                canvas.restoreContext();
              }, restoreTimeout_);
          }
        }, 0);
    }
  };

  canvas.restoreContext = function() {
    if (contextLost_) {
      if (onRestored_.length) {
        setTimeout(function() {
            if (!canRestore_) {
              throw "can not restore. webglcontestlost listener did not call event.preventDefault";
            }
            freeResources();
            resetToInitialState(unwrappedContext_);
            contextLost_ = false;
            numCalls_ = 0;
            canRestore_ = false;
            var callbacks = onRestored_.slice();
            var event = makeWebGLContextEvent("context restored");
            for (var ii = 0; ii < callbacks.length; ++ii) {
              callbacks[ii](event);
            }
          }, 0);
      }
    }
  };

  canvas.loseContextInNCalls = function(numCalls) {
    if (contextLost_) {
      throw "You can not ask a lost contet to be lost";
    }
    numCallsToLoseContext_ = numCalls_ + numCalls;
  };

  canvas.getNumCalls = function() {
    return numCalls_;
  };

  canvas.setRestoreTimeout = function(timeout) {
    restoreTimeout_ = timeout;
  };

  function isWebGLObject(obj) {
    //return false;
    return (obj instanceof WebGLBuffer ||
            obj instanceof WebGLFramebuffer ||
            obj instanceof WebGLProgram ||
            obj instanceof WebGLRenderbuffer ||
            obj instanceof WebGLShader ||
            obj instanceof WebGLTexture);
  }

  function checkResources(args) {
    for (var ii = 0; ii < args.length; ++ii) {
      var arg = args[ii];
      if (isWebGLObject(arg)) {
        return arg.__webglDebugContextLostId__ == contextId_;
      }
    }
    return true;
  }

  function clearErrors() {
    var k = Object.keys(glErrorShadow_);
    for (var ii = 0; ii < k.length; ++ii) {
      delete glErrorShadow_[k];
    }
  }

  function loseContextIfTime() {
    ++numCalls_;
    if (!contextLost_) {
      if (numCallsToLoseContext_ == numCalls_) {
        canvas.loseContext();
      }
    }
  }

  // Makes a function that simulates WebGL when out of context.
  function makeLostContextFunctionWrapper(ctx, functionName) {
    var f = ctx[functionName];
    return function() {
      // log("calling:" + functionName);
      // Only call the functions if the context is not lost.
      loseContextIfTime();
      if (!contextLost_) {
        //if (!checkResources(arguments)) {
        //  glErrorShadow_[wrappedContext_.INVALID_OPERATION] = true;
        //  return;
        //}
        var result = f.apply(ctx, arguments);
        return result;
      }
    };
  }

  function freeResources() {
    for (var ii = 0; ii < resourceDb_.length; ++ii) {
      var resource = resourceDb_[ii];
      if (resource instanceof WebGLBuffer) {
        unwrappedContext_.deleteBuffer(resource);
      } else if (resource instanceof WebGLFramebuffer) {
        unwrappedContext_.deleteFramebuffer(resource);
      } else if (resource instanceof WebGLProgram) {
        unwrappedContext_.deleteProgram(resource);
      } else if (resource instanceof WebGLRenderbuffer) {
        unwrappedContext_.deleteRenderbuffer(resource);
      } else if (resource instanceof WebGLShader) {
        unwrappedContext_.deleteShader(resource);
      } else if (resource instanceof WebGLTexture) {
        unwrappedContext_.deleteTexture(resource);
      }
    }
  }

  function makeWebGLContextEvent(statusMessage) {
    return {
      statusMessage: statusMessage,
      preventDefault: function() {
          canRestore_ = true;
        }
    };
  }

  return canvas;

  function makeLostContextSimulatingContext(ctx) {
    // copy all functions and properties to wrapper
    for (var propertyName in ctx) {
      if (typeof ctx[propertyName] == 'function') {
         wrappedContext_[propertyName] = makeLostContextFunctionWrapper(
             ctx, propertyName);
       } else {
         makePropertyWrapper(wrappedContext_, ctx, propertyName);
       }
    }

    // Wrap a few functions specially.
    wrappedContext_.getError = function() {
      loseContextIfTime();
      if (!contextLost_) {
        var err;
        while (err = unwrappedContext_.getError()) {
          glErrorShadow_[err] = true;
        }
      }
      for (var err in glErrorShadow_) {
        if (glErrorShadow_[err]) {
          delete glErrorShadow_[err];
          return err;
        }
      }
      return wrappedContext_.NO_ERROR;
    };

    var creationFunctions = [
      "createBuffer",
      "createFramebuffer",
      "createProgram",
      "createRenderbuffer",
      "createShader",
      "createTexture"
    ];
    for (var ii = 0; ii < creationFunctions.length; ++ii) {
      var functionName = creationFunctions[ii];
      wrappedContext_[functionName] = function(f) {
        return function() {
          loseContextIfTime();
          if (contextLost_) {
            return null;
          }
          var obj = f.apply(ctx, arguments);
          obj.__webglDebugContextLostId__ = contextId_;
          resourceDb_.push(obj);
          return obj;
        };
      }(ctx[functionName]);
    }

    var functionsThatShouldReturnNull = [
      "getActiveAttrib",
      "getActiveUniform",
      "getBufferParameter",
      "getContextAttributes",
      "getAttachedShaders",
      "getFramebufferAttachmentParameter",
      "getParameter",
      "getProgramParameter",
      "getProgramInfoLog",
      "getRenderbufferParameter",
      "getShaderParameter",
      "getShaderInfoLog",
      "getShaderSource",
      "getTexParameter",
      "getUniform",
      "getUniformLocation",
      "getVertexAttrib"
    ];
    for (var ii = 0; ii < functionsThatShouldReturnNull.length; ++ii) {
      var functionName = functionsThatShouldReturnNull[ii];
      wrappedContext_[functionName] = function(f) {
        return function() {
          loseContextIfTime();
          if (contextLost_) {
            return null;
          }
          return f.apply(ctx, arguments);
        }
      }(wrappedContext_[functionName]);
    }

    var isFunctions = [
      "isBuffer",
      "isEnabled",
      "isFramebuffer",
      "isProgram",
      "isRenderbuffer",
      "isShader",
      "isTexture"
    ];
    for (var ii = 0; ii < isFunctions.length; ++ii) {
      var functionName = isFunctions[ii];
      wrappedContext_[functionName] = function(f) {
        return function() {
          loseContextIfTime();
          if (contextLost_) {
            return false;
          }
          return f.apply(ctx, arguments);
        }
      }(wrappedContext_[functionName]);
    }

    wrappedContext_.checkFramebufferStatus = function(f) {
      return function() {
        loseContextIfTime();
        if (contextLost_) {
          return wrappedContext_.FRAMEBUFFER_UNSUPPORTED;
        }
        return f.apply(ctx, arguments);
      };
    }(wrappedContext_.checkFramebufferStatus);

    wrappedContext_.getAttribLocation = function(f) {
      return function() {
        loseContextIfTime();
        if (contextLost_) {
          return -1;
        }
        return f.apply(ctx, arguments);
      };
    }(wrappedContext_.getAttribLocation);

    wrappedContext_.getVertexAttribOffset = function(f) {
      return function() {
        loseContextIfTime();
        if (contextLost_) {
          return 0;
        }
        return f.apply(ctx, arguments);
      };
    }(wrappedContext_.getVertexAttribOffset);

    wrappedContext_.isContextLost = function() {
      return contextLost_;
    };

    return wrappedContext_;
  }
}

return {
  /**
   * Initializes this module. Safe to call more than once.
   * @param {!WebGLRenderingContext} ctx A WebGL context. If
   *    you have more than one context it doesn't matter which one
   *    you pass in, it is only used to pull out constants.
   */
  'init': init,

  /**
   * Returns true or false if value matches any WebGL enum
   * @param {*} value Value to check if it might be an enum.
   * @return {boolean} True if value matches one of the WebGL defined enums
   */
  'mightBeEnum': mightBeEnum,

  /**
   * Gets an string version of an WebGL enum.
   *
   * Example:
   *   WebGLDebugUtil.init(ctx);
   *   var str = WebGLDebugUtil.glEnumToString(ctx.getError());
   *
   * @param {number} value Value to return an enum for
   * @return {string} The string version of the enum.
   */
  'glEnumToString': glEnumToString,

  /**
   * Converts the argument of a WebGL function to a string.
   * Attempts to convert enum arguments to strings.
   *
   * Example:
   *   WebGLDebugUtil.init(ctx);
   *   var str = WebGLDebugUtil.glFunctionArgToString('bindTexture', 2, 0, gl.TEXTURE_2D);
   *
   * would return 'TEXTURE_2D'
   *
   * @param {string} functionName the name of the WebGL function.
   * @param {number} numArgs The number of arguments
   * @param {number} argumentIndx the index of the argument.
   * @param {*} value The value of the argument.
   * @return {string} The value as a string.
   */
  'glFunctionArgToString': glFunctionArgToString,

  /**
   * Converts the arguments of a WebGL function to a string.
   * Attempts to convert enum arguments to strings.
   *
   * @param {string} functionName the name of the WebGL function.
   * @param {number} args The arguments.
   * @return {string} The arguments as a string.
   */
  'glFunctionArgsToString': glFunctionArgsToString,

  /**
   * Given a WebGL context returns a wrapped context that calls
   * gl.getError after every command and calls a function if the
   * result is not NO_ERROR.
   *
   * You can supply your own function if you want. For example, if you'd like
   * an exception thrown on any GL error you could do this
   *
   *    function throwOnGLError(err, funcName, args) {
   *      throw WebGLDebugUtils.glEnumToString(err) +
   *            " was caused by call to " + funcName;
   *    };
   *
   *    ctx = WebGLDebugUtils.makeDebugContext(
   *        canvas.getContext("webgl"), throwOnGLError);
   *
   * @param {!WebGLRenderingContext} ctx The webgl context to wrap.
   * @param {!function(err, funcName, args): void} opt_onErrorFunc The function
   *     to call when gl.getError returns an error. If not specified the default
   *     function calls console.log with a message.
   * @param {!function(funcName, args): void} opt_onFunc The
   *     function to call when each webgl function is called. You
   *     can use this to log all calls for example.
   */
  'makeDebugContext': makeDebugContext,

  /**
   * Given a canvas element returns a wrapped canvas element that will
   * simulate lost context. The canvas returned adds the following functions.
   *
   * loseContext:
   *   simulates a lost context event.
   *
   * restoreContext:
   *   simulates the context being restored.
   *
   * lostContextInNCalls:
   *   loses the context after N gl calls.
   *
   * getNumCalls:
   *   tells you how many gl calls there have been so far.
   *
   * setRestoreTimeout:
   *   sets the number of milliseconds until the context is restored
   *   after it has been lost. Defaults to 0. Pass -1 to prevent
   *   automatic restoring.
   *
   * @param {!Canvas} canvas The canvas element to wrap.
   */
  'makeLostContextSimulatingCanvas': makeLostContextSimulatingCanvas,

  /**
   * Resets a context to the initial state.
   * @param {!WebGLRenderingContext} ctx The webgl context to
   *     reset.
   */
  'resetToInitialState': resetToInitialState
};

}();

module.exports = WebGLDebugUtils;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],121:[function(require,module,exports){
'use strict';

// internal class
// you should require base.js or point.js

var util = require('../util');

// used by isOutOfStage method
var EXTRA_OUT_OF_SIZE = 100;

var id = 0;

var ObjectBase = function(scene) {
	this.scene = scene;
	this.core = scene.core;
	// TODO: parent -> parent() because ajust to root method
	this.parent = null; // parent object if this is sub object
	this.id = ++id;

	this.frame_count = 0;

	this._x = 0; // local center x
	this._y = 0; // local center y

	// manage flags that disappears in frame elapsed
	this._auto_disable_times_map = {};

	this._velocity = null;
	this.resetVelocity();

	this._previous_x = null;
	this._previous_y = null;

	// sub object
	this.objects = [];

};

ObjectBase.prototype.init = function(){
	this.frame_count = 0;

	// NOTE: abolished
	//this._x = 0;
	//this._y = 0;

	this._auto_disable_times_map = {};

	this.resetVelocity();

	this._previous_x = null;
	this._previous_y = null;

	for(var i = 0, len = this.objects.length; i < len; i++) {
		this.objects[i].init();
	}
};

ObjectBase.prototype.beforeDraw = function(){
	this.frame_count++;

	// check flags that disappears in frame elapsed
	this._checkAutoDisableFlags();

	for(var i = 0, len = this.objects.length; i < len; i++) {
		this.objects[i].beforeDraw();
	}

	// move if this object is set velocity
	this._move();
};

ObjectBase.prototype.draw = function() {
	var ctx = this.core.ctx;

	// If is in DEBUG mode, show collision area
	if(this.core.debug_manager.isShowingCollisionArea()) {
		this._drawCollisionArea("white");
	}


	for(var i = 0, len = this.objects.length; i < len; i++) {
		this.objects[i].draw();
	}
};

ObjectBase.prototype.afterDraw = function() {
	for(var i = 0, len = this.objects.length; i < len; i++) {
		this.objects[i].afterDraw();
	}
};

ObjectBase.prototype.width = function() {
	return 0;
};
ObjectBase.prototype.height = function() {
	return 0;
};

ObjectBase.prototype.x = function(val) {
	if (typeof val !== 'undefined') { this._x = val; }
	return this._x;
};
ObjectBase.prototype.y = function(val) {
	if (typeof val !== 'undefined') { this._y = val; }
	return this._y;
};

ObjectBase.prototype.setPosition = function(x, y) {
	this._x = x;
	this._y = y;
};

ObjectBase.prototype.root = function() {
	if (this.parent) {
		return this.parent.root();
	}
	else {
		return this;
	}
};



/*
*******************************
* position methods
*******************************
*/

ObjectBase.prototype.globalCenterX = function() {
	return this.scene.x() + this.x();
};

ObjectBase.prototype.globalCenterY = function() {
	return this.scene.y() + this.y();
};


ObjectBase.prototype.globalLeftX = function() {
	return this.scene.x() + this.x() - this.width()/2;
};

ObjectBase.prototype.globalRightX = function() {
	return this.scene.x() + this.x() + this.width()/2;
};

ObjectBase.prototype.globalUpY = function() {
	return this.scene.y() + this.y() - this.height()/2;
};

ObjectBase.prototype.globalDownY = function() {
	return this.scene.y() + this.y() + this.height()/2;
};

/*
*******************************
* sub object methods
*******************************
*/

// add sub object
ObjectBase.prototype.addSubObject = function(object){
	object.setParent(this);
	this.objects.push(object);
};

ObjectBase.prototype.removeSubObject = function(object){
	// TODO: O(n) -> O(1)
	for(var i = 0, len = this.objects.length; i < len; i++) {
		if(this.objects[i].id === object.id) {
			this.objects[i].resetParent();
			this.objects.splice(i, 1);
			break;
		}
	}
};

ObjectBase.prototype.removeAllSubObject = function() {
	for(var i = 0, len = this.objects.length; i < len; i++) {
		this.objects[i].resetParent();
	}

	this.objects = [];
};

// set parent object if this is sub object
ObjectBase.prototype.setParent = function(parent_object) {
	if(this.parent) throw new Error("already set parent");
	this.parent = parent_object;
};

ObjectBase.prototype.resetParent = function() {
	this.parent = null;
};

/*
*******************************
* collision methods
*******************************
*/

// collision width
// NOTE: the obj of arguments is collision target object
ObjectBase.prototype.collisionWidth = function(obj) {
	return 0;
};

// collision height
// NOTE: the obj of arguments is collision target object
ObjectBase.prototype.collisionHeight = function(obj) {
	return 0;
};

// callback if the object is collision with
// NOTE: the obj of arguments is collision target object
ObjectBase.prototype.onCollision = function(obj){
};

// flag if the object is check collision with
// NOTE: the obj of arguments is collision target object
ObjectBase.prototype.isCollision = function(obj) {
	return true;
};

// check Collision Detect with object and execute onCollision method if detect
ObjectBase.prototype.checkCollisionWithObject = function(obj1) {
	var obj2 = this;
	var is_collision = obj1.intersect(obj2);

	if(is_collision) {
		obj1.onCollision(obj2);
		obj2.onCollision(obj1);
	}

	return is_collision;
};

// check Collision Detect with object array and execute onCollision method if detect
ObjectBase.prototype.checkCollisionWithObjects = function(objs) {
	var obj1 = this;
	var return_flag = false;
	for(var i = 0; i < objs.length; i++) {
		var obj2 = objs[i];
		if(obj1.checkCollisionByObject(obj2)) {
			obj1.onCollision(obj2);
			obj2.onCollision(obj1);
			return_flag = true;
		}
	}

	return return_flag;
};

// check Collision Detect with (x, y) and execute onCollision method if detect
ObjectBase.prototype.checkCollisionWithPosition = function(x, y) {
	var point = new ObjectPoint(this.scene);
	point.init();
	point.setPosition(x, y);

	return this.checkCollisionWithObject(point);
};

// is the object collides with obj of argument ?
ObjectBase.prototype.intersect = function(obj) {
	if (!this.isCollision(obj) || !obj.isCollision(this)) return false;

	if(Math.abs(this.x() - obj.x()) < this.collisionWidth(obj)/2 + obj.collisionWidth(this)/2 &&
		Math.abs(this.y() - obj.y()) < this.collisionHeight(obj)/2 + obj.collisionHeight(this)/2) {
		return true;
	}

	return false;
};

ObjectBase.prototype.getCollisionLeftX = function(obj) {
	return this.x() - this.collisionWidth(obj) / 2;
};

ObjectBase.prototype.getCollisionRightX = function(obj) {
	return this.x() + this.collisionWidth(obj) / 2;
};

ObjectBase.prototype.getCollisionUpY = function(obj) {
	return this.y() - this.collisionHeight(obj) / 2;
};

ObjectBase.prototype.getCollisionDownY = function(obj) {
	return this.y() + this.collisionHeight(obj) / 2;
};

ObjectBase.prototype._drawCollisionArea = function(color) {
	// make dummy object to decide collision width and height
	var dummy_object = new ObjectBase(this.scene);

	color = color || 'rgb( 255, 255, 255 )' ;
	var ctx = this.core.ctx;
	ctx.save();
	ctx.fillStyle = color;
	ctx.globalAlpha = 0.4;
	ctx.fillRect(
		this.getCollisionLeftX(dummy_object),
		this.getCollisionUpY(dummy_object),
		this.collisionWidth(dummy_object),
		this.collisionHeight(dummy_object)
	);
	ctx.restore();
};


// NOTE: deprecated
ObjectBase.prototype.checkCollision = function(obj) {
	return this.checkCollisionByObject(obj);
};

// NOTE: deprecated
ObjectBase.prototype.checkCollisionByObject = function(obj) {
	return this.intersect(obj);
};
/*
*******************************
* disable flag methods
*******************************
*/

// set flags that disappears in frame elapsed
// TODO: enable to set flag which becomes false -> true
// TODO: reset flag if the object calls init method
ObjectBase.prototype.setAutoDisableFlag = function(flag_name, count) {
	var self = this;

	self[flag_name] = true;

	self._auto_disable_times_map[flag_name] = self.frame_count + count;

};

// check flags that disappears in frame elapsed
ObjectBase.prototype._checkAutoDisableFlags = function() {
	var self = this;
	for (var flag_name in self._auto_disable_times_map) {
		if(this._auto_disable_times_map[flag_name] < self.frame_count) {
			self[flag_name] = false;
			delete self._auto_disable_times_map[flag_name];
		}
	}
};

/*
*******************************
* velocity methods
*******************************
*/

ObjectBase.prototype.setVelocity = function(velocity) {
	this._velocity = velocity;
};

ObjectBase.prototype.resetVelocity = function() {
	this._velocity = {magnitude:0, theta:0};
};

ObjectBase.prototype.setVelocityMagnitude = function(magnitude) {
	this._velocity.magnitude = magnitude;
};

ObjectBase.prototype.setVelocityTheta = function(theta) {
	this._velocity.theta = theta;
};

// move if this object is set velocity
// TODO: doesn't move if the object's velocity magnitude is 0
ObjectBase.prototype._move = function() {
	var x = util.calcMoveXByVelocity(this._velocity);
	var y = util.calcMoveYByVelocity(this._velocity);

	// save previous (x,y)
	this._previous_x = this._x;
	this._previous_y = this._y;

	this._x += x;
	this._y += y;
};

ObjectBase.prototype.moveBack = function() {
	if (this._previous_x === null && this._previous_y) return;

	var current_x = this._x;
	var current_y = this._y;

	this._x = this._previous_x;
	this._y = this._previous_y;

	this._previous_x = current_x;
	this._previous_y = current_y;
};

/*
*******************************
* other methods
*******************************
*/

// TODO: this.core -> this.scene
ObjectBase.prototype.isOutOfStage = function( ) {
	if(this.x() + EXTRA_OUT_OF_SIZE < 0 ||
	   this.y() + EXTRA_OUT_OF_SIZE < 0 ||
	   this.x() > this.core.width  + EXTRA_OUT_OF_SIZE ||
	   this.y() > this.core.height + EXTRA_OUT_OF_SIZE
	  ) {
		return true;
	}

	return false;
};

/*
*******************************
* point object class
*******************************
*/

var ObjectPoint = function(scene) {
	ObjectBase.apply(this, arguments);

};
util.inherit(ObjectPoint, ObjectBase);

ObjectPoint.prototype.collisionWidth = function(){
	return 1;
};
ObjectPoint.prototype.collisionHeight = function(){
	return 1;
};
ObjectPoint.prototype.width = function() {
	return 1;
};
ObjectPoint.prototype.height = function() {
	return 1;
};

module.exports = {
	object_base: ObjectBase,
	object_point: ObjectPoint,
};

},{"../util":139}],122:[function(require,module,exports){
'use strict';

var _base_and_point_classes = require('./_base_and_point_classes');

module.exports = _base_and_point_classes.object_base;

},{"./_base_and_point_classes":121}],123:[function(require,module,exports){
'use strict';

var _base_and_point_classes = require('./_base_and_point_classes');

module.exports = _base_and_point_classes.object_point;

},{"./_base_and_point_classes":121}],124:[function(require,module,exports){
'use strict';

// TODO: add pooling logic
// TODO: split manager class and pool manager class
var base_object = require('./base');
var util = require('../util');

var PoolManager = function(scene, Class) {
	base_object.apply(this, arguments);

	this.Class = Class;
	this.objects = {};
};
util.inherit(PoolManager, base_object);

PoolManager.prototype.init = function() {
	base_object.prototype.init.apply(this, arguments);

	this.objects = {};
};

PoolManager.prototype.beforeDraw = function(){
	base_object.prototype.beforeDraw.apply(this, arguments);

	for(var id in this.objects) {
		this.objects[id].beforeDraw();
	}
};

PoolManager.prototype.draw = function(){
	base_object.prototype.draw.apply(this, arguments);
	for(var id in this.objects) {
		this.objects[id].draw();
	}
};

PoolManager.prototype.afterDraw = function(){
	base_object.prototype.afterDraw.apply(this, arguments);
	for(var id in this.objects) {
		this.objects[id].afterDraw();
	}
};

PoolManager.prototype.create = function() {
	var object = new this.Class(this.scene);
	object.init.apply(object, arguments);

	this.objects[object.id] = object;

	return object;
};
PoolManager.prototype.remove = function(id) {
	delete this.objects[id];
};

PoolManager.prototype.checkCollisionWithObject = function(obj1) {
	for(var id in this.objects) {
		var obj2 = this.objects[id];
		if(obj1.checkCollision(obj2)) {
			obj1.onCollision(obj2);
			obj2.onCollision(obj1);
		}
	}
};

PoolManager.prototype.checkCollisionWithManager = function(manager) {
	for(var obj1_id in this.objects) {
		for(var obj2_id in manager.objects) {
			if(this.objects[obj1_id].checkCollision(manager.objects[obj2_id])) {
				var obj1 = this.objects[obj1_id];
				var obj2 = manager.objects[obj2_id];

				obj1.onCollision(obj2);
				obj2.onCollision(obj1);

				// do not check died object twice
				if (!this.objects[obj1_id]) {
					break;
				}
			}
		}
	}
};

PoolManager.prototype.removeOutOfStageObjects = function() {
	for(var id in this.objects) {
		if(this.objects[id].isOutOfStage()) {
			this.remove(id);
		}
	}
};




module.exports = PoolManager;

},{"../util":139,"./base":122}],125:[function(require,module,exports){
'use strict';

// TODO: add pooling logic
// TODO: split manager class and pool manager class
var base_object = require('./base');
var util = require('../util');
var glmat = require('gl-matrix');

var CONSTANT_3D = require('../constant/webgl').SPRITE3D;

var PoolManager3D = function(scene, Class) {
	base_object.apply(this, arguments);

	this.Class = Class;
	this.objects = {};

	this.vertices = [];
	this.coordinates = [];
	this.indices = [];
	this.colors = [];

	var gl = this.core.gl;
	this.vBuffer = gl.createBuffer();
	this.cBuffer = gl.createBuffer();
	this.iBuffer = gl.createBuffer();
	this.aBuffer = gl.createBuffer();

	this.mvMatrix = glmat.mat4.create();
	this.pMatrix = glmat.mat4.create();
};
util.inherit(PoolManager3D, base_object);

PoolManager3D.prototype.init = function() {
	base_object.prototype.init.apply(this, arguments);

	this.objects = {};

	this._initmvpMatrix();

};
PoolManager3D.prototype._initmvpMatrix = function() {
	// The upper left corner is the canvas origin
	// so reduce canvas width and add canvas height
	glmat.mat4.identity(this.mvMatrix);
	glmat.mat4.translate(this.mvMatrix, this.mvMatrix, [-this.core.width/2, this.core.height/2, 0]);

	this._setOrthographicProjection();
};
PoolManager3D.prototype._setOrthographicProjection = function() {
	glmat.mat4.identity(this.pMatrix);
	var near = 0.1;
	var far  = 10.0;
	glmat.mat4.ortho(this.pMatrix,
		-this.core.width/2,
		this.core.width/2,
		-this.core.height/2,
		this.core.height/2,
		near, far);
};

PoolManager3D.prototype.beforeDraw = function(){
	base_object.prototype.beforeDraw.apply(this, arguments);

	for(var id in this.objects) {
		this.objects[id].beforeDraw();
	}

	// update: vertices, indices, texture coordinates, colors
	this._updateAttributes();
};

// update: vertices, indices, texture coordinates, colors
PoolManager3D.prototype._updateAttributes = function() {
	this._resetAttributes();

	var i = 0;
	for(var id in this.objects) {
		var object = this.objects[id];

		if(!object.isShow()){
			continue;
		}

		var j;
		for(j = 0; j < CONSTANT_3D.V_SIZE; j++) {
			this.vertices[i * CONSTANT_3D.V_SIZE + j] = object.vertices[j];
		}

		for(j = 0; j < CONSTANT_3D.C_SIZE; j++) {
			this.coordinates[i * CONSTANT_3D.C_SIZE + j] = object.coordinates[j];
		}

		for(j = 0; j < CONSTANT_3D.I_SIZE; j++) {
			this.indices[i * CONSTANT_3D.I_SIZE + j] = i * CONSTANT_3D.V_ITEM_NUM + object.indices[j];
		}

		for(j = 0; j < CONSTANT_3D.A_SIZE; j++) {
			this.colors[i * CONSTANT_3D.A_SIZE + j] = object.colors[j];
		}

		i++;
	}
};

PoolManager3D.prototype._resetAttributes = function() {
	this.vertices.length    = 0;
	this.coordinates.length = 0;
	this.indices.length     = 0;
	this.colors.length      = 0;
};




PoolManager3D.prototype.draw = function(){
	base_object.prototype.draw.apply(this, arguments);

	// There is no objects.
	if (this.vertices.length === 0) return;

	var gl = this.core.gl;
	var shader = this.shader();

	gl.useProgram(shader.shader_program);
	gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);
	gl.enable(gl.BLEND);
	gl.disable(gl.DEPTH_TEST);

	this._setupAttribute("aVertexPosition", this.vBuffer, new Float32Array(this.vertices), CONSTANT_3D.V_ITEM_SIZE);
	this._setupAttribute("aTextureCoordinates", this.cBuffer, new Float32Array(this.coordinates), CONSTANT_3D.C_ITEM_SIZE);
	this._setupAttribute("aColor", this.aBuffer, new Float32Array(this.colors), CONSTANT_3D.A_ITEM_SIZE);

	// TODO: use some types of texture
	for(var id in this.objects) {
		var texture = this.objects[id].texture;
		this._setupTexture("uSampler", 0, texture);
		break;
	}

	gl.uniformMatrix4fv(shader.uniform_locations.uPMatrix,  false, this.pMatrix);
	gl.uniformMatrix4fv(shader.uniform_locations.uMVMatrix, false, this.mvMatrix);

	gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.iBuffer);
	gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(this.indices), gl.STATIC_DRAW);

	// TODO: how to implement?
	//this.setupAdditionalVariables();

	gl.drawElements(gl.TRIANGLES, this.indices.length, gl.UNSIGNED_SHORT, 0);

	/*
	 * TODO:
	 * reflect
	 * scaling
	*/
};

PoolManager3D.prototype._setupAttribute = function(attr_name, buffer, data, size){
	var gl = this.core.gl;
	var shader = this.shader();
	gl.bindBuffer(gl.ARRAY_BUFFER, buffer);
	gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);
	gl.enableVertexAttribArray(shader.attribute_locations[attr_name]);
	gl.vertexAttribPointer(shader.attribute_locations[attr_name], size, gl.FLOAT, false, 0, 0);
};
PoolManager3D.prototype._setupTexture = function(uniform_name, unit_no, texture){
	var gl = this.core.gl;
	var shader = this.shader();
	gl.activeTexture(gl["TEXTURE" + unit_no]);
	gl.bindTexture(gl.TEXTURE_2D, texture);
	gl.uniform1i(shader.uniform_locations[uniform_name], unit_no);
};



PoolManager3D.prototype.afterDraw = function(){
	base_object.prototype.afterDraw.apply(this, arguments);
	for(var id in this.objects) {
		this.objects[id].afterDraw();
	}
};

PoolManager3D.prototype.create = function() {
	var object = new this.Class(this.scene);
	object.init.apply(object, arguments);

	this.objects[object.id] = object;

	return object;
};
PoolManager3D.prototype.remove = function(id) {
	delete this.objects[id];
};

PoolManager3D.prototype.checkCollisionWithObject = function(obj1) {
	for(var id in this.objects) {
		var obj2 = this.objects[id];
		if(obj1.checkCollision(obj2)) {
			obj1.onCollision(obj2);
			obj2.onCollision(obj1);
		}
	}
};

PoolManager3D.prototype.checkCollisionWithManager = function(manager) {
	for(var obj1_id in this.objects) {
		for(var obj2_id in manager.objects) {
			if(this.objects[obj1_id].checkCollision(manager.objects[obj2_id])) {
				var obj1 = this.objects[obj1_id];
				var obj2 = manager.objects[obj2_id];

				obj1.onCollision(obj2);
				obj2.onCollision(obj1);

				// do not check died object twice
				if (!this.objects[obj1_id]) {
					break;
				}
			}
		}
	}
};

PoolManager3D.prototype.removeOutOfStageObjects = function() {
	for(var id in this.objects) {
		if(this.objects[id].isOutOfStage()) {
			this.remove(id);
		}
	}
};

PoolManager3D.prototype.shader = function(){
	return this.core.sprite_3d_shader;
};




module.exports = PoolManager3D;

},{"../constant/webgl":105,"../util":139,"./base":122,"gl-matrix":110}],126:[function(require,module,exports){
'use strict';
var base_object = require('./base');
var util = require('../util');

var Sprite = function(scene) {
	base_object.apply(this, arguments);

	this.current_sprite_index = 0;
};
util.inherit(Sprite, base_object);

Sprite.prototype.init = function(){
	base_object.prototype.init.apply(this, arguments);

	this.current_sprite_index = 0;
};

Sprite.prototype.beforeDraw = function(){
	base_object.prototype.beforeDraw.apply(this, arguments);

	// animation sprite
	if(this.frame_count % this.spriteAnimationSpan() === 0) {
		this.current_sprite_index++;
		if(this.current_sprite_index >= this.spriteIndices().length) {
			this.current_sprite_index = 0;
		}
	}
};
Sprite.prototype.draw = function(){
	if(this.isShow()) {

		var image = this.core.image_loader.getImage(this.spriteName());

		if(this.scale()) console.error("scale method is deprecated. you should use scaleWidth and scaleHeight.");

		var ctx = this.core.ctx;

		ctx.save();

		// set position
		ctx.translate(this.globalCenterX(), this.globalCenterY());

		// rotate
		var rotate = util.thetaToRadian(this._velocity.theta + this.rotateAdjust());
		ctx.rotate(rotate);

		var sprite_width  = this.spriteWidth();
		var sprite_height = this.spriteHeight();
		if(!sprite_width)  sprite_width = image.width;
		if(!sprite_height) sprite_height = image.height;

		var width  = this.width();
		var height = this.height();

		// reflect left or right
		if(this.isReflect()) {
			ctx.transform(-1, 0, 0, 1, 0, 0);
		}

		ctx.globalAlpha = this.alpha();
		ctx.drawImage(image,
			// sprite position
			sprite_width * this.spriteIndexX(), sprite_height * this.spriteIndexY(),
			// sprite size to get
			sprite_width,                       sprite_height,
			// adjust left x, up y because of x and y indicate sprite center.
			-width/2,                           -height/2,
			// sprite size to show
			width,                              height
		);
		ctx.restore();
	}

	// draw sub objects(even if this object is not show)
	base_object.prototype.draw.apply(this, arguments);
};

Sprite.prototype.spriteName = function(){
	throw new Error("spriteName method must be overridden.");
};
Sprite.prototype.spriteIndexX = function(){
	return this.spriteIndices()[this.current_sprite_index].x;
};
Sprite.prototype.spriteIndexY = function(){
	return this.spriteIndices()[this.current_sprite_index].y;
};
Sprite.prototype.width = function(){
	return this.spriteWidth() * this.scaleWidth();
};
Sprite.prototype.height = function(){
	return this.spriteHeight() * this.scaleHeight();
};




Sprite.prototype.isShow = function(){
	return true;
};


Sprite.prototype.spriteAnimationSpan = function(){
	return 0;
};
Sprite.prototype.spriteIndices = function(){
	return [{x: 0, y: 0}];
};
Sprite.prototype.spriteWidth = function(){
	return 0;
};
Sprite.prototype.spriteHeight = function(){
	return 0;
};
Sprite.prototype.rotateAdjust = function(){
	return 0;
};

// scale method is deprecated. you should use scaleWidth and scaleHeight
Sprite.prototype.scale = function(){
	return 0;
};


Sprite.prototype.scaleWidth = function(){
	return 1;
};
Sprite.prototype.scaleHeight = function(){
	return 1;
};
Sprite.prototype.isReflect = function(){
	return false;
};
Sprite.prototype.alpha = function() {
	return 1.0;
};





module.exports = Sprite;

},{"../util":139,"./base":122}],127:[function(require,module,exports){
'use strict';
var base_object = require('./base');
var util = require('../util');
var CONSTANT_3D = require('../constant/webgl').SPRITE3D;
var glmat = require('gl-matrix');

var Sprite3d = function(scene) {
	base_object.apply(this, arguments);

	this.current_sprite_index = 0;

	this._z = 0;

	this.vertices = [];
	this.coordinates = [];
	this.indices = [];
	this.colors = [];

	this.vertices.length    = CONSTANT_3D.V_SIZE;
	this.coordinates.length = CONSTANT_3D.C_SIZE;
	this.indices.length     = CONSTANT_3D.I_SIZE;
	this.colors.length      = CONSTANT_3D.A_SIZE;

	var gl = this.core.gl;
	this.vBuffer = gl.createBuffer();
	this.cBuffer = gl.createBuffer();
	this.iBuffer = gl.createBuffer();
	this.aBuffer = gl.createBuffer();

	this.texture = null;

	this.mvMatrix = glmat.mat4.create();
	this.pMatrix = glmat.mat4.create();
};
util.inherit(Sprite3d, base_object);

Sprite3d.prototype.init = function(){
	base_object.prototype.init.apply(this, arguments);

	this.current_sprite_index = 0;

	this._initmvpMatrix();
	this._initVertices();
	this._initCoordinates();
	this._initIndices();
	this._initColors();

	this._initTexture();

};

Sprite3d.prototype._initmvpMatrix = function() {
	// The upper left corner is the canvas origin
	// so reduce canvas width and add canvas height
	glmat.mat4.identity(this.mvMatrix);
	glmat.mat4.translate(this.mvMatrix, this.mvMatrix, [-this.core.width/2, this.core.height/2, 0]);

	this._setOrthographicProjection();
};
Sprite3d.prototype._initVertices = function() {
	var w = this.spriteWidth()/2;
	var h = this.spriteHeight()/2;

	this.vertices[0]  = -w;
	this.vertices[1]  = -h;
	this.vertices[2]  = -1.0;

	this.vertices[3]  =  w;
	this.vertices[4]  = -h;
	this.vertices[5]  = -1.0;

	this.vertices[6]  =  w;
	this.vertices[7]  =  h;
	this.vertices[8]  = -1.0;

	this.vertices[9]  = -w;
	this.vertices[10] =  h;
	this.vertices[11] = -1.0;
};

Sprite3d.prototype._initCoordinates = function() {

	var image = this.core.image_loader.getImage(this.spriteName());

	var w = this.spriteWidth() / image.width;
	var h = this.spriteHeight() / image.height;

	var x1 = w * this.spriteIndexX();
	var y1 = h * this.spriteIndexY();
	var x2 = x1 + w;
	var y2 = y1 + h;

	this.coordinates[0] = x1;
	this.coordinates[1] = y2;

	this.coordinates[2] = x2;
	this.coordinates[3] = y2;

	this.coordinates[4] = x2;
	this.coordinates[5] = y1;

	this.coordinates[6] = x1;
	this.coordinates[7] = y1;
};

Sprite3d.prototype._initIndices = function() {
	this.indices[0] = 0;
	this.indices[1] = 1;
	this.indices[2] = 2;

	this.indices[3] = 0;
	this.indices[4] = 2;
	this.indices[5] = 3;
};

Sprite3d.prototype._initColors = function() {
	this.colors[0] = 1.0;
	this.colors[1] = 1.0;
	this.colors[2] = 1.0;
	this.colors[3] = 1.0;

	this.colors[4] = 1.0;
	this.colors[5] = 1.0;
	this.colors[6] = 1.0;
	this.colors[7] = 1.0;

	this.colors[8] = 1.0;
	this.colors[9] = 1.0;
	this.colors[10] = 1.0;
	this.colors[11] = 1.0;

	this.colors[12] = 1.0;
	this.colors[13] = 1.0;
	this.colors[14] = 1.0;
	this.colors[15] = 1.0;
};

Sprite3d.prototype._initTexture = function() {
	var gl = this.core.gl;
	var image = this.core.image_loader.getImage(this.spriteName());

	var texture = gl.createTexture();

	gl.bindTexture(gl.TEXTURE_2D, texture);
	gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);
	gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
	gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
	gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);
	gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);
	gl.bindTexture(gl.TEXTURE_2D, null);

	this.texture = texture;
};
Sprite3d.prototype._setOrthographicProjection = function() {
	glmat.mat4.identity(this.pMatrix);
	var near = 0.1;
	var far  = 10.0;
	glmat.mat4.ortho(this.pMatrix,
		-this.core.width/2,
		this.core.width/2,
		-this.core.height/2,
		this.core.height/2,
		near, far);
};




Sprite3d.prototype.beforeDraw = function(){
	base_object.prototype.beforeDraw.apply(this, arguments);
	// animation sprite
	if(this.frame_count % this.spriteAnimationSpan() === 0) {
		this.current_sprite_index++;
		if(this.current_sprite_index >= this.spriteIndices().length) {
			this.current_sprite_index = 0;
		}
	}

	// update vertices property
	this._initVertices();
	this._initCoordinates();
	this._translate();
	// TODO: rotate
	//this._rotate();
};


Sprite3d.prototype._translate = function() {
	for(var i = 0; i < CONSTANT_3D.V_ITEM_NUM; i++) {
		this.vertices[i * CONSTANT_3D.V_ITEM_SIZE + 0] += this.x();
		this.vertices[i * CONSTANT_3D.V_ITEM_SIZE + 1] -= this.y();
		this.vertices[i * CONSTANT_3D.V_ITEM_SIZE + 2] += this.z();
	}
};

Sprite3d.prototype._rotate = function() {
	var radian = this._getRadian();
	for(var i = 0; i < CONSTANT_3D.V_ITEM_NUM; i++) {
		var x = this.vertices[i * CONSTANT_3D.V_ITEM_SIZE + 0];
		var y = this.vertices[i * CONSTANT_3D.V_ITEM_SIZE + 1];

		this.vertices[i * CONSTANT_3D.V_ITEM_SIZE + 0] = x * Math.cos(radian) - y * Math.sin(radian);
		this.vertices[i * CONSTANT_3D.V_ITEM_SIZE + 1] = x * Math.sin(radian) + y * Math.cos(radian);
	}
};

Sprite3d.prototype._getRadian = function() {
	var theta = this.velocity.theta;
	return util.thetaToRadian(theta);
};

Sprite3d.prototype.draw = function(){
	if(this.isShow()) {
		var gl = this.core.gl;

		var shader = this.shader();

		gl.useProgram(shader.shader_program);

		gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);
		gl.enable(gl.BLEND);
		gl.disable(gl.DEPTH_TEST);

		this._setupAttribute("aVertexPosition", this.vBuffer, new Float32Array(this.vertices), CONSTANT_3D.V_ITEM_SIZE);
		this._setupAttribute("aTextureCoordinates", this.cBuffer, new Float32Array(this.coordinates), CONSTANT_3D.C_ITEM_SIZE);
		this._setupAttribute("aColor", this.aBuffer, new Float32Array(this.colors), CONSTANT_3D.A_ITEM_SIZE);

		this._setupTexture("uSampler", 0, this.texture);

		gl.uniformMatrix4fv(shader.uniform_locations.uPMatrix,  false, this.pMatrix);
		gl.uniformMatrix4fv(shader.uniform_locations.uMVMatrix, false, this.mvMatrix);

		gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.iBuffer);
		gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(this.indices), gl.STATIC_DRAW);

		// inherit class may implement this.
		this.setupAdditionalVariables();

		gl.drawElements(gl.TRIANGLES, this.indices.length, gl.UNSIGNED_SHORT, 0);

		/*
		 * TODO:
		 * reflect
		 * scaling
		*/
	}

	// draw sub objects(even if this object is not show)
	base_object.prototype.draw.apply(this, arguments);
};

Sprite3d.prototype._setupAttribute = function(attr_name, buffer, data, size){
	var gl = this.core.gl;
	var shader = this.shader();
	gl.bindBuffer(gl.ARRAY_BUFFER, buffer);
	gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);
	gl.enableVertexAttribArray(shader.attribute_locations[attr_name]);
	gl.vertexAttribPointer(shader.attribute_locations[attr_name], size, gl.FLOAT, false, 0, 0);
};
Sprite3d.prototype._setupTexture = function(uniform_name, unit_no, texture){
	var gl = this.core.gl;
	var shader = this.shader();
	gl.activeTexture(gl["TEXTURE" + unit_no]);
	gl.bindTexture(gl.TEXTURE_2D, texture);
	gl.uniform1i(shader.uniform_locations[uniform_name], unit_no);
};




Sprite3d.prototype.z = function(val) {
	if (typeof val !== 'undefined') { this._z = val; }
	return this._z;
};

Sprite3d.prototype.shader = function(){
	return this.core.sprite_3d_shader;
};

// setup additional variables for shader(attributes, uniforms)
Sprite3d.prototype.setupAdditionalVariables = function(){


};






Sprite3d.prototype.spriteName = function(){
	throw new Error("spriteName method must be overridden.");
};
Sprite3d.prototype.spriteIndexX = function(){
	return this.spriteIndices()[this.current_sprite_index].x;
};
Sprite3d.prototype.spriteIndexY = function(){
	return this.spriteIndices()[this.current_sprite_index].y;
};
Sprite3d.prototype.width = function(){
	return this.spriteWidth() * this.scaleWidth();
};
Sprite3d.prototype.height = function(){
	return this.spriteHeight() * this.scaleHeight();
};




Sprite3d.prototype.isShow = function(){
	return true;
};


Sprite3d.prototype.spriteAnimationSpan = function(){
	return 0;
};
Sprite3d.prototype.spriteIndices = function(){
	return [{x: 0, y: 0}];
};
Sprite3d.prototype.spriteWidth = function(){
	return 0;
};
Sprite3d.prototype.spriteHeight = function(){
	return 0;
};
Sprite3d.prototype.rotateAdjust = function(){
	return 0;
};

Sprite3d.prototype.scaleWidth = function(){
	return 1;
};
Sprite3d.prototype.scaleHeight = function(){
	return 1;
};
Sprite3d.prototype.isReflect = function(){
	return false;
};



module.exports = Sprite3d;

},{"../constant/webgl":105,"../util":139,"./base":122,"gl-matrix":110}],128:[function(require,module,exports){
'use strict';
var base_object = require('./base');
var Util = require('../util');

var ObjectUIParts = function(scene, x, y, width, height, draw_function) {
	base_object.apply(this, arguments);

	this.x(x);
	this.y(y);

	this._width  = width;
	this._height = height;

	this._draw_function = null;
	if (typeof draw_function !== "undefined") {
		this._draw_function = Util.bind(draw_function, this);
	}

	this._is_show_rect = false;

};
Util.inherit(ObjectUIParts, base_object);

ObjectUIParts.prototype.collisionWidth = function(){
	return this._width;
};

ObjectUIParts.prototype.collisionHeight = function(){
	return this._height;
};

ObjectUIParts.prototype.setShowRect = function() {
	this._is_show_rect = true;
	return this;
};

ObjectUIParts.prototype.setVariable = function (name, value){
	this[name] = value;
	return this;
};

ObjectUIParts.prototype.draw = function(){
	base_object.prototype.draw.apply(this, arguments);
	var ctx = this.core.ctx;
	ctx.save();
	if (this._draw_function) {
		this._draw_function();
	}
	ctx.restore();

	if(this._is_show_rect) {
		ctx.save();
		ctx.fillStyle = 'rgb( 255, 255, 255 )' ;
		ctx.globalAlpha = 0.4;
		ctx.fillRect(this.getCollisionLeftX(), this.getCollisionUpY(), this.collisionWidth(), this.collisionHeight());
		ctx.restore();
	}
};

module.exports = ObjectUIParts;

},{"../util":139,"./base":122}],129:[function(require,module,exports){
'use strict';

var base_object = require('./base');
var util = require('../util');

var Window = function(scene, Class) {
	base_object.apply(this, arguments);

	this._width = 0;
	this._height = 0;
};
util.inherit(Window, base_object);

Window.prototype.init = function() {
	base_object.prototype.init.apply(this, arguments);

	this._width = 0;
	this._height = 0;
};

Window.prototype.beforeDraw = function(){
	base_object.prototype.beforeDraw.apply(this, arguments);
};

Window.prototype.draw = function(){
	base_object.prototype.draw.apply(this, arguments);
};

Window.prototype.setSize = function(width, height){
	this._width = width;
	this._height = height;
};

Window.prototype.collisionWidth = function(){
	return this._width;
};
Window.prototype.collisionHeight = function(){
	return this._height;
};
Window.prototype.width = function() {
	return this._width;
};
Window.prototype.height = function() {
	return this._height;
};





module.exports = Window;

},{"../util":139,"./base":122}],130:[function(require,module,exports){
'use strict';

var SceneBase = function(core) {
	this.core = core;
	// TODO: parent -> parent() because ajust to root method
	this.parent = null; // parent scene if this is sub scene
	this.width = this.core.width; // default
	this.height = this.core.height; // default

	this._x = 0;
	this._y = 0;

	this.frame_count = 0;

	this.objects = [];

	// sub scenes
	this.current_scene = null;
	this._reserved_next_scene = null; // next scene which changes next frame run
	this.scenes = {};

	// property for fade in
	this._fade_in_duration = null;
	this._fade_in_color = null;
	this._fade_in_start_frame_count = null;

	// property for fade out
	this._fade_out_duration = null;
	this._fade_out_color = null;
	this._fade_out_start_frame_count = null;

	// property for wait to start bgm
	this._wait_to_start_bgm_name = null;
	this._wait_to_start_bgm_duration = null;
	this._wait_to_start_bgm_start_frame_count = null;
};

SceneBase.prototype.init = function(){
	// sub scenes
	this.current_scene = null;
	this._reserved_next_scene = null; // next scene which changes next frame run

	this._x = 0;
	this._y = 0;

	this.frame_count = 0;

	// property for fade in
	this._fade_in_duration = null;
	this._fade_in_color = null;
	this._fade_in_start_frame_count = null;

	// property for fade out
	this._fade_out_duration = null;
	this._fade_out_color = null;
	this._fade_out_start_frame_count = null;

	// property for wait to start bgm
	this._wait_to_start_bgm_name = null;
	this._wait_to_start_bgm_duration = null;
	this._wait_to_start_bgm_start_frame_count = null;

	for(var i = 0, len = this.objects.length; i < len; i++) {
		this.objects[i].init();
	}
};

SceneBase.prototype.beforeDraw = function(){
	// for setWaitToStartBGM method
	if (this._wait_to_start_bgm_name) {
		if(this.frame_count - this._wait_to_start_bgm_start_frame_count >= this._wait_to_start_bgm_duration) {
			this.core.audio_loader.playBGM(this._wait_to_start_bgm_name);

			// reset properties for wait to start bgm
			this._wait_to_start_bgm_name = null;
			this._wait_to_start_bgm_duration = null;
			this._wait_to_start_bgm_start_frame_count = null;
		}
	}

	// go to next sub scene if next scene is set
	this.changeNextSubSceneIfReserved();

	for(var i = 0, len = this.objects.length; i < len; i++) {
		this.objects[i].beforeDraw();
	}

	if(this.currentSubScene()) this.currentSubScene().beforeDraw();

	this.frame_count++;
};

SceneBase.prototype.draw = function(){
	for(var i = 0, len = this.objects.length; i < len; i++) {
		this.objects[i].draw();
	}
	if(this.currentSubScene()) this.currentSubScene().draw();
};

SceneBase.prototype.afterDraw = function(){
	var ctx = this.core.ctx;

	var alpha;
	// fade in
	if (this.isInFadeIn()) {
		ctx.save();

		// tranparent settings
		if(this.frame_count - this._fade_in_start_frame_count < this._fade_in_duration) {
			alpha = 1.0 - (this.frame_count - this._fade_in_start_frame_count) / this._fade_in_duration;
		}
		else {
			alpha = 0.0;
		}

		ctx.globalAlpha = alpha;

		// transition color
		ctx.fillStyle = this._fade_in_color;
		ctx.fillRect(0, 0, this.width, this.height);

		ctx.restore();

		// alpha === 0.0 by transparent settings so quit fade in
		// why there? because alpha === 0, _fade_in_color === null by quitFadeIn method
		if(alpha === 1) this._quitFadeIn();

	}
	// fade out
	else if (this.isInFadeOut()) {
		ctx.save();

		// tranparent settings
		if(this.frame_count - this._fade_out_start_frame_count < this._fade_out_duration) {
			alpha = (this.frame_count - this._fade_out_start_frame_count) / this._fade_out_duration;
		}
		else {
			alpha = 1.0;
		}

		ctx.globalAlpha = alpha;

		// transition color
		ctx.fillStyle = this._fade_out_color;
		ctx.fillRect(0, 0, this.width, this.height);

		ctx.restore();

		// alpha === 1.0 by transparent settings so quit fade out
		// why there? because alpha === 1, _fade_out_color === null by quitFadeOut method
		if(alpha === 1) this._quitFadeOut();
	}

	for(var i = 0, len = this.objects.length; i < len; i++) {
		this.objects[i].afterDraw();
	}

	if(this.currentSubScene()) this.currentSubScene().afterDraw();
};

SceneBase.prototype.addObject = function(object){
	this.objects.push(object);
};
SceneBase.prototype.addObjects = function(object_list){
	this.objects = this.objects.concat(object_list);
};
SceneBase.prototype.removeAllObject = function() {
	this.objects = [];
};
SceneBase.prototype.removeObject = function(object){
	// TODO: O(n) -> O(1)
	for(var i = 0, len = this.objects.length; i < len; i++) {
		if(this.objects[i].id === object.id) {
			this.objects.splice(i, 1);
			break;
		}
	}
};




// set parent scene if this is sub scene
SceneBase.prototype.setParent = function(parent_scene) {
	if(this.parent) throw new Error("already set parent");
	this.parent = parent_scene;
};

SceneBase.prototype.resetParent = function() {
	this.parent = null;
};

SceneBase.prototype.currentSubScene = function() {
	if(this.current_scene === null) {
		return;
	}

	return this.scenes[this.current_scene];
};
SceneBase.prototype.getSubScene = function(name) {
	return this.scenes[name];
};

SceneBase.prototype.addSubScene = function(name, scene) {
	scene.setParent(this);
	this.scenes[name] = scene;
};
SceneBase.prototype.changeSubScene = function() {
	var args = Array.prototype.slice.call(arguments); // to convert array object
	this._reserved_next_scene = args;

};
SceneBase.prototype.changeNextSubSceneIfReserved = function() {
	if(this._reserved_next_scene) {
		this.current_scene = this._reserved_next_scene.shift();

		var current_sub_scene = this.currentSubScene();
		current_sub_scene.init.apply(current_sub_scene, this._reserved_next_scene);

		this._reserved_next_scene = null;
	}

};

SceneBase.prototype.setFadeIn = function(duration, color) {
	this._fade_in_duration = duration || 30;
	this._fade_in_color = color || 'white';

	// start fade in immediately
	this._startFadeIn();
};
SceneBase.prototype._startFadeIn = function() {
	this._quitFadeOut();
	this._fade_in_start_frame_count = this.frame_count;
};

SceneBase.prototype._quitFadeIn = function() {
	this._fade_in_duration = null;
	this._fade_in_color = null;
	this._fade_in_start_frame_count = null;
};
SceneBase.prototype.isInFadeIn = function() {
	return this._fade_in_start_frame_count !== null ? true : false;
};


SceneBase.prototype.setFadeOut = function(duration, color) {
	this._fade_out_duration = duration || 30;
	this._fade_out_color = color || 'black';
};
SceneBase.prototype.startFadeOut = function() {
	if(!this.isSetFadeOut()) return;

	this._quitFadeIn();
	this._fade_out_start_frame_count = this.frame_count;
};

SceneBase.prototype._quitFadeOut = function() {
	this._fade_out_duration = null;
	this._fade_out_color = null;
	this._fade_out_start_frame_count = null;
};
SceneBase.prototype.isInFadeOut = function() {
	return this._fade_out_start_frame_count !== null ? true : false;
};
SceneBase.prototype.isSetFadeOut = function() {
	return this._fade_out_duration && this._fade_out_color ? true : false;
};

// play bgm after some wait counts
SceneBase.prototype.setWaitToStartBGM = function(bgm_name, wait_count) {
	if(!wait_count) wait_count = 0;
	this._wait_to_start_bgm_name = bgm_name;
	this._wait_to_start_bgm_duration = wait_count;
	this._wait_to_start_bgm_start_frame_count = this.frame_count;

};



SceneBase.prototype.x = function(val) {
	if (typeof val !== 'undefined') { this._x = val; }
	return this._x;
};
SceneBase.prototype.y = function(val) {
	if (typeof val !== 'undefined') { this._y = val; }
	return this._y;
};
SceneBase.prototype.root = function() {
	if (this.parent) {
		return this.parent.root();
	}
	else {
		return this;
	}
};





module.exports = SceneBase;


},{}],131:[function(require,module,exports){
'use strict';

// loading scene

var base_scene = require('./base');
var util = require('../util');

var SceneLoading = function(core) {
	base_scene.apply(this, arguments);

	// go if the all assets loading is done.
	this.next_scene_name = null;
};
util.inherit(SceneLoading, base_scene);

SceneLoading.prototype.init = function(assets, next_scene_name) {
	base_scene.prototype.init.apply(this, arguments);

	// assets
	var images = assets.images || [];
	var sounds = assets.sounds || [];
	var bgms   = assets.bgms   || [];

	// go if the all assets loading is done.
	this.next_scene_name = next_scene_name;

	for (var key in images) {
		this.core.image_loader.loadImage(key, images[key]);
	}

	for (var key2 in sounds) {
		var conf2 = sounds[key2];
		this.core.audio_loader.loadSound(key2, conf2.path, conf2.volume);
	}

	for (var key3 in bgms) {
		var conf3 = bgms[key3];
		this.core.audio_loader.loadBGM(key3, conf3.path, 1.0, conf3.loopStart, conf3.loopEnd);
	}
};

SceneLoading.prototype.beforeDraw = function() {
	base_scene.prototype.beforeDraw.apply(this, arguments);

	// TODO: not wait font loading if no font is ready to load
	//if (this.core.image_loader.isAllLoaded() && this.core.audio_loader.isAllLoaded() && this.core.font_loader.isAllLoaded()) {
	if (this.core.image_loader.isAllLoaded() && this.core.audio_loader.isAllLoaded()) {
		this.notifyAllLoaded();
	}
};

SceneLoading.prototype.progress = function(){
	var progress = (this.core.audio_loader.progress() + this.core.image_loader.progress() + this.core.font_loader.progress()) / 3;
	return progress;
};

SceneLoading.prototype.draw = function(){
	base_scene.prototype.draw.apply(this, arguments);
};
SceneLoading.prototype.notifyAllLoaded = function(){
	if (this.next_scene_name) {
		this.core.changeScene(this.next_scene_name);
	}
};


module.exports = SceneLoading;

},{"../util":139,"./base":130}],132:[function(require,module,exports){
'use strict';

// movie scene

var base_scene = require('./base');
var util = require('../util');

var SceneMovie = function(core) {
	base_scene.apply(this, arguments);

	this.video = null;

	// go if the movie is done.
	this.next_scene_name = null;

	this.is_playing = false;

	this._height = null;
	this._width  = null;
	this._top    = null;
	this._left   = null;

	this.is_mute = false;
};
util.inherit(SceneMovie, base_scene);

SceneMovie.prototype.init = function(movie_path, next_scene_name) {
	base_scene.prototype.init.apply(this, arguments);

	var self = this;

	self.is_playing = false;

	self._height = null;
	self._width  = null;
	self._top    = null;
	self._left   = null;

	// go if the movie is done.
	self.next_scene_name = next_scene_name;

	// stop bgm if it is played.
	this.core.audio_loader.stopBGM();

	var video = document.createElement("video");
	video.src = movie_path;
	video.controls = false;
	video.preload = "auto";
	video.oncanplaythrough = function () {
		self._calcDrawSizeAndPosition();

		video.play();

		self.is_playing = true;
	};

	if (this.is_mute) {
		video.muted = true;
	}

	video.load();


	self.video = video;
};

SceneMovie.prototype.beforeDraw = function(){
	base_scene.prototype.beforeDraw.apply(this, arguments);

	if(this.is_playing && this.video.ended) {
		this.notifyEnd();
	}
};

SceneMovie.prototype.draw = function(){
	base_scene.prototype.draw.apply(this, arguments);

	var ctx = this.core.ctx;

	if(!ctx) return; // 2D context has been depricated in this game

	ctx.save();
	ctx.fillStyle = 'black';
	ctx.fillRect(0, 0, this.core.width, this.core.height);

	if (this.is_playing) {
		ctx.drawImage(this.video, 0, 0, this.video.videoWidth, this.video.videoHeight, this._left, this._top, this._width, this._height);
	}
	ctx.restore();
};

SceneMovie.prototype._calcDrawSizeAndPosition = function(){
	var scene_aspect = this.width / this.height; // canvas aspect
	var video_aspect = this.video.videoWidth / this.video.videoHeight; // video aspect
	var left, top, width, height;

	if(video_aspect >= scene_aspect) { // video width is larger than it's height
		width = this.width;
		height = this.width / video_aspect;
		top = (this.height - height) / 2;
		left = 0;
	}
	else { // video height is larger than it's width
		height = this.height;
		width = this.height * video_aspect;
		top = 0;
		left = (this.width - width) / 2;
	}


	this._height = height;
	this._width  = width;
	this._top    = top;
	this._left   = left;
};

SceneMovie.prototype.notifyEnd = function(){
	// release video data memory
	this.video = null;

	this.is_playing = false;

	if (this.next_scene_name) {
		this.core.changeScene(this.next_scene_name);
	}
};


module.exports = SceneMovie;

},{"../util":139,"./base":130}],133:[function(require,module,exports){
'use strict';

// typography speed
var TYPOGRAPHY_SPEED = 10;

var Util = require("./util");

var SerifManager = function () {
	this._timeoutID = null;

	// serif scenario
	this._script = null;

	// where serif has progressed
	this._progress = null;

	this._chara_id_list  = [];
	this._exp_id_list    = [];
	this._option = {};

	// which chara is talking, left or right
	this._pos = null;

	this._is_background_changed = false;
	this._background_image_name = null;

	this._char_list = "";
	this._char_idx = 0;

	this._is_enable_printing_message = true;

	// now printing message
	this._line_num = 0;
	this._printing_lines = [];
};

SerifManager.prototype.init = function (script) {
	if(!script) console.error("set script arguments to use serif_manager class");

	// serif scenario
	this._script = script;

	this._chara_id_list  = [];
	this._exp_id_list    = [];
	this._option = {};



	this._progress = -1;
	this._timeoutID = null;
	this._pos  = null;

	this._is_background_changed = false;
	this._background_image_name = null;


	this._char_list = "";
	this._char_idx = 0;

	this._is_enable_printing_message = true;

	this._line_num = 0;
	this._printing_lines = [];

	if(!this.is_end()) {
		this.next(); // start
	}
};

SerifManager.prototype.isEnd = function () {
	return this._progress === this._script.length - 1;
};

SerifManager.prototype.next = function () {
	this._progress++;

	var script = this._script[this._progress];

	this._showChara(script);

	this._showBackground(script);

	this._setOption(script);

	if(script.serif) {
		this._printMessage(script.serif);
	}
	else {
		// If serif is empty, show chara without talking and next
		this.next();
	}
};

SerifManager.prototype._showBackground = function(script) {
	this._is_background_changed = false;
	if(script.background && this._background_image_name !== script.background) {
		this._is_background_changed = true;
		this._background_image_name  = script.background;
	}
};

SerifManager.prototype._showChara = function(script) {
	var pos = script.pos;

	// NOTE: for deprecated pos setting
	if (pos === "left")  pos = 0;
	if (pos === "right") pos = 1;

	if (!pos) pos = 0;

	this._pos  = pos;

	this._chara_id_list[pos] = script.chara;
	this._exp_id_list[pos]   = script.exp;
};

SerifManager.prototype._setOption = function(script) {
	this._option = script.option || {};

	// for deprecated script "font_color"
	if (script.font_color) {
		this._option = Util.shallowCopyHash(this.option);
		this._option.font_color = script.font_color;
	}
};

SerifManager.prototype._printMessage = function (message) {
	// cancel already started message
	this._cancelPrintMessage();

	// setup to show message
	this._char_list = message.split("");
	this._char_idx = 0;

	// clear showing message
	this._line_num = 0;
	this._printing_lines = [];

	this._startPrintMessage();
};
// is waiting to be called next?
SerifManager.prototype.isWaitingNext = function () {
	return this.isEndPrinting() && !this.isEnd();
};

SerifManager.prototype.isEndPrinting = function () {
	var char_length = this._char_list.length;
	return this._char_idx >= char_length ? true : false;
};

SerifManager.prototype._startPrintMessage = function () {
	var char_length = this._char_list.length;
	if (this._char_idx >= char_length) return;

	if(this._is_enable_printing_message) {
		var ch = this._char_list[this._char_idx];
		this._char_idx++;

		if (ch === "\n") {
			this._line_num++;
		}
		else {
			// initialize
			if(!this._printing_lines[this._line_num]) {
				this._printing_lines[this._line_num] = "";
			}

			// show A word
			this._printing_lines[this._line_num] = this._printing_lines[this._line_num] + ch;
		}
	}

	this._timeoutID = setTimeout(Util.bind(this._startPrintMessage, this), TYPOGRAPHY_SPEED);
};

SerifManager.prototype._cancelPrintMessage = function () {
	if(this._timeoutID !== null) {
		clearTimeout(this._timeoutID);
		this._timeoutID = null;
	}
};

SerifManager.prototype.startPrintMessage = function () {
	this._is_enable_printing_message = true;
};
SerifManager.prototype.cancelPrintMessage = function () {
	this._is_enable_printing_message = false;
};

SerifManager.prototype.isBackgroundChanged = function () {
	return this._is_background_changed;
};
SerifManager.prototype.getBackgroundImageName = function () {
	return this._background_image_name;
};

SerifManager.prototype.getImageName = function (pos) {
	pos = pos || 0;
	return(this._chara_id_list[pos] ? this.getChara(pos) + "_" + this._exp_id_list[pos] : null);
};
SerifManager.prototype.getChara = function (pos) {
	pos = pos || 0;
	return(this._chara_id_list[pos] ? this._chara_id_list[pos] : null);
};

SerifManager.prototype.isTalking = function (pos) {
	return this._pos === pos ? true : false;
};
SerifManager.prototype.getOption = function () {
	return this._option;
};
SerifManager.prototype.lines = function () {
	return this._printing_lines;
};
SerifManager.prototype.getSerifRowsCount = function () {
	// TODO: only calculate once
	var serif = this._script[this._progress].serif;
	return( (serif.match(new RegExp("\n", "g")) || []).length + 1 );
};




// NOTE: deprecated
SerifManager.prototype.right_image = function () {
	var pos = 1; // means right

	return this.getImageName(pos);
};
// NOTE: deprecated
SerifManager.prototype.left_image = function () {
	var pos = 0; // means left

	return this.getImageName(pos);
};
// NOTE: deprecated
SerifManager.prototype.is_right_talking = function () {
	var pos = 1; // means right

	return this.isTalking(pos);
};
// NOTE: deprecated
SerifManager.prototype.is_left_talking = function () {
	var pos = 0; // means left

	return this.isTalking(pos);
};
// NOTE: deprecated
SerifManager.prototype.font_color = function () {
	return this._option.font_color;
};
// NOTE: deprecated
SerifManager.prototype.is_end = function () {
	return this.isEnd();
};
// NOTE: deprecated
SerifManager.prototype.is_background_changed = function () {
	return this.isBackgroundChanged();
};
// NOTE: deprecated
SerifManager.prototype.background_image = function () {
	return this.getBackgroundImageName();
};

module.exports = SerifManager;

},{"./util":139}],134:[function(require,module,exports){
module.exports = "precision mediump float;\nuniform sampler2D uSampler;\nvarying vec2 vTextureCoordinates;\nvarying vec4 vColor;\n\nvoid main() {\n\tvec4 textureColor = texture2D(uSampler, vTextureCoordinates);\n\tgl_FragColor = textureColor * vColor;\n}\n\n";

},{}],135:[function(require,module,exports){
module.exports = "attribute vec3 aVertexPosition;\nattribute vec2 aTextureCoordinates;\nattribute vec4 aColor;\n\nuniform mat4 uMVMatrix;\nuniform mat4 uPMatrix;\nvarying vec2 vTextureCoordinates;\nvarying vec4 vColor;\n\nvoid main() {\n\tgl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);\n\tvTextureCoordinates = aTextureCoordinates;\n\tvColor = aColor;\n}\n\n";

},{}],136:[function(require,module,exports){
'use strict';
var glmat = require("gl-matrix");

var ShaderProgram = function(
	gl,
	vs_text,
	fs_text,
	attribute_variables,
	uniform_variables
) {
	if (!gl) throw new Error("arguments 1 must be WebGLRenderingContext instance");

	this.gl = gl;

	var vs_shader = this.createShader(gl, gl.VERTEX_SHADER, vs_text);
	var fs_shader = this.createShader(gl, gl.FRAGMENT_SHADER, fs_text);
	var shader_program = this.createShaderProgram(gl, vs_shader, fs_shader);

	var i;
	var attribute_locations = {};
	for (i=0; i < attribute_variables.length; i++) {
		attribute_locations[ attribute_variables[i] ] = gl.getAttribLocation(shader_program, attribute_variables[i]);
	}

	var uniform_locations = {};
	for (i=0; i < uniform_variables.length; i++) {
		uniform_locations[ uniform_variables[i] ] = gl.getUniformLocation(shader_program, uniform_variables[i]);
	}

	this.shader_program = shader_program;
	this.attribute_locations = attribute_locations;
	this.uniform_locations = uniform_locations;
};

ShaderProgram.prototype.createShader = function (gl, type, source_text) {
	if(type !== gl.VERTEX_SHADER && type !== gl.FRAGMENT_SHADER) {
		throw new Error ("type must be vertex or fragment");
	}

	var shader = gl.createShader(type);

	gl.shaderSource(shader, source_text);

	gl.compileShader(shader);

	if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {
		throw (
			(type === gl.VERTEX_SHADER ? "Vertex" : "Fragment") + " failed to compile:\n\n" + gl.getShaderInfoLog(shader));
	}

	return shader;
};

ShaderProgram.prototype.createShaderProgram = function(gl, vertex_shader, fragment_shader) {
	var shaderProgram = gl.createProgram();

	gl.attachShader(shaderProgram, vertex_shader);
	gl.attachShader(shaderProgram, fragment_shader);

	gl.linkProgram(shaderProgram);

	if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {
		throw new Error("Could not initialize shaders:\n\n" + gl.getProgramInfoLog(shaderProgram));
	}

	return shaderProgram;
};

module.exports = ShaderProgram;

},{"gl-matrix":110}],137:[function(require,module,exports){
'use strict';

/*
 * TODO: split load and save method by sync and async
 * TODO: compress save data
 * TODO: implement: defineColumnProperty method
 */

var Util = require("../util");

var DEFAULT_KEY = "hakurei_engine:default";

var StorageBase = function (data) {
	if(!data) data = {};
	this._data = data;
};

// save file unique key
// this constant must be overridden!
StorageBase.KEY = function() {
	return DEFAULT_KEY;
};

StorageBase.prototype.set = function(key, value) {
	this._data[key] = value;
};
StorageBase.prototype.get = function(key) {
	return this._data[key];
};
StorageBase.prototype.exists = function(key) {
	return key in this._data;
};

StorageBase.prototype.remove = function(key) {
	return delete this._data[key];
};
StorageBase.prototype.isEmpty = function() {
	return Object.keys(this._data).length === 0;
};
StorageBase.prototype.toHash = function() {
	return Util.shallowCopyHash(this._data);
};


// is Electron or NW.js ?
StorageBase.isLocalMode = function() {
	// this is Electron
	if (Util.isElectron()) {
		return true;
	}

	// TODO: NW.js
	return false;
};

StorageBase.prototype.save = function() {
	var Klass = this.constructor;
	if (Klass.isLocalMode()) {
		this._saveToLocalFile();
	}
	else {
		this._saveToWebStorage();

	}
};

StorageBase.prototype._saveToLocalFile = function() {
	var Klass = this.constructor;
	var fs = window.require('fs');

	var data = JSON.stringify(this._data);

	var dir_path = Klass._localFileDirectoryPath();

	var file_path = dir_path + Klass._localFileName(Klass.KEY());

	if (!fs.existsSync(dir_path)) {
		fs.mkdirSync(dir_path);
	}
	fs.writeFileSync(file_path, data);
};

// save file directory
StorageBase._localFileDirectoryPath = function() {
	var path = window.require('path');
	var app  = window.require('electron').remote.app;
	var base = app.getPath("appData");
	var app_name = app.getName();
	return path.join(base, app_name, 'save/');
};

StorageBase._localFileName = function(key) {
	return key + ".json";
};

StorageBase._localFilePath = function(key) {
	return this._localFileDirectoryPath() + this._localFileName(key);
};

StorageBase.prototype._saveToWebStorage = function() {
	var Klass = this.constructor;

	var key = Klass.KEY();
	var data = JSON.stringify(this._data);
	try {
		window.localStorage.setItem(key, data);
	}
	catch (e) {
	}
};

StorageBase.load = function() {
	var data;
	if (this.isLocalMode()) {
		data = this._loadFromLocalFile();
	}
	else {
		data = this._loadFromWebStorage();
	}

	var Klass = this;
	if (data) {
		// there is a storage data
		return new Klass(data);
	}
	else {
		// there is NOT a storage data
		return new Klass();
	}

};

StorageBase._loadFromLocalFile = function() {
	var fs = window.require('fs');

	var file_path = this._localFilePath(this.KEY());
	if (!fs.existsSync(file_path)) return null;

	var data = fs.readFileSync(file_path, { encoding: 'utf8' });

	var Klass = this;
	if (data) {
		return JSON.parse(data);
	}
	else {
		return null;
	}
};

StorageBase._loadFromWebStorage = function() {
	var key = this.KEY();
	var data;
	try {
		data = window.localStorage.getItem(key);
	}
	catch (e) {
	}

	var Klass = this;
	if (data) {
		return JSON.parse(data);
	}
	else {
		return null;
	}

};

StorageBase.prototype.del = function() {
	var Klass = this.constructor;
	if (Klass.isLocalMode()) {
		this._removeLocalFile();
	}
	else {
		this._removeWebStorage();
	}

	// reset this object properties
	this._data = {};
};

StorageBase.prototype._removeLocalFile = function() {
	var Klass = this.constructor;
	var fs = window.require('fs');
	var file_path = Klass._localFilePath(Klass.KEY());

	if (fs.existsSync(file_path)) {
		fs.unlinkSync(file_path);
	}
};

StorageBase.prototype._removeWebStorage = function() {
	var Klass = this.constructor;
	var key = Klass.KEY();
	try {
		window.localStorage.removeItem(key);
	}
	catch (e) {
	}
};

module.exports = StorageBase;

},{"../util":139}],138:[function(require,module,exports){
'use strict';
var base_class = require('./base');
var util = require('../util');

var StorageSave = function(scene) {
	base_class.apply(this, arguments);
};
util.inherit(StorageSave, base_class);

StorageSave.KEY = function(){
	var key = "hakurei_engine:save";
	if (!this.isLocalMode() && window && window.location) {
		return(key + ":" + window.location.pathname);
	}
	else {
		return "save";
	}
};

module.exports = StorageSave;

},{"../util":139,"./base":137}],139:[function(require,module,exports){
'use strict';
var Util = {
	inherit: function( child, parent ) {
		// inherit instance methods
		var getPrototype = function(p) {
			if(Object.create) return Object.create(p);

			var F = function() {};
			F.prototype = p;
			return new F();
		};
		child.prototype = getPrototype(parent.prototype);
		child.prototype.constructor = child;

		// inherit static methods
		for (var func_name in parent) {
			child[func_name] = parent[func_name];
		}
	},
	radianToTheta: function(radian) {
		return (radian * 180 / Math.PI) | 0;
	},
	thetaToRadian: function(theta) {
		return theta * Math.PI / 180;
	},
	calcMoveXByVelocity: function(velocity) {
		return velocity.magnitude * Math.cos(Util.thetaToRadian(velocity.theta));
	},
	calcMoveYByVelocity: function(velocity) {
		return velocity.magnitude * Math.sin(Util.thetaToRadian(velocity.theta));
	},
	hexToRGBString: function(h) {
		var hex16 = (h.charAt(0) === "#") ? h.substring(1, 7) : h;
		var r = parseInt(hex16.substring(0, 2), 16);
		var g = parseInt(hex16.substring(2, 4), 16);
		var b = parseInt(hex16.substring(4, 6), 16);

		return 'rgb(' + r + ', ' + g + ', ' + b + ')';
	},
	clamp: function(num, min, max) {
		return (num < min ? min : (num > max ? max : num));
	},
	isElectron: function() {
		if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {
			return true;
		}
		return false;
	},
	canPlayOgg: function () {
		var audio = document.createElement('audio');
		if (audio.canPlayType) {
			return audio.canPlayType('audio/ogg');
		}

		return false;
	},

	getRandomInt: function(min, max) {
		if (arguments.length === 1) {
			max = arguments[0];
			min = 1;
		}

		return Math.floor( Math.random() * (max - min + 1) ) + min;
	},
	shallowCopyHash: function (src_hash) {
		var dst_hash = {};
		for(var k in src_hash){
			dst_hash[k] = src_hash[k];
		}
		return dst_hash;
	},

	// for old browser
	assign: function assign(target, varArgs) { // .length of function is 2
		if (!target) { // TypeError if undefined or null
			throw new TypeError('Cannot convert undefined or null to object');
		}

		var to = Object(target);

		for (var index = 1; index < arguments.length; index++) {
			var nextSource = arguments[index];

			if (nextSource) { // Skip over if undefined or null
				for (var nextKey in nextSource) {
					// Avoid bugs when hasOwnProperty is shadowed
					if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {
						to[nextKey] = nextSource[nextKey];
					}
				}
			}
		}
		return to;
	},

	// for old browser
	bind: function(func, oThis) {
		if (typeof func !== 'function') {
			// closest thing possible to the ECMAScript 5
			// internal IsCallable function
			throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');
		}

		var aArgs   = Array.prototype.slice.call(arguments, 1),
		fToBind = func,
		FNOP    = function() {},
		fBound  = function() {
			return fToBind.apply(func instanceof FNOP ? func : oThis,
				aArgs.concat(Array.prototype.slice.call(arguments)));
		};

		if (func.prototype) {
			// Function.prototype doesn't have a prototype property
			FNOP.prototype = func.prototype;
		}
		fBound.prototype = new FNOP();

		return fBound;
	},
};

module.exports = Util;

},{}],140:[function(require,module,exports){
'use strict';

/* 画像を暗く変換する */

// 静的クラス
var CreateDarkerImage = function() {};

CreateDarkerImage.exec = function (image, alpha) {
	if (typeof alpha === "undefined") {
		return image;
	}

	var canvas = document.createElement("canvas");
	canvas.width = image.width;
	canvas.height = image.height;
	var ctx2 = canvas.getContext("2d");

	ctx2.globalAlpha = alpha;
	ctx2.fillStyle = 'rgb( 0, 0, 0 )';
	ctx2.fillRect(
		0,
		0,
		image.width,
		image.height
	);

	ctx2.globalCompositeOperation = "destination-atop";
	ctx2.globalAlpha = 1.0;

	ctx2.drawImage(image,
		0,
		0,
		image.width,
		image.height
	);

	return canvas;
};

module.exports = CreateDarkerImage;

},{}],141:[function(require,module,exports){
'use strict';
var Game = require('./game');
var CONSTANT = require('./constant');

var game;

window.onload = function() {
	// Canvas
	var mainCanvas = document.getElementById('mainCanvas');
	// Game オブジェクト
	game = new Game(mainCanvas);
	// 初期化
	game.init();
	// イベントハンドラの設定
	game.setupEvents();

	// デバッグ設定
	if (CONSTANT.DEBUG.ON) {
		var debugDOM = document.getElementById('debug');
		game.setupDebug(debugDOM);
	}

	// ゲーム起動
	game.startRun();

	// for phantomjs headless test
	window.game = game;
};
window.changeFullScreen = function () {
	game.fullscreen();
};

// Electron のレンダラプロセスならば
if(window.require) {
	window.require('electron').webFrame.setVisualZoomLevelLimits(1,1); //zoomさせない
}

},{"./constant":5,"./game":99}],142:[function(require,module,exports){
'use strict';
var base_object = require('./ss_anime_base');
var Util = require('../hakurei').util;

// アニメの index は 0 固定
// TODO: 基底の ss_anime_base にも同じ定数が存在する
var DATA_INDEX = 0;

var ObjectAnimeObject = function(scene) {
	base_object.apply(this, arguments);

	this._json_anime_map = {};
};
Util.inherit(ObjectAnimeObject, base_object);

ObjectAnimeObject.prototype.init = function(){
	base_object.prototype.init.apply(this, arguments);

};

ObjectAnimeObject.prototype.setAnime = function(data) {
	this._json_anime_map = data;
};

// 裏オブジェクト時のライトに照らされた アニメがあるかどうか
ObjectAnimeObject.prototype.hasBackOnLightedAnime = function() {
	return(
		this._json_anime_map.lighted_start_anime &&
		this._json_anime_map.lighting_anime &&
		this._json_anime_map.lighted_end_anime
	);
};

// 表オブジェクト時のクリックされたときの アニメがあるかどうか
ObjectAnimeObject.prototype.hasFrontClickedAnime = function() {
	return(
		this._json_anime_map.front_clicking_anime &&
		this._json_anime_map.front_after_click_anime
	);
};




ObjectAnimeObject.prototype.MarginWidth = function(){
	if(this._width) return this._width;
	// index = 0 のみ有効
	return this._json_anime_map.default[DATA_INDEX].animation.MarginWidth;
};

ObjectAnimeObject.prototype.MarginHeight = function(){
	if(this._height) return this._height;
	// index = 0 のみ有効
	return this._json_anime_map.default[DATA_INDEX].animation.MarginHeight;
};

ObjectAnimeObject.prototype.jsonAnimeMap = function() {
	return this._json_anime_map;
};

ObjectAnimeObject.prototype.scaleWidth = function(){
	return 2/3;
};
ObjectAnimeObject.prototype.scaleHeight = function(){
	return 2/3;
};




module.exports = ObjectAnimeObject;

},{"../hakurei":100,"./ss_anime_base":154}],143:[function(require,module,exports){
'use strict';
var base_object = require('./ss_anime_base');
var Util = require('../hakurei').util;

var jsonDataOfBlackMist = require('../data/anime/black_mist/eff01_anime_1');
var jsonDataOfRedMist = require('../data/anime/black_mist/eff02_anime_1');

var ObjectBlackMist = function(scene) {
	base_object.apply(this, arguments);
};
Util.inherit(ObjectBlackMist, base_object);

ObjectBlackMist.prototype.init = function(){
	base_object.prototype.init.apply(this, arguments);
	this.setPosition();
};



ObjectBlackMist.prototype.beforeDraw = function(){
	// 3rd eye 使用中かどうかでアニメーションが違う
	if (this.scene.isUsingEye() && this.current_anime === "default") {
		this.playAnimationInfinity("using_eye");
	}
	else if (!this.scene.isUsingEye() && this.current_anime === "using_eye") {
		this.playAnimationInfinity("default");
	}

	base_object.prototype.beforeDraw.apply(this, arguments);
};

ObjectBlackMist.prototype.setPosition = function(){
	// 画面中央が基準位置
	this.x(this.scene.width/2);
	this.y(this.scene.height/2);
};

ObjectBlackMist.prototype.jsonAnimeMap = function() {
	return {
		default: jsonDataOfBlackMist,
		using_eye: jsonDataOfRedMist,
	};
};
ObjectBlackMist.prototype.scaleWidth = function(){
	return 2/3;
};
ObjectBlackMist.prototype.scaleHeight = function(){
	return 2/3;
};




module.exports = ObjectBlackMist;

},{"../data/anime/black_mist/eff01_anime_1":6,"../data/anime/black_mist/eff02_anime_1":7,"../hakurei":100,"./ss_anime_base":154}],144:[function(require,module,exports){
'use strict';

// こいしの歩く速度
var SPEED = 2;

var base_object = require('./ss_anime_base');
var Util = require('../hakurei').util;
var CONSTANT = require('../constant');


/* 使用用途	リピート	fps	フレーム	時間 */
// 	待機	可	30	45	1.5秒
var jsonDataOfWait = require('../data/anime/koishi/wait_anime_1');
//	歩き	可	30	30	1秒
var jsonDataOfWalk = require('../data/anime/koishi/walk_anime_1');
// 	サードアイ使用	不	30	15	0.5秒
var jsonDataOfReaction3rdeye = require('../data/anime/koishi/reaction_3rdeye_anime_1');
// 	下を見る	不	30	15	0.5秒
var jsonDataOfReactionLookBottom = require('../data/anime/koishi/reaction_look_bottom_anime_1');
// 	前を見る	不	30	15	0.5秒
var jsonDataOfReactionLookFront = require('../data/anime/koishi/reaction_look_front_anime_1');
//	上を見る	不	30	15	0.5秒
var jsonDataOfReactionLookTop = require('../data/anime/koishi/reaction_look_top_anime_1');
//	触る、物を取る	不	30	15	0.5秒
var jsonDataOfReactionTouch = require('../data/anime/koishi/reaction_touch_anime_1');
//	YES、うなずく	不	30	15	0.5秒
var jsonDataOfReactionYes = require('../data/anime/koishi/reaction_yes_anime_1');

var Koishi = function (scene) {
	base_object.apply(this, arguments);

};
Util.inherit(Koishi, base_object);

Koishi.prototype.init = function() {
	base_object.prototype.init.apply(this, arguments);

	// クリックした移動先のオブジェクト
	this._move_target_object = null;
	// 移動後に実行する callback
	this._after_move_callback = null;


	this.setVelocity({magnitude:0, theta:0});
};

// 移動中かどうか
Koishi.prototype.isMoving = function() {
	return this._move_target_object ? true : false;
};

// 待機アニメーションに変更
Koishi.prototype.setWaitAnime = function() {
	this.playAnimationInfinity("default");
};
// 歩きアニメーションに変更
Koishi.prototype.setWalkAnime = function() {
	this.playAnimationInfinity("walk");
};

Koishi.prototype._stopMove = function() {
	// 移動中でなければ何もしない
	if(!this.isMoving()) return;

	this._move_target_object = null;
	this.setVelocity({magnitude:0, theta:0});

	this.setWaitAnime();
};
Koishi.prototype.stopMoveWithoutCallBack = function() {
	this._stopMove();

	// 移動後に実行する callback
	this._after_move_callback = null;
};

Koishi.prototype.stopMove = function() {
	this._stopMove();

	// 歩いたあとのコールバックを実行
	if (this._after_move_callback) {
		var cb = this._after_move_callback;
		this._after_move_callback = null;
		cb();
	}
};







Koishi.prototype.useEye = function(){
	this.stopMoveWithoutCallBack();

	// サードアイ使用モーションをしたあとに停止
	this.playAnimationOnce("use_eye");
};

Koishi.prototype.unUseEye = function(){
	// サードアイ使用モーション中なら静止に戻す
	if (this.current_anime === "use_eye") {
		this.setWaitAnime();
	}
};

// オブジェクトを調べた際のモーションを行う
Koishi.prototype.actionByObject = function(action_name) {
	this.playAnimationOnce(action_name);
};

Koishi.prototype.beforeDraw = function(){
	base_object.prototype.beforeDraw.apply(this, arguments);

	// 足音
	this._playWalkSound();

	// 移動先
	if(this.isMoving()) {
		this._checkToStop();
	}
};

Koishi.prototype._playWalkSound = function(){
	// 移動中でなければ再生しない
	if (!this.isMoving()) return;

	var field_data = this.scene.getFieldData();
	// 足音
	var walk_sound = field_data.walk_sound;

	// 屋敷の廊下2は、病院の廊下の床と木の床の境なので、円判定で、音を切り替える
	if (field_data.key === "chapter0_hospital_corridor2") {
		var arc_x = 860;
		var arc_y = 95;
		var r = 600;

		// 円と点の衝突判定
		if (Math.pow(arc_x-this.x(), 2) + Math.pow(arc_y-this.y(), 2) <= Math.pow(r, 2)) {
			walk_sound = "walking_bare_wood";
		}
	}

	// こいしの歩くアニメーションに合わせて音を再生
	if(this.ss.getFrameNo() === 14) {
		this.core.audio_loader.playSound(walk_sound + "_right");
	}
	else if(this.ss.getFrameNo() === 29) {
		this.core.audio_loader.playSound(walk_sound + "_left");
	}
};

Koishi.prototype.setMoveTarget = function(obj, callback) {
	// 移動不可であれば何もしない
	if (!this.scene.isEnableToMove()) return;

	// 移動先のオブジェクト or 座標
	this._move_target_object = obj;

	// 移動後に実行する callback
	this._after_move_callback = callback;

	// 移動先位置を取得
	var move_to_pos = this._getMoveToPos();

	// 移動ベクトルを設定
	var ax = move_to_pos.x - this.x();
	var ay = move_to_pos.y - this.y();

	var theta = Util.radianToTheta(Math.atan2(ay, ax));

	this.setVelocity({magnitude:SPEED, theta:theta});

	// 歩きモーションに変更
	this.setWalkAnime();

	// 移動方向に合わせて こいしを反転
	if (obj.x() > this.x()) {
		this.setReflect(false);
	}
	else {
		this.setReflect(true);
	}
};

Koishi.prototype.jsonAnimeMap = function() {
	return {
		// 静止
		default:     jsonDataOfWait,
		wait:        jsonDataOfWait,
		// 歩く
		walk:        jsonDataOfWalk,
		// サードアイ使用
		use_eye:     jsonDataOfReaction3rdeye,
		// 下を見る
		look_bottom: jsonDataOfReactionLookBottom,
		// 前を見る
		look_front:  jsonDataOfReactionLookFront,
		// 上を見る
		look_top:    jsonDataOfReactionLookTop,
		// ものを触る
		look_touch:  jsonDataOfReactionTouch,
		// うなづく
		yes:         jsonDataOfReactionYes,
	};
};

Koishi.prototype.scaleWidth = function(){
	return 2/3;
};
Koishi.prototype.scaleHeight = function(){
	return 2/3;
};

// 移動終了判定
Koishi.prototype._checkToStop = function() {
	// 移動先位置を取得
	var move_to_pos = this._getMoveToPos();
	var target_x = move_to_pos.x;
	var target_y = move_to_pos.y;

	// "概ね" の範囲
	var range = SPEED*3;

	// (x,y)座標が概ね target_x と target_y に近づいたら
	if (
		this.x() + range >= target_x &&
		target_x > this.x() - range &&
		this.y() + range >= target_y &&
		target_y > this.y() - range
	) {
		// end move
		this.stopMove();
	}
	/*
	// オブジェクトとぶつかったら止まる
	else if (this.checkCollisionWithObjects(this.scene.walk_immovable_areas)) {
		this.stopMove();
	}
	*/

};


// 移動先を取得
Koishi.prototype._getMoveToPos = function() {
	// 移動先オブジェクト
	var obj = this._move_target_object;

	// このメソッドを呼ぶときは、必ず移動先が設定されていないといけない
	if(!obj) throw new Error("unable to get _move_target_object");

	var target_x = obj.x();
	var target_y = obj.y();

	// 一定以上の奥行きには移動できない
	if (target_y < this.scene.height - CONSTANT.WALK_DEPTH_LIMIT) {
		target_y = this.scene.height - CONSTANT.WALK_DEPTH_LIMIT;
	}

	return {
		x: target_x,
		y: target_y,
	};
};

// サードアイの自然消耗
Koishi.prototype.abrasion3rdeye = function() {
	this.core.save_manager.reduce3rdeyeGauge(CONSTANT.ABRASION_3RDEYE_GAUGE);
};

// サードアイの自然消耗
Koishi.prototype.get3rdeyeGauge = function() {
	return this.core.save_manager.get3rdeyeGauge();
};





module.exports = Koishi;

},{"../constant":5,"../data/anime/koishi/reaction_3rdeye_anime_1":84,"../data/anime/koishi/reaction_look_bottom_anime_1":85,"../data/anime/koishi/reaction_look_front_anime_1":86,"../data/anime/koishi/reaction_look_top_anime_1":87,"../data/anime/koishi/reaction_touch_anime_1":88,"../data/anime/koishi/reaction_yes_anime_1":89,"../data/anime/koishi/wait_anime_1":90,"../data/anime/koishi/walk_anime_1":91,"../hakurei":100,"./ss_anime_base":154}],145:[function(require,module,exports){
'use strict';

// anchor (画像上でのライトの出力位置)
var LIGHT_ANCHOR_X = -13;
var LIGHT_ANCHOR_Y = -336;

// こいし基準から、光をどの地点を基準に回転させるか
// (こいしのサードアイの位置)
var PIVOT_LIGHT_X_FROM_KOISHI = 70;
var PIVOT_LIGHT_Y_FROM_KOISHI = -110;

// 当たり判定のこいしからの距離
var CIRCLE1_POS_DISTANCE_FROM_KOISHI = 336;
var CIRCLE2_POS_DISTANCE_FROM_KOISHI = 100;

// 光の当たり判定サイズ(円の半径)
var CIRCLE1_RADIUS = 180;
var CIRCLE2_RADIUS = 60;



var base_object = require('../hakurei').object.base;
var Util = require('../hakurei').util;

var ObjectLight3rdeye = function(core) {
	base_object.apply(this, arguments);

	this._radian = null;
	this._pivot_x = null;
	this._pivot_y = null;
};
Util.inherit(ObjectLight3rdeye, base_object);

ObjectLight3rdeye.prototype.init = function(){
	base_object.prototype.init.apply(this, arguments);

	this._radian = null;
	this._pivot_x = null;
	this._pivot_y = null;
};

ObjectLight3rdeye.prototype.beforeDraw = function(){
	base_object.prototype.beforeDraw.apply(this, arguments);
};

// ライトの角度、位置
ObjectLight3rdeye.prototype._updateLightPosition = function(){
	// ライトの角度、位置
	var pos = this._calcLightPositionFromKoishi();

	this._radian = pos.radian;
	this._pivot_x = pos.x;
	this._pivot_y = pos.y;
};

// ライトの角度、位置
ObjectLight3rdeye.prototype._calcLightPositionFromKoishi = function(){
	// こいしからマウスまでの角度(radian)
	var rad = this._calcRadianFromKoishiToMouse();

	// ライトの稼働角度には制限がある
	if (this.scene.koishi.isReflect()) {
		if (-Math.PI*7/9 < rad && rad < 0) { rad = -Math.PI*7/9; }
		else if(0 <= rad && rad < Math.PI*6/9) { rad = Math.PI*6/9; }
	}
	else {
		if (rad < -Math.PI*2/9) rad = -Math.PI*2/9;
		else if (Math.PI*3/9 < rad) rad = Math.PI*3/9;

	}

	// ライトの回転基準位置
	var x,y;
	if (this.scene.koishi.isReflect()) {
		x = this.scene.koishi.x() - PIVOT_LIGHT_X_FROM_KOISHI;
		y = this.scene.koishi.y() + PIVOT_LIGHT_Y_FROM_KOISHI;
	}
	else {
		x = this.scene.koishi.x() + PIVOT_LIGHT_X_FROM_KOISHI;
		y = this.scene.koishi.y() + PIVOT_LIGHT_Y_FROM_KOISHI;
	}

	return {
		radian: rad,
		x: x,
		y: y,
	};
};



ObjectLight3rdeye.prototype.draw = function(){
	base_object.prototype.draw.apply(this, arguments);

	// ライトの角度、位置 更新
	// (beforeDraw に置くと、最初1フレームだけ_updateLightPosition が呼ばれないまま draw されるから)
	this._updateLightPosition();

	// 画面全体を少し暗くする
	this._drawDarker();

	// ライト描画
	this._drawLight();

	// デバッグモードだとライトの当たり判定を表示する
	if (this.core.debug_manager.isShowingCollisionArea()) {
		this._drawLightCollision();
	}
};

// 画面全体を少し暗くする
ObjectLight3rdeye.prototype._drawDarker = function() {
	var ctx = this.core.ctx;

	ctx.save();
	ctx.fillStyle = 'black';
	ctx.globalAlpha = 0.3;
	ctx.fillRect(0, 0, this.width, this.height);
	ctx.restore();
};

// ライト描画
ObjectLight3rdeye.prototype._drawLight = function(){
	var ctx = this.core.ctx;

	var light = this.core.image_loader.getImage("light");
	ctx.save();

	//console.log(this._radian / Math.PI);

	// ライトの回転基準位置
	ctx.translate(this._pivot_x, this._pivot_y);

	// 回転
	ctx.rotate(this._radian);

	// 合成方法
	ctx.globalCompositeOperation = "overlay";

	/*
	 * DEBUG用 ライトの合成方法指定
	if (this.core.debug_manager.get('light_global_composite')) {
		ctx.globalCompositeOperation = this.core.debug_manager.get('light_global_composite');
	}
	else {
		ctx.globalCompositeOperation = "overlay";
	}
	*/

	// 描画
	ctx.drawImage(light, LIGHT_ANCHOR_X, LIGHT_ANCHOR_Y);

	ctx.restore();
};

// こいしからマウスまでの角度(radian)
ObjectLight3rdeye.prototype._calcRadianFromKoishiToMouse = function(){
	var x = this.core.input_manager.mousePositionX();
	var y = this.core.input_manager.mousePositionY();

	var ax = x - this.scene.koishi.x();
	var ay = y - this.scene.koishi.y();
	var rad = Math.atan2(ay, ax);

	return rad;
};

ObjectLight3rdeye.prototype._drawLightCollision = function(){
	var map1 = {
		x: this._pivot_x + CIRCLE1_POS_DISTANCE_FROM_KOISHI * Math.cos(this._radian),
		y: this._pivot_y+ CIRCLE1_POS_DISTANCE_FROM_KOISHI * Math.sin(this._radian),
	};
	var map2 = {
		x: this._pivot_x + CIRCLE2_POS_DISTANCE_FROM_KOISHI * Math.cos(this._radian),
		y: this._pivot_y + CIRCLE2_POS_DISTANCE_FROM_KOISHI * Math.sin(this._radian),
	};

	var ctx = this.core.ctx;
	ctx.save();

	ctx.globalCompositeOperation = "overlay";

	ctx.beginPath();
	ctx.arc(map1.x, map1.y,CIRCLE1_RADIUS,0,2*Math.PI);
	ctx.arc(map2.x, map2.y,CIRCLE2_RADIUS,0,2*Math.PI);
	ctx.fill();

	ctx.restore();
};


ObjectLight3rdeye.prototype.checkCollisionWithPieces = function(pieces){
	// フィールドの各種オブジェクトとサードアイの光の当たり判定
	for (var i = pieces.length - 1; i >= 0; i--) { // i の大きい方が手前なので
		var piece = pieces[i];
		if (piece.isCollisionWithLightIn3rdEye()) {
			if(this.intersectWithPiece(piece)) {
				piece.onCollideWithLightIn3rdEye();
			}
			else {
				piece.onNotCollideWithLightIn3rdEye();
			}
		}
	}

	return false;
};

ObjectLight3rdeye.prototype.intersectWithPiece = function (piece) {
	var map1 = {
		x: this._pivot_x + CIRCLE1_POS_DISTANCE_FROM_KOISHI * Math.cos(this._radian),
		y: this._pivot_y+ CIRCLE1_POS_DISTANCE_FROM_KOISHI * Math.sin(this._radian),
	};
	var map2 = {
		x: this._pivot_x + CIRCLE2_POS_DISTANCE_FROM_KOISHI * Math.cos(this._radian),
		y: this._pivot_y + CIRCLE2_POS_DISTANCE_FROM_KOISHI * Math.sin(this._radian),
	};

	// 1つ目の円
	if(Math.pow(map1.x-piece.getCollisionLeftX(), 2)  + Math.pow(map1.y-piece.getCollisionUpY(), 2) <= Math.pow(CIRCLE1_RADIUS, 2) ||
	   Math.pow(map1.x-piece.getCollisionLeftX(), 2)  + Math.pow(map1.y-piece.getCollisionDownY(), 2) <= Math.pow(CIRCLE1_RADIUS, 2) ||
	   Math.pow(map1.x-piece.getCollisionRightX(), 2) + Math.pow(map1.y-piece.getCollisionUpY(), 2) <= Math.pow(CIRCLE1_RADIUS, 2) ||
	   Math.pow(map1.x-piece.getCollisionRightX(), 2) + Math.pow(map1.y-piece.getCollisionDownY(), 2) <= Math.pow(CIRCLE1_RADIUS, 2)) {
		return true;
	}

	// 2つ目の円
	if(Math.pow(map2.x-piece.getCollisionLeftX(), 2)  + Math.pow(map2.y-piece.getCollisionUpY(), 2) <= Math.pow(CIRCLE2_RADIUS, 2) ||
	   Math.pow(map2.x-piece.getCollisionLeftX(), 2)  + Math.pow(map2.y-piece.getCollisionDownY(), 2) <= Math.pow(CIRCLE2_RADIUS, 2) ||
	   Math.pow(map2.x-piece.getCollisionRightX(), 2) + Math.pow(map2.y-piece.getCollisionUpY(), 2) <= Math.pow(CIRCLE2_RADIUS, 2) ||
	   Math.pow(map2.x-piece.getCollisionRightX(), 2) + Math.pow(map2.y-piece.getCollisionDownY(), 2) <= Math.pow(CIRCLE2_RADIUS, 2)) {
		return true;
	}

	return false;
};

module.exports = ObjectLight3rdeye;

},{"../hakurei":100}],146:[function(require,module,exports){
'use strict';

var base_object = require('../../hakurei').object.base;
var Util = require('../../hakurei').util;
var CONSTANT = require('../../constant');
var ItemConfig = require('../../config/item');

var ObjectMenuItemBase = function(scene) {
	base_object.apply(this, arguments);
};
Util.inherit(ObjectMenuItemBase, base_object);

ObjectMenuItemBase.prototype.onCollision = function() {
	if (this.core.input_manager.isLeftClickPush()) {
		// アイテム選択 音
		this.core.audio_loader.playSound("select_item");

		// 選択中を自分に
		this.scene.setFocusItem(this.item_id());
	}
	else {
		// クリック可能を表すマウスカーソルに
		//this.core.changeCursorImage("ui_icon_pointer_02");
	}
};

ObjectMenuItemBase.prototype.draw = function(){
	base_object.prototype.draw.apply(this, arguments);
	var ctx = this.core.ctx;
	var item_config = ItemConfig[this.item_id()];
	var image = this.core.image_loader.getImage(item_config.image_name);

	var width = image.width * 2/3;
	var height = image.height * 2/3;

	ctx.save();

	// アイテム画像 描画
	ctx.translate(this.x(), this.y());
	ctx.drawImage(image,
		-width/2,
		-height/2,
		width,
		height
	);
	ctx.restore();

	ctx.save();

	// 選択しているアイテムなら選択中 表示
	if (this.scene.isFocusItem(this.item_id())) {
		ctx.strokeStyle = "rgb(200, 0, 0)";
		ctx.lineWidth = 10;
		ctx.strokeRect(this.getCollisionLeftX(), this.getCollisionUpY(), this.collisionWidth(), this.collisionHeight());
	}

	ctx.restore();
};

ObjectMenuItemBase.prototype.collisionWidth = function(){
	return 128;
};

ObjectMenuItemBase.prototype.collisionHeight = function(){
	return 128;
};

ObjectMenuItemBase.prototype.item_id = function() {
	throw new Error("item_id method must be implemented");
};

// アイテムが使用されたとき
ObjectMenuItemBase.prototype.use = function(){
	// 持ち物から削除
	this.core.save_manager.deleteItem(this.item_id());
};

module.exports = ObjectMenuItemBase;

},{"../../config/item":3,"../../constant":5,"../../hakurei":100}],147:[function(require,module,exports){
'use strict';

/* メニューのアイテムの目薬 */

var base_object = require('./base');
var Util = require('../../hakurei').util;
var CONSTANT = require('../../constant');

var ObjectMenuItemEyeDrops = function(scene) {
	base_object.apply(this, arguments);
};
Util.inherit(ObjectMenuItemEyeDrops, base_object);

ObjectMenuItemEyeDrops.prototype.item_id = function() {
	return CONSTANT.ITEM.EYEDROPS;
};
// アイテムが使用されたとき
ObjectMenuItemEyeDrops.prototype.use = function(){
	base_object.prototype.use.apply(this, arguments);

	// 3rd eye ゲージの回復
	this.core.save_manager.gain3rdeyeGauge(CONSTANT.EYEDROPS_RECOVER_3RDEYE_GAUGE);

	// 3rd eye 使用 1枚絵へ
	this.scene.root().changeSubScene("picture_use_eyedrops");
};

module.exports = ObjectMenuItemEyeDrops;

},{"../../constant":5,"../../hakurei":100,"./base":146}],148:[function(require,module,exports){
'use strict';
var base_object = require('./anime_image');
var Util = require('../../hakurei').util;

var ObjectAnimeEventImage = function(core) {
	base_object.apply(this, arguments);

	// 裏オブジェクト時にクリックして発生するイベント名
	this._back.click_event   = null;
};
Util.inherit(ObjectAnimeEventImage, base_object);

ObjectAnimeEventImage.prototype.init = function(){
	base_object.prototype.init.apply(this, arguments);

	// 裏オブジェクト時にクリックして発生するイベント名
	this._back.click_event   = null;
};
ObjectAnimeEventImage.prototype.setData = function(data) {
	base_object.prototype.setData.apply(this, arguments);

	this._back.click_event   = data.action_back_event;
};
/*
ObjectAnimeEventImage.prototype.onCollision = function(obj){
	base_object.prototype.onCollision.apply(this, arguments);

	// サードアイ使用中かつ
	// 移動中でなければ、対象のオブジェクトに近寄ってアクション
	if(this.scene.mainStage().isUsingEye() && this.core.input_manager.isLeftClickPush()) {
		if (!this.scene.mainStage().koishi().isMoving()) {
			this.scene.mainStage().koishi().setMoveTargetObject(obj, this);
			this.scene.mainStage().koishi().setAfterMoveCallback(Util.bind(this.onCollisionAfterKoishiWalkOnEvent, this));
		}
	}
	else {
	}

	if(!this.scene.mainStage().isUsingEye()) {
		// 3rdeye 使用中なら基底メソッドで touch カーソルにされるので、戻す
		// 通常時はクリックしても何も起こらないので default カーソルのままでないといけないので
		this.core.changeDefaultCursor();
	}
	else {
		this.core.changeTouchCursor();
	}
};
ObjectAnimeEventImage.prototype.onCollisionAfterKoishiWalkOnEvent = function(){
	var self = this;

	// フェードアウト
	this.scene.mainStage().setFadeOut(30, "black");

	// イベント発生
	this.core.changeScene(this._action_back_event);
};
*/
module.exports = ObjectAnimeEventImage;

},{"../../hakurei":100,"./anime_image":149}],149:[function(require,module,exports){
'use strict';
var base_object = require('./base');
var Util = require('../../hakurei').util;
var SS = require('../anime_object');
var AnimeMap = require('../../config/object_anime');

var ObjectAnimeImage = function(core) {
	base_object.apply(this, arguments);

	// 拡縮
	this._scale = 1;

	// 表オブジェクトのパラメータ
	this._front = {
		// クリック時のセリフ
		serif: null,
		// クリック時のこいしのアクション
		action_name: null,
		// クリック時のSE
		sound_name: null,
	};

	// 裏オブジェクトのパラメータ
	this._back = {
		// BGM
		bgm_name: null,

		// 裏オブジェクト サードアイに照らされた際のSE
		lighted_sound_name: null,
	};

	// サイズ
	this._width  = null;
	this._height = null;

	// アニメ
	this.ss = new SS(this.scene);

	// 表オブジェクトで既にクリック済かどうか
	this._is_clicked_in_front = false;

	// 裏オブジェクト中かどうか
	this._is_in_back = false;
};
Util.inherit(ObjectAnimeImage, base_object);

ObjectAnimeImage.prototype.init = function(){
	base_object.prototype.init.apply(this, arguments);

	// 拡縮
	this._scale = 1;

	// 表オブジェクトのパラメータ
	this._front = {
		// クリック時のセリフ
		serif: null,
		// クリック時のこいしのアクション
		action_name: null,
		// クリック時のSE
		sound_name: null,
	};

	// 裏オブジェクトのパラメータ
	this._back = {
		// BGM
		bgm_name: null,

		// 裏オブジェクト サードアイに照らされた際のSE
		lighted_sound_name: null,
	};

	// サイズ
	this._width  = null;
	this._height = null;

	// 表オブジェクトで既にクリック済かどうか
	this._is_clicked_in_front = false;

	// 裏オブジェクト中かどうか
	this._is_in_back = false;
};
ObjectAnimeImage.prototype.setPosition = function(x, y) {
	base_object.prototype.setPosition.apply(this, arguments);

	// update sprite
	this.ss.x(this.x());
	this.ss.y(this.y());
};

ObjectAnimeImage.prototype.setData = function(data) {
	// 位置
	this.setPosition(data.x, data.y);

	this.ss.setAnime({
		// 表

		// クリック前のアニメ
		front_before_click_anime: AnimeMap[data.anime1],
		default:                  AnimeMap[data.anime1],
		// クリック中のアニメーション
		front_clicking_anime: AnimeMap[data.anime2],
		// クリック後のアニメーション
		front_after_click_anime: AnimeMap[data.anime3],

		// 裏

		// サードアイで照らした際の開始アニメ
		lighted_start_anime: AnimeMap[data.anime4],
		// サードアイで照らした最中のアニメ
		lighting_anime: AnimeMap[data.anime5],
		// サードアイで照らした際の終了アニメ
		lighted_end_anime: AnimeMap[data.anime6],
	});
	this.ss.init();

	// 表オブジェクト クリック時のセリフ
	this._front.serif = data.serif;

	// 表オブジェクト クリック時のこいしのアクション
	this._front.action_name  = data.action_name;

	// 表オブジェクト クリック時のSE
	this._front.sound_name  = data.sound_name;

	// 裏オブジェクト中のBGM
	this._back.bgm_name  = data.bgm_back;

	// 裏オブジェクト サードアイに照らされた際のSE
	if (data.sound_back_name) {
		this._back.lighted_sound_name  = data.sound_back_name;
	}

	// サイズ
	if (data.scale) {
		this._scale = data.scale;
	}
	if (data.width) {
		this._width  = data.width;
	}
	if (data.height) {
		this._height = data.height;
	}
};


ObjectAnimeImage.prototype.isCollision = function(point) {
	// サードアイ使用中ならクリックしても調べられないので何もしない
	// 一度既にクリックしていれば、二度目はクリックできない
	return !this.scene.root().isUsingEye() && !this._is_clicked_in_front;
};

// 3rd eye の光と当たり判定する
ObjectAnimeImage.prototype.isCollisionWithLightIn3rdEye = function() {
	return true;
};
// サードアイに照らされたとき(サードアイ使用時)
ObjectAnimeImage.prototype.onCollideWithLightIn3rdEye = function(){
	// 既に裏オブジェクトになっているなら何もしない
	if (this._is_in_back) return;

	// 照らされたときのアニメが設定されてないオブジェクトなら何もしない
	if (!this.ss.hasBackOnLightedAnime()) return;

	// 裏オブジェクトになった
	this._is_in_back = true;

	// 裏オブジェクトになったときの SE 再生
	if (this._back.lighted_sound_name) {
		this.core.playSound(this._back._sound_back_name);
	}

	var ss = this.ss;
	var audio_loader = this.core.audio_loader;
	var back_bgm_name = this._back.bgm_name; // 裏オブジェクト中のBGM

	// 照らされた際の開始アニメーション 再生
	this.ss.playAnimationOnce("lighted_start_anime", function () {
		// 裏オブジェクト中のBGM 再生
		if (back_bgm_name) {
			audio_loader.addBGM(back_bgm_name);
		}
		// 照らしてる最中のアニメーション再生
		ss.playAnimationInfinity("lighting_anime");
	});

};

// サードアイに照らされてないとき(サードアイ使用時)
ObjectAnimeImage.prototype.onNotCollideWithLightIn3rdEye = function(){
	// 裏オブジェクトになってないなら何もしない
	if (!this._is_in_back) return;

	// 照らされたときのアニメが設定されてないオブジェクトなら何もしない
	if (!this.ss.hasBackOnLightedAnime()) return;

	// 表オブジェクトになった
	this._is_in_back = false;

	// 表がクリック済ならクリック済アニメに戻る
	// 表がクリック前ならクリック前アニメに戻る
	var front_anime_name = this._is_clicked_in_front ? "front_after_click_anime" : "front_before_click_anime";

	var ss = this.ss;
	var audio_loader = this.core.audio_loader;
	var back_bgm_name = this._back.bgm_name; // 裏オブジェクト中のBGM

	// 表オブジェクトに戻る際のアニメ再生
	this.ss.playAnimationOnce("lighted_end_anime", function (){
		// 裏オブジェクト中のBGM 止める
		if (back_bgm_name) {
			audio_loader.stopBGM(back_bgm_name);
		}

		// 表オブジェクトのアニメに戻る
		ss.playAnimationInfinity(front_anime_name);
	});
};

ObjectAnimeImage.prototype.beforeDraw = function() {
	base_object.prototype.beforeDraw.apply(this, arguments);

	this.ss.beforeDraw();
};



ObjectAnimeImage.prototype.draw = function(){
	base_object.prototype.draw.apply(this, arguments);

	this.ss.draw();
};

ObjectAnimeImage.prototype.afterDraw = function(){
	base_object.prototype.afterDraw.apply(this, arguments);

	this.ss.afterDraw();
};



ObjectAnimeImage.prototype.collisionWidth = function(){
	if(this._width) return this._width;
	return this.ss.MarginWidth() * this._scale;
};

ObjectAnimeImage.prototype.collisionHeight = function(){
	if(this._height) return this._height;
	return this.ss.MarginHeight() * this._scale;
};

// こいし移動後の処理
ObjectAnimeImage.prototype.onAfterWalkToHere = function() {
	// こいしのアクション
	if (this._action_name) {
		this.scene.root().koishi.actionByObject(this._action_name);
	}

	// 音を再生
	if (this._sound_name) {
		this.core.audio_loader.playSound(this._sound_name);
	}

	// 会話するオブジェクトなので、クリックしたら会話する
	if (this._front.serif) {
		this.scene.root().changeSubScene("talk_with_object", this._front.serif, this);
	}

	if (this.ss.hasFrontClickedAnime()) {
		// クリック中アニメに変更
		var ss = this.ss;
		ss.playAnimationOnce("front_clicking_anime", function (){
			// クリック後アニメに変更
			ss.playAnimationInfinity("front_after_click_anime");
		});
	}

	// クリック済に状態変更
	this._is_clicked_in_front = true;
};

module.exports = ObjectAnimeImage;

},{"../../config/object_anime":4,"../../hakurei":100,"../anime_object":142,"./base":150}],150:[function(require,module,exports){
'use strict';
var base_object = require('../../hakurei').object.base;
var Util = require('../../hakurei').util;

var ObjectBase = function(core) {
	base_object.apply(this, arguments);
};
Util.inherit(ObjectBase, base_object);

ObjectBase.prototype.init = function(){
	base_object.prototype.init.apply(this, arguments);
};

ObjectBase.prototype.onCollision = function(point) {
	if(this.core.input_manager.isLeftClickPush()) {
		this.onCollisionWithClick(point);
	}
	else {
		this.onCollisionWithMouseOver(point);
	}
};

// マウスクリック時のイベント
ObjectBase.prototype.onCollisionWithClick = function(point) {
	var self = this;
	// こいしを移動
	self.scene.root().koishi.setMoveTarget(self, function () {
		// 移動後
		self.onAfterWalkToHere();
	});
};

// マウスオーバー時のイベント
ObjectBase.prototype.onCollisionWithMouseOver = function(point) {
	// 移動不可であればクリックできないので
	// マウスカーソルは変更しない
	if (!this.scene.root().isEnableToMove()) return;

	// マウスカーソルを変更
	this.core.changeCursorImage("ui_icon_pointer_02");
};

// パラメータをオブジェクトに設定する
ObjectBase.prototype.setData = function(data) {
};

// こいし移動後の処理
ObjectBase.prototype.onAfterWalkToHere = function() {
};

// 3rd eye の光と当たり判定する
ObjectBase.prototype.isCollisionWithLightIn3rdEye = function(point) {
	return false;
};
// サードアイに照らされたとき(サードアイ使用時)
ObjectBase.prototype.onCollideWithLightIn3rdEye = function(){
};

// サードアイに照らされてないとき(サードアイ使用時)
ObjectBase.prototype.onNotCollideWithLightIn3rdEye = function(){
};

module.exports = ObjectBase;

},{"../../hakurei":100}],151:[function(require,module,exports){
'use strict';
var base_object = require('./base');
var Util = require('../../hakurei').util;

var ObjectItem = function(core) {
	base_object.apply(this, arguments);

	this._image   = null;
	this._scale   = 1;
	this._width   = null;
	this._height  = null;

	this._item_id = null;
	this.no = null;
};
Util.inherit(ObjectItem, base_object);

ObjectItem.prototype.init = function(){
	base_object.prototype.init.apply(this, arguments);

	this._image   = null;
	this._scale   = 1;
	this._width   = null;
	this._height  = null;

	this._item_id = null;
	this.no = null;
};
ObjectItem.prototype.setData = function(data) {
	// オブジェクトID
	// TODO: 他の piece もオブジェクトIDを使うよ
	this.no = data.no;

	// 画像
	this._image = this.core.image_loader.getImage(data.image);

	// 表示するアイテムID
	this._item_id = data.item_id;

	// 位置
	this.setPosition(data.x, data.y);

	// サイズ
	if (data.scale) {
		this._scale = data.scale;
	}
	if (data.width) {
		this._width  = data.width;
	}
	if (data.height) {
		this._height = data.height;
	}
};

// 移動後の処理
ObjectItem.prototype.onAfterWalkToHere = function() {
	// アイテム獲得 表示シーンへ遷移
	this.scene.root().changeSubScene("got_item", this);
};

ObjectItem.prototype.draw = function(){
	base_object.prototype.draw.apply(this, arguments);

	if (!this.isShow()) return;

	var ctx = this.core.ctx;
	var image = this._image;

	var width = image.width * this._scale;
	var height = image.height * this._scale;

	// 描画
	ctx.save();
	ctx.translate(this.x(), this.y());
	ctx.drawImage(image,
		-width/2,
		-height/2,
		width,
		height
	);
	ctx.restore();
};

ObjectItem.prototype.getItemId = function(){
	return this._item_id;
};

ObjectItem.prototype.deleteFromField = function() {
	this.core.save_manager.setPieceData(
		this.scene.root().getFieldData().key,
		this.no,
		"is_delete",
		true
	);
};

ObjectItem.prototype.isDeleted = function() {
	return this.core.save_manager.getPieceData(
		this.scene.root().getFieldData().key,
		this.no,
		"is_delete"
	);
};

ObjectItem.prototype.isShow = function() {
	return !this.isDeleted();
};

ObjectItem.prototype.isCollision = function() {
	return !this.isDeleted();
};



ObjectItem.prototype.collisionWidth = function(){
	if(this._width) {
		return this._width;
	}
	else {
		return this._image.width * this._scale;
	}
};

ObjectItem.prototype.collisionHeight = function(){
	if(this._height) {
		return this._height;
	}
	else {
		return this._image.height * this._scale;
	}
};
module.exports = ObjectItem;

},{"../../hakurei":100,"./base":150}],152:[function(require,module,exports){
'use strict';
var base_object = require('./base');
var Util = require('../../hakurei').util;

var ObjectJournal = function(core) {
	base_object.apply(this, arguments);

	this._image   = null;
	this._scale   = 1;
	this._width   = null;
	this._height  = null;

	this._picture_name = null;

};
Util.inherit(ObjectJournal, base_object);

ObjectJournal.prototype.init = function(){
	base_object.prototype.init.apply(this, arguments);

	this._image   = null;
	this._scale   = 1;
	this._width   = null;
	this._height  = null;

	this._picture_name = null;
};
ObjectJournal.prototype.setData = function(data) {
	// 画像
	this._image = this.core.image_loader.getImage(data.image);

	// 表示するジャーナル画像
	this._picture_name = data.picture;

	// 位置
	this.setPosition(data.x, data.y);

	// サイズ
	if (data.scale) {
		this._scale = data.scale;
	}
	if (data.width) {
		this._width  = data.width;
	}
	if (data.height) {
		this._height = data.height;
	}
};

// 移動後の処理
ObjectJournal.prototype.onAfterWalkToHere = function() {
	// ジャーナル画像表示シーンへ遷移
	this.scene.root().changeSubScene("journal", this._picture_name);

	// 音を再生
	this.core.audio_loader.playSound("show_journal");
};

ObjectJournal.prototype.draw = function(){
	base_object.prototype.draw.apply(this, arguments);

	var ctx = this.core.ctx;
	var image = this._image;

	var width = image.width * this._scale;
	var height = image.height * this._scale;

	// 背景描画
	ctx.save();
	ctx.translate(this.x(), this.y());
	ctx.drawImage(image,
		-width/2,
		-height/2,
		width,
		height
	);
	ctx.restore();
};



ObjectJournal.prototype.collisionWidth = function(){
	if(this._width) {
		return this._width;
	}
	else {
		return this._image.width * this._scale;
	}
};

ObjectJournal.prototype.collisionHeight = function(){
	if(this._height) {
		return this._height;
	}
	else {
		return this._image.height * this._scale;
	}
};
module.exports = ObjectJournal;

},{"../../hakurei":100,"./base":150}],153:[function(require,module,exports){
'use strict';
var base_object = require('./base');
var Util = require('../../hakurei').util;

var ObjectStaticImage = function(core) {
	base_object.apply(this, arguments);

	this._image = null;
	this._serif = null;
	this._sound_name  = null;
	this._action_name = null;

	this._scale = 1;
	this._width  = null;
	this._height = null;
};
Util.inherit(ObjectStaticImage, base_object);

ObjectStaticImage.prototype.init = function(){
	base_object.prototype.init.apply(this, arguments);

	this._image = null;
	this._serif = null;
	this._sound_name  = null;
	this._action_name = null;

	this._scale = 1;
	this._width  = null;
	this._height = null;
};

// パラメータをオブジェクトに設定する
ObjectStaticImage.prototype.setData = function(data) {
	this.setPosition(data.x, data.y);

	this._image = this.core.image_loader.getImage(data.image);

	// クリックした際のセリフ
	if (data.serif) {
		this._serif = data.serif;
	}

	// クリックした際のSE
	if (data.sound_name) {
		this._sound_name  = data.sound_name;
	}
	// クリックした際のこいしのアクション
	if (data.action_name) {
		this._action_name  = data.action_name;
	}

	if (data.width) {
		this._width  = data.width;
	}
	if (data.height) {
		this._height = data.height;
	}
	if (data.scale) {
		this._scale = data.scale;
	}
};

ObjectStaticImage.prototype.draw = function(){
	base_object.prototype.draw.apply(this, arguments);

	var ctx = this.core.ctx;
	var image = this._image;

	// 背景描画
	ctx.save();
	ctx.translate(this.x(), this.y());
	ctx.drawImage(image,
					-image.width*this._scale/2,
					-image.height*this._scale/2,
					image.width * this._scale,
					image.height * this._scale);
	ctx.restore();
};

ObjectStaticImage.prototype.collisionWidth = function(){
	if(this._width) {
		return this._width;
	}
	else {
		return this._image.width * this._scale;
	}
};

ObjectStaticImage.prototype.collisionHeight = function(){
	if(this._height) {
		return this._height;
	}
	else {
		return this._image.height * this._scale;
	}
};

// こいし移動後の処理
ObjectStaticImage.prototype.onAfterWalkToHere = function() {
	// こいしのアクション
	if (this._action_name) {
		this.scene.root().koishi.actionByObject(this._action_name);
	}

	// 音を再生
	if (this._sound_name) {
		this.core.audio_loader.playSound(this._sound_name);
	}

	// 会話するオブジェクトなので、クリックしたら会話する
	if (this._serif) {
		this.scene.root().changeSubScene("talk_with_object", this._serif, this);
	}
};

module.exports = ObjectStaticImage;

},{"../../hakurei":100,"./base":150}],154:[function(require,module,exports){
'use strict';

var base_object = require('../hakurei').object.base;
var Util = require('../hakurei').util;

var CreateDarkerImage = require("../logic/create_darker_image");

var SsaPlayer = require('../vendor/SsaPlayer');
var SsImageList = SsaPlayer.SsImageList;
var SsAnimation = SsaPlayer.SsAnimation;
var SsSprite = SsaPlayer.SsSprite;

// アニメの index は 0 固定
var DATA_INDEX = 0;

var SsAnimeBase = function(scene) {
	base_object.apply(this, arguments);

	this.current_anime = null;
};
Util.inherit(SsAnimeBase, base_object);

SsAnimeBase.prototype.init = function(){
	base_object.prototype.init.apply(this, arguments);
	this._is_reflect = false;

	this.current_anime = "default";

	var jsonData = this.getJsonData(this.current_anime);
	this.imageList = this._getImageList(jsonData[DATA_INDEX].images);

	this._canvas_width = jsonData[DATA_INDEX].animation.CanvasWidth;
	this._canvas_height = jsonData[DATA_INDEX].animation.CanvasHeight;

	this.animation = new SsAnimation(jsonData[DATA_INDEX].animation, this.imageList);

	this.ss = new SsSprite(this.animation);
};

SsAnimeBase.prototype.changeAnimation = function(name){
	this.current_anime = name;

	var jsonData = this.getJsonData(name);

	this._canvas_width = jsonData[DATA_INDEX].animation.CanvasWidth;
	this._canvas_height = jsonData[DATA_INDEX].animation.CanvasHeight;

	this.animation = new SsAnimation(jsonData[DATA_INDEX].animation, this.imageList);

	this.ss.setAnimation(this.animation);
};

SsAnimeBase.prototype.playAnimationOnce = function(name, _callback){
	var ss = this.ss;
	//var max_loop = ss.getLoop();

	// アニメーション後のコールバック
	if (typeof _callback !== "undefined") {
		var callback = function () {
			ss.setEndCallBack(null);
			// 1 -> 0に戻すと、またアニメが無限ループしちゃうので
			//ss.setLoop(max_loop);
			_callback();
		};

		ss.setEndCallBack(callback);
	}
	this.ss.setLoop(1);
	this.changeAnimation(name);
};

SsAnimeBase.prototype.playAnimationInfinity = function(name){
	this.ss.setLoop(0);
	this.changeAnimation(name);
};

// sprite studio 用の SsImageList 代替オブジェクトを生成
SsAnimeBase.prototype._getImageList = function (imageFiles) {
	var imageList = new SsImageList([], "");

	for (var i = 0; i < imageFiles.length; i++) {
		var image_file_name = imageFiles[i];

		// 拡張子を取り除く
		var image_name_and_ext = image_file_name.split(/(?=\.[^.]+$)/);

		// TODO: prefix に ss_ をつけたほうがいいかも？
		imageList.imagePaths[i] = null;
		imageList.images[i] = this.core.image_loader.getImage(image_name_and_ext[0]);
	}

	return imageList;
};

SsAnimeBase.prototype.setReflect = function(flag){
	this._is_reflect = flag;
};
SsAnimeBase.prototype.getJsonData = function(name) {
	var map = this.jsonAnimeMap();

	if(!map[name]) throw new Error(name + " anime doesn't exists");

	return map[name];
};

SsAnimeBase.prototype.beforeDraw = function(){
	base_object.prototype.beforeDraw.apply(this, arguments);

	// update ss state
	this.ss.rootScaleX = this.scaleWidth();
	this.ss.rootScaleY = this.scaleHeight();
	this.ss.x = this._canvas_width  /2;
	this.ss.y = this._canvas_height /2;
};

// 画面更新
SsAnimeBase.prototype.draw = function(){
	base_object.prototype.draw.apply(this, arguments);
	if (!this.isShow()) return;
	var ctx = this.core.ctx;

	// TODO: メモリキャッシュ
	// create canvas
	var canvas = document.createElement('canvas');
	canvas.width  = this._canvas_width;
	canvas.height = this._canvas_height;
	var ctx2 = canvas.getContext('2d');
	// TODO: frame_count に合わせて描画
	var t = new Date().getTime();
	this.ss.draw(ctx2, t);

	// 暗くする
	if (this.darker()) {
		canvas = CreateDarkerImage.exec(canvas, this.darker());
	}


	// draw
	ctx.save();
	ctx.translate(this.x(), this.y());
	if (this.isReflect()) {
		ctx.transform(-1, 0, 0, 1, 0, 0);
	}
	ctx.drawImage(canvas, -this._canvas_width/2, -this._canvas_height/2);

	ctx.restore();
};

SsAnimeBase.prototype.isShow = function(){
	return true;
};
SsAnimeBase.prototype.isReflect = function(){
	return this._is_reflect;
};

SsAnimeBase.prototype.darker = function() {
	return 0.0;
};
SsAnimeBase.prototype.jsonAnimeMap = function() {
	return {};
};

SsAnimeBase.prototype.scaleWidth = function(){
	return 1;
};
SsAnimeBase.prototype.scaleHeight = function(){
	return 1;
};

module.exports = SsAnimeBase;

},{"../hakurei":100,"../logic/create_darker_image":140,"../vendor/SsaPlayer":178}],155:[function(require,module,exports){
'use strict';
var base_object = require('../../hakurei').object.sprite;
var Util = require('../../hakurei').util;
var CONSTANT = require('../../constant');

var ObjectEye = function(core) {
	base_object.apply(this, arguments);
};
Util.inherit(ObjectEye, base_object);

ObjectEye.prototype.init = function(){
	base_object.prototype.init.apply(this, arguments);
	this.setPosition();
};


ObjectEye.prototype.isShow = function(){
	// play scene のみ 3rd eye アイコンを表示
	return this.scene.current_scene === "play" ? true : false;
};

ObjectEye.prototype.onCollision = function(obj){
	if (this.scene.isUsingEye()) {
		// サードアイOff
		this.scene.switchEyeOff();
	}
	else {
		// サードアイOn
		this.scene.switchEyeOn();
	}
};

// クリックしてるときしか onCollision を呼ばない
ObjectEye.prototype.isCollision = function() {
	return this.core.input_manager.isLeftClickPush() ? true : false;
};

ObjectEye.prototype.setPosition = function(){
	this.x(1320 * 2/3);
	this.y(980 * 2/3);

};

ObjectEye.prototype.collisionWidth = function(){
	return 150;
};

ObjectEye.prototype.collisionHeight = function(){
	return 100;
};

ObjectEye.prototype.spriteName = function(){
	var gauge = this.scene.koishi.get3rdeyeGauge();

	if (gauge > CONSTANT.MAX_3RDEYE_GAUGE * 3 / 4) {
		return "eye1";
	}
	else if (gauge > CONSTANT.MAX_3RDEYE_GAUGE * 2 / 4) {
		return "eye2";
	}
	else if (gauge > CONSTANT.MAX_3RDEYE_GAUGE * 1 / 4) {
		return "eye3";
	}
	else if (gauge > CONSTANT.MAX_3RDEYE_GAUGE * 0 / 4) {
		return "eye4";
	}
	else {
		// NOTE: ゲームオーバーなのでここにはこないはず
		return "eye4";
	}
};
ObjectEye.prototype.spriteIndices = function(){
	return [{x: 0, y: 0}];
};
ObjectEye.prototype.spriteWidth = function(){
	return 227;
};
ObjectEye.prototype.spriteHeight = function(){
	return 180;
};
ObjectEye.prototype.scaleHeight = function(){
	return 2/3;
};
ObjectEye.prototype.scaleWidth = function(){
	return 2/3;
};
module.exports = ObjectEye;

},{"../../constant":5,"../../hakurei":100}],156:[function(require,module,exports){
'use strict';
var base_object = require('../../hakurei').object.sprite;
var Util = require('../../hakurei').util;
var CONSTANT = require('../../constant');


var ObjectItemMenuButton = function(core) {
	base_object.apply(this, arguments);
};
Util.inherit(ObjectItemMenuButton, base_object);

ObjectItemMenuButton.prototype.init = function(){
	base_object.prototype.init.apply(this, arguments);
	this.setPosition();
};

ObjectItemMenuButton.prototype.isShow = function(){
	// play or menu scene のみ メニューアイコンを表示
	return(
		this.scene.current_scene === "play" ||
		this.scene.current_scene === "menu" ||
		this.scene.current_scene === "got_item" ?
		true : false
	);
};




ObjectItemMenuButton.prototype.setPosition = function(){
	this.x(120 * 2/3);
	this.y(980 * 2/3);
};

ObjectItemMenuButton.prototype.onCollision = function(obj){
	this.core.audio_loader.playSound("open_menu");

	var scene_name = this.scene.current_scene;
	if (scene_name === "play") {
		// メニューを開く
		this.scene.changeSubScene("menu");
	}
	else if (scene_name === "menu") {
		// メニューを閉じる
		this.scene.changeSubScene("play");
	}
	else {
		// それ以外のサブシーンならなにもしない
	}
};

// クリックしてるときしか onCollision を呼ばない
ObjectItemMenuButton.prototype.isCollision = function() {
	return this.core.input_manager.isLeftClickPush() ? true : false;
};

ObjectItemMenuButton.prototype.collisionWidth = function(){
	return 128;
};

ObjectItemMenuButton.prototype.collisionHeight = function(){
	return 128;
};

ObjectItemMenuButton.prototype.spriteName = function(){
	return "tool";
};
ObjectItemMenuButton.prototype.spriteIndices = function(){
	return [{x: 0, y: 0}];
};
ObjectItemMenuButton.prototype.spriteWidth = function(){
	return 260;
};
ObjectItemMenuButton.prototype.spriteHeight = function(){
	return 180;
};
ObjectItemMenuButton.prototype.scaleHeight = function(){
	return 2/3;
};
ObjectItemMenuButton.prototype.scaleWidth = function(){
	return 2/3;
};
module.exports = ObjectItemMenuButton;

},{"../../constant":5,"../../hakurei":100}],157:[function(require,module,exports){
'use strict';
var base_object = require('./next_field_button_base');
var Util = require('../../hakurei').util;

var ObjectLeftNextFieldButton = function(core) {
	base_object.apply(this, arguments);
};
Util.inherit(ObjectLeftNextFieldButton, base_object);


ObjectLeftNextFieldButton.prototype.nextFieldName = function() {
	var field_data = this.scene.getFieldData();
	return field_data.left_field;
};

ObjectLeftNextFieldButton.prototype.setPosition = function(){
	this.x(48);
	this.y(this.scene.height/2);
};

ObjectLeftNextFieldButton.prototype.rotateAdjust = function(){
	return 180;
};


module.exports = ObjectLeftNextFieldButton;

},{"../../hakurei":100,"./next_field_button_base":158}],158:[function(require,module,exports){
'use strict';
var base_object = require('../../hakurei').object.sprite;
var Util = require('../../hakurei').util;
var CONSTANT = require('../../constant');




var ObjectNextFieldButtonBase = function(core) {
	base_object.apply(this, arguments);
};
Util.inherit(ObjectNextFieldButtonBase, base_object);

ObjectNextFieldButtonBase.prototype.init = function(){
	base_object.prototype.init.apply(this, arguments);
	this.setPosition();
};

ObjectNextFieldButtonBase.prototype.onCollision = function(obj){
	var field_data = this.scene.getFieldData();
	var current_field_name = field_data.key;
	var next_field_name = this.nextFieldName();

	// chapter 0 の自室であれば遷移前／遷移先の際に、ドアを開ける音を鳴らす
	if (current_field_name === "chapter0_myroom" || next_field_name === "chapter0_myroom") {
		this.core.audio_loader.playSound("chapter0-myroom-door_open");
	}

	/*
	 * TODO:
	// 屋敷の廊下2はイベント再生する
	if (this.scene.mainStage().field().left_field === "chapter0_mansion_corridor2" &&
		!this.core.save_manager.isPlayedEvent("chapter0-event-encounter_satori")) {
		this.core.changeScene("event_for_encounter_satori");
	}
	// 通常の遷移
	else {
		this.core.changeScene("stage", this.scene.mainStage().field().left_field, true);
	}
	*/
	this.core.changeScene("stage", next_field_name, current_field_name);
};

ObjectNextFieldButtonBase.prototype.isShow = function() {
	return this.nextFieldName() ? true : false;
};

// クリックしてるときしか onCollision を呼ばない
ObjectNextFieldButtonBase.prototype.isCollision = function() {
	return this.nextFieldName() && this.core.input_manager.isLeftClickPush() ? true : false;
};



ObjectNextFieldButtonBase.prototype.setPosition = function(){
	throw new Error("setPosition method must be implemented");
};

ObjectNextFieldButtonBase.prototype.nextFieldName = function(){
	throw new Error("nextFieldName method must be implemented");
};

ObjectNextFieldButtonBase.prototype.collisionWidth = function(){
	return 128;
};

ObjectNextFieldButtonBase.prototype.collisionHeight = function(){
	return 128;
};

ObjectNextFieldButtonBase.prototype.spriteName = function(){
	return "arrow";
};
ObjectNextFieldButtonBase.prototype.spriteIndices = function(){
	return [{x: 0, y: 0}];
};
ObjectNextFieldButtonBase.prototype.spriteWidth = function(){
	return 136;
};
ObjectNextFieldButtonBase.prototype.spriteHeight = function(){
	return 124;
};
ObjectNextFieldButtonBase.prototype.scaleHeight = function(){
	return 2/3;
};
ObjectNextFieldButtonBase.prototype.scaleWidth = function(){
	return 2/3;
};

module.exports = ObjectNextFieldButtonBase;

},{"../../constant":5,"../../hakurei":100}],159:[function(require,module,exports){
'use strict';
var base_object = require('./next_field_button_base');
var Util = require('../../hakurei').util;

var ObjectRightNextFieldButton = function(core) {
	base_object.apply(this, arguments);
};
Util.inherit(ObjectRightNextFieldButton, base_object);


ObjectRightNextFieldButton.prototype.nextFieldName = function() {
	var field_data = this.scene.getFieldData();
	return field_data.right_field;
};

ObjectRightNextFieldButton.prototype.setPosition = function(){
	this.x(this.scene.width - 48);
	this.y(this.scene.height/2);
};

module.exports = ObjectRightNextFieldButton;

},{"../../hakurei":100,"./next_field_button_base":158}],160:[function(require,module,exports){
'use strict';

// セーブデータ
var base_class = require('./hakurei').storage.save;
var util = require('./hakurei').util;
var CONSTANT = require('./constant');

var SaveManager = function(scene) {
	base_class.apply(this, arguments);
};
util.inherit(SaveManager, base_class);

// 取得しているアイテム一覧を取得
SaveManager.prototype.getItemList = function() {
	var list = this.get("item_list");

	if(!list) list = [];

	return list;
};

// 取得しているアイテム一覧を取得
SaveManager.prototype.getItem = function(index){
	var list = this.getItemList();

	return list[index];
};

// アイテムを追加(追加したアイテムのindexを返す)
SaveManager.prototype.addItem = function(item_id){
	var list = this.getItemList();

	list.push(item_id);
	this.set("item_list", list);
	return list.length - 1;
};
// アイテムを削除
SaveManager.prototype.deleteItem = function(target_item_id) {
	var list = this.getItemList();

	for (var i = 0, len = list.length; i < len; i++) {
		var item_id = list[i];

		if (item_id === target_item_id) {
			list.splice(i, 1);
			break;
		}
	}

	this.set("item_list", list);
};




SaveManager.prototype.getPieceDataMap = function() {
	var map = this.get("piece_data_map");

	if(!map) map = {};

	return map;
};

SaveManager.prototype.getPieceData = function(field_name, piece_no, key) {
	var map = this.getPieceDataMap();

	var data = map[field_name + "_" + piece_no];

	if(!data) data = {};

	return data[key];
};

SaveManager.prototype.setPieceData = function(field_name, piece_no, key, value) {
	var map = this.getPieceDataMap();

	var data = map[field_name + "_" + piece_no];

	if(!data) data = {};

	data[key] = value;
	map[field_name + "_" + piece_no] = data;

	this.set("piece_data_map", map);
};

// 3rd eye ゲージの取得
SaveManager.prototype.get3rdeyeGauge = function(){
	var gauge;
	if (this.exists("3rdeye_gauge")) {
		gauge = this.get("3rdeye_gauge");
	}
	else {
		gauge = CONSTANT.MAX_3RDEYE_GAUGE;
	}

	return gauge;
};
// 3rd eye ゲージの上昇
SaveManager.prototype.gain3rdeyeGauge = function(num){
	var gauge = this.get3rdeyeGauge();

	gauge += num;

	if (gauge > CONSTANT.MAX_3RDEYE_GAUGE) {
		gauge = CONSTANT.MAX_3RDEYE_GAUGE;
	}

	this.set("3rdeye_gauge", gauge);
};

// 3rd eye ゲージの消費
SaveManager.prototype.reduce3rdeyeGauge = function(num){
	var gauge = this.get3rdeyeGauge();

	gauge -= num;

	if (gauge < 0) {
		gauge = 0;
	}

	this.set("3rdeye_gauge", gauge);
};



// 現在のフィールドを取得
SaveManager.prototype.getCurrentField = function() {
	var field_name = this.get("current_field");

	return field_name;
};
// 現在のフィールドを設定
SaveManager.prototype.setCurrentField = function(field_name) {
	this.set("current_field", field_name);
};

// イベントを再生済か取得
SaveManager.prototype.isPlayedEvent = function(event_name) {
	var played_event_map = this.get("played_event_map");

	if(!played_event_map) return false;

	return played_event_map[event_name] ? true : false;
};
// イベントを再生済に設定
SaveManager.prototype.setPlayedEvent = function(event_name) {
	var played_event_map = this.get("played_event_map");

	if(!played_event_map) {
		played_event_map = {};
	}

	played_event_map[event_name] = true;

	this.set("played_event_map", played_event_map);
};

module.exports = SaveManager;

},{"./constant":5,"./hakurei":100}],161:[function(require,module,exports){
'use strict';

var base_scene = require('../../hakurei').scene.base;
var SS = require('../../object/anime_object');
var Util = require('../../hakurei').util;

var SceneEventBase = function(core) {
	base_scene.apply(this, arguments);

	this.ss = null;
	if (this.backgroundSsAnime()) {
		this.ss = new SS(this.root());
	}
};
Util.inherit(SceneEventBase, base_scene);

SceneEventBase.prototype.init = function(){
	base_scene.prototype.init.apply(this, arguments);

	if (this.isFadeIn()) {
		// フェードインする
		this.setFadeIn(120, "black");
	}
	if (this.isFadeOut()) {
		// イベント再生後はフェードアウトする
		this.setFadeOut(120, "black");
	}
	if (this.isStopBGM()) {
		this.core.audio_loader.stopBGM();
	}

	if (this.ss) {
		// アニメの位置指定
		this.ss.x(this.width/2);
		this.ss.y(this.height/2);

		this.ss.setAnime({
			default: this.backgroundSsAnime(),
		});
		this.ss.init();
		var afterBackgroundSsAnimeFunction = this.afterBackgroundSsAnimeFunction();
		var core = this.core;
		this.ss.playAnimationOnce("default", function () {
			afterBackgroundSsAnimeFunction(core);
		});
	}

};
SceneEventBase.prototype.beforeDraw = function(){
	base_scene.prototype.beforeDraw.apply(this, arguments);

	if (this.ss) {
		this.ss.beforeDraw();
	}

	// スクリプト実行
	var script_map = this.scriptMap();
	var script_list = script_map[this.frame_count];

	if(script_list) {
		for (var i = 0, len = script_list.length; i < len; i++) {
			var script = script_list[i];
			var command = script.command;
			var argument_list = script.argument_list;

			// 命令実行
			if (command === "change_scene") { // シーン遷移
				this.core.changeScene.apply(this.core, argument_list);
			}
			else if (command === "play_sound") { // SE 再生
				this.core.audio_loader.playSound.apply(this.core.audio_loader, argument_list);
			}
			else {
				throw new Error("Unrecognized command: " + command);
			}
		}
	}
};

// 画面更新
SceneEventBase.prototype.draw = function(){
	base_scene.prototype.draw.apply(this, arguments);

	if (this.ss) {
		this.ss.draw();
	}


	var ctx = this.core.ctx;

	// 背景表示
	if (this.background()) {
		ctx.save();

		var background = this.core.image_loader.getImage(this.background());

		ctx.drawImage(background,
			0,
			0,
			background.width,
			background.height,
			0,
			0,
			this.width,
			this.height
		);

		ctx.restore();
	}

};
SceneEventBase.prototype.afterDraw = function(){
	base_scene.prototype.afterDraw.apply(this, arguments);

	if (this.ss) {
		this.ss.afterDraw();
	}
};



SceneEventBase.prototype.isFadeIn = function(){
	return false;
};
SceneEventBase.prototype.isFadeOut = function(){
	return false;
};
// イベント開始時にBGMを止めるかどうか
SceneEventBase.prototype.isStopBGM = function(){
	return false;
};


// 背景画像名
SceneEventBase.prototype.background = function(){
	return null;
};
// 背景用SSアニメ
SceneEventBase.prototype.backgroundSsAnime = function(){
	return null;
};
// 背景用SSアニメ再生後のcallback
SceneEventBase.prototype.afterBackgroundSsAnimeFunction = function(){
	return function (core) {};
};

// TODO: クリックで進行に備えて以下のフォーマットに変更したい
/*
	[
		{
			frame_count: 240, // 前のコマンド遷移から何フレーム経ったか
			is_click_to_next: false,
			command: "change_scene",
			argument_list: ["title"],
		},
		{
			frame_count: null,
			is_click_to_next: true,
			command: "change_scene",
			argument_list: ["title"],
		},

	]

/*
	// format
	{
		240: [
			{
				command: "change_scene",
				argument_list: ["title"],
			},
		]
	};
*/
SceneEventBase.prototype.scriptMap = function(){
	return {};
};

module.exports = SceneEventBase;

},{"../../hakurei":100,"../../object/anime_object":142}],162:[function(require,module,exports){
'use strict';

var base_scene = require('../../../hakurei').scene.base;

var Util = require('../../../hakurei').util;

var SceneDefault = function(core) {
	base_scene.apply(this, arguments);

};
Util.inherit(SceneDefault, base_scene);

module.exports = SceneDefault;

},{"../../../hakurei":100}],163:[function(require,module,exports){
arguments[4][162][0].apply(exports,arguments)
},{"../../../hakurei":100,"dup":162}],164:[function(require,module,exports){
'use strict';

// chapter0 最終イベント
// こいしがカーペットから飛び降りる

var base_scene = require('../base');
var Util = require('../../../hakurei').util;

// カーペットから飛び降りるアニメ
var jsonDataOfEvent = require('../../../data/anime/chapter0/event/falldown_koishi/event01_anime_1');

var SceneDefault = function(core) {
	base_scene.apply(this, arguments);

};
Util.inherit(SceneDefault, base_scene);


var SceneEvent = function(core) {
	base_scene.apply(this, arguments);
};
Util.inherit(SceneEvent, base_scene);

SceneDefault.prototype.isFadeIn = function(){
	return true;
};
SceneDefault.prototype.isFadeOut = function(){
	return true;
};
SceneDefault.prototype.isStopBGM = function(){
	return true;
};

SceneDefault.prototype.backgroundSsAnime = function(){
	return jsonDataOfEvent;
};

SceneDefault.prototype.afterBackgroundSsAnimeFunction = function(){
	return function (core) {
		core.changeScene("event_for_trial_last");

		core.audio_loader.fadeOutBGM(2);
	};
};


SceneDefault.prototype.scriptMap = function(){
	return {
		25: [
			{
				command: "play_sound",
				argument_list: ["chapter0-mansion_corridor3-open_and_falldown"],
			},
		]
	};
};

module.exports = SceneDefault;

},{"../../../data/anime/chapter0/event/falldown_koishi/event01_anime_1":8,"../../../hakurei":100,"../base":161}],165:[function(require,module,exports){
'use strict';

var base_scene = require('./base');

var Util = require('../../hakurei').util;

var SceneEventTrialLast = function(core) {
	base_scene.apply(this, arguments);

};
Util.inherit(SceneEventTrialLast, base_scene);

SceneEventTrialLast.prototype.isFadeIn = function(){
	return true;
};
SceneEventTrialLast.prototype.isFadeOut = function(){
	return true;
};

SceneEventTrialLast.prototype.background = function(){
	return "tobecontinued";
};

SceneEventTrialLast.prototype.scriptMap = function(){
	return {
		240: [
			{
				command: "change_scene",
				argument_list: ["title"],
			},
		]
	};
};




module.exports = SceneEventTrialLast;

},{"../../hakurei":100,"./base":161}],166:[function(require,module,exports){
'use strict';

var base_scene = require('../hakurei').scene.base;

var Util = require('../hakurei').util;
var CONSTANT = require('../constant');

var HOWTO_IMAGE_RATIO = 3/4;

var SceneHowto = function(core) {
	base_scene.apply(this, arguments);

};
Util.inherit(SceneHowto, base_scene);

SceneHowto.prototype.init = function(){
	base_scene.prototype.init.apply(this, arguments);

	// フェードインする
	this.setFadeIn(60, "black");

	// イベント再生後はフェードアウトする
	this.setFadeOut(60, "black");
};


SceneHowto.prototype.beforeDraw = function(){
	base_scene.prototype.beforeDraw.apply(this, arguments);

	if(this.core.input_manager.isLeftClickPush()) {
		this.core.audio_loader.playSound("show_journal");
		this.core.changeScene("stage", "chapter0_myroom");
	}
};

// 画面更新
SceneHowto.prototype.draw = function(){
	base_scene.prototype.draw.apply(this, arguments);
	var ctx = this.core.ctx;

	ctx.save();
	ctx.fillStyle = 'black';
	ctx.fillRect(0, 0, this.width, this.height);
	ctx.restore();

	ctx.save();

	var howto = this.core.image_loader.getImage("howto");

	ctx.translate(this.width/2, this.height/2);
	ctx.drawImage(howto,
		-howto.width*HOWTO_IMAGE_RATIO/2,
		-howto.height*HOWTO_IMAGE_RATIO/2,
		howto.width*HOWTO_IMAGE_RATIO,
		howto.height*HOWTO_IMAGE_RATIO);

	ctx.restore();
};
module.exports = SceneHowto;

},{"../constant":5,"../hakurei":100}],167:[function(require,module,exports){
'use strict';

// ローディングシーン

var base_scene = require('../hakurei').scene.base;
var Util = require('../hakurei').util;
var AssetsConfig = require('../config/assets');
var CONSTANT = require('../constant');

var SceneLoading = function(core) {
	base_scene.apply(this, arguments);
};
Util.inherit(SceneLoading, base_scene);

SceneLoading.prototype.init = function() {
	base_scene.prototype.init.apply(this, arguments);

	// ゲームで使用する画像一覧
	for (var key in AssetsConfig.images) {
		var image_conf = AssetsConfig.images[key];
		if (typeof image_conf === "string") {
			this.core.image_loader.loadImage(key, image_conf);
		}
		else {
			this.core.image_loader.loadImage(key, image_conf.image, image_conf.scale_width, image_conf.scale_height);
		}
	}

	// ゲームで使用するSE一覧
	for (var key2 in AssetsConfig.sounds) {
		var conf2 = AssetsConfig.sounds[key2];

		// デバッグ用ミュート
		var volume2 = CONSTANT.DEBUG.SOUND_OFF ? 0 : conf2.volume;

		this.core.audio_loader.loadSound(key2, conf2.path, volume2);
	}

	// ゲームで使用するBGM一覧
	for (var key3 in AssetsConfig.bgms) {
		var conf3 = AssetsConfig.bgms[key3];
		// デバッグ用ミュート
		var volume3 = CONSTANT.DEBUG.SOUND_OFF ? 0 : conf3.volume;

		this.core.audio_loader.loadBGM(key3, conf3.path, volume3, conf3.loopStart, conf3.loopEnd);
	}
};

SceneLoading.prototype.beforeDraw = function() {
	base_scene.prototype.beforeDraw.apply(this, arguments);

	if (this.core.image_loader.isAllLoaded() && this.core.audio_loader.isAllLoaded() && this.core.font_loader.isAllLoaded()) {
		if (CONSTANT.DEBUG.START_SCENE) {
			// デバッグ用
			this.core.changeScene.apply(this.core, CONSTANT.DEBUG.START_SCENE);
		}
		else {
			// 本番
			this.core.changeScene("title");
		}
	}
};
SceneLoading.prototype.draw = function(){
	base_scene.prototype.draw.apply(this, arguments);
	var ctx = this.core.ctx;

	// 背景
	ctx.save();
	ctx.fillStyle = 'black';
	ctx.fillRect(0, 0, this.core.width, this.core.height);
	ctx.restore();

	// メッセージ
	var per_frame = this.frame_count % 60;
	var DOT_SPAN = 15;

	var dot = "";
	if (DOT_SPAN > per_frame && per_frame >= 0) {
		dot = "";
	}
	else if (DOT_SPAN*2 > per_frame && per_frame >= DOT_SPAN*1) {
		dot = ".";
	}
	else if (DOT_SPAN*3 > per_frame && per_frame >= DOT_SPAN*2) {
		dot = "..";
	}
	else {
		dot = "...";
	}

	ctx.save();
	ctx.fillStyle = "white";
	ctx.textAlign = 'left';
	ctx.font = "30px 'OradanoGSRR'";
	ctx.fillText('Now Loading' + dot, this.core.width - 250, this.core.height - 50);
	ctx.restore();


	// プログレスバー
	ctx.save();
	ctx.fillStyle = "white";
	ctx.fillRect(0, this.core.height - 20, this.core.width * this.progress(), 50);
	ctx.restore();
};


SceneLoading.prototype.progress = function(){
	var progress = (this.core.audio_loader.progress() + this.core.image_loader.progress() + this.core.font_loader.progress()) / 3;
	return progress;
};

module.exports = SceneLoading;

},{"../config/assets":1,"../constant":5,"../hakurei":100}],168:[function(require,module,exports){
'use strict';

var base_scene = require('../hakurei').scene.base;
var Util = require('../hakurei').util;

var CONSTANT = require('../constant');

var SceneSubStagePlay = require('./substage/play'); // ゲーム操作可能
var SceneSubStageTalkWithObject = require('./substage/talk_with_object'); // こいし会話中
var SceneSubStageMenu = require('./substage/menu'); // アイテムメニュー
var SceneSubStageJournal = require('./substage/journal'); // ジャーナル表示
var SceneSubStageGotItem = require('./substage/got_item'); // アイテム獲得
var SceneSubStagePictureUseEyedrops = require('./substage/picture_use_eyedrops'); // 目薬使用1枚絵
var SceneSubStageChapter0BeforeGetHat = require('./substage/chapter0_before_get_hat');

var RightNextFieldButton = require('../object/ui/right_next_field_button');
var LeftNextFieldButton = require('../object/ui/left_next_field_button');
var ItemMenuButton = require('../object/ui/item_menu_button');
var EyeButton = require('../object/ui/eye_button');

// 3rd eye の光
var Light3rdeye = require('../object/light_3rdeye');

var BlackMist = require('../object/black_mist');

var Koishi = require('../object/koishi');

var ObjectStaticImage = require('../object/pieces/static_image');
var ObjectAnimeImage = require('../object/pieces/anime_image');
var ObjectJournal = require('../object/pieces/journal');
var ObjectAnimeEventImage = require('../object/pieces/anime_event_image');
var ObjectItem = require('../object/pieces/item');

var FieldMap = require('../config/field');

var SceneStage = function(core) {
	base_scene.apply(this, arguments);

	// ステージ上のオブジェクト一覧
	// TODO: 管理がしんどくなってきたら、piece_manager を用意する
	this.pieces = [];

	// 自機
	this.koishi = new Koishi(this);

	// 3rd eye の光
	this.light_3rdeye = new Light3rdeye(this);

	// UI パーツ
	this.right_next_field_button = new RightNextFieldButton(this);
	this.left_next_field_button  = new LeftNextFieldButton(this);
	this.item_menu_button        = new ItemMenuButton(this);
	this.eye_button              = new EyeButton(this);

	// 画面の枠
	this.black_mist = new BlackMist(this);

	// 3rd eye 使用中か否か
	this._is_using_eye = false;


	// 通常
	this.addSubScene("play", new SceneSubStagePlay(core));
	// 会話中
	this.addSubScene("talk_with_object", new SceneSubStageTalkWithObject(core));
	// アイテムメニュー
	this.addSubScene("menu", new SceneSubStageMenu(core));
	// ジャーナルを読む
	this.addSubScene("journal", new SceneSubStageJournal(core));
	// アイテム獲得
	this.addSubScene("got_item", new SceneSubStageGotItem(core));
	// 目薬使用 1枚絵
	this.addSubScene("picture_use_eyedrops", new SceneSubStagePictureUseEyedrops(core));

	// chapter0 帽子を取る前
	this.addSubScene("chapter0_before_get_hat", new SceneSubStageChapter0BeforeGetHat(core));
};
Util.inherit(SceneStage, base_scene);

SceneStage.prototype.init = function(field_name, from_field_name){
	base_scene.prototype.init.apply(this, arguments);

	from_field_name = from_field_name || null; // undefined -> null に変換

	// 現在のフィールド
	this.core.save_manager.setCurrentField(field_name);
	this.core.save_manager.save();

	// フィールドの情報
	var field_data = this.getFieldData();

	// ステージ上のオブジェクト一覧
	this._setupPieces();

	// 自機
	this.koishi.init();

	// 3rd eye の光
	this.light_3rdeye.init();

	// UI パーツ
	this.right_next_field_button.init();
	this.left_next_field_button.init();
	this.item_menu_button.init();
	this.eye_button.init();

	// 画面の枠
	this.black_mist.init();

	// 3rd eye 使用中か否か
	this._is_using_eye = false;

	// フィールド開始時のこいしの初期位置の決定
	var pos;
	if (!from_field_name || field_data.left_field === from_field_name) {
		// 左のフィールドからきた場合
		pos = field_data.left_start_position;
		this.koishi.setPosition(pos.x, pos.y);
	}
	else if (field_data.right_field === from_field_name) {
		// 右のフィールドからきた場合
		pos = field_data.right_start_position;
		this.koishi.setPosition(pos.x, pos.y);
		this.koishi.setReflect(true);
	}
	else {
		// あり得ない想定
		throw new Error("illegal field data.");
	}

	// BGM 止める
	if(!this.core.audio_loader.isPlayingBGM(field_data.bgm)) {
		// 今流れているBGMを止める
		this.core.audio_loader.stopBGM();
		// 指定フレーム数からBGM再生
		this.setWaitToStartBGM(field_data.bgm, 60);

	}

	// フィールド移動時にフェードイン／アウトする
	this.setFadeIn(30,  "black");
	this.setFadeOut(30, "black");


	this.changeSubScene("play");
};

SceneStage.prototype.isUsingEye = function() {
	return this._is_using_eye;
};

SceneStage.prototype.switchEyeOn = function() {
	this._is_using_eye = true;

	// SE 再生
	this.core.audio_loader.playSound("use_3rdeye");

	// BGM 変更
	this.core.audio_loader.muteAllBGM();
	this.core.audio_loader.addBGM("using_3rdeye");

	this.koishi.useEye();
};
SceneStage.prototype.switchEyeOff = function() {
	this._is_using_eye = false;

	// BGM を通常に戻す
	this.core.audio_loader.stopBGM("using_3rdeye");
	this.core.audio_loader.unMuteWithFadeInAllBGM(3); // N秒かけてフェードイン

	this.koishi.unUseEye();
};

SceneStage.prototype.beforeDraw = function() {
	var field_data = this.getFieldData();

	// chapter 0 で3rd eye を使用していないときのみ
	// ランダムノイズ再生
	// N秒ごとにN%の確率で再生
	if (field_data.chapter === 0 && !this.isUsingEye()) {
		if(this.core.frame_count % CONSTANT.CHAPTER0.NOISE_SOUND_INTERVAL_COUNT === 0) {
			if (Util.getRandomInt(100) <= CONSTANT.CHAPTER0.NOISE_SOUND_PROB) {
				var sound_name = CONSTANT.CHAPTER0.NOISE_SOUND_LIST[ Util.getRandomInt(0, CONSTANT.CHAPTER0.NOISE_SOUND_LIST.length - 1) ];
				this.core.audio_loader.playSound(sound_name);
			}
		}
	}

	// 左クリック位置を出力
	if (CONSTANT.DEBUG.ON) {
		if(this.core.input_manager.isLeftClickPush()) {
			var x = this.core.input_manager.mousePositionX();
			var y = this.core.input_manager.mousePositionY();

			console.log("x: " + x + ", y: " + y);
		}
	}

	// ステージ上のオブジェクト一覧
	for (var i = 0, len = this.pieces.length; i < len; i++) {
		this.pieces[i].beforeDraw();
	}
	// 自機
	this.koishi.beforeDraw();
	// 3rd eye の光
	if (this.isUsingEye()) {
		this.light_3rdeye.beforeDraw();
	}
	// UI パーツ
	this.right_next_field_button.beforeDraw();
	this.left_next_field_button.beforeDraw();
	this.item_menu_button.beforeDraw();
	this.eye_button.beforeDraw();

	// 画面の枠
	this.black_mist.beforeDraw();

	// サブシーン
	base_scene.prototype.beforeDraw.apply(this, arguments);
};

// 画面更新
SceneStage.prototype.draw = function(){
	var field_data = this.getFieldData();
	var ctx = this.core.ctx;

	// 背景描画
	var bg = this.core.image_loader.getImage(field_data.background);
	ctx.save();
	ctx.drawImage(bg,
		0,
		0,
		bg.width,
		bg.height,
		0,
		0,
		this.width,
		this.height
	);
	ctx.restore();

	// ステージ上のオブジェクト一覧
	for (var i = 0, len = this.pieces.length; i < len; i++) {
		this.pieces[i].draw();
	}
	// 自機
	this.koishi.draw();

	// 3rd eye の光
	if (this.isUsingEye()) {
		this.light_3rdeye.draw();
	}

	// UI パーツ
	this.right_next_field_button.draw();
	this.left_next_field_button.draw();
	this.item_menu_button.draw();
	this.eye_button.draw();

	// 画面の枠
	this.black_mist.draw();

	// サブシーン描画
	base_scene.prototype.draw.apply(this, arguments);
};

// 移動可能かどうか
SceneStage.prototype.isEnableToMove = function(){
	// こいし移動中は、再度移動先を設定できない
	return this.koishi.isMoving() ? false : true;
};




SceneStage.prototype.getFieldData = function(){
	return FieldMap[this.core.save_manager.getCurrentField()];
};

SceneStage.prototype._setupPieces = function() {
	var field_data = this.getFieldData();

	this.pieces = [];

	var object_data_list = field_data.objects;

	for (var i = 0, len = object_data_list.length; i < len; i++) {
		var data = object_data_list[i];
		var object;
		if (data.type === CONSTANT.STATIC_IMAGE_TYPE) { // 静止オブジェクト
			object = new ObjectStaticImage(this);
		}
		else if (data.type === CONSTANT.ANIME_IMAGE_TYPE) { // サードアイを当てると動くオブジェクト
			object = new ObjectAnimeImage(this);
		}
		else if (data.type === CONSTANT.JOURNAL_TYPE) { // ジャーナル
			object = new ObjectJournal(this);
		}
		else if (data.type === CONSTANT.ANIME_EVENT_IMAGE_TYPE) { // イベント発生オブジェクト
			object = new ObjectAnimeEventImage(this);
		}
		else if (data.type === CONSTANT.ITEM_TYPE) { // アイテム
			object = new ObjectItem(this);
		}

		else {
			throw new Error ("Unknown object type error: " + data.type);
		}
		object.init();
		object.setData(data);
		this.pieces.push(object);
	}
};

module.exports = SceneStage;

},{"../config/field":2,"../constant":5,"../hakurei":100,"../object/black_mist":143,"../object/koishi":144,"../object/light_3rdeye":145,"../object/pieces/anime_event_image":148,"../object/pieces/anime_image":149,"../object/pieces/item":151,"../object/pieces/journal":152,"../object/pieces/static_image":153,"../object/ui/eye_button":155,"../object/ui/item_menu_button":156,"../object/ui/left_next_field_button":157,"../object/ui/right_next_field_button":159,"./substage/chapter0_before_get_hat":170,"./substage/got_item":171,"./substage/journal":172,"./substage/menu":173,"./substage/picture_use_eyedrops":174,"./substage/play":175,"./substage/talk_with_object":176}],169:[function(require,module,exports){
'use strict';

var base_scene = require('../../hakurei').scene.base;

var Util = require('../../hakurei').util;

var SceneSceneSubStageBase = function(core) {
	base_scene.apply(this, arguments);

};
Util.inherit(SceneSceneSubStageBase, base_scene);

module.exports = SceneSceneSubStageBase;

},{"../../hakurei":100}],170:[function(require,module,exports){
'use strict';
var base_scene = require('./base');
var Util = require('../../hakurei').util;

// TODO: まずこいしにセリフを喋らせる
// 帽子オブジェクトをサブシーンに持つ
// このシーンのプレイ中は、歩く・待機・触るは、帽子なしで行う
// 帽子オブジェクトがタッチされたら、
// こいしを触るアニメにする
// かつ、音をならす
// そして1枚絵シーンに遷移する
var SceneSubStageChapter0First = function(core, stage) {
	base_scene.apply(this, arguments);
};
Util.inherit(SceneSubStageChapter0First, base_scene);

SceneSubStageChapter0First.prototype.init = function(){
	base_scene.prototype.init.apply(this, arguments);
};




SceneSubStageChapter0First.prototype.draw = function(){
	base_scene.prototype.draw.apply(this, arguments);
};

SceneSubStageChapter0First.prototype.beforeDraw = function(){
	base_scene.prototype.beforeDraw.apply(this, arguments);
	//クリックチェック
	this._collisionCheck();
};

SceneSubStageChapter0First.prototype._collisionCheck = function(){
	// マウス位置したところを取得
	var x = this.core.input_manager.mousePositionX();
	var y = this.core.input_manager.mousePositionY();

	// クリックしたときに当たり判定するものたち
	if(this.core.input_manager.isLeftClickPush()) {
		// TODO: この関数でやらず、外でやったほうがいい？(この関数は当たり判定したら true or false 返す)
		if (!this.mainStage().koishi().isMoving()) {
			this.koishi().setMoveTarget(x, y);
		}
	}

	return false;
};


module.exports = SceneSubStageChapter0First;

},{"../../hakurei":100,"./base":169}],171:[function(require,module,exports){
'use strict';

// アイテム獲得
// TODO: 持ち物がいっぱいだったら、このクラスで持ち物がいっぱいか判定して、
// それ専用の表示をだす

var base_scene = require('./base');
var Util = require('../../hakurei').util;
var ItemConfig = require('../../config/item');

// アニメまでの待機時間
var WAIT_COUNT_TO_ANIMATION = 60;

// 元のシーンに戻るまでの待機時間
var WAIT_COUNT_TO_NEXT_SCENE = 60 + WAIT_COUNT_TO_ANIMATION;



var SceneSubStageGotItem = function(core) {
	base_scene.apply(this, arguments);

	// 獲得したアイテム オブジェクト
	this._piece = null;
};
Util.inherit(SceneSubStageGotItem, base_scene);

SceneSubStageGotItem.prototype.init = function(item_piece){
	base_scene.prototype.init.apply(this, arguments);

	// 獲得したアイテム オブジェクト
	this._piece = item_piece;
};

SceneSubStageGotItem.prototype.beforeDraw = function(){
	base_scene.prototype.beforeDraw.apply(this, arguments);

	if (this.frame_count > WAIT_COUNT_TO_NEXT_SCENE) {

		// 通常のサブシーンへ戻る
		this.root().changeSubScene("play");

		// フィールドから該当のオブジェクトを削除
		this._piece.deleteFromField();

		// アイテム獲得
		this.core.save_manager.addItem(this._piece.getItemId());
	}
};

SceneSubStageGotItem.prototype.isAnimationStart = function() {
	return this.frame_count > WAIT_COUNT_TO_ANIMATION;
};
SceneSubStageGotItem.prototype.frameCountFromAnimationStart = function() {
	return this.frame_count - WAIT_COUNT_TO_ANIMATION;
};


SceneSubStageGotItem.prototype.draw = function() {
	base_scene.prototype.draw.apply(this, arguments);

	this._drawDarker();
	this._showItem();

};

// 画面全体を少し暗くする
SceneSubStageGotItem.prototype._drawDarker = function() {
	var ctx = this.core.ctx;

	ctx.save();
	ctx.fillStyle = 'black';
	ctx.globalAlpha = 0.7;
	ctx.fillRect(0, 0, this.width, this.height);
	ctx.restore();
};

SceneSubStageGotItem.prototype._showItem = function() {
	var ctx = this.core.ctx;

	ctx.save();

	var picture = this.core.image_loader.getImage(ItemConfig[this._piece.getItemId()].image_name);

	var width = picture.width * 2/3;
	var height = picture.height * 2/3;

	var x = this.root().width/2;
	var y = this.root().height/2;
	var alpha = 1.0;

	var frame_count = this.frameCountFromAnimationStart();
	if (this.isAnimationStart()) {
		x -= frame_count*5;
		y += frame_count*4;
		alpha -= frame_count/60;

		if (alpha < 0) {
			alpha = 0;
		}
	}

	ctx.globalAlpha = alpha;

	ctx.translate(x, y);
	ctx.drawImage(picture,
		-width/2,
		-height/2,
		width,
		height
	);

	ctx.restore();
};




module.exports = SceneSubStageGotItem;

},{"../../config/item":3,"../../hakurei":100,"./base":169}],172:[function(require,module,exports){
'use strict';

var base_scene = require('./base');

var Util = require('../../hakurei').util;

var SceneSubStageJournal = function(core) {
	base_scene.apply(this, arguments);

	// 表示するジャーナル画像名
	this._picture_name = null;
};
Util.inherit(SceneSubStageJournal, base_scene);

SceneSubStageJournal.prototype.init = function(picture_name){
	base_scene.prototype.init.apply(this, arguments);

	// 表示するジャーナル画像名
	this._picture_name = picture_name;
};

SceneSubStageJournal.prototype.beforeDraw = function(){
	base_scene.prototype.beforeDraw.apply(this, arguments);

	// プレイに戻る
	if(this.core.input_manager.isLeftClickPush()) {
		this.core.audio_loader.playSound("show_journal");
		this.root().changeSubScene("play");
	}
};

SceneSubStageJournal.prototype.draw = function(){
	base_scene.prototype.draw.apply(this, arguments);
	var ctx = this.core.ctx;

	// ジャーナル画像 表示
	this._showPicture();

};
// ピクチャ表示
SceneSubStageJournal.prototype._showPicture = function() {
	var ctx = this.core.ctx;

	ctx.save();

	var picture = this.core.image_loader.getImage(this._picture_name);

	var width = picture.width * 2/3;
	var height = picture.height * 2/3;

	ctx.translate(this.root().width/2, this.root().height/2);
	ctx.drawImage(picture,
		-width/2,
		-height/2,
		width,
		height
	);

	ctx.restore();
};




module.exports = SceneSubStageJournal;

},{"../../hakurei":100,"./base":169}],173:[function(require,module,exports){
'use strict';

var base_scene = require('./base');

var UIParts = require('../../hakurei').object.ui_parts;
var Util = require('../../hakurei').util;
var CONSTANT = require('../../constant');
var ItemConfig = require('../../config/item');


var ObjectMenuItemEyeDrops = require('../../object/menu_item/eyedrops');

var SceneSubStageMenu = function(core) {
	base_scene.apply(this, arguments);

};
Util.inherit(SceneSubStageMenu, base_scene);

SceneSubStageMenu.prototype.init = function(){
	base_scene.prototype.init.apply(this, arguments);
	var self = this;

	// 現在カーソルを合わせているアイテム
	this.focus_item_id = null;

	this._setupMenuItems();
	this.addObjects(this.menu_item_list);

	// 使用ボタン
	// TODO: 調べる・組み合わせるの後に戻す
	//this.use_button = new UIParts(self, 160 + 250/3, self.mainStage().height - 150 + 105/3, 250*2/3, 105*2/3, function draw () {
	this.use_button = new UIParts(
		self,
		self.root().width - 200 + 250/3,
		self.root().height - 180 + 105/3,
		250*2/3,
		105*2/3,
		function() {
			var ctx = this.core.ctx;

			var button_window;
			if (this.onfocus) {
				button_window = this.core.image_loader.getImage('ui-common-btn-toolpu-blu2');
			}
			else {
				button_window = this.core.image_loader.getImage('ui-common-btn-toolpu-blu1');
			}

			ctx.save();
			ctx.drawImage(button_window,
				this.getCollisionLeftX(),
				this.getCollisionUpY(),
				button_window.width*2/3,
				button_window.height*2/3
			);

			// メニュー文字 表示
			ctx.font = "24px 'OradanoGSRR'";
			ctx.textAlign = 'center';
			ctx.textBaseAlign = 'middle';
			ctx.fillStyle = 'rgb( 255, 255, 255 )';
			ctx.fillText("使用",
				this.getCollisionLeftX() + 80,
				this.getCollisionUpY()   + 40
			);

			ctx.restore();
		}
	);
	self.addObject(this.use_button);

};

SceneSubStageMenu.prototype.beforeDraw = function(){
	base_scene.prototype.beforeDraw.apply(this, arguments);

	// マウス座標取得
	var mouse_point = this.core.input_manager.mousePositionPoint(this);

	// アイテムメニューを閉じる
	if(this.parent.root().item_menu_button.checkCollisionWithObject(mouse_point)) {
		return true;
	}
	// アイテムとマウスの当たり判定
	else if(mouse_point.checkCollisionWithObjects(this.menu_item_list)) {
		return true;
	}
	// 使用ボタンとマウスの当たり判定
	else if(this.use_button.checkCollisionWithObject(mouse_point)) {
		// 使用ボタン押下時
		if (this.core.input_manager.isLeftClickPush()) {
			// アイテム使用
			this._useItem();
		}
		// 使用ボタン マウスオーバー時
		else {
			// アイテムを選択してないと使用できないので、onfocus 画像は反応させない
			if (this.focus_item_id) {
				this.use_button.setVariable("onfocus", true);
			}
		}
	}
	else {
		// アイテム画像と別の場所をクリックしたら、アイテム選択解除
		if (this.core.input_manager.isLeftClickPush()) {
			this.focus_item_id = null;
		}

		// 使用ボタン マウスオーバー時 解除
		this.use_button.setVariable("onfocus", false);
	}

	return false;
};

SceneSubStageMenu.prototype.draw = function(){
	var ctx = this.core.ctx;

	ctx.save();

	// ウィンドウ表示
	this._showWindow();

	// アイテム表示
	base_scene.prototype.draw.apply(this, arguments);

	// ボタン表示
	//this._showButtons();

	// メッセージウィンドウ表示
	this._showMessageWindow();

	// メッセージ表示
	this._showMessage();

	ctx.restore();
};

SceneSubStageMenu.prototype._showWindow = function(){
	var ctx = this.core.ctx;

	var window_frame = this.core.image_loader.getImage('ui-common-frame-toolpu');

	ctx.drawImage(window_frame,
		0, 0,
		window_frame.width*2/3,
		window_frame.height*2/3
	);

};
/*
SceneSubStageMenu.prototype._showButtons = function(){
	var ctx = this.core.ctx;

	var button_window = this.core.image_loader.getImage('ui-common-btn-toolpu-blu1');
	ctx.save();

	// combine
	ctx.drawImage(button_window,
		160*2 + 16*1,
		this.mainStage().height - 150,
		button_window.width*2/3,
		button_window.height*2/3
	);

	// メニュー文字 表示
	ctx.font = "24px 'OradanoGSRR'";
	ctx.textAlign = 'center';
	ctx.textBaseAlign = 'middle';
	ctx.fillStyle = 'rgb( 255, 255, 255 )';
	ctx.fillText("合成",
		160*2 + 16*1 + 80,
		this.mainStage().height - 150 + 40
	);

	// examine

	// 四角形
	ctx.drawImage(button_window,
		160*3 + 16*2,
		this.mainStage().height - 150,
		button_window.width*2/3,
		button_window.height*2/3
	);

	// メニュー文字 表示
	ctx.font = "24px 'OradanoGSRR'";
	ctx.textAlign = 'center';
	ctx.textBaseAlign = 'middle';
	ctx.fillStyle = 'rgb( 255, 255, 255 )';
	ctx.fillText("調べる",
		160*3 + 16*2 + 80,
		this.mainStage().height - 150 + 40
	);

	ctx.restore();
};
*/

SceneSubStageMenu.prototype._showMessageWindow = function(){
	var ctx = this.core.ctx;

	ctx.save();

	var message_window = this.core.image_loader.getImage('ui-common-bg-toolpu-blk');

	ctx.drawImage(message_window,
		130,
		this.root().height - 100,
		message_window.width*2/3,
		message_window.height*2/3
	);
	ctx.restore();

};

SceneSubStageMenu.prototype._showMessage = function(){
	if (!this.focus_item_id) return;

	var ctx = this.core.ctx;
	var item_config = ItemConfig[this.focus_item_id];

	// メニュー文字 表示
	ctx.font = "24px 'OradanoGSRR'";
	ctx.fillStyle = 'rgb( 255, 255, 255 )';

	ctx.fillText(item_config.description,
		235,
		670
	);
};

SceneSubStageMenu.prototype._useItem = function(){
	// アイテムを選択してなければ何もしない
	if(!this.focus_item_id) return;

	var focus_item_id = this.focus_item_id;


	for(var i = 0, len = this.menu_item_list.length; i < len; i++) {
		var menu_item = this.menu_item_list[i];
		if(menu_item.item_id() === focus_item_id) {
			// 選択中から解除
			this.focus_item_id = null;

			// メニューの表示から削除
			this.removeObject(menu_item);
			this.menu_item_list.splice(i, 1);

			// アイテム使用
			menu_item.use();

			break;
		}
	}

};

SceneSubStageMenu.prototype.isFocusItem = function(item_id){
	return this.focus_item_id === item_id;
};
SceneSubStageMenu.prototype.setFocusItem = function(item_id){
	this.focus_item_id = item_id;
};


SceneSubStageMenu.prototype._setupMenuItems = function() {
	var item_list = this.core.save_manager.getItemList();

	this.menu_item_list = [];
	for (var i = 0, len = item_list.length; i < len; i++) {
		var item_id = item_list[i];

		var menu_item;
		if (item_id === CONSTANT.ITEM.EYEDROPS) { // 目薬
			menu_item = new ObjectMenuItemEyeDrops(this);
		}
		else {
			throw new Error ("Unknown item_id error: " + item_id);
		}
		menu_item.init();
		menu_item.setPosition(
			180 + (i%5)*160,
			180 + 160*(Math.floor(i/5))
		);
		this.menu_item_list.push(menu_item);
	}
};






module.exports = SceneSubStageMenu;

},{"../../config/item":3,"../../constant":5,"../../hakurei":100,"../../object/menu_item/eyedrops":147,"./base":169}],174:[function(require,module,exports){
'use strict';

// TODO: use_eyedrops だけでなく、picture クラス(指定の1枚絵を表示する)
// としてしまっていいかも

var base_scene = require('./base');

var Util = require('../../hakurei').util;

var SceneSubStageJournal = function(core) {
	base_scene.apply(this, arguments);
};
Util.inherit(SceneSubStageJournal, base_scene);

SceneSubStageJournal.prototype.init = function(picture_name){
	base_scene.prototype.init.apply(this, arguments);
};

SceneSubStageJournal.prototype.beforeDraw = function(){
	base_scene.prototype.beforeDraw.apply(this, arguments);

	// プレイに戻る
	if(this.frame_count > 120) {
		this.root().changeSubScene("play");
	}
	else if(this.frame_count === 60) {
		// 目薬SE
		this.core.audio_loader.playSound("use_eyedrops");
	}
};

SceneSubStageJournal.prototype.draw = function(){
	base_scene.prototype.draw.apply(this, arguments);
	var ctx = this.core.ctx;

	ctx.save();

	var scale = this.frame_count/30;
	if (scale > 1) scale = 1;

	var picture = this.core.image_loader.getImage("picture_use_eyedrops");

	var width = picture.width * 2/3 * scale;
	var height = picture.height * 2/3 * scale;

	ctx.translate(this.root().width/2, this.root().height/2);
	ctx.drawImage(picture,
		-width/2,
		-height/2,
		width,
		height
	);

	ctx.restore();

};
module.exports = SceneSubStageJournal;

},{"../../hakurei":100,"./base":169}],175:[function(require,module,exports){
'use strict';

var base_scene = require('./base');

var Util = require('../../hakurei').util;

var SceneSubStagePlay = function(core) {
	base_scene.apply(this, arguments);

};
Util.inherit(SceneSubStagePlay, base_scene);

SceneSubStagePlay.prototype.init = function(){
	base_scene.prototype.init.apply(this, arguments);
};

SceneSubStagePlay.prototype.beforeDraw = function(){
	base_scene.prototype.beforeDraw.apply(this, arguments);

	if (this.root().isUsingEye()) {
		// サードアイの光の当たり判定
		this.root().light_3rdeye.checkCollisionWithPieces(this.root().pieces);

		// サードアイの消耗
		this.root().koishi.abrasion3rdeye();
	}

	// 当たり判定チェック
	this._collisionCheck();

	// マウス右クリックでサードアイ使用
	if(this.core.input_manager.isRightClickPush()) {
		this.root().eye_button.onCollision();
	}
};

// 当たり判定チェック
SceneSubStagePlay.prototype._collisionCheck = function(){
	// マウス座標取得
	var x = this.core.input_manager.mousePositionX();
	var y = this.core.input_manager.mousePositionY();

	// シーン遷移
	if(this.root().right_next_field_button.checkCollisionWithPosition(x, y)) {
		return true;
	}
	// シーン遷移
	else if(this.root().left_next_field_button.checkCollisionWithPosition(x, y)) {
		return true;
	}
	// アイテムメニュー
	else if(this.root().item_menu_button.checkCollisionWithPosition(x, y)) {
		return true;
	}
	// サードアイ使用
	else if(this.root().eye_button.checkCollisionWithPosition(x, y)) {
		return true;
	}

	// フィールドの各種オブジェクトとの当たり判定
	for (var i = this.root().pieces.length - 1; i >= 0; i--) { // i の大きい方が手前なので
		var piece = this.root().pieces[i];
		if(piece.checkCollisionWithPosition(x, y)) {
			return true;
		}
	}

	// UI と 画面上のオブジェクトの どれとも当たり判定しなかったら
	if(this.core.input_manager.isLeftClickPush()) {
		var point = this.core.input_manager.mousePositionPoint(this.root());
		// こいしを移動
		this.root().koishi.setMoveTarget(point);
	}
};

SceneSubStagePlay.prototype.draw = function(){
	base_scene.prototype.draw.apply(this, arguments);
};

SceneSubStagePlay.prototype.afterDraw = function(){
	base_scene.prototype.afterDraw.apply(this, arguments);
};

module.exports = SceneSubStagePlay;

},{"../../hakurei":100,"./base":169}],176:[function(require,module,exports){
'use strict';

var base_scene = require('./base');
var SerifManager = require('../../hakurei').serif_manager;
var Util = require('../../hakurei').util;

// クリックしてから次のセリフに移るまでの待機カウント
var NEXT_TO_SERIF_WAITING_COUNT = 6;

var SceneSubStageObjectTalk = function(core) {
	base_scene.apply(this, arguments);

	this._serif = new SerifManager();

	// クリック待ちカーソルの状態
	this._cursor_y = 0; // カーソル位置
	this._cursor_reverse = false; // カーソルが↑移動中かどうか

	// クリックしてから次のセリフに移るまでの待機カウント
	this._next_to_serif_waiting_count = 0;

	// 会話対象のオブジェクト
	this._target_object = null;
};
Util.inherit(SceneSubStageObjectTalk, base_scene);

SceneSubStageObjectTalk.prototype.init = function(serif_list, obj){
	base_scene.prototype.init.apply(this, arguments);

	// クリック待ちカーソルの状態
	this._cursor_y = 0;
	this._cursor_reverse = false;

	// クリックしてから次のセリフに移るまでの待機カウント
	this._next_to_serif_waiting_count = 0;

	// セリフデータの生成
	var serif_script = serif_list;
	this._serif.init(serif_script);

	// 会話対象のオブジェクト
	this._target_object = obj;
};

SceneSubStageObjectTalk.prototype.beforeDraw = function(){
	base_scene.prototype.beforeDraw.apply(this, arguments);

	// クリックしてから一定時間経ったら、次のセリフに移る
	if(this._next_to_serif_waiting_count) {
		this._next_to_serif_waiting_count--;

		if (this._next_to_serif_waiting_count === 0) {
			// セリフを送る
			this._serif.next();
		}
	}
	else if(this.core.input_manager.isLeftClickPush()) { // セリフ送り待機中はクリックできない
		if(this._serif.isEnd()) {
			// セリフ終わり
			this.root().changeSubScene("play");
		}
		else {
			// 次のセリフへ
			this._next_to_serif_waiting_count = NEXT_TO_SERIF_WAITING_COUNT;
		}
	}

};

SceneSubStageObjectTalk.prototype.draw = function(){
	base_scene.prototype.draw.apply(this, arguments);

	// セリフ送り待機中は表示しない
	if(!this._next_to_serif_waiting_count) {
		// メッセージウィンドウ表示
		this._showMessageWindow();

		// メッセージ表示
		this._showMessage();
	}
};

// セリフウィンドウ表示
SceneSubStageObjectTalk.prototype._showMessageWindow = function(){
	var ctx = this.core.ctx;
	ctx.save();

	var fukidashi = this.core.image_loader.getImage('fukidashi');

	// ウィンドウの位置
	var message_window_pos = this._getMessageWindowPos();
	var x = message_window_pos.x;
	var y = message_window_pos.y;
	var is_reflect = message_window_pos.is_reflect;

	// ウィンドウの大きさ
	var scale = this._getMessageWindowScale();

	if(is_reflect) {
		x = -x; // 反転
		ctx.transform(-1, 0, 0, 1, fukidashi.width, 0); // 左右反転
	}

	ctx.drawImage(fukidashi,
		x,
		y,
		fukidashi.width * scale,
		fukidashi.height * scale
	);
	ctx.restore();
};

// セリフ表示
SceneSubStageObjectTalk.prototype._showMessage = function() {
	var ctx = this.core.ctx;

	// セリフ表示
	var lines = this._serif.lines();

	if (!lines.length) return;

	ctx.save();

	// セリフの色
	var font_color = Util.hexToRGBString("#d4c9aa");

	ctx.fillStyle = font_color;
	ctx.font = "18px 'OradanoGSRR'";
	ctx.textAlign = 'left';
	ctx.textBaseAlign = 'middle';

	var message_text_pos = this._getMessageTextPos();
	var x = message_text_pos.x;
	var y = message_text_pos.y;

	for(var i = 0, len = lines.length; i < len; i++) {
		y+= 30;
		ctx.fillText(lines[i], x, y); // 1行表示

	}
	// クリック待ちカーソル表示
	if (this._serif.isWaitingNext()) {

		// カーソルを上下に移動させる
		if (this._cursor_reverse) {
			this._cursor_y-=0.25;
		}
		else {
			this._cursor_y+=0.25;
		}

		if (this._cursor_y > 6) {
			this._cursor_reverse = true;
		}
		else if (this._cursor_y === 0) {
			this._cursor_reverse = false;
		}

		var cursor = this.core.image_loader.getImage("fukidashi_arrow");
		ctx.drawImage(cursor,
			x + lines[lines.length-1].length*18, // 18 -> font size
			y - 18 + 2 + this._cursor_y, // TODO: 要調整
			cursor.width*2/3,
			cursor.height*2/3
		);
	}

	ctx.restore();
};

// セリフ表示を右に表示させるかどうか
SceneSubStageObjectTalk.prototype._isShowRight = function(){
	var chara_name = this._serif.getChara();
	if (chara_name === "koishi") {
		var x = this.root().koishi.x();

		var scene_center_x = this.root().width / 2;

		if (x > scene_center_x) {
			return true;
		}
		else {
			return false;
		}
	}
	else if (chara_name === "me") {
		// オブジェクトが会話する場合
		// TODO:
		throw new Error("TODO:");
	}
	else {
		throw new Error("Unrecognized chara name: " . chara_name);
	}
};

// メッセージウィンドウの位置を取得
SceneSubStageObjectTalk.prototype._getMessageWindowPos = function(){
	var chara_name = this._serif.getChara();

	var is_reflect = !this._isShowRight();

	var x,y;

	if (chara_name === "koishi") {
		if(is_reflect) {
			x = this.root().koishi.x() - 550;
			y = this.root().koishi.y() - 330;
		}
		else {
			x = this.root().koishi.x() - 300;
			y = this.root().koishi.y() - 330;
		}
	}
	else if (chara_name === "me") {
		// オブジェクトが会話する場合
		// TODO:
		throw new Error("TODO:");
	}
	else {
		throw new Error("Unrecognized chara name: " . chara_name);
	}

	return {
		is_reflect: is_reflect,
		x: x,
		y: y,
	};
};

// ウィンドウの大きさ
SceneSubStageObjectTalk.prototype._getMessageWindowScale = function(){
	var scale;
	if (this._serif.getSerifRowsCount() === 2) {
		scale = 0.5;
	}
	else {
		scale = 0.4;
	}
	return scale;
};

// メッセージテキストの開始位置を取得
SceneSubStageObjectTalk.prototype._getMessageTextPos = function(){
	var chara_name = this._serif.getChara();

	var is_reflect = !this._isShowRight();

	var x,y;

	if (chara_name === "koishi") {
		if(is_reflect) {
			x = this.root().koishi.x() + 80;
			y = this.root().koishi.y() - 290;
		}
		else {
			x = this.root().koishi.x() - 220;
			y = this.root().koishi.y() - 290;
		}

	}
	else if (chara_name === "me") {
		// オブジェクトが会話する場合
		// TODO:
		throw new Error("TODO:");
	}
	else {
		throw new Error("Unrecognized chara name: " . chara_name);
	}

	return {
		is_reflect: is_reflect,
		x: x,
		y: y,
	};
};




module.exports = SceneSubStageObjectTalk;

},{"../../hakurei":100,"./base":169}],177:[function(require,module,exports){
'use strict';

var base_scene = require('../hakurei').scene.base;
var util = require('../hakurei').util;
var H_CONSTANT = require('../hakurei').constant;
var CONSTANT = require('../constant');

var UIParts = require('../hakurei').object.ui_parts;

var MENU = [
	// game start
	["ui-titlepg-btn-ng", function (core) { return true; }, function (core) {
		// セーブを消去
		core.save_manager.del();

		core.changeScene("howto");
	}],
	// continue
	["ui-titlepg-btn-con", function (core) {
		// セーブデータがあれば
		return core.save_manager.getCurrentField() ? true : false;
	}, function (core) {
		core.changeScene("stage", core.save_manager.getCurrentField());
	}],
	// config
	/*
	["ui-titlepg-btn-opt", function (core) { return true; }, function (core) {
		core.changeScene("stage", "chapter0_myroom");
	}],
	*/
];

var SceneTitle = function(core) {
	base_scene.apply(this, arguments);

	var self = this;

	self.menu_ui = this._generateMenuUI();
	self.addObjects(self.menu_ui);
};
util.inherit(SceneTitle, base_scene);

SceneTitle.prototype.init = function(){
	base_scene.prototype.init.apply(this, arguments);

	this.core.audio_loader.stopBGM();

	// フェードインする
	this.setFadeIn(100, "black");
	// フェードアウトする
	this.setFadeOut(30, "black");
	// 指定フレーム数からBGM再生
	this.setWaitToStartBGM("title", 60);
};

// メニューUI一覧
SceneTitle.prototype._generateMenuUI = function(){
	var self = this;
	var menu_ui = [];
	for(var i = 0, len = MENU.length; i < len; i++) {
		var menu = MENU[i];

		(function (menu) {
			menu_ui.push(new UIParts(self, 380 + i*200, 670, 190, 63, function() {
				var ctx = this.core.ctx;
				ctx.save();
				ctx.textAlign = 'center';
				ctx.textBaseline = 'middle';
				ctx.fillStyle = 'rgb( 255, 255, 255 )';

				var logo;
				if (this.is_big) {
					logo = this.core.image_loader.getImage(menu[0] + "-on");
				}
				else {
					logo = this.core.image_loader.getImage(menu[0] + "-off");
				}
				ctx.drawImage(logo, this.getCollisionLeftX(), this.getCollisionUpY(), logo.width*2/3, logo.height*2/3);
				ctx.restore();
			}));
		})(menu);
	}

	return menu_ui;
};

SceneTitle.prototype.beforeDraw = function(){
	base_scene.prototype.beforeDraw.apply(this, arguments);

	// マウスの位置を取得
	var x = this.core.input_manager.mousePositionX();
	var y = this.core.input_manager.mousePositionY();

	for (var i = 0, len = this.menu_ui.length; i < len; i++) {
		var menu = this.menu_ui[i];

		if(menu.checkCollisionWithPosition(x, y) && MENU[i][1](this.core)) {
			// クリックしたら
			if(this.core.input_manager.isLeftClickPush()) {
				this.core.audio_loader.playSound("select_title");
				MENU[i][2](this.core);
			}
			// マウスカーソルを乗せたら
			else {
				// マウスカーソルを乗せた瞬間に音を鳴らす
				if (!menu.is_big) {
					this.core.audio_loader.playSound("focuson_title");
				}
				menu.setVariable("is_big", true);
			}
		}
		else {
			menu.setVariable("is_big", false);
		}
	}
};

// 画面更新
SceneTitle.prototype.draw = function(){
	this.core.clearCanvas();
	var ctx = this.core.ctx;

	ctx.save();

	// 背景画像表示
	var title_bg = this.core.image_loader.getImage("ui-titlepg-bg-1");
	ctx.drawImage(title_bg,
					0,
					0,
					title_bg.width,
					title_bg.height,
					0,
					0,
					this.core.width,
					this.core.height);

	// ロゴ画像表示
	var logo = this.core.image_loader.getImage("ui-titlepg-img-logo-1");
	ctx.drawImage(logo,
	(this.width - logo.width*2/3)/2,
	455,
	logo.width*2/3, logo.height*2/3);

	ctx.restore();

	// UI パーツ表示
	base_scene.prototype.draw.apply(this, arguments);
};

module.exports = SceneTitle;

},{"../constant":5,"../hakurei":100}],178:[function(require,module,exports){
//-----------------------------------------------------------
// Ss5ConverterToSSAJSON v1.0.3
//
// Copyright(C) Web Technology Corp.
// http://www.webtech.co.jp/
//
// Ss5ConverterToSSAJSON
// https://github.com/SpriteStudio/Ss5ConverterToSSAJSON/wiki
// から出力したJSONファイルをHTML5で再生するサンプルプログラムです。
//
//-----------------------------------------------------------

////////////////////////////////////////////////////////////
// SsImageList
////////////////////////////////////////////////////////////

function SsImageList(imageFiles, aFileRoot, loadImmediately, aOnLoad) {

	this.fileRoot = aFileRoot;
	this.imagePaths = new Array();
	this.images = new Array();

	// ロード完了時に呼ばれるコールバック
	// Callback that is called when the load is finished.
	this.onLoad = aOnLoad;

	// 全部読み込まれた場合のみユーザーが設定したコールバックを呼ぶ
	// Only when it is all loaded, is called a callback set by the user.
	this.onLoad_ = function () {
		for (var i in this.images)
			if (i != null && i.complete == false)
				return;
		if (this.onLoad != null)
			this.onLoad();
	}

	for (var i = 0; i < imageFiles.length; i++) {
		var path = this.fileRoot + imageFiles[i];
//        console.log(path);
		this.imagePaths.push(path);
		var image = new Image();
		if (loadImmediately)
		{
			image.onload = this.onLoad_;
			image.src = path;
		}
		this.images.push(image);
	}
}

// 指定したインデックスのImageを返す
// Get image at specified index.
SsImageList.prototype.getImage = function (index) {
	if (index < 0 || index >= this.images.length) return null;
	return this.images[index];
}

// 指定したインデックスの画像をimagePathで差し替える。
// Replace image of specified index at imagePath.
SsImageList.prototype.setImage = function (index, imagePath) {
	if (index < 0 || index >= this.images.length) return null;
	this.imagePaths[index] = this.fileRoot + imagePath;
	this.images[index].onload = this.onLoad_;
	this.images[index].src = this.imagePaths[index];
}

// ロード完了時コールバックを設定する
// Set a callback when load is finished.
SsImageList.prototype.setOnLoad = function (cb) {
	this.onLoad = cb;
}


////////////////////////////////////////////////////////////
// SsPartState
////////////////////////////////////////////////////////////

function SsPartState(name) {

	// パーツ名
	// Parts name.
	this.name = name;
	// 現在の描画Xポジション
	// Current x position at drawing.
	this.x = 0;
	// 現在の描画Yポジション
	// Current x position at drawing.
	this.y = 0;
}


////////////////////////////////////////////////////////////
// SsAnimation
////////////////////////////////////////////////////////////

function SsAnimation(ssaData, imageList) {

	this.ssaData = ssaData;
	this.imageList = imageList;

	this.partsMap = new Array();
	this.parts = ssaData.parts;
	for (var i = 0; i < this.parts.length; i++) {
		this.partsMap[this.parts[i]] = i;
	}
}

// このアニメーションのFPS
// This animation FPS.
SsAnimation.prototype.getFPS = function () {
	return this.ssaData.fps;
}

// トータルフレーム数を返す
// Get total frame count.
SsAnimation.prototype.getFrameCount = function () {
	return this.ssaData.ssa.length;
}

// パーツリストを返す
// Get parts list.
SsAnimation.prototype.getParts = function () {
	return this.ssaData.parts;
}

// パーツ名からNoを取得するマップを返す
// Return the map, to get the parts from number.
SsAnimation.prototype.getPartsMap = function () {
	return this.partsMap;
}

// 描画メソッド
// Draw method.
SsAnimation.prototype.drawFunc = function (ctx, frameNo, x, y, flipH, flipV, partStates, rootScaleX, rootScaleY) {

	var iPartNo = 0;
	var iImageNo = 1;
	var iSouX = 2;
	var iSouY = 3;
	var iSouW = 4;
	var iSouH = 5;
	var iDstX = 6;
	var iDstY = 7;
	var iDstAngle = 8;
	var iDstScaleX = 9;
	var iDstScaleY = 10;
	var iOrgX = 11;
	var iOrgY = 12;
	var iFlipH = 13;
	var iFlipV = 14;
	var iAlpha = 15;
	var iBlend = 16;

	var blendOperations = new Array(
		"source-over",
		"source-over",
		"lighter",
		"source-over"
	);

	var frameData = this.ssaData.ssa[frameNo];
	for (var refNo = 0; refNo < frameData.length; refNo++) {

		var partData = frameData[refNo];
		var partDataLen = partData.length;

		var partNo = partData[iPartNo];
		var img = this.imageList.getImage(partData[iImageNo]);
		var sx = partData[iSouX];
		var sy = partData[iSouY];
		var sw = partData[iSouW];
		var sh = partData[iSouH];
		var dx = partData[iDstX] * rootScaleX;
		var dy = partData[iDstY] * rootScaleY;

		var vdw = sw;
		var vdh = sh;

		dx += x;
		dy += y;

		if (sw > 0 && sh > 0) {

			var dang = partData[iDstAngle];
			var scaleX = partData[iDstScaleX];
			var scaleY = partData[iDstScaleY];

			var ox = (partDataLen > iOrgX) ? partData[iOrgX] : 0;
			var oy = (partDataLen > iOrgY) ? partData[iOrgY] : 0;
			var fh = (partDataLen > iFlipH) ? (partData[iFlipH] != 0 ? -1 : 1) : (1);
			var fv = (partDataLen > iFlipV) ? (partData[iFlipV] != 0 ? -1 : 1) : (1);
			var alpha = (partDataLen > iAlpha) ? partData[iAlpha] : 1.0;
			var blend = (partDataLen > iBlend) ? partData[iBlend] : 0;

			ctx.globalCompositeOperation = blendOperations[blend];
			ctx.globalAlpha = alpha;
			//ctx.setTransform(1, 0, 0, 1, dx, dy); 		// 最終的な表示位置へ. To display the final position.
			ctx.setTransform(1 * rootScaleX, 0, 0, 1 * rootScaleY, dx, dy); 	// 最終的な表示位置へ. To display the final position.
			ctx.rotate(-dang);
			ctx.scale(scaleX, scaleY);
			ctx.translate(-ox + vdw / 2, -oy + vdh / 2); 	// パーツの原点へ. To the origin of the parts.
			ctx.scale(fh, fv); 						    	// パーツの中心点でフリップ. Flip at the center point of the parts.

			// check
			//
			//      console.log(sx, sy, sw, sh);
			//      sw = (sx + sw < img.width) ? sw : img.width - sx;
			//      sh = (sy + sh < img.height) ? sh : img.height - sy;
			//      sw = (sw < 0) ? 0 : sw;
			//      sh = (sh < 0) ? 0 : sh;
			//      sx = (sx < 0) ? 0 : sx;
			//      sy = (sy < 0) ? 0 : sy;
			//      console.log(sx, sy, sw, sh);

			ctx.drawImage(img, sx, sy, sw, sh, -vdw / 2, -vdh / 2, vdw, vdh);
		}

		var state = partStates[partNo];
		state.x = dx;
		state.y = dy;
	}
}


////////////////////////////////////////////////////////////
// SsSprite
////////////////////////////////////////////////////////////

function SsSprite(animation) {

	// プライベート変数
	// Private variables.
	this.inner = {
		animation: animation,
		playingFrame: 0,
		prevDrawnTime: 0,
		step: 1,
		loop: 0,
		loopCount: 0,
		endCallBack: null,    // draw end callback

		partStates: null,
		initPartStates: function () {
			this.partStates = null;
			if (this.animation != null) {
				var parts = this.animation.getParts();
				var states = new Array();
				for (var i = 0; i < parts.length; i++) {
					states.push(new SsPartState(parts[i]));
				}
				this.partStates = states;
			}
		}
	};

	this.inner.initPartStates();
}

// 描画Xポジション
// X position at drawing.
SsSprite.prototype.x = 0;

// 描画Yポジション
// Y position at drawing
SsSprite.prototype.y = 0;

// ※未実装
// *Not implemented.
SsSprite.prototype.flipH = false;
SsSprite.prototype.flipV = false;

// scale
SsSprite.prototype.rootScaleX = 1.0;
SsSprite.prototype.rootScaleY = 1.0;

// アニメーションの設定
// Set animation.
SsSprite.prototype.setAnimation = function (animation) {
	this.inner.animation = animation;
	this.inner.initPartStates();
	this.inner.playingFrame = 0;
	this.inner.prevDrawnTime = 0;
	this.clearLoopCount();
}

// アニメーションの取得
// Get animation.
SsSprite.prototype.getAnimation = function () {
	return this.inner.animation;
}

// 再生フレームNoを設定
// Set frame no of playing.
SsSprite.prototype.setFrameNo = function (frameNo) {
	this.inner.playingFrame = frameNo;
	this.inner.prevDrawnTime = 0;
}

// 再生フレームNoを取得
// Get frame no of playing.
SsSprite.prototype.getFrameNo = function () {
	return this.inner.playingFrame >> 0;
}

// 再生スピードを設定 (1:標準)
// Set speed to play. (1:normal speed)
SsSprite.prototype.setStep = function (step) {
	this.inner.step = step;
}

// 再生スピードを取得
// Get speed to play. (1:normal speed)
SsSprite.prototype.getStep = function () {
	return this.inner.step;
}

// ループ回数の設定 (0:無限)
// Set a playback loop count.  (0:infinite)
SsSprite.prototype.setLoop = function (loop) {
	if (loop < 0) return;
	this.inner.loop = loop;
}

// ループ回数の設定を取得
// Get a playback loop count of specified. (0:infinite)
SsSprite.prototype.getLoop = function () {
	return this.inner.loop;
}

// 現在の再生回数を取得
// Get repeat count a playback.
SsSprite.prototype.getLoopCount = function () {
	return this.inner.loopCount;
}

// 現在の再生回数をクリア
// Clear repeat count a playback.
SsSprite.prototype.clearLoopCount = function () {
	this.inner.loopCount = 0;
}

// アニメーション終了時のコールバックを設定
// Set the call back at the end of animation.
SsSprite.prototype.setEndCallBack = function (func) {
	this.inner.endCallBack = func;
}

// パーツの状態（現在のX,Y座標など）を取得
// Gets the state of the parts. (Current x and y positions)
SsSprite.prototype.getPartState = function (name) {
	if (this.inner.partStates == null) return null;

	var partsMap = this.inner.animation.getPartsMap();
	var partNo = partsMap[name];
	if (partNo == null) return null;
	return this.inner.partStates[partNo];
}

// 描画実行
// Drawing method.
SsSprite.prototype.draw = function (ctx, currentTime) {

	if (this.inner.animation == null) return;

	if (this.inner.loop == 0 || this.inner.loop > this.inner.loopCount) {
		// フレームを進める
		// To next frame.
		if (this.inner.prevDrawnTime > 0) {

			var s = (currentTime - this.inner.prevDrawnTime) / (1000 / this.inner.animation.getFPS());
			this.inner.playingFrame += s * this.inner.step;

			var c = (this.inner.playingFrame / this.inner.animation.getFrameCount()) >> 0;

			if (this.inner.step >= 0) {
				if (this.inner.playingFrame >= this.inner.animation.getFrameCount()) {
					// ループ回数更新
					// Update repeat count.
					this.inner.loopCount += c;
					if (this.inner.loop == 0 || this.inner.loopCount < this.inner.loop) {
						// フレーム番号更新、再生を続ける
						// Update frame no, and playing.
						this.inner.playingFrame %= this.inner.animation.getFrameCount();
					}
					else {
						// 再生停止、最終フレームへ
						// Stop animation, to last frame.
						this.inner.playingFrame = this.inner.animation.getFrameCount() - 1;
						// 停止時コールバック呼び出し
						// Call finished callback.
						if (this.inner.endCallBack != null) {
							this.inner.endCallBack();
						}
					}
				}
			}
			else {
				if (this.inner.playingFrame < 0) {
					// ループ回数更新
					// Update repeat count.
					this.inner.loopCount += 1 + -c;
					if (this.inner.loop == 0 || this.inner.loopCount < this.inner.loop) {
						// フレーム番号更新、再生を続ける
						// Update frame no, and playing.
						this.inner.playingFrame %= this.inner.animation.getFrameCount();
						if (this.inner.playingFrame < 0) this.inner.playingFrame += this.inner.animation.getFrameCount();
					}
					else {
						// 再生停止、先頭フレームへ
						// Stop animation, to first frame.
						this.inner.playingFrame = 0;
						// 停止時コールバック呼び出し
						// Call finished callback.
						if (this.inner.endCallBack != null) {
							this.inner.endCallBack();
						}
					}
				}
			}

		}
	}
	//else {
	//	// 再生停止
	//	// Stop animation.
	//	this.inner.playingFrame = 0;
	//}

	this.inner.prevDrawnTime = currentTime;

	this.inner.animation.drawFunc(ctx, this.getFrameNo(), this.x, this.y, this.flipH, this.flipV, this.inner.partStates, this.rootScaleX, this.rootScaleY);
}

module.exports = {
	SsImageList: SsImageList,
	SsAnimation: SsAnimation,
	SsSprite:    SsSprite,
};



},{}]},{},[141]);
